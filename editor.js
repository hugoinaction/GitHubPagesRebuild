(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __reExport = (target, module, desc) => {
    if (module && typeof module === "object" || typeof module === "function") {
      for (let key of __getOwnPropNames(module))
        if (!__hasOwnProp.call(target, key) && key !== "default")
          __defProp(target, key, { get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable });
    }
    return target;
  };
  var __toModule = (module) => {
    return __reExport(__markAsModule(__defProp(module != null ? __create(__getProtoOf(module)) : {}, "default", module && module.__esModule && "default" in module ? { get: () => module.default, enumerable: true } : { value: module, enumerable: true })), module);
  };

  // node_modules/@easylogic/editor/dist/editor.js
  var require_editor = __commonJS({
    "node_modules/@easylogic/editor/dist/editor.js"(exports, module) {
      !function(t, e) {
        typeof exports == "object" && typeof module == "object" ? module.exports = e() : typeof define == "function" && define.amd ? define([], e) : typeof exports == "object" ? exports.editor = e() : t.editor = e();
      }(window, function() {
        return function(t) {
          var e = {};
          function n(r) {
            if (e[r])
              return e[r].exports;
            var i = e[r] = { i: r, l: false, exports: {} };
            return t[r].call(i.exports, i, i.exports, n), i.l = true, i.exports;
          }
          return n.m = t, n.c = e, n.d = function(t2, e2, r) {
            n.o(t2, e2) || Object.defineProperty(t2, e2, { enumerable: true, get: r });
          }, n.r = function(t2) {
            typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(t2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t2, "__esModule", { value: true });
          }, n.t = function(t2, e2) {
            if (1 & e2 && (t2 = n(t2)), 8 & e2)
              return t2;
            if (4 & e2 && typeof t2 == "object" && t2 && t2.__esModule)
              return t2;
            var r = Object.create(null);
            if (n.r(r), Object.defineProperty(r, "default", { enumerable: true, value: t2 }), 2 & e2 && typeof t2 != "string")
              for (var i in t2)
                n.d(r, i, function(e3) {
                  return t2[e3];
                }.bind(null, i));
            return r;
          }, n.n = function(t2) {
            var e2 = t2 && t2.__esModule ? function() {
              return t2.default;
            } : function() {
              return t2;
            };
            return n.d(e2, "a", e2), e2;
          }, n.o = function(t2, e2) {
            return Object.prototype.hasOwnProperty.call(t2, e2);
          }, n.p = "", n(n.s = 243);
        }([function(t, e, n) {
          "use strict";
          n.r(e), n.d(e, "makeEventChecker", function() {
            return i;
          }), n.d(e, "CHECK_DOM_EVENT_PATTERN", function() {
            return a;
          }), n.d(e, "CHECK_LOAD_PATTERN", function() {
            return o;
          }), n.d(e, "CHECK_BIND_PATTERN", function() {
            return c;
          }), n.d(e, "CHECK_SUBSCRIBE_PATTERN", function() {
            return s;
          }), n.d(e, "PIPE", function() {
            return u;
          }), n.d(e, "EVENT", function() {
            return l;
          }), n.d(e, "COMMAND", function() {
            return f;
          }), n.d(e, "ON", function() {
            return h;
          }), n.d(e, "NAME_SAPARATOR", function() {
            return p;
          }), n.d(e, "CHECK_SAPARATOR", function() {
            return d;
          }), n.d(e, "DOM_EVENT_SAPARATOR", function() {
            return v;
          }), n.d(e, "LOAD_SAPARATOR", function() {
            return y2;
          }), n.d(e, "BIND_SAPARATOR", function() {
            return g;
          }), n.d(e, "SUBSCRIBE_SAPARATOR", function() {
            return m;
          }), n.d(e, "SAPARATOR", function() {
            return b;
          }), n.d(e, "CHECKER", function() {
            return j;
          }), n.d(e, "AFTER", function() {
            return S;
          }), n.d(e, "BEFORE", function() {
            return P;
          }), n.d(e, "IF", function() {
            return w;
          }), n.d(e, "KEY", function() {
            return R;
          }), n.d(e, "ARROW_UP", function() {
            return C;
          }), n.d(e, "ARROW_DOWN", function() {
            return E;
          }), n.d(e, "ARROW_LEFT", function() {
            return $;
          }), n.d(e, "ARROW_RIGHT", function() {
            return I;
          }), n.d(e, "ENTER", function() {
            return T;
          }), n.d(e, "SPACE", function() {
            return B;
          }), n.d(e, "ESCAPE", function() {
            return M;
          }), n.d(e, "ALT", function() {
            return V;
          }), n.d(e, "SHIFT", function() {
            return D;
          }), n.d(e, "META", function() {
            return L;
          }), n.d(e, "CONTROL", function() {
            return A;
          }), n.d(e, "MOUSE", function() {
            return F;
          }), n.d(e, "TOUCH", function() {
            return z;
          }), n.d(e, "PEN", function() {
            return N;
          }), n.d(e, "SELF", function() {
            return _;
          }), n.d(e, "LEFT_BUTTON", function() {
            return U;
          }), n.d(e, "RIGHT_BUTTON", function() {
            return G;
          }), n.d(e, "FIT", function() {
            return H;
          }), n.d(e, "PASSIVE", function() {
            return K;
          }), n.d(e, "DOMDIFF", function() {
            return Y;
          }), n.d(e, "DEBOUNCE", function() {
            return X;
          }), n.d(e, "DELAY", function() {
            return W;
          }), n.d(e, "D1000", function() {
            return Z;
          }), n.d(e, "THROTTLE", function() {
            return q;
          }), n.d(e, "ALL_TRIGGER", function() {
            return J;
          }), n.d(e, "SELF_TRIGGER", function() {
            return Q;
          }), n.d(e, "CAPTURE", function() {
            return tt;
          }), n.d(e, "MOVE", function() {
            return et;
          }), n.d(e, "END", function() {
            return nt;
          }), n.d(e, "PREVENT", function() {
            return rt;
          }), n.d(e, "STOP", function() {
            return it;
          }), n.d(e, "SUBSCRIBE", function() {
            return at;
          }), n.d(e, "SUBSCRIBE_ALL", function() {
            return ot;
          }), n.d(e, "SUBSCRIBE_SELF", function() {
            return ct;
          }), n.d(e, "CONFIG", function() {
            return st;
          }), n.d(e, "CUSTOM", function() {
            return ut;
          }), n.d(e, "CLICK", function() {
            return lt;
          }), n.d(e, "DOUBLECLICK", function() {
            return ft;
          }), n.d(e, "MOUSEDOWN", function() {
            return ht;
          }), n.d(e, "MOUSEUP", function() {
            return pt;
          }), n.d(e, "MOUSEMOVE", function() {
            return dt;
          }), n.d(e, "MOUSEOVER", function() {
            return vt;
          }), n.d(e, "MOUSEOUT", function() {
            return yt;
          }), n.d(e, "MOUSEENTER", function() {
            return gt;
          }), n.d(e, "MOUSELEAVE", function() {
            return mt;
          }), n.d(e, "TOUCHSTART", function() {
            return bt;
          }), n.d(e, "TOUCHMOVE", function() {
            return kt;
          }), n.d(e, "TOUCHEND", function() {
            return Ot;
          }), n.d(e, "KEYDOWN", function() {
            return xt;
          }), n.d(e, "KEYUP", function() {
            return jt;
          }), n.d(e, "KEYPRESS", function() {
            return St;
          }), n.d(e, "DRAG", function() {
            return Pt;
          }), n.d(e, "DRAGSTART", function() {
            return wt;
          }), n.d(e, "DROP", function() {
            return Rt;
          }), n.d(e, "DRAGOVER", function() {
            return Ct;
          }), n.d(e, "DRAGENTER", function() {
            return Et;
          }), n.d(e, "DRAGLEAVE", function() {
            return $t;
          }), n.d(e, "DRAGEXIT", function() {
            return It;
          }), n.d(e, "DRAGOUT", function() {
            return Tt;
          }), n.d(e, "DRAGEND", function() {
            return Bt;
          }), n.d(e, "CONTEXTMENU", function() {
            return Mt;
          }), n.d(e, "CHANGE", function() {
            return Vt;
          }), n.d(e, "INPUT", function() {
            return Dt;
          }), n.d(e, "FOCUS", function() {
            return Lt;
          }), n.d(e, "FOCUSIN", function() {
            return At;
          }), n.d(e, "FOCUSOUT", function() {
            return Ft;
          }), n.d(e, "BLUR", function() {
            return zt;
          }), n.d(e, "PASTE", function() {
            return Nt;
          }), n.d(e, "RESIZE", function() {
            return _t;
          }), n.d(e, "SCROLL", function() {
            return Ut;
          }), n.d(e, "SUBMIT", function() {
            return Gt;
          }), n.d(e, "POINTERSTART", function() {
            return Ht;
          }), n.d(e, "POINTEROVER", function() {
            return Kt;
          }), n.d(e, "POINTERENTER", function() {
            return Yt;
          }), n.d(e, "POINTEROUT", function() {
            return Xt;
          }), n.d(e, "POINTERMOVE", function() {
            return Wt;
          }), n.d(e, "POINTEREND", function() {
            return Zt;
          }), n.d(e, "CHANGEINPUT", function() {
            return qt;
          }), n.d(e, "WHEEL", function() {
            return Jt;
          }), n.d(e, "ANIMATIONSTART", function() {
            return Qt;
          }), n.d(e, "ANIMATIONEND", function() {
            return te;
          }), n.d(e, "ANIMATIONITERATION", function() {
            return ee;
          }), n.d(e, "TRANSITIONSTART", function() {
            return ne;
          }), n.d(e, "TRANSITIONEND", function() {
            return re;
          }), n.d(e, "TRANSITIONRUN", function() {
            return ie;
          }), n.d(e, "TRANSITIONCANCEL", function() {
            return ae;
          }), n.d(e, "DOUBLETAB", function() {
            return oe;
          }), n.d(e, "LOAD", function() {
            return ce;
          }), n.d(e, "createRef", function() {
            return se;
          }), n.d(e, "getRef", function() {
            return ue;
          }), n.d(e, "BIND_CHECK_FUNCTION", function() {
            return le;
          }), n.d(e, "BIND_CHECK_DEFAULT_FUNCTION", function() {
            return fe;
          }), n.d(e, "BIND", function() {
            return he;
          }), n.d(e, "normalizeWheelEvent", function() {
            return pe;
          });
          var r = n(14), i = function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : d;
            return " ".concat(e2, " ").concat(t2);
          }, a = /^domevent (.*)/gi, o = /^load (.*)/gi, c = /^bind (.*)/gi, s = /^subscribe (.*)/gi, u = function() {
            for (var t2 = arguments.length, e2 = new Array(t2), n2 = 0; n2 < t2; n2++)
              e2[n2] = arguments[n2];
            return e2.join("|");
          }, l = function() {
            return "ME@" + u.apply(void 0, arguments);
          }, f = l, h = l, p = ":", d = "|", v = "domevent ", y2 = "load ", g = "bind ", m = "subscribe ", b = " ", k = {}, O = function() {
            for (var t2 = arguments.length, e2 = new Array(t2), n2 = 0; n2 < t2; n2++)
              e2[n2] = arguments[n2];
            var r2 = e2.join(p);
            return function() {
              for (var t3 = arguments.length, e3 = new Array(t3), n3 = 0; n3 < t3; n3++)
                e3[n3] = arguments[n3];
              return v + [r2].concat(e3).join(b);
            };
          }, x2 = function() {
            for (var t2 = arguments.length, e2 = new Array(t2), n2 = 0; n2 < t2; n2++)
              e2[n2] = arguments[n2];
            return m + e2.join(d);
          }, j = function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : d;
            return i(t2, e2);
          }, S = function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : d;
            return i("after(".concat(t2, ")"), e2);
          }, P = function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : d;
            return i("before(".concat(t2, ")"), e2);
          }, w = j, R = j, C = j("ArrowUp"), E = j("ArrowDown"), $ = j("ArrowLeft"), I = j("ArrowRight"), T = j("Enter"), B = j("Space"), M = j("Escape"), V = j("isAltKey"), D = j("isShiftKey"), L = j("isMetaKey"), A = j("isCtrlKey"), F = j("hasMouse"), z = j("hasTouch"), N = j("hasPen"), _ = j("self"), U = j("isMouseLeftButton"), G = j("isMouseRightButton"), H = j("fit"), K = j("passive"), Y = j("domdiff"), X = function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 100;
            return j("debounce(".concat(t2, ")"));
          }, W = function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 300;
            return j("delay(".concat(t2, ")"));
          }, Z = X(1e3), q = function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 100;
            return j("throttle(".concat(t2, ")"));
          }, J = j("allTrigger()"), Q = j("selfTrigger()"), tt = j("capture()"), et = function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "move";
            return S("bodyMouseMove ".concat(t2));
          }, nt = function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "end";
            return S("bodyMouseUp ".concat(t2));
          }, rt = S("preventDefault"), it = S("stopPropagation"), at = x2, ot = function() {
            for (var t2 = arguments.length, e2 = new Array(t2), n2 = 0; n2 < t2; n2++)
              e2[n2] = arguments[n2];
            return x2.apply(void 0, e2.concat([J]));
          }, ct = function() {
            for (var t2 = arguments.length, e2 = new Array(t2), n2 = 0; n2 < t2; n2++)
              e2[n2] = arguments[n2];
            return x2.apply(void 0, e2.concat([Q]));
          }, st = function(t2) {
            for (var e2 = arguments.length, n2 = new Array(e2 > 1 ? e2 - 1 : 0), r2 = 1; r2 < e2; r2++)
              n2[r2 - 1] = arguments[r2];
            return x2.apply(void 0, ["config:".concat(t2)].concat(n2));
          }, ut = O, lt = O("click"), ft = O("dblclick"), ht = O("mousedown"), pt = O("mouseup"), dt = O("mousemove"), vt = O("mouseover"), yt = O("mouseout"), gt = O("mouseenter"), mt = O("mouseleave"), bt = O("touchstart"), kt = O("touchmove"), Ot = O("touchend"), xt = O("keydown"), jt = O("keyup"), St = O("keypress"), Pt = O("drag"), wt = O("dragstart"), Rt = O("drop"), Ct = O("dragover"), Et = O("dragenter"), $t = O("dragleave"), It = O("dragexit"), Tt = O("dragout"), Bt = O("dragend"), Mt = O("contextmenu"), Vt = O("change"), Dt = O("input"), Lt = O("focus"), At = O("focusin"), Ft = O("focusout"), zt = O("blur"), Nt = O("paste"), _t = O("resize"), Ut = O("scroll"), Gt = O("submit"), Ht = function() {
            return ut("pointerdown").apply(void 0, arguments) + U;
          }, Kt = ut("pointerover"), Yt = ut("pointerenter"), Xt = ut("pointerout"), Wt = ut("pointermove"), Zt = ut("pointerup"), qt = ut("change", "input"), Jt = ut("wheel", "mousewheel", "DOMMouseScroll"), Qt = O("animationstart"), te = O("animationend"), ee = O("animationiteration"), ne = O("transitionstart"), re = O("transitionend"), ie = O("transitionrun"), ae = O("transitioncancel"), oe = ut("doubletab"), ce = function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "$el";
            return y2 + t2;
          }, se = function(t2) {
            if (t2 === "")
              return "";
            var e2 = Object(r.uuid)();
            return k[e2] = t2, e2;
          }, ue = function(t2) {
            return k[t2] || "";
          }, le = function(t2) {
            return function() {
              return this.prevState[t2] != this.state[t2];
            };
          }, fe = function() {
            return true;
          }, he = function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "$el", e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
            return g + t2 + (e2 ? d + se(e2) : "");
          };
          function pe(t2) {
            var e2 = t2.deltaX, n2 = t2.deltaY;
            if (e2 === 0 && t2.shiftKey) {
              var r2 = [e2, n2];
              n2 = r2[0], e2 = r2[1];
            }
            return t2.deltaMode === WheelEvent.DOM_DELTA_LINE ? n2 *= 8 : t2.deltaMode === WheelEvent.DOM_DELTA_PAGE && (n2 *= 24), [de(e2, 24), de(n2, 24), 0];
          }
          function de(t2, e2) {
            return Math.sign(t2) * Math.min(e2, Math.abs(t2));
          }
          e.default = { addDomEvent: function(t2, e2, n2) {
            var r2 = arguments.length > 3 && arguments[3] !== void 0 && arguments[3];
            t2 && t2.addEventListener(e2, n2, r2);
          }, removeDomEvent: function(t2, e2, n2) {
            t2 && t2.removeEventListener(e2, n2);
          }, pos: function(t2) {
            return t2.touches && t2.touches[0] ? t2.touches[0] : t2;
          }, posXY: function(t2) {
            var e2 = this.pos(t2);
            return { x: e2.pageX, y: e2.pageY };
          } };
        }, function(t, e) {
          function n(e2) {
            return t.exports = n = Object.setPrototypeOf ? Object.getPrototypeOf : function(t2) {
              return t2.__proto__ || Object.getPrototypeOf(t2);
            }, t.exports.default = t.exports, t.exports.__esModule = true, n(e2);
          }
          t.exports = n, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e, n) {
          "use strict";
          n.d(e, "b", function() {
            return l;
          }), n.d(e, "a", function() {
            return h;
          });
          var r = n(4), i = n.n(r), a = n(3), o = n.n(a), c = n(8), s = n(14), u = { center: 50, top: 0, left: 0, right: 100, bottom: 100 }, l = function t2() {
            o()(this, t2);
          };
          l.CENTER = "center", l.TOP = "top", l.RIGHT = "right", l.LEFT = "left", l.BOTTOM = "bottom";
          var f = /([\d.]+)(px|pt|fr|r?em|deg|vh|vw|m?s|%|g?rad|turn)/gi, h = function() {
            function t2() {
              var e2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", n2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
              if (o()(this, t2), this.value = e2, Object(c.isNumber)(this.value) && isNaN(this.value))
                throw new Error("NaN is not able to set");
              this.unit = n2;
            }
            return i()(t2, [{ key: Symbol.toPrimitive, value: function(t3) {
              return t3 == "number" ? this.value : this.toString();
            } }, { key: "toString", value: function() {
              switch (this.unit) {
                case "string":
                case "number":
                  return this.value + "";
                case "var":
                  return "var(--".concat(this.value, ")");
                case "calc":
                  return "calc(".concat(this.value, ")");
                default:
                  return this.value + this.unit;
              }
            } }, { key: "isUnitType", value: function(t3) {
              return this.unit === t3;
            } }, { key: "isCalc", value: function() {
              return this.isUnitType("calc");
            } }, { key: "isFr", value: function() {
              return this.isUnitType("fr");
            } }, { key: "isPercent", value: function() {
              return this.isUnitType("%");
            } }, { key: "isPx", value: function() {
              return this.isUnitType("px");
            } }, { key: "isEm", value: function() {
              return this.isUnitType("em");
            } }, { key: "isDeg", value: function() {
              return this.isUnitType("deg");
            } }, { key: "isRad", value: function() {
              return this.isUnitType("rad");
            } }, { key: "isTurn", value: function() {
              return this.isUnitType("turn");
            } }, { key: "isSecond", value: function() {
              return this.isUnitType("s");
            } }, { key: "isMs", value: function() {
              return this.isUnitType("ms");
            } }, { key: "isNumber", value: function() {
              return this.isUnitType("number");
            } }, { key: "isString", value: function() {
              return this.isUnitType("");
            } }, { key: "isVar", value: function() {
              return this.isUnitType("--");
            } }, { key: "isNaN", value: function(t3) {
              function e2() {
                return t3.apply(this, arguments);
              }
              return e2.toString = function() {
                return t3.toString();
              }, e2;
            }(function() {
              return Object(c.isNumber)(this.value) && isNaN(this.value);
            }) }, { key: "set", value: function(t3) {
              return this.value = t3, this;
            } }, { key: "add", value: function(t3) {
              return this.value += +t3, this;
            } }, { key: "sub", value: function(t3) {
              return this.add(-1 * t3);
            } }, { key: "mul", value: function(t3) {
              return this.value *= +t3, this;
            } }, { key: "div", value: function(t3) {
              return this.value /= +t3, this;
            } }, { key: "mod", value: function(t3) {
              return this.value %= +t3, this;
            } }, { key: "clone", value: function() {
              return new t2(this.value, this.unit);
            } }, { key: "getUnitName", value: function() {
              return this.unit === "%" ? "percent" : this.unit;
            } }, { key: "toJSON", value: function() {
              return this.toString();
            } }, { key: "rate", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 100;
              return this.value / t3;
            } }, { key: "stringToPercent", value: function() {
              return Object(c.isNotUndefined)(u[this.value]) ? t2.percent(u[this.value]) : t2.percent(0);
            } }, { key: "stringToEm", value: function(t3) {
              return this.stringToPercent().toEm(t3);
            } }, { key: "stringToPx", value: function(t3) {
              return this.stringToPercent().toPx(t3);
            } }, { key: "toPercent", value: function(e2) {
              var n2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 16;
              return this.isPercent() ? this.clone() : this.isPx() ? t2.percent(100 * this.value / e2) : this.isEm() ? t2.percent(this.value * n2 * 100 / e2) : this.isString() ? this.stringToPercent(e2) : this.isDeg() ? t2.percent(this.value / 360 * 100) : void 0;
            } }, { key: "toEm", value: function(e2) {
              var n2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 16;
              return this.isPercent() ? t2.em(this.value / 100 * e2 / n2) : this.isPx() ? t2.em(this.value / n2) : this.isEm() ? this.clone() : this.isString() ? this.stringToEm(e2) : void 0;
            } }, { key: "toPx", value: function(e2) {
              return this.isPercent() ? t2.px(this.value / 100 * e2) : this.isPx() ? this.clone() : this.isEm() ? t2.px(this.value / 100 * e2 / 16) : this.isString() ? this.stringToPx(e2) : void 0;
            } }, { key: "toDeg", value: function() {
              return this.isDeg() ? this.clone() : this.isTurn() ? t2.deg(360 * this.value) : this.isRad() ? t2.deg(Object(s.radianToDegree)(this.value)) : void 0;
            } }, { key: "toRad", value: function() {
              if (this.isRad())
                return this.clone();
              if (this.isTurn()) {
                var e2 = this.toDeg();
                return t2.rad(Object(s.degreeToRadian)(e2.value));
              }
              return this.isDeg() ? t2.rad(Object(s.degreeToRadian)(this.value)) : void 0;
            } }, { key: "toTurn", value: function() {
              return this.isTurn() ? this.clone() : this.isDeg() ? t2.turn(this.value / 360) : void 0;
            } }, { key: "toSecond", value: function() {
              return this.isSecond() ? this : this.isMs() ? t2.second(this.value / 1e3) : void 0;
            } }, { key: "toMs", value: function() {
              return this.isSecond() ? t2.ms(1e3 * this.value) : this.isMs() ? this : void 0;
            } }, { key: "to", value: function(t3, e2) {
              var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 16;
              return t3 === "px" ? this.toPx(e2, n2) : t3 === "%" || t3 === "percent" ? this.toPercent(e2, n2) : t3 === "em" ? this.toEm(e2, n2) : t3 === "deg" ? this.toDeg() : t3 === "turn" ? this.toTurn() : void 0;
            } }, { key: "toUnit", value: function(e2) {
              return new t2(this.value, e2);
            } }, { key: "calculate", value: function(t3, e2) {
              var n2 = this[t3];
              return n2 ? n2.call(this, e2) : this;
            } }, { key: "includes", value: function() {
              for (var t3 = arguments.length, e2 = new Array(t3), n2 = 0; n2 < t3; n2++)
                e2[n2] = arguments[n2];
              return e2.includes(this.value);
            } }, { key: "round", value: function(e2) {
              return new t2(Object(s.round)(this.value, e2), this.unit);
            } }, { key: "floor", value: function() {
              return new t2(Math.floor(this.value), this.unit);
            } }, { key: "equals", value: function(t3) {
              return this.is(t3.value) && this.isUnitType(t3.unit);
            } }, { key: "is", value: function(t3) {
              return this.value === t3;
            } }, { key: "clamp", value: function(e2, n2) {
              return new t2(Math.max(e2, Math.min(n2, this.value)), this.unit);
            } }, { key: "isZero", value: function() {
              return this.value === 0;
            } }], [{ key: "min", value: function() {
              for (var t3 = arguments.length, e2 = new Array(t3), n2 = 0; n2 < t3; n2++)
                e2[n2] = arguments[n2];
              for (var r2 = e2.shift(), i2 = 0, a2 = e2.length; i2 < a2; i2++)
                r2.value > e2[i2].value && (r2 = e2[i2]);
              return r2;
            } }, { key: "max", value: function() {
              for (var t3 = arguments.length, e2 = new Array(t3), n2 = 0; n2 < t3; n2++)
                e2[n2] = arguments[n2];
              for (var r2 = e2.shift(), i2 = 0, a2 = e2.length; i2 < a2; i2++)
                r2.value < e2[i2].value && (r2 = e2[i2]);
              return r2;
            } }, { key: "string", value: function(e2) {
              return new t2(e2 + "", "");
            } }, { key: "number", value: function(e2) {
              return new t2(+e2, "number");
            } }, { key: "px", value: function(e2) {
              return new t2(+e2, "px");
            } }, { key: "em", value: function(e2) {
              return new t2(+e2, "em");
            } }, { key: "percent", value: function(e2) {
              return new t2(+e2, "%");
            } }, { key: "deg", value: function(e2) {
              return new t2(+e2, "deg");
            } }, { key: "rad", value: function(e2) {
              return new t2(+e2, "rad");
            } }, { key: "turn", value: function(e2) {
              return new t2(+e2, "turn");
            } }, { key: "fr", value: function(e2) {
              return new t2(+e2, "fr");
            } }, { key: "second", value: function(e2) {
              return new t2(+e2, "s");
            } }, { key: "ms", value: function(e2) {
              return new t2(+e2, "ms");
            } }, { key: "var", value: function(e2) {
              return new t2(e2 + "", "--");
            } }, { key: "z", value: function() {
              return t2.px(0);
            } }, { key: "calc", value: function(e2) {
              return new t2(e2, "calc");
            } }, { key: "parse", value: function(e2) {
              if (e2 = e2 || t2.number(0), Object(c.isString)(e2)) {
                var n2 = (e2 = e2.trim()).replace(f, "$1 $2").split(" ");
                return +n2[0] == n2[0] ? new t2(+n2[0], n2[1]) : new t2(n2[0]);
              }
              if (e2 instanceof t2)
                return e2;
              if (e2.unit) {
                if (e2.unit == "%" || e2.unit == "percent") {
                  var r2 = 0;
                  return Object(c.isNotUndefined)(e2.percent) ? r2 = e2.percent : Object(c.isNotUndefined)(e2.value) && (r2 = e2.value), t2.percent(r2);
                }
                if (e2.unit == "px") {
                  r2 = 0;
                  return Object(c.isNotUndefined)(e2.px) ? r2 = e2.px : Object(c.isNotUndefined)(e2.value) && (r2 = e2.value), t2.px(r2);
                }
                if (e2.unit == "em") {
                  r2 = 0;
                  return Object(c.isNotUndefined)(e2.em) ? r2 = e2.em : Object(c.isNotUndefined)(e2.value) && (r2 = e2.value), t2.em(r2);
                }
                if (e2.unit == "deg") {
                  r2 = 0;
                  return Object(c.isNotUndefined)(e2.deg) ? r2 = e2.deg : Object(c.isNotUndefined)(e2.value) && (r2 = e2.value), t2.deg(r2);
                }
                if (e2.unit == "turn") {
                  r2 = 0;
                  return Object(c.isNotUndefined)(e2.deg) ? r2 = e2.turn : Object(c.isNotUndefined)(e2.value) && (r2 = e2.value), t2.turn(r2);
                }
                if (e2.unit == "s") {
                  r2 = 0;
                  return Object(c.isNotUndefined)(e2.second) ? r2 = e2.second : Object(c.isNotUndefined)(e2.value) && (r2 = e2.value), t2.second(r2);
                }
                if (e2.unit == "ms") {
                  r2 = 0;
                  return Object(c.isNotUndefined)(e2.ms) ? r2 = e2.ms : Object(c.isNotUndefined)(e2.value) && (r2 = e2.value), t2.ms(r2);
                }
                if (e2.unit == "number") {
                  r2 = 0;
                  return Object(c.isNotUndefined)(e2.value) && (r2 = e2.value), t2.number(r2);
                }
                if (e2.unit == "--") {
                  r2 = 0;
                  return Object(c.isNotUndefined)(e2.value) && (r2 = e2.value), t2.var(r2);
                }
                if (e2.unit === "" || e2.unit === "string") {
                  r2 = "";
                  return Object(c.isNotUndefined)(e2.str) ? r2 = e2.str : Object(c.isNotUndefined)(e2.value) && (r2 = e2.value), t2.string(r2);
                }
              }
              return t2.string(e2);
            } }]), t2;
          }();
          h.auto = h.string("auto");
        }, function(t, e) {
          t.exports = function(t2, e2) {
            if (!(t2 instanceof e2))
              throw new TypeError("Cannot call a class as a function");
          }, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e) {
          function n(t2, e2) {
            for (var n2 = 0; n2 < e2.length; n2++) {
              var r = e2[n2];
              r.enumerable = r.enumerable || false, r.configurable = true, "value" in r && (r.writable = true), Object.defineProperty(t2, r.key, r);
            }
          }
          t.exports = function(t2, e2, r) {
            return e2 && n(t2.prototype, e2), r && n(t2, r), t2;
          }, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e, n) {
          var r = n(127);
          t.exports = function(t2, e2) {
            if (typeof e2 != "function" && e2 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t2.prototype = Object.create(e2 && e2.prototype, { constructor: { value: t2, writable: true, configurable: true } }), e2 && r(t2, e2);
          }, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e, n) {
          var r = n(85).default, i = n(128);
          t.exports = function(t2, e2) {
            return !e2 || r(e2) !== "object" && typeof e2 != "function" ? i(t2) : e2;
          }, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e) {
          t.exports = function(t2, e2, n) {
            return e2 in t2 ? Object.defineProperty(t2, e2, { value: n, enumerable: true, configurable: true, writable: true }) : t2[e2] = n, t2;
          }, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e, n) {
          "use strict";
          n.r(e), n.d(e, "collectProps", function() {
            return y2;
          }), n.d(e, "debounce", function() {
            return g;
          }), n.d(e, "throttle", function() {
            return m;
          }), n.d(e, "ifCheck", function() {
            return b;
          }), n.d(e, "keyEach", function() {
            return k;
          }), n.d(e, "keyMap", function() {
            return O;
          }), n.d(e, "keyMapJoin", function() {
            return x2;
          }), n.d(e, "get", function() {
            return j;
          }), n.d(e, "defaultValue", function() {
            return S;
          }), n.d(e, "isUndefined", function() {
            return P;
          }), n.d(e, "isNotUndefined", function() {
            return w;
          }), n.d(e, "isArray", function() {
            return R;
          }), n.d(e, "isBoolean", function() {
            return C;
          }), n.d(e, "isString", function() {
            return E;
          }), n.d(e, "isNotString", function() {
            return $;
          }), n.d(e, "isObject", function() {
            return I;
          }), n.d(e, "isFunction", function() {
            return T;
          }), n.d(e, "isNumber", function() {
            return B;
          }), n.d(e, "isZero", function() {
            return M;
          }), n.d(e, "isNotZero", function() {
            return V;
          }), n.d(e, "clone", function() {
            return D;
          }), n.d(e, "cleanObject", function() {
            return L;
          }), n.d(e, "combineKeyArray", function() {
            return A;
          }), n.d(e, "repeat", function() {
            return F;
          }), n.d(e, "randomItem", function() {
            return z;
          }), n.d(e, "html", function() {
            return U;
          }), n.d(e, "CSS_TO_STRING", function() {
            return G;
          }), n.d(e, "STRING_TO_CSS", function() {
            return H;
          }), n.d(e, "OBJECT_TO_PROPERTY", function() {
            return K;
          }), n.d(e, "OBJECT_TO_CLASS", function() {
            return Y;
          }), n.d(e, "TAG_TO_STRING", function() {
            return X;
          }), n.d(e, "mapjoin", function() {
            return W;
          }), n.d(e, "isArrayEquals", function() {
            return Z;
          }), n.d(e, "splitMethodByKeyword", function() {
            return q;
          }), n.d(e, "curveToPath", function() {
            return J;
          }), n.d(e, "curveToPointLine", function() {
            return Q;
          });
          var r, i = n(12), a = n.n(i), o = n(40), c = n.n(o), s = n(7), u = n.n(s), l = n(15), f = n.n(l), h = n(85), p = n.n(h), d = n(44), v = n(27);
          new WeakMap();
          function y2(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n2 = t2.__proto__, r2 = [];
            do {
              var i2 = n2 instanceof Object;
              if (i2 === false)
                break;
              var a2 = Object.getOwnPropertyNames(n2).filter(function(n3) {
                return t2 && T(t2[n3]) && !e2[n3];
              });
              r2.push.apply(r2, a2), n2 = n2.__proto__;
            } while (n2);
            return r2;
          }
          function g(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
            if (e2 === 0)
              return t2;
            var n2 = void 0;
            return function(r2, i2, a2, o2, c2) {
              n2 && clearTimeout(n2), n2 = setTimeout(function() {
                t2(r2, i2, a2, o2, c2);
              }, e2 || 300);
            };
          }
          function m(t2, e2) {
            var n2 = void 0;
            return function(r2, i2, a2, o2, c2) {
              n2 || (n2 = setTimeout(function() {
                t2(r2, i2, a2, o2, c2), n2 = null;
              }, e2 || 300));
            };
          }
          function b(t2, e2, n2) {
            return function() {
              for (var r2 = arguments.length, i2 = new Array(r2), a2 = 0; a2 < r2; a2++)
                i2[a2] = arguments[a2];
              var o2 = n2.every(function(t3) {
                return e2[t3.target].apply(e2, i2);
              });
              o2 && t2.apply(e2, i2);
            };
          }
          function k(t2, e2) {
            Object.keys(t2).forEach(function(n2, r2) {
              e2(n2, t2[n2], r2);
            });
          }
          function O(t2, e2) {
            return Object.keys(t2).map(function(n2, r2) {
              return e2(n2, t2[n2], r2);
            });
          }
          function x2(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "";
            return O(t2, e2).join(n2);
          }
          function j(t2, e2, n2) {
            var r2 = S(t2[e2], e2);
            return T(n2) ? n2(r2) : r2;
          }
          function S(t2, e2) {
            return t2 === void 0 ? e2 : t2;
          }
          function P(t2) {
            return t2 == null;
          }
          function w(t2) {
            return P(t2) === false;
          }
          function R(t2) {
            return Array.isArray(t2);
          }
          function C(t2) {
            return typeof t2 == "boolean";
          }
          function E(t2) {
            return typeof t2 == "string";
          }
          function $(t2) {
            return E(t2) === false;
          }
          function I(t2) {
            return p()(t2) == "object" && !R(t2) && !B(t2) && !E(t2) && t2 !== null;
          }
          function T(t2) {
            return typeof t2 == "function";
          }
          function B(t2) {
            return typeof t2 == "number";
          }
          function M(t2) {
            return t2 === 0;
          }
          function V(t2) {
            return !M(t2);
          }
          function D(t2) {
            if (!P(t2))
              return JSON.parse(JSON.stringify(t2));
          }
          function L(t2) {
            var e2 = {};
            return Object.keys(t2).filter(function(e3) {
              return !!t2[e3];
            }).forEach(function(n2) {
              e2[n2] = t2[n2];
            }), e2;
          }
          function A(t2) {
            return Object.keys(t2).forEach(function(e2) {
              Array.isArray(t2[e2]) && (t2[e2] = t2[e2].join(", "));
            }), t2;
          }
          function F(t2) {
            return f()(Array(t2));
          }
          function z() {
            for (var t2 = arguments.length, e2 = new Array(t2), n2 = 0; n2 < t2; n2++)
              e2[n2] = arguments[n2];
            return e2[Object(d.randomNumber)(0, e2.length - 1)];
          }
          var N = /\<(\w*)([^\>]*)\/\>/gim, _ = (r = { image: true, input: true, br: true, path: true, line: true, circle: true, rect: true }, u()(r, "path", true), u()(r, "polygon", true), u()(r, "polyline", true), u()(r, "use", true), r), U = function(t2) {
            for (var e2 = arguments.length, n2 = new Array(e2 > 1 ? e2 - 1 : 0), r2 = 1; r2 < e2; r2++)
              n2[r2 - 1] = arguments[r2];
            var i2 = t2.map(function(t3, e3) {
              var r3 = n2[e3] || "";
              return T(r3) && console.log(r3), R(r3) || (r3 = [r3]), t3 + (r3 = r3.join(""));
            }).join("");
            return i2 = i2.replace(N, function(t3, e3) {
              return _[e3.toLowerCase()] ? t3 : t3.replace("/>", "></".concat(e3, ">"));
            });
          };
          function G(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", n2 = t2 || {};
            return Object.keys(n2).filter(function(t3) {
              return w(n2[t3]);
            }).map(function(t3) {
              return "".concat(t3, ": ").concat(n2[t3]);
            }).join(";" + e2);
          }
          function H() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : ";", n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ":", r2 = {};
            return (t2 += "") === "" || t2.split(e2).forEach(function(t3) {
              var e3 = t3.split(n2).map(function(t4) {
                return t4.trim();
              }), i2 = c()(e3), a2 = i2[0], o2 = i2.slice(1);
              a2 != "" && (r2[a2] = o2.join(n2));
            }), r2;
          }
          function K(t2) {
            return Object.keys(t2).map(function(e2) {
              return e2 === "class" && I(t2[e2]) ? "".concat(e2, '="').concat(Y(t2[e2]), '"') : C(t2[e2]) || P(t2[e2]) || t2[e2] === "undefined" ? t2[e2] ? e2 : "" : "".concat(e2, '="').concat(t2[e2], '"');
            }).join(" ");
          }
          function Y(t2) {
            return Object.keys(t2).filter(function(e2) {
              return t2[e2];
            }).map(function(t3) {
              return t3;
            }).join(" ");
          }
          function X(t2) {
            return t2.replace(/\</g, "&lt;").replace(/\>/g, "&gt;");
          }
          function W(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "";
            return t2.map(e2).join(n2);
          }
          function Z(t2, e2) {
            var n2 = new Set([].concat(f()(t2), f()(e2)));
            return n2.size === t2.length && n2.size === e2.length;
          }
          var q = function(t2, e2) {
            var n2 = t2.filter(function(t3) {
              return t3.indexOf("".concat(e2, "(")) > -1;
            }), r2 = n2.map(function(t3) {
              var n3 = t3.split("".concat(e2, "("))[1].split(")")[0].trim().split(" "), r3 = a()(n3, 2);
              return { target: r3[0], param: r3[1] };
            });
            return [n2, r2];
          }, J = function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 30, n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 30, r2 = Object(v.k)(t2);
            return "\n        M0 ".concat(e2, " \n        C \n        ").concat(r2[0] * e2, " ").concat(r2[1] == 0 ? n2 : (1 - r2[1]) * n2, ",\n        ").concat(r2[2] * e2, " ").concat(r2[3] == 1 ? 0 : (1 - r2[3]) * n2, ",\n        ").concat(e2, " 0\n    ");
          }, Q = function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 30, n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 30, r2 = Object(v.k)(t2);
            return "\n        M 0 ".concat(e2, " \n        L ").concat(r2[0] * e2, " ").concat(r2[1] == 0 ? n2 : (1 - r2[1]) * n2, "\n        M ").concat(e2, " 0\n        L ").concat(r2[2] * e2, " ").concat(r2[3] == 1 ? 0 : (1 - r2[3]) * n2, "\n    ");
          };
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return r;
          }), n.d(e, "b", function() {
            return a;
          }), n.d(e, "c", function() {
            return o;
          }), n.d(e, "d", function() {
            return i;
          });
          var r = {};
          n.r(r), n.d(r, "create", function() {
            return l;
          }), n.d(r, "clone", function() {
            return f;
          }), n.d(r, "copy", function() {
            return h;
          }), n.d(r, "fromValues", function() {
            return p;
          }), n.d(r, "set", function() {
            return d;
          }), n.d(r, "identity", function() {
            return v;
          }), n.d(r, "transpose", function() {
            return y2;
          }), n.d(r, "invert", function() {
            return g;
          }), n.d(r, "adjoint", function() {
            return m;
          }), n.d(r, "determinant", function() {
            return b;
          }), n.d(r, "multiply", function() {
            return k;
          }), n.d(r, "translate", function() {
            return O;
          }), n.d(r, "scale", function() {
            return x2;
          }), n.d(r, "rotate", function() {
            return j;
          }), n.d(r, "rotateX", function() {
            return S;
          }), n.d(r, "rotateY", function() {
            return P;
          }), n.d(r, "rotateZ", function() {
            return w;
          }), n.d(r, "fromTranslation", function() {
            return R;
          }), n.d(r, "fromScaling", function() {
            return C;
          }), n.d(r, "fromRotation", function() {
            return E;
          }), n.d(r, "fromXRotation", function() {
            return $;
          }), n.d(r, "fromYRotation", function() {
            return I;
          }), n.d(r, "fromZRotation", function() {
            return T;
          }), n.d(r, "fromRotationTranslation", function() {
            return B;
          }), n.d(r, "fromQuat2", function() {
            return M;
          }), n.d(r, "getTranslation", function() {
            return V;
          }), n.d(r, "getScaling", function() {
            return D;
          }), n.d(r, "getRotation", function() {
            return L;
          }), n.d(r, "fromRotationTranslationScale", function() {
            return A;
          }), n.d(r, "fromRotationTranslationScaleOrigin", function() {
            return F;
          }), n.d(r, "fromQuat", function() {
            return z;
          }), n.d(r, "frustum", function() {
            return N;
          }), n.d(r, "perspective", function() {
            return _;
          }), n.d(r, "perspectiveFromFieldOfView", function() {
            return U;
          }), n.d(r, "ortho", function() {
            return G;
          }), n.d(r, "lookAt", function() {
            return H;
          }), n.d(r, "targetTo", function() {
            return K;
          }), n.d(r, "str", function() {
            return Y;
          }), n.d(r, "frob", function() {
            return X;
          }), n.d(r, "add", function() {
            return W;
          }), n.d(r, "subtract", function() {
            return Z;
          }), n.d(r, "multiplyScalar", function() {
            return q;
          }), n.d(r, "multiplyScalarAndAdd", function() {
            return J;
          }), n.d(r, "exactEquals", function() {
            return Q;
          }), n.d(r, "equals", function() {
            return tt;
          }), n.d(r, "mul", function() {
            return et;
          }), n.d(r, "sub", function() {
            return nt;
          });
          var i = {};
          n.r(i), n.d(i, "create", function() {
            return rt;
          }), n.d(i, "clone", function() {
            return it;
          }), n.d(i, "length", function() {
            return at;
          }), n.d(i, "fromValues", function() {
            return ot;
          }), n.d(i, "copy", function() {
            return ct;
          }), n.d(i, "set", function() {
            return st;
          }), n.d(i, "add", function() {
            return ut;
          }), n.d(i, "subtract", function() {
            return lt;
          }), n.d(i, "multiply", function() {
            return ft;
          }), n.d(i, "divide", function() {
            return ht;
          }), n.d(i, "ceil", function() {
            return pt;
          }), n.d(i, "floor", function() {
            return dt;
          }), n.d(i, "min", function() {
            return vt;
          }), n.d(i, "max", function() {
            return yt;
          }), n.d(i, "round", function() {
            return gt;
          }), n.d(i, "scale", function() {
            return mt;
          }), n.d(i, "scaleAndAdd", function() {
            return bt;
          }), n.d(i, "distance", function() {
            return kt;
          }), n.d(i, "squaredDistance", function() {
            return Ot;
          }), n.d(i, "squaredLength", function() {
            return xt;
          }), n.d(i, "negate", function() {
            return jt;
          }), n.d(i, "inverse", function() {
            return St;
          }), n.d(i, "normalize", function() {
            return Pt;
          }), n.d(i, "dot", function() {
            return wt;
          }), n.d(i, "cross", function() {
            return Rt;
          }), n.d(i, "lerp", function() {
            return Ct;
          }), n.d(i, "hermite", function() {
            return Et;
          }), n.d(i, "bezier", function() {
            return $t;
          }), n.d(i, "random", function() {
            return It;
          }), n.d(i, "transformMat4", function() {
            return Tt;
          }), n.d(i, "transformMat3", function() {
            return Bt;
          }), n.d(i, "transformQuat", function() {
            return Mt;
          }), n.d(i, "rotateX", function() {
            return Vt;
          }), n.d(i, "rotateY", function() {
            return Dt;
          }), n.d(i, "rotateZ", function() {
            return Lt;
          }), n.d(i, "angle", function() {
            return At;
          }), n.d(i, "zero", function() {
            return Ft;
          }), n.d(i, "str", function() {
            return zt;
          }), n.d(i, "exactEquals", function() {
            return Nt;
          }), n.d(i, "equals", function() {
            return _t;
          }), n.d(i, "sub", function() {
            return Gt;
          }), n.d(i, "mul", function() {
            return Ht;
          }), n.d(i, "div", function() {
            return Kt;
          }), n.d(i, "dist", function() {
            return Yt;
          }), n.d(i, "sqrDist", function() {
            return Xt;
          }), n.d(i, "len", function() {
            return Wt;
          }), n.d(i, "sqrLen", function() {
            return Zt;
          }), n.d(i, "forEach", function() {
            return qt;
          });
          var a = {};
          n.r(a), n.d(a, "create", function() {
            return te;
          }), n.d(a, "identity", function() {
            return ee;
          }), n.d(a, "setAxisAngle", function() {
            return ne;
          }), n.d(a, "getAxisAngle", function() {
            return re;
          }), n.d(a, "getAngle", function() {
            return ie;
          }), n.d(a, "multiply", function() {
            return ae;
          }), n.d(a, "rotateX", function() {
            return oe;
          }), n.d(a, "rotateY", function() {
            return ce;
          }), n.d(a, "rotateZ", function() {
            return se;
          }), n.d(a, "calculateW", function() {
            return ue;
          }), n.d(a, "exp", function() {
            return le;
          }), n.d(a, "ln", function() {
            return fe;
          }), n.d(a, "pow", function() {
            return he;
          }), n.d(a, "slerp", function() {
            return pe;
          }), n.d(a, "random", function() {
            return de;
          }), n.d(a, "invert", function() {
            return ve;
          }), n.d(a, "conjugate", function() {
            return ye;
          }), n.d(a, "fromMat3", function() {
            return ge;
          }), n.d(a, "fromEuler", function() {
            return me;
          }), n.d(a, "str", function() {
            return be;
          }), n.d(a, "clone", function() {
            return Re;
          }), n.d(a, "fromValues", function() {
            return Ce;
          }), n.d(a, "copy", function() {
            return Ee;
          }), n.d(a, "set", function() {
            return $e;
          }), n.d(a, "add", function() {
            return Ie;
          }), n.d(a, "mul", function() {
            return Te;
          }), n.d(a, "scale", function() {
            return Be;
          }), n.d(a, "dot", function() {
            return Me;
          }), n.d(a, "lerp", function() {
            return Ve;
          }), n.d(a, "length", function() {
            return De;
          }), n.d(a, "len", function() {
            return Le;
          }), n.d(a, "squaredLength", function() {
            return Ae;
          }), n.d(a, "sqrLen", function() {
            return Fe;
          }), n.d(a, "normalize", function() {
            return ze;
          }), n.d(a, "exactEquals", function() {
            return Ne;
          }), n.d(a, "equals", function() {
            return _e;
          }), n.d(a, "rotationTo", function() {
            return Ue;
          }), n.d(a, "sqlerp", function() {
            return Ge;
          }), n.d(a, "setAxes", function() {
            return He;
          });
          var o = {};
          n.r(o), n.d(o, "create", function() {
            return Ke;
          }), n.d(o, "clone", function() {
            return Ye;
          }), n.d(o, "fromValues", function() {
            return Xe;
          }), n.d(o, "copy", function() {
            return We;
          }), n.d(o, "set", function() {
            return Ze;
          }), n.d(o, "add", function() {
            return qe;
          }), n.d(o, "subtract", function() {
            return Je;
          }), n.d(o, "multiply", function() {
            return Qe;
          }), n.d(o, "divide", function() {
            return tn;
          }), n.d(o, "ceil", function() {
            return en;
          }), n.d(o, "floor", function() {
            return nn;
          }), n.d(o, "min", function() {
            return rn;
          }), n.d(o, "max", function() {
            return an;
          }), n.d(o, "round", function() {
            return on;
          }), n.d(o, "scale", function() {
            return cn;
          }), n.d(o, "scaleAndAdd", function() {
            return sn;
          }), n.d(o, "distance", function() {
            return un;
          }), n.d(o, "squaredDistance", function() {
            return ln;
          }), n.d(o, "length", function() {
            return fn;
          }), n.d(o, "squaredLength", function() {
            return hn;
          }), n.d(o, "negate", function() {
            return pn;
          }), n.d(o, "inverse", function() {
            return dn;
          }), n.d(o, "normalize", function() {
            return vn;
          }), n.d(o, "dot", function() {
            return yn;
          }), n.d(o, "cross", function() {
            return gn;
          }), n.d(o, "lerp", function() {
            return mn;
          }), n.d(o, "random", function() {
            return bn;
          }), n.d(o, "transformMat2", function() {
            return kn;
          }), n.d(o, "transformMat2d", function() {
            return On;
          }), n.d(o, "transformMat3", function() {
            return xn;
          }), n.d(o, "transformMat4", function() {
            return jn;
          }), n.d(o, "rotate", function() {
            return Sn;
          }), n.d(o, "angle", function() {
            return Pn;
          }), n.d(o, "zero", function() {
            return wn;
          }), n.d(o, "str", function() {
            return Rn;
          }), n.d(o, "exactEquals", function() {
            return Cn;
          }), n.d(o, "equals", function() {
            return En;
          }), n.d(o, "len", function() {
            return $n;
          }), n.d(o, "sub", function() {
            return In;
          }), n.d(o, "mul", function() {
            return Tn;
          }), n.d(o, "div", function() {
            return Bn;
          }), n.d(o, "dist", function() {
            return Mn;
          }), n.d(o, "sqrDist", function() {
            return Vn;
          }), n.d(o, "sqrLen", function() {
            return Dn;
          }), n.d(o, "forEach", function() {
            return Ln;
          });
          var c = 1e-6, s = typeof Float32Array != "undefined" ? Float32Array : Array, u = Math.random;
          Math.PI;
          function l() {
            var t2 = new s(16);
            return s != Float32Array && (t2[1] = 0, t2[2] = 0, t2[3] = 0, t2[4] = 0, t2[6] = 0, t2[7] = 0, t2[8] = 0, t2[9] = 0, t2[11] = 0, t2[12] = 0, t2[13] = 0, t2[14] = 0), t2[0] = 1, t2[5] = 1, t2[10] = 1, t2[15] = 1, t2;
          }
          function f(t2) {
            var e2 = new s(16);
            return e2[0] = t2[0], e2[1] = t2[1], e2[2] = t2[2], e2[3] = t2[3], e2[4] = t2[4], e2[5] = t2[5], e2[6] = t2[6], e2[7] = t2[7], e2[8] = t2[8], e2[9] = t2[9], e2[10] = t2[10], e2[11] = t2[11], e2[12] = t2[12], e2[13] = t2[13], e2[14] = t2[14], e2[15] = t2[15], e2;
          }
          function h(t2, e2) {
            return t2[0] = e2[0], t2[1] = e2[1], t2[2] = e2[2], t2[3] = e2[3], t2[4] = e2[4], t2[5] = e2[5], t2[6] = e2[6], t2[7] = e2[7], t2[8] = e2[8], t2[9] = e2[9], t2[10] = e2[10], t2[11] = e2[11], t2[12] = e2[12], t2[13] = e2[13], t2[14] = e2[14], t2[15] = e2[15], t2;
          }
          function p(t2, e2, n2, r2, i2, a2, o2, c2, u2, l2, f2, h2, p2, d2, v2, y3) {
            var g2 = new s(16);
            return g2[0] = t2, g2[1] = e2, g2[2] = n2, g2[3] = r2, g2[4] = i2, g2[5] = a2, g2[6] = o2, g2[7] = c2, g2[8] = u2, g2[9] = l2, g2[10] = f2, g2[11] = h2, g2[12] = p2, g2[13] = d2, g2[14] = v2, g2[15] = y3, g2;
          }
          function d(t2, e2, n2, r2, i2, a2, o2, c2, s2, u2, l2, f2, h2, p2, d2, v2, y3) {
            return t2[0] = e2, t2[1] = n2, t2[2] = r2, t2[3] = i2, t2[4] = a2, t2[5] = o2, t2[6] = c2, t2[7] = s2, t2[8] = u2, t2[9] = l2, t2[10] = f2, t2[11] = h2, t2[12] = p2, t2[13] = d2, t2[14] = v2, t2[15] = y3, t2;
          }
          function v(t2) {
            return t2[0] = 1, t2[1] = 0, t2[2] = 0, t2[3] = 0, t2[4] = 0, t2[5] = 1, t2[6] = 0, t2[7] = 0, t2[8] = 0, t2[9] = 0, t2[10] = 1, t2[11] = 0, t2[12] = 0, t2[13] = 0, t2[14] = 0, t2[15] = 1, t2;
          }
          function y2(t2, e2) {
            if (t2 === e2) {
              var n2 = e2[1], r2 = e2[2], i2 = e2[3], a2 = e2[6], o2 = e2[7], c2 = e2[11];
              t2[1] = e2[4], t2[2] = e2[8], t2[3] = e2[12], t2[4] = n2, t2[6] = e2[9], t2[7] = e2[13], t2[8] = r2, t2[9] = a2, t2[11] = e2[14], t2[12] = i2, t2[13] = o2, t2[14] = c2;
            } else
              t2[0] = e2[0], t2[1] = e2[4], t2[2] = e2[8], t2[3] = e2[12], t2[4] = e2[1], t2[5] = e2[5], t2[6] = e2[9], t2[7] = e2[13], t2[8] = e2[2], t2[9] = e2[6], t2[10] = e2[10], t2[11] = e2[14], t2[12] = e2[3], t2[13] = e2[7], t2[14] = e2[11], t2[15] = e2[15];
            return t2;
          }
          function g(t2, e2) {
            var n2 = e2[0], r2 = e2[1], i2 = e2[2], a2 = e2[3], o2 = e2[4], c2 = e2[5], s2 = e2[6], u2 = e2[7], l2 = e2[8], f2 = e2[9], h2 = e2[10], p2 = e2[11], d2 = e2[12], v2 = e2[13], y3 = e2[14], g2 = e2[15], m2 = n2 * c2 - r2 * o2, b2 = n2 * s2 - i2 * o2, k2 = n2 * u2 - a2 * o2, O2 = r2 * s2 - i2 * c2, x3 = r2 * u2 - a2 * c2, j2 = i2 * u2 - a2 * s2, S2 = l2 * v2 - f2 * d2, P2 = l2 * y3 - h2 * d2, w2 = l2 * g2 - p2 * d2, R2 = f2 * y3 - h2 * v2, C2 = f2 * g2 - p2 * v2, E2 = h2 * g2 - p2 * y3, $2 = m2 * E2 - b2 * C2 + k2 * R2 + O2 * w2 - x3 * P2 + j2 * S2;
            return $2 ? ($2 = 1 / $2, t2[0] = (c2 * E2 - s2 * C2 + u2 * R2) * $2, t2[1] = (i2 * C2 - r2 * E2 - a2 * R2) * $2, t2[2] = (v2 * j2 - y3 * x3 + g2 * O2) * $2, t2[3] = (h2 * x3 - f2 * j2 - p2 * O2) * $2, t2[4] = (s2 * w2 - o2 * E2 - u2 * P2) * $2, t2[5] = (n2 * E2 - i2 * w2 + a2 * P2) * $2, t2[6] = (y3 * k2 - d2 * j2 - g2 * b2) * $2, t2[7] = (l2 * j2 - h2 * k2 + p2 * b2) * $2, t2[8] = (o2 * C2 - c2 * w2 + u2 * S2) * $2, t2[9] = (r2 * w2 - n2 * C2 - a2 * S2) * $2, t2[10] = (d2 * x3 - v2 * k2 + g2 * m2) * $2, t2[11] = (f2 * k2 - l2 * x3 - p2 * m2) * $2, t2[12] = (c2 * P2 - o2 * R2 - s2 * S2) * $2, t2[13] = (n2 * R2 - r2 * P2 + i2 * S2) * $2, t2[14] = (v2 * b2 - d2 * O2 - y3 * m2) * $2, t2[15] = (l2 * O2 - f2 * b2 + h2 * m2) * $2, t2) : null;
          }
          function m(t2, e2) {
            var n2 = e2[0], r2 = e2[1], i2 = e2[2], a2 = e2[3], o2 = e2[4], c2 = e2[5], s2 = e2[6], u2 = e2[7], l2 = e2[8], f2 = e2[9], h2 = e2[10], p2 = e2[11], d2 = e2[12], v2 = e2[13], y3 = e2[14], g2 = e2[15];
            return t2[0] = c2 * (h2 * g2 - p2 * y3) - f2 * (s2 * g2 - u2 * y3) + v2 * (s2 * p2 - u2 * h2), t2[1] = -(r2 * (h2 * g2 - p2 * y3) - f2 * (i2 * g2 - a2 * y3) + v2 * (i2 * p2 - a2 * h2)), t2[2] = r2 * (s2 * g2 - u2 * y3) - c2 * (i2 * g2 - a2 * y3) + v2 * (i2 * u2 - a2 * s2), t2[3] = -(r2 * (s2 * p2 - u2 * h2) - c2 * (i2 * p2 - a2 * h2) + f2 * (i2 * u2 - a2 * s2)), t2[4] = -(o2 * (h2 * g2 - p2 * y3) - l2 * (s2 * g2 - u2 * y3) + d2 * (s2 * p2 - u2 * h2)), t2[5] = n2 * (h2 * g2 - p2 * y3) - l2 * (i2 * g2 - a2 * y3) + d2 * (i2 * p2 - a2 * h2), t2[6] = -(n2 * (s2 * g2 - u2 * y3) - o2 * (i2 * g2 - a2 * y3) + d2 * (i2 * u2 - a2 * s2)), t2[7] = n2 * (s2 * p2 - u2 * h2) - o2 * (i2 * p2 - a2 * h2) + l2 * (i2 * u2 - a2 * s2), t2[8] = o2 * (f2 * g2 - p2 * v2) - l2 * (c2 * g2 - u2 * v2) + d2 * (c2 * p2 - u2 * f2), t2[9] = -(n2 * (f2 * g2 - p2 * v2) - l2 * (r2 * g2 - a2 * v2) + d2 * (r2 * p2 - a2 * f2)), t2[10] = n2 * (c2 * g2 - u2 * v2) - o2 * (r2 * g2 - a2 * v2) + d2 * (r2 * u2 - a2 * c2), t2[11] = -(n2 * (c2 * p2 - u2 * f2) - o2 * (r2 * p2 - a2 * f2) + l2 * (r2 * u2 - a2 * c2)), t2[12] = -(o2 * (f2 * y3 - h2 * v2) - l2 * (c2 * y3 - s2 * v2) + d2 * (c2 * h2 - s2 * f2)), t2[13] = n2 * (f2 * y3 - h2 * v2) - l2 * (r2 * y3 - i2 * v2) + d2 * (r2 * h2 - i2 * f2), t2[14] = -(n2 * (c2 * y3 - s2 * v2) - o2 * (r2 * y3 - i2 * v2) + d2 * (r2 * s2 - i2 * c2)), t2[15] = n2 * (c2 * h2 - s2 * f2) - o2 * (r2 * h2 - i2 * f2) + l2 * (r2 * s2 - i2 * c2), t2;
          }
          function b(t2) {
            var e2 = t2[0], n2 = t2[1], r2 = t2[2], i2 = t2[3], a2 = t2[4], o2 = t2[5], c2 = t2[6], s2 = t2[7], u2 = t2[8], l2 = t2[9], f2 = t2[10], h2 = t2[11], p2 = t2[12], d2 = t2[13], v2 = t2[14], y3 = t2[15];
            return (e2 * o2 - n2 * a2) * (f2 * y3 - h2 * v2) - (e2 * c2 - r2 * a2) * (l2 * y3 - h2 * d2) + (e2 * s2 - i2 * a2) * (l2 * v2 - f2 * d2) + (n2 * c2 - r2 * o2) * (u2 * y3 - h2 * p2) - (n2 * s2 - i2 * o2) * (u2 * v2 - f2 * p2) + (r2 * s2 - i2 * c2) * (u2 * d2 - l2 * p2);
          }
          function k(t2, e2, n2) {
            var r2 = e2[0], i2 = e2[1], a2 = e2[2], o2 = e2[3], c2 = e2[4], s2 = e2[5], u2 = e2[6], l2 = e2[7], f2 = e2[8], h2 = e2[9], p2 = e2[10], d2 = e2[11], v2 = e2[12], y3 = e2[13], g2 = e2[14], m2 = e2[15], b2 = n2[0], k2 = n2[1], O2 = n2[2], x3 = n2[3];
            return t2[0] = b2 * r2 + k2 * c2 + O2 * f2 + x3 * v2, t2[1] = b2 * i2 + k2 * s2 + O2 * h2 + x3 * y3, t2[2] = b2 * a2 + k2 * u2 + O2 * p2 + x3 * g2, t2[3] = b2 * o2 + k2 * l2 + O2 * d2 + x3 * m2, b2 = n2[4], k2 = n2[5], O2 = n2[6], x3 = n2[7], t2[4] = b2 * r2 + k2 * c2 + O2 * f2 + x3 * v2, t2[5] = b2 * i2 + k2 * s2 + O2 * h2 + x3 * y3, t2[6] = b2 * a2 + k2 * u2 + O2 * p2 + x3 * g2, t2[7] = b2 * o2 + k2 * l2 + O2 * d2 + x3 * m2, b2 = n2[8], k2 = n2[9], O2 = n2[10], x3 = n2[11], t2[8] = b2 * r2 + k2 * c2 + O2 * f2 + x3 * v2, t2[9] = b2 * i2 + k2 * s2 + O2 * h2 + x3 * y3, t2[10] = b2 * a2 + k2 * u2 + O2 * p2 + x3 * g2, t2[11] = b2 * o2 + k2 * l2 + O2 * d2 + x3 * m2, b2 = n2[12], k2 = n2[13], O2 = n2[14], x3 = n2[15], t2[12] = b2 * r2 + k2 * c2 + O2 * f2 + x3 * v2, t2[13] = b2 * i2 + k2 * s2 + O2 * h2 + x3 * y3, t2[14] = b2 * a2 + k2 * u2 + O2 * p2 + x3 * g2, t2[15] = b2 * o2 + k2 * l2 + O2 * d2 + x3 * m2, t2;
          }
          function O(t2, e2, n2) {
            var r2, i2, a2, o2, c2, s2, u2, l2, f2, h2, p2, d2, v2 = n2[0], y3 = n2[1], g2 = n2[2];
            return e2 === t2 ? (t2[12] = e2[0] * v2 + e2[4] * y3 + e2[8] * g2 + e2[12], t2[13] = e2[1] * v2 + e2[5] * y3 + e2[9] * g2 + e2[13], t2[14] = e2[2] * v2 + e2[6] * y3 + e2[10] * g2 + e2[14], t2[15] = e2[3] * v2 + e2[7] * y3 + e2[11] * g2 + e2[15]) : (r2 = e2[0], i2 = e2[1], a2 = e2[2], o2 = e2[3], c2 = e2[4], s2 = e2[5], u2 = e2[6], l2 = e2[7], f2 = e2[8], h2 = e2[9], p2 = e2[10], d2 = e2[11], t2[0] = r2, t2[1] = i2, t2[2] = a2, t2[3] = o2, t2[4] = c2, t2[5] = s2, t2[6] = u2, t2[7] = l2, t2[8] = f2, t2[9] = h2, t2[10] = p2, t2[11] = d2, t2[12] = r2 * v2 + c2 * y3 + f2 * g2 + e2[12], t2[13] = i2 * v2 + s2 * y3 + h2 * g2 + e2[13], t2[14] = a2 * v2 + u2 * y3 + p2 * g2 + e2[14], t2[15] = o2 * v2 + l2 * y3 + d2 * g2 + e2[15]), t2;
          }
          function x2(t2, e2, n2) {
            var r2 = n2[0], i2 = n2[1], a2 = n2[2];
            return t2[0] = e2[0] * r2, t2[1] = e2[1] * r2, t2[2] = e2[2] * r2, t2[3] = e2[3] * r2, t2[4] = e2[4] * i2, t2[5] = e2[5] * i2, t2[6] = e2[6] * i2, t2[7] = e2[7] * i2, t2[8] = e2[8] * a2, t2[9] = e2[9] * a2, t2[10] = e2[10] * a2, t2[11] = e2[11] * a2, t2[12] = e2[12], t2[13] = e2[13], t2[14] = e2[14], t2[15] = e2[15], t2;
          }
          function j(t2, e2, n2, r2) {
            var i2, a2, o2, s2, u2, l2, f2, h2, p2, d2, v2, y3, g2, m2, b2, k2, O2, x3, j2, S2, P2, w2, R2, C2, E2 = r2[0], $2 = r2[1], I2 = r2[2], T2 = Math.hypot(E2, $2, I2);
            return T2 < c ? null : (E2 *= T2 = 1 / T2, $2 *= T2, I2 *= T2, i2 = Math.sin(n2), o2 = 1 - (a2 = Math.cos(n2)), s2 = e2[0], u2 = e2[1], l2 = e2[2], f2 = e2[3], h2 = e2[4], p2 = e2[5], d2 = e2[6], v2 = e2[7], y3 = e2[8], g2 = e2[9], m2 = e2[10], b2 = e2[11], k2 = E2 * E2 * o2 + a2, O2 = $2 * E2 * o2 + I2 * i2, x3 = I2 * E2 * o2 - $2 * i2, j2 = E2 * $2 * o2 - I2 * i2, S2 = $2 * $2 * o2 + a2, P2 = I2 * $2 * o2 + E2 * i2, w2 = E2 * I2 * o2 + $2 * i2, R2 = $2 * I2 * o2 - E2 * i2, C2 = I2 * I2 * o2 + a2, t2[0] = s2 * k2 + h2 * O2 + y3 * x3, t2[1] = u2 * k2 + p2 * O2 + g2 * x3, t2[2] = l2 * k2 + d2 * O2 + m2 * x3, t2[3] = f2 * k2 + v2 * O2 + b2 * x3, t2[4] = s2 * j2 + h2 * S2 + y3 * P2, t2[5] = u2 * j2 + p2 * S2 + g2 * P2, t2[6] = l2 * j2 + d2 * S2 + m2 * P2, t2[7] = f2 * j2 + v2 * S2 + b2 * P2, t2[8] = s2 * w2 + h2 * R2 + y3 * C2, t2[9] = u2 * w2 + p2 * R2 + g2 * C2, t2[10] = l2 * w2 + d2 * R2 + m2 * C2, t2[11] = f2 * w2 + v2 * R2 + b2 * C2, e2 !== t2 && (t2[12] = e2[12], t2[13] = e2[13], t2[14] = e2[14], t2[15] = e2[15]), t2);
          }
          function S(t2, e2, n2) {
            var r2 = Math.sin(n2), i2 = Math.cos(n2), a2 = e2[4], o2 = e2[5], c2 = e2[6], s2 = e2[7], u2 = e2[8], l2 = e2[9], f2 = e2[10], h2 = e2[11];
            return e2 !== t2 && (t2[0] = e2[0], t2[1] = e2[1], t2[2] = e2[2], t2[3] = e2[3], t2[12] = e2[12], t2[13] = e2[13], t2[14] = e2[14], t2[15] = e2[15]), t2[4] = a2 * i2 + u2 * r2, t2[5] = o2 * i2 + l2 * r2, t2[6] = c2 * i2 + f2 * r2, t2[7] = s2 * i2 + h2 * r2, t2[8] = u2 * i2 - a2 * r2, t2[9] = l2 * i2 - o2 * r2, t2[10] = f2 * i2 - c2 * r2, t2[11] = h2 * i2 - s2 * r2, t2;
          }
          function P(t2, e2, n2) {
            var r2 = Math.sin(n2), i2 = Math.cos(n2), a2 = e2[0], o2 = e2[1], c2 = e2[2], s2 = e2[3], u2 = e2[8], l2 = e2[9], f2 = e2[10], h2 = e2[11];
            return e2 !== t2 && (t2[4] = e2[4], t2[5] = e2[5], t2[6] = e2[6], t2[7] = e2[7], t2[12] = e2[12], t2[13] = e2[13], t2[14] = e2[14], t2[15] = e2[15]), t2[0] = a2 * i2 - u2 * r2, t2[1] = o2 * i2 - l2 * r2, t2[2] = c2 * i2 - f2 * r2, t2[3] = s2 * i2 - h2 * r2, t2[8] = a2 * r2 + u2 * i2, t2[9] = o2 * r2 + l2 * i2, t2[10] = c2 * r2 + f2 * i2, t2[11] = s2 * r2 + h2 * i2, t2;
          }
          function w(t2, e2, n2) {
            var r2 = Math.sin(n2), i2 = Math.cos(n2), a2 = e2[0], o2 = e2[1], c2 = e2[2], s2 = e2[3], u2 = e2[4], l2 = e2[5], f2 = e2[6], h2 = e2[7];
            return e2 !== t2 && (t2[8] = e2[8], t2[9] = e2[9], t2[10] = e2[10], t2[11] = e2[11], t2[12] = e2[12], t2[13] = e2[13], t2[14] = e2[14], t2[15] = e2[15]), t2[0] = a2 * i2 + u2 * r2, t2[1] = o2 * i2 + l2 * r2, t2[2] = c2 * i2 + f2 * r2, t2[3] = s2 * i2 + h2 * r2, t2[4] = u2 * i2 - a2 * r2, t2[5] = l2 * i2 - o2 * r2, t2[6] = f2 * i2 - c2 * r2, t2[7] = h2 * i2 - s2 * r2, t2;
          }
          function R(t2, e2) {
            return t2[0] = 1, t2[1] = 0, t2[2] = 0, t2[3] = 0, t2[4] = 0, t2[5] = 1, t2[6] = 0, t2[7] = 0, t2[8] = 0, t2[9] = 0, t2[10] = 1, t2[11] = 0, t2[12] = e2[0], t2[13] = e2[1], t2[14] = e2[2], t2[15] = 1, t2;
          }
          function C(t2, e2) {
            return t2[0] = e2[0], t2[1] = 0, t2[2] = 0, t2[3] = 0, t2[4] = 0, t2[5] = e2[1], t2[6] = 0, t2[7] = 0, t2[8] = 0, t2[9] = 0, t2[10] = e2[2], t2[11] = 0, t2[12] = 0, t2[13] = 0, t2[14] = 0, t2[15] = 1, t2;
          }
          function E(t2, e2, n2) {
            var r2, i2, a2, o2 = n2[0], s2 = n2[1], u2 = n2[2], l2 = Math.hypot(o2, s2, u2);
            return l2 < c ? null : (o2 *= l2 = 1 / l2, s2 *= l2, u2 *= l2, r2 = Math.sin(e2), a2 = 1 - (i2 = Math.cos(e2)), t2[0] = o2 * o2 * a2 + i2, t2[1] = s2 * o2 * a2 + u2 * r2, t2[2] = u2 * o2 * a2 - s2 * r2, t2[3] = 0, t2[4] = o2 * s2 * a2 - u2 * r2, t2[5] = s2 * s2 * a2 + i2, t2[6] = u2 * s2 * a2 + o2 * r2, t2[7] = 0, t2[8] = o2 * u2 * a2 + s2 * r2, t2[9] = s2 * u2 * a2 - o2 * r2, t2[10] = u2 * u2 * a2 + i2, t2[11] = 0, t2[12] = 0, t2[13] = 0, t2[14] = 0, t2[15] = 1, t2);
          }
          function $(t2, e2) {
            var n2 = Math.sin(e2), r2 = Math.cos(e2);
            return t2[0] = 1, t2[1] = 0, t2[2] = 0, t2[3] = 0, t2[4] = 0, t2[5] = r2, t2[6] = n2, t2[7] = 0, t2[8] = 0, t2[9] = -n2, t2[10] = r2, t2[11] = 0, t2[12] = 0, t2[13] = 0, t2[14] = 0, t2[15] = 1, t2;
          }
          function I(t2, e2) {
            var n2 = Math.sin(e2), r2 = Math.cos(e2);
            return t2[0] = r2, t2[1] = 0, t2[2] = -n2, t2[3] = 0, t2[4] = 0, t2[5] = 1, t2[6] = 0, t2[7] = 0, t2[8] = n2, t2[9] = 0, t2[10] = r2, t2[11] = 0, t2[12] = 0, t2[13] = 0, t2[14] = 0, t2[15] = 1, t2;
          }
          function T(t2, e2) {
            var n2 = Math.sin(e2), r2 = Math.cos(e2);
            return t2[0] = r2, t2[1] = n2, t2[2] = 0, t2[3] = 0, t2[4] = -n2, t2[5] = r2, t2[6] = 0, t2[7] = 0, t2[8] = 0, t2[9] = 0, t2[10] = 1, t2[11] = 0, t2[12] = 0, t2[13] = 0, t2[14] = 0, t2[15] = 1, t2;
          }
          function B(t2, e2, n2) {
            var r2 = e2[0], i2 = e2[1], a2 = e2[2], o2 = e2[3], c2 = r2 + r2, s2 = i2 + i2, u2 = a2 + a2, l2 = r2 * c2, f2 = r2 * s2, h2 = r2 * u2, p2 = i2 * s2, d2 = i2 * u2, v2 = a2 * u2, y3 = o2 * c2, g2 = o2 * s2, m2 = o2 * u2;
            return t2[0] = 1 - (p2 + v2), t2[1] = f2 + m2, t2[2] = h2 - g2, t2[3] = 0, t2[4] = f2 - m2, t2[5] = 1 - (l2 + v2), t2[6] = d2 + y3, t2[7] = 0, t2[8] = h2 + g2, t2[9] = d2 - y3, t2[10] = 1 - (l2 + p2), t2[11] = 0, t2[12] = n2[0], t2[13] = n2[1], t2[14] = n2[2], t2[15] = 1, t2;
          }
          function M(t2, e2) {
            var n2 = new s(3), r2 = -e2[0], i2 = -e2[1], a2 = -e2[2], o2 = e2[3], c2 = e2[4], u2 = e2[5], l2 = e2[6], f2 = e2[7], h2 = r2 * r2 + i2 * i2 + a2 * a2 + o2 * o2;
            return h2 > 0 ? (n2[0] = 2 * (c2 * o2 + f2 * r2 + u2 * a2 - l2 * i2) / h2, n2[1] = 2 * (u2 * o2 + f2 * i2 + l2 * r2 - c2 * a2) / h2, n2[2] = 2 * (l2 * o2 + f2 * a2 + c2 * i2 - u2 * r2) / h2) : (n2[0] = 2 * (c2 * o2 + f2 * r2 + u2 * a2 - l2 * i2), n2[1] = 2 * (u2 * o2 + f2 * i2 + l2 * r2 - c2 * a2), n2[2] = 2 * (l2 * o2 + f2 * a2 + c2 * i2 - u2 * r2)), B(t2, e2, n2), t2;
          }
          function V(t2, e2) {
            return t2[0] = e2[12], t2[1] = e2[13], t2[2] = e2[14], t2;
          }
          function D(t2, e2) {
            var n2 = e2[0], r2 = e2[1], i2 = e2[2], a2 = e2[4], o2 = e2[5], c2 = e2[6], s2 = e2[8], u2 = e2[9], l2 = e2[10];
            return t2[0] = Math.hypot(n2, r2, i2), t2[1] = Math.hypot(a2, o2, c2), t2[2] = Math.hypot(s2, u2, l2), t2;
          }
          function L(t2, e2) {
            var n2 = new s(3);
            D(n2, e2);
            var r2 = 1 / n2[0], i2 = 1 / n2[1], a2 = 1 / n2[2], o2 = e2[0] * r2, c2 = e2[1] * i2, u2 = e2[2] * a2, l2 = e2[4] * r2, f2 = e2[5] * i2, h2 = e2[6] * a2, p2 = e2[8] * r2, d2 = e2[9] * i2, v2 = e2[10] * a2, y3 = o2 + f2 + v2, g2 = 0;
            return y3 > 0 ? (g2 = 2 * Math.sqrt(y3 + 1), t2[3] = 0.25 * g2, t2[0] = (h2 - d2) / g2, t2[1] = (p2 - u2) / g2, t2[2] = (c2 - l2) / g2) : o2 > f2 && o2 > v2 ? (g2 = 2 * Math.sqrt(1 + o2 - f2 - v2), t2[3] = (h2 - d2) / g2, t2[0] = 0.25 * g2, t2[1] = (c2 + l2) / g2, t2[2] = (p2 + u2) / g2) : f2 > v2 ? (g2 = 2 * Math.sqrt(1 + f2 - o2 - v2), t2[3] = (p2 - u2) / g2, t2[0] = (c2 + l2) / g2, t2[1] = 0.25 * g2, t2[2] = (h2 + d2) / g2) : (g2 = 2 * Math.sqrt(1 + v2 - o2 - f2), t2[3] = (c2 - l2) / g2, t2[0] = (p2 + u2) / g2, t2[1] = (h2 + d2) / g2, t2[2] = 0.25 * g2), t2;
          }
          function A(t2, e2, n2, r2) {
            var i2 = e2[0], a2 = e2[1], o2 = e2[2], c2 = e2[3], s2 = i2 + i2, u2 = a2 + a2, l2 = o2 + o2, f2 = i2 * s2, h2 = i2 * u2, p2 = i2 * l2, d2 = a2 * u2, v2 = a2 * l2, y3 = o2 * l2, g2 = c2 * s2, m2 = c2 * u2, b2 = c2 * l2, k2 = r2[0], O2 = r2[1], x3 = r2[2];
            return t2[0] = (1 - (d2 + y3)) * k2, t2[1] = (h2 + b2) * k2, t2[2] = (p2 - m2) * k2, t2[3] = 0, t2[4] = (h2 - b2) * O2, t2[5] = (1 - (f2 + y3)) * O2, t2[6] = (v2 + g2) * O2, t2[7] = 0, t2[8] = (p2 + m2) * x3, t2[9] = (v2 - g2) * x3, t2[10] = (1 - (f2 + d2)) * x3, t2[11] = 0, t2[12] = n2[0], t2[13] = n2[1], t2[14] = n2[2], t2[15] = 1, t2;
          }
          function F(t2, e2, n2, r2, i2) {
            var a2 = e2[0], o2 = e2[1], c2 = e2[2], s2 = e2[3], u2 = a2 + a2, l2 = o2 + o2, f2 = c2 + c2, h2 = a2 * u2, p2 = a2 * l2, d2 = a2 * f2, v2 = o2 * l2, y3 = o2 * f2, g2 = c2 * f2, m2 = s2 * u2, b2 = s2 * l2, k2 = s2 * f2, O2 = r2[0], x3 = r2[1], j2 = r2[2], S2 = i2[0], P2 = i2[1], w2 = i2[2], R2 = (1 - (v2 + g2)) * O2, C2 = (p2 + k2) * O2, E2 = (d2 - b2) * O2, $2 = (p2 - k2) * x3, I2 = (1 - (h2 + g2)) * x3, T2 = (y3 + m2) * x3, B2 = (d2 + b2) * j2, M2 = (y3 - m2) * j2, V2 = (1 - (h2 + v2)) * j2;
            return t2[0] = R2, t2[1] = C2, t2[2] = E2, t2[3] = 0, t2[4] = $2, t2[5] = I2, t2[6] = T2, t2[7] = 0, t2[8] = B2, t2[9] = M2, t2[10] = V2, t2[11] = 0, t2[12] = n2[0] + S2 - (R2 * S2 + $2 * P2 + B2 * w2), t2[13] = n2[1] + P2 - (C2 * S2 + I2 * P2 + M2 * w2), t2[14] = n2[2] + w2 - (E2 * S2 + T2 * P2 + V2 * w2), t2[15] = 1, t2;
          }
          function z(t2, e2) {
            var n2 = e2[0], r2 = e2[1], i2 = e2[2], a2 = e2[3], o2 = n2 + n2, c2 = r2 + r2, s2 = i2 + i2, u2 = n2 * o2, l2 = r2 * o2, f2 = r2 * c2, h2 = i2 * o2, p2 = i2 * c2, d2 = i2 * s2, v2 = a2 * o2, y3 = a2 * c2, g2 = a2 * s2;
            return t2[0] = 1 - f2 - d2, t2[1] = l2 + g2, t2[2] = h2 - y3, t2[3] = 0, t2[4] = l2 - g2, t2[5] = 1 - u2 - d2, t2[6] = p2 + v2, t2[7] = 0, t2[8] = h2 + y3, t2[9] = p2 - v2, t2[10] = 1 - u2 - f2, t2[11] = 0, t2[12] = 0, t2[13] = 0, t2[14] = 0, t2[15] = 1, t2;
          }
          function N(t2, e2, n2, r2, i2, a2, o2) {
            var c2 = 1 / (n2 - e2), s2 = 1 / (i2 - r2), u2 = 1 / (a2 - o2);
            return t2[0] = 2 * a2 * c2, t2[1] = 0, t2[2] = 0, t2[3] = 0, t2[4] = 0, t2[5] = 2 * a2 * s2, t2[6] = 0, t2[7] = 0, t2[8] = (n2 + e2) * c2, t2[9] = (i2 + r2) * s2, t2[10] = (o2 + a2) * u2, t2[11] = -1, t2[12] = 0, t2[13] = 0, t2[14] = o2 * a2 * 2 * u2, t2[15] = 0, t2;
          }
          function _(t2, e2, n2, r2, i2) {
            var a2, o2 = 1 / Math.tan(e2 / 2);
            return t2[0] = o2 / n2, t2[1] = 0, t2[2] = 0, t2[3] = 0, t2[4] = 0, t2[5] = o2, t2[6] = 0, t2[7] = 0, t2[8] = 0, t2[9] = 0, t2[11] = -1, t2[12] = 0, t2[13] = 0, t2[15] = 0, i2 != null && i2 !== 1 / 0 ? (a2 = 1 / (r2 - i2), t2[10] = (i2 + r2) * a2, t2[14] = 2 * i2 * r2 * a2) : (t2[10] = -1, t2[14] = -2 * r2), t2;
          }
          function U(t2, e2, n2, r2) {
            var i2 = Math.tan(e2.upDegrees * Math.PI / 180), a2 = Math.tan(e2.downDegrees * Math.PI / 180), o2 = Math.tan(e2.leftDegrees * Math.PI / 180), c2 = Math.tan(e2.rightDegrees * Math.PI / 180), s2 = 2 / (o2 + c2), u2 = 2 / (i2 + a2);
            return t2[0] = s2, t2[1] = 0, t2[2] = 0, t2[3] = 0, t2[4] = 0, t2[5] = u2, t2[6] = 0, t2[7] = 0, t2[8] = -(o2 - c2) * s2 * 0.5, t2[9] = (i2 - a2) * u2 * 0.5, t2[10] = r2 / (n2 - r2), t2[11] = -1, t2[12] = 0, t2[13] = 0, t2[14] = r2 * n2 / (n2 - r2), t2[15] = 0, t2;
          }
          function G(t2, e2, n2, r2, i2, a2, o2) {
            var c2 = 1 / (e2 - n2), s2 = 1 / (r2 - i2), u2 = 1 / (a2 - o2);
            return t2[0] = -2 * c2, t2[1] = 0, t2[2] = 0, t2[3] = 0, t2[4] = 0, t2[5] = -2 * s2, t2[6] = 0, t2[7] = 0, t2[8] = 0, t2[9] = 0, t2[10] = 2 * u2, t2[11] = 0, t2[12] = (e2 + n2) * c2, t2[13] = (i2 + r2) * s2, t2[14] = (o2 + a2) * u2, t2[15] = 1, t2;
          }
          function H(t2, e2, n2, r2) {
            var i2, a2, o2, s2, u2, l2, f2, h2, p2, d2, y3 = e2[0], g2 = e2[1], m2 = e2[2], b2 = r2[0], k2 = r2[1], O2 = r2[2], x3 = n2[0], j2 = n2[1], S2 = n2[2];
            return Math.abs(y3 - x3) < c && Math.abs(g2 - j2) < c && Math.abs(m2 - S2) < c ? v(t2) : (f2 = y3 - x3, h2 = g2 - j2, p2 = m2 - S2, i2 = k2 * (p2 *= d2 = 1 / Math.hypot(f2, h2, p2)) - O2 * (h2 *= d2), a2 = O2 * (f2 *= d2) - b2 * p2, o2 = b2 * h2 - k2 * f2, (d2 = Math.hypot(i2, a2, o2)) ? (i2 *= d2 = 1 / d2, a2 *= d2, o2 *= d2) : (i2 = 0, a2 = 0, o2 = 0), s2 = h2 * o2 - p2 * a2, u2 = p2 * i2 - f2 * o2, l2 = f2 * a2 - h2 * i2, (d2 = Math.hypot(s2, u2, l2)) ? (s2 *= d2 = 1 / d2, u2 *= d2, l2 *= d2) : (s2 = 0, u2 = 0, l2 = 0), t2[0] = i2, t2[1] = s2, t2[2] = f2, t2[3] = 0, t2[4] = a2, t2[5] = u2, t2[6] = h2, t2[7] = 0, t2[8] = o2, t2[9] = l2, t2[10] = p2, t2[11] = 0, t2[12] = -(i2 * y3 + a2 * g2 + o2 * m2), t2[13] = -(s2 * y3 + u2 * g2 + l2 * m2), t2[14] = -(f2 * y3 + h2 * g2 + p2 * m2), t2[15] = 1, t2);
          }
          function K(t2, e2, n2, r2) {
            var i2 = e2[0], a2 = e2[1], o2 = e2[2], c2 = r2[0], s2 = r2[1], u2 = r2[2], l2 = i2 - n2[0], f2 = a2 - n2[1], h2 = o2 - n2[2], p2 = l2 * l2 + f2 * f2 + h2 * h2;
            p2 > 0 && (l2 *= p2 = 1 / Math.sqrt(p2), f2 *= p2, h2 *= p2);
            var d2 = s2 * h2 - u2 * f2, v2 = u2 * l2 - c2 * h2, y3 = c2 * f2 - s2 * l2;
            return (p2 = d2 * d2 + v2 * v2 + y3 * y3) > 0 && (d2 *= p2 = 1 / Math.sqrt(p2), v2 *= p2, y3 *= p2), t2[0] = d2, t2[1] = v2, t2[2] = y3, t2[3] = 0, t2[4] = f2 * y3 - h2 * v2, t2[5] = h2 * d2 - l2 * y3, t2[6] = l2 * v2 - f2 * d2, t2[7] = 0, t2[8] = l2, t2[9] = f2, t2[10] = h2, t2[11] = 0, t2[12] = i2, t2[13] = a2, t2[14] = o2, t2[15] = 1, t2;
          }
          function Y(t2) {
            return "mat4(" + t2[0] + ", " + t2[1] + ", " + t2[2] + ", " + t2[3] + ", " + t2[4] + ", " + t2[5] + ", " + t2[6] + ", " + t2[7] + ", " + t2[8] + ", " + t2[9] + ", " + t2[10] + ", " + t2[11] + ", " + t2[12] + ", " + t2[13] + ", " + t2[14] + ", " + t2[15] + ")";
          }
          function X(t2) {
            return Math.hypot(t2[0], t2[1], t2[2], t2[3], t2[4], t2[5], t2[6], t2[7], t2[8], t2[9], t2[10], t2[11], t2[12], t2[13], t2[14], t2[15]);
          }
          function W(t2, e2, n2) {
            return t2[0] = e2[0] + n2[0], t2[1] = e2[1] + n2[1], t2[2] = e2[2] + n2[2], t2[3] = e2[3] + n2[3], t2[4] = e2[4] + n2[4], t2[5] = e2[5] + n2[5], t2[6] = e2[6] + n2[6], t2[7] = e2[7] + n2[7], t2[8] = e2[8] + n2[8], t2[9] = e2[9] + n2[9], t2[10] = e2[10] + n2[10], t2[11] = e2[11] + n2[11], t2[12] = e2[12] + n2[12], t2[13] = e2[13] + n2[13], t2[14] = e2[14] + n2[14], t2[15] = e2[15] + n2[15], t2;
          }
          function Z(t2, e2, n2) {
            return t2[0] = e2[0] - n2[0], t2[1] = e2[1] - n2[1], t2[2] = e2[2] - n2[2], t2[3] = e2[3] - n2[3], t2[4] = e2[4] - n2[4], t2[5] = e2[5] - n2[5], t2[6] = e2[6] - n2[6], t2[7] = e2[7] - n2[7], t2[8] = e2[8] - n2[8], t2[9] = e2[9] - n2[9], t2[10] = e2[10] - n2[10], t2[11] = e2[11] - n2[11], t2[12] = e2[12] - n2[12], t2[13] = e2[13] - n2[13], t2[14] = e2[14] - n2[14], t2[15] = e2[15] - n2[15], t2;
          }
          function q(t2, e2, n2) {
            return t2[0] = e2[0] * n2, t2[1] = e2[1] * n2, t2[2] = e2[2] * n2, t2[3] = e2[3] * n2, t2[4] = e2[4] * n2, t2[5] = e2[5] * n2, t2[6] = e2[6] * n2, t2[7] = e2[7] * n2, t2[8] = e2[8] * n2, t2[9] = e2[9] * n2, t2[10] = e2[10] * n2, t2[11] = e2[11] * n2, t2[12] = e2[12] * n2, t2[13] = e2[13] * n2, t2[14] = e2[14] * n2, t2[15] = e2[15] * n2, t2;
          }
          function J(t2, e2, n2, r2) {
            return t2[0] = e2[0] + n2[0] * r2, t2[1] = e2[1] + n2[1] * r2, t2[2] = e2[2] + n2[2] * r2, t2[3] = e2[3] + n2[3] * r2, t2[4] = e2[4] + n2[4] * r2, t2[5] = e2[5] + n2[5] * r2, t2[6] = e2[6] + n2[6] * r2, t2[7] = e2[7] + n2[7] * r2, t2[8] = e2[8] + n2[8] * r2, t2[9] = e2[9] + n2[9] * r2, t2[10] = e2[10] + n2[10] * r2, t2[11] = e2[11] + n2[11] * r2, t2[12] = e2[12] + n2[12] * r2, t2[13] = e2[13] + n2[13] * r2, t2[14] = e2[14] + n2[14] * r2, t2[15] = e2[15] + n2[15] * r2, t2;
          }
          function Q(t2, e2) {
            return t2[0] === e2[0] && t2[1] === e2[1] && t2[2] === e2[2] && t2[3] === e2[3] && t2[4] === e2[4] && t2[5] === e2[5] && t2[6] === e2[6] && t2[7] === e2[7] && t2[8] === e2[8] && t2[9] === e2[9] && t2[10] === e2[10] && t2[11] === e2[11] && t2[12] === e2[12] && t2[13] === e2[13] && t2[14] === e2[14] && t2[15] === e2[15];
          }
          function tt(t2, e2) {
            var n2 = t2[0], r2 = t2[1], i2 = t2[2], a2 = t2[3], o2 = t2[4], s2 = t2[5], u2 = t2[6], l2 = t2[7], f2 = t2[8], h2 = t2[9], p2 = t2[10], d2 = t2[11], v2 = t2[12], y3 = t2[13], g2 = t2[14], m2 = t2[15], b2 = e2[0], k2 = e2[1], O2 = e2[2], x3 = e2[3], j2 = e2[4], S2 = e2[5], P2 = e2[6], w2 = e2[7], R2 = e2[8], C2 = e2[9], E2 = e2[10], $2 = e2[11], I2 = e2[12], T2 = e2[13], B2 = e2[14], M2 = e2[15];
            return Math.abs(n2 - b2) <= c * Math.max(1, Math.abs(n2), Math.abs(b2)) && Math.abs(r2 - k2) <= c * Math.max(1, Math.abs(r2), Math.abs(k2)) && Math.abs(i2 - O2) <= c * Math.max(1, Math.abs(i2), Math.abs(O2)) && Math.abs(a2 - x3) <= c * Math.max(1, Math.abs(a2), Math.abs(x3)) && Math.abs(o2 - j2) <= c * Math.max(1, Math.abs(o2), Math.abs(j2)) && Math.abs(s2 - S2) <= c * Math.max(1, Math.abs(s2), Math.abs(S2)) && Math.abs(u2 - P2) <= c * Math.max(1, Math.abs(u2), Math.abs(P2)) && Math.abs(l2 - w2) <= c * Math.max(1, Math.abs(l2), Math.abs(w2)) && Math.abs(f2 - R2) <= c * Math.max(1, Math.abs(f2), Math.abs(R2)) && Math.abs(h2 - C2) <= c * Math.max(1, Math.abs(h2), Math.abs(C2)) && Math.abs(p2 - E2) <= c * Math.max(1, Math.abs(p2), Math.abs(E2)) && Math.abs(d2 - $2) <= c * Math.max(1, Math.abs(d2), Math.abs($2)) && Math.abs(v2 - I2) <= c * Math.max(1, Math.abs(v2), Math.abs(I2)) && Math.abs(y3 - T2) <= c * Math.max(1, Math.abs(y3), Math.abs(T2)) && Math.abs(g2 - B2) <= c * Math.max(1, Math.abs(g2), Math.abs(B2)) && Math.abs(m2 - M2) <= c * Math.max(1, Math.abs(m2), Math.abs(M2));
          }
          Math.hypot || (Math.hypot = function() {
            for (var t2 = 0, e2 = arguments.length; e2--; )
              t2 += arguments[e2] * arguments[e2];
            return Math.sqrt(t2);
          });
          var et = k, nt = Z;
          function rt() {
            var t2 = new s(3);
            return s != Float32Array && (t2[0] = 0, t2[1] = 0, t2[2] = 0), t2;
          }
          function it(t2) {
            var e2 = new s(3);
            return e2[0] = t2[0], e2[1] = t2[1], e2[2] = t2[2], e2;
          }
          function at(t2) {
            var e2 = t2[0], n2 = t2[1], r2 = t2[2];
            return Math.hypot(e2, n2, r2);
          }
          function ot(t2, e2, n2) {
            var r2 = new s(3);
            return r2[0] = t2, r2[1] = e2, r2[2] = n2, r2;
          }
          function ct(t2, e2) {
            return t2[0] = e2[0], t2[1] = e2[1], t2[2] = e2[2], t2;
          }
          function st(t2, e2, n2, r2) {
            return t2[0] = e2, t2[1] = n2, t2[2] = r2, t2;
          }
          function ut(t2, e2, n2) {
            return t2[0] = e2[0] + n2[0], t2[1] = e2[1] + n2[1], t2[2] = e2[2] + n2[2], t2;
          }
          function lt(t2, e2, n2) {
            return t2[0] = e2[0] - n2[0], t2[1] = e2[1] - n2[1], t2[2] = e2[2] - n2[2], t2;
          }
          function ft(t2, e2, n2) {
            return t2[0] = e2[0] * n2[0], t2[1] = e2[1] * n2[1], t2[2] = e2[2] * n2[2], t2;
          }
          function ht(t2, e2, n2) {
            return t2[0] = e2[0] / n2[0], t2[1] = e2[1] / n2[1], t2[2] = e2[2] / n2[2], t2;
          }
          function pt(t2, e2) {
            return t2[0] = Math.ceil(e2[0]), t2[1] = Math.ceil(e2[1]), t2[2] = Math.ceil(e2[2]), t2;
          }
          function dt(t2, e2) {
            return t2[0] = Math.floor(e2[0]), t2[1] = Math.floor(e2[1]), t2[2] = Math.floor(e2[2]), t2;
          }
          function vt(t2, e2, n2) {
            return t2[0] = Math.min(e2[0], n2[0]), t2[1] = Math.min(e2[1], n2[1]), t2[2] = Math.min(e2[2], n2[2]), t2;
          }
          function yt(t2, e2, n2) {
            return t2[0] = Math.max(e2[0], n2[0]), t2[1] = Math.max(e2[1], n2[1]), t2[2] = Math.max(e2[2], n2[2]), t2;
          }
          function gt(t2, e2) {
            return t2[0] = Math.round(e2[0]), t2[1] = Math.round(e2[1]), t2[2] = Math.round(e2[2]), t2;
          }
          function mt(t2, e2, n2) {
            return t2[0] = e2[0] * n2, t2[1] = e2[1] * n2, t2[2] = e2[2] * n2, t2;
          }
          function bt(t2, e2, n2, r2) {
            return t2[0] = e2[0] + n2[0] * r2, t2[1] = e2[1] + n2[1] * r2, t2[2] = e2[2] + n2[2] * r2, t2;
          }
          function kt(t2, e2) {
            var n2 = e2[0] - t2[0], r2 = e2[1] - t2[1], i2 = e2[2] - t2[2];
            return Math.hypot(n2, r2, i2);
          }
          function Ot(t2, e2) {
            var n2 = e2[0] - t2[0], r2 = e2[1] - t2[1], i2 = e2[2] - t2[2];
            return n2 * n2 + r2 * r2 + i2 * i2;
          }
          function xt(t2) {
            var e2 = t2[0], n2 = t2[1], r2 = t2[2];
            return e2 * e2 + n2 * n2 + r2 * r2;
          }
          function jt(t2, e2) {
            return t2[0] = -e2[0], t2[1] = -e2[1], t2[2] = -e2[2], t2;
          }
          function St(t2, e2) {
            return t2[0] = 1 / e2[0], t2[1] = 1 / e2[1], t2[2] = 1 / e2[2], t2;
          }
          function Pt(t2, e2) {
            var n2 = e2[0], r2 = e2[1], i2 = e2[2], a2 = n2 * n2 + r2 * r2 + i2 * i2;
            return a2 > 0 && (a2 = 1 / Math.sqrt(a2)), t2[0] = e2[0] * a2, t2[1] = e2[1] * a2, t2[2] = e2[2] * a2, t2;
          }
          function wt(t2, e2) {
            return t2[0] * e2[0] + t2[1] * e2[1] + t2[2] * e2[2];
          }
          function Rt(t2, e2, n2) {
            var r2 = e2[0], i2 = e2[1], a2 = e2[2], o2 = n2[0], c2 = n2[1], s2 = n2[2];
            return t2[0] = i2 * s2 - a2 * c2, t2[1] = a2 * o2 - r2 * s2, t2[2] = r2 * c2 - i2 * o2, t2;
          }
          function Ct(t2, e2, n2, r2) {
            var i2 = e2[0], a2 = e2[1], o2 = e2[2];
            return t2[0] = i2 + r2 * (n2[0] - i2), t2[1] = a2 + r2 * (n2[1] - a2), t2[2] = o2 + r2 * (n2[2] - o2), t2;
          }
          function Et(t2, e2, n2, r2, i2, a2) {
            var o2 = a2 * a2, c2 = o2 * (2 * a2 - 3) + 1, s2 = o2 * (a2 - 2) + a2, u2 = o2 * (a2 - 1), l2 = o2 * (3 - 2 * a2);
            return t2[0] = e2[0] * c2 + n2[0] * s2 + r2[0] * u2 + i2[0] * l2, t2[1] = e2[1] * c2 + n2[1] * s2 + r2[1] * u2 + i2[1] * l2, t2[2] = e2[2] * c2 + n2[2] * s2 + r2[2] * u2 + i2[2] * l2, t2;
          }
          function $t(t2, e2, n2, r2, i2, a2) {
            var o2 = 1 - a2, c2 = o2 * o2, s2 = a2 * a2, u2 = c2 * o2, l2 = 3 * a2 * c2, f2 = 3 * s2 * o2, h2 = s2 * a2;
            return t2[0] = e2[0] * u2 + n2[0] * l2 + r2[0] * f2 + i2[0] * h2, t2[1] = e2[1] * u2 + n2[1] * l2 + r2[1] * f2 + i2[1] * h2, t2[2] = e2[2] * u2 + n2[2] * l2 + r2[2] * f2 + i2[2] * h2, t2;
          }
          function It(t2, e2) {
            e2 = e2 || 1;
            var n2 = 2 * u() * Math.PI, r2 = 2 * u() - 1, i2 = Math.sqrt(1 - r2 * r2) * e2;
            return t2[0] = Math.cos(n2) * i2, t2[1] = Math.sin(n2) * i2, t2[2] = r2 * e2, t2;
          }
          function Tt(t2, e2, n2) {
            var r2 = e2[0], i2 = e2[1], a2 = e2[2], o2 = n2[3] * r2 + n2[7] * i2 + n2[11] * a2 + n2[15];
            return o2 = o2 || 1, t2[0] = (n2[0] * r2 + n2[4] * i2 + n2[8] * a2 + n2[12]) / o2, t2[1] = (n2[1] * r2 + n2[5] * i2 + n2[9] * a2 + n2[13]) / o2, t2[2] = (n2[2] * r2 + n2[6] * i2 + n2[10] * a2 + n2[14]) / o2, t2;
          }
          function Bt(t2, e2, n2) {
            var r2 = e2[0], i2 = e2[1], a2 = e2[2];
            return t2[0] = r2 * n2[0] + i2 * n2[3] + a2 * n2[6], t2[1] = r2 * n2[1] + i2 * n2[4] + a2 * n2[7], t2[2] = r2 * n2[2] + i2 * n2[5] + a2 * n2[8], t2;
          }
          function Mt(t2, e2, n2) {
            var r2 = n2[0], i2 = n2[1], a2 = n2[2], o2 = n2[3], c2 = e2[0], s2 = e2[1], u2 = e2[2], l2 = i2 * u2 - a2 * s2, f2 = a2 * c2 - r2 * u2, h2 = r2 * s2 - i2 * c2, p2 = i2 * h2 - a2 * f2, d2 = a2 * l2 - r2 * h2, v2 = r2 * f2 - i2 * l2, y3 = 2 * o2;
            return l2 *= y3, f2 *= y3, h2 *= y3, p2 *= 2, d2 *= 2, v2 *= 2, t2[0] = c2 + l2 + p2, t2[1] = s2 + f2 + d2, t2[2] = u2 + h2 + v2, t2;
          }
          function Vt(t2, e2, n2, r2) {
            var i2 = [], a2 = [];
            return i2[0] = e2[0] - n2[0], i2[1] = e2[1] - n2[1], i2[2] = e2[2] - n2[2], a2[0] = i2[0], a2[1] = i2[1] * Math.cos(r2) - i2[2] * Math.sin(r2), a2[2] = i2[1] * Math.sin(r2) + i2[2] * Math.cos(r2), t2[0] = a2[0] + n2[0], t2[1] = a2[1] + n2[1], t2[2] = a2[2] + n2[2], t2;
          }
          function Dt(t2, e2, n2, r2) {
            var i2 = [], a2 = [];
            return i2[0] = e2[0] - n2[0], i2[1] = e2[1] - n2[1], i2[2] = e2[2] - n2[2], a2[0] = i2[2] * Math.sin(r2) + i2[0] * Math.cos(r2), a2[1] = i2[1], a2[2] = i2[2] * Math.cos(r2) - i2[0] * Math.sin(r2), t2[0] = a2[0] + n2[0], t2[1] = a2[1] + n2[1], t2[2] = a2[2] + n2[2], t2;
          }
          function Lt(t2, e2, n2, r2) {
            var i2 = [], a2 = [];
            return i2[0] = e2[0] - n2[0], i2[1] = e2[1] - n2[1], i2[2] = e2[2] - n2[2], a2[0] = i2[0] * Math.cos(r2) - i2[1] * Math.sin(r2), a2[1] = i2[0] * Math.sin(r2) + i2[1] * Math.cos(r2), a2[2] = i2[2], t2[0] = a2[0] + n2[0], t2[1] = a2[1] + n2[1], t2[2] = a2[2] + n2[2], t2;
          }
          function At(t2, e2) {
            var n2 = t2[0], r2 = t2[1], i2 = t2[2], a2 = e2[0], o2 = e2[1], c2 = e2[2], s2 = Math.sqrt(n2 * n2 + r2 * r2 + i2 * i2) * Math.sqrt(a2 * a2 + o2 * o2 + c2 * c2), u2 = s2 && wt(t2, e2) / s2;
            return Math.acos(Math.min(Math.max(u2, -1), 1));
          }
          function Ft(t2) {
            return t2[0] = 0, t2[1] = 0, t2[2] = 0, t2;
          }
          function zt(t2) {
            return "vec3(" + t2[0] + ", " + t2[1] + ", " + t2[2] + ")";
          }
          function Nt(t2, e2) {
            return t2[0] === e2[0] && t2[1] === e2[1] && t2[2] === e2[2];
          }
          function _t(t2, e2) {
            var n2 = t2[0], r2 = t2[1], i2 = t2[2], a2 = e2[0], o2 = e2[1], s2 = e2[2];
            return Math.abs(n2 - a2) <= c * Math.max(1, Math.abs(n2), Math.abs(a2)) && Math.abs(r2 - o2) <= c * Math.max(1, Math.abs(r2), Math.abs(o2)) && Math.abs(i2 - s2) <= c * Math.max(1, Math.abs(i2), Math.abs(s2));
          }
          var Ut, Gt = lt, Ht = ft, Kt = ht, Yt = kt, Xt = Ot, Wt = at, Zt = xt, qt = (Ut = rt(), function(t2, e2, n2, r2, i2, a2) {
            var o2, c2;
            for (e2 || (e2 = 3), n2 || (n2 = 0), c2 = r2 ? Math.min(r2 * e2 + n2, t2.length) : t2.length, o2 = n2; o2 < c2; o2 += e2)
              Ut[0] = t2[o2], Ut[1] = t2[o2 + 1], Ut[2] = t2[o2 + 2], i2(Ut, Ut, a2), t2[o2] = Ut[0], t2[o2 + 1] = Ut[1], t2[o2 + 2] = Ut[2];
            return t2;
          });
          function Jt(t2) {
            var e2 = t2[0], n2 = t2[1], r2 = t2[2], i2 = t2[3];
            return Math.hypot(e2, n2, r2, i2);
          }
          function Qt(t2) {
            var e2 = t2[0], n2 = t2[1], r2 = t2[2], i2 = t2[3];
            return e2 * e2 + n2 * n2 + r2 * r2 + i2 * i2;
          }
          !function() {
            var t2, e2 = (t2 = new s(4), s != Float32Array && (t2[0] = 0, t2[1] = 0, t2[2] = 0, t2[3] = 0), t2);
          }();
          function te() {
            var t2 = new s(4);
            return s != Float32Array && (t2[0] = 0, t2[1] = 0, t2[2] = 0), t2[3] = 1, t2;
          }
          function ee(t2) {
            return t2[0] = 0, t2[1] = 0, t2[2] = 0, t2[3] = 1, t2;
          }
          function ne(t2, e2, n2) {
            n2 *= 0.5;
            var r2 = Math.sin(n2);
            return t2[0] = r2 * e2[0], t2[1] = r2 * e2[1], t2[2] = r2 * e2[2], t2[3] = Math.cos(n2), t2;
          }
          function re(t2, e2) {
            var n2 = 2 * Math.acos(e2[3]), r2 = Math.sin(n2 / 2);
            return r2 > c ? (t2[0] = e2[0] / r2, t2[1] = e2[1] / r2, t2[2] = e2[2] / r2) : (t2[0] = 1, t2[1] = 0, t2[2] = 0), n2;
          }
          function ie(t2, e2) {
            var n2 = Me(t2, e2);
            return Math.acos(2 * n2 * n2 - 1);
          }
          function ae(t2, e2, n2) {
            var r2 = e2[0], i2 = e2[1], a2 = e2[2], o2 = e2[3], c2 = n2[0], s2 = n2[1], u2 = n2[2], l2 = n2[3];
            return t2[0] = r2 * l2 + o2 * c2 + i2 * u2 - a2 * s2, t2[1] = i2 * l2 + o2 * s2 + a2 * c2 - r2 * u2, t2[2] = a2 * l2 + o2 * u2 + r2 * s2 - i2 * c2, t2[3] = o2 * l2 - r2 * c2 - i2 * s2 - a2 * u2, t2;
          }
          function oe(t2, e2, n2) {
            n2 *= 0.5;
            var r2 = e2[0], i2 = e2[1], a2 = e2[2], o2 = e2[3], c2 = Math.sin(n2), s2 = Math.cos(n2);
            return t2[0] = r2 * s2 + o2 * c2, t2[1] = i2 * s2 + a2 * c2, t2[2] = a2 * s2 - i2 * c2, t2[3] = o2 * s2 - r2 * c2, t2;
          }
          function ce(t2, e2, n2) {
            n2 *= 0.5;
            var r2 = e2[0], i2 = e2[1], a2 = e2[2], o2 = e2[3], c2 = Math.sin(n2), s2 = Math.cos(n2);
            return t2[0] = r2 * s2 - a2 * c2, t2[1] = i2 * s2 + o2 * c2, t2[2] = a2 * s2 + r2 * c2, t2[3] = o2 * s2 - i2 * c2, t2;
          }
          function se(t2, e2, n2) {
            n2 *= 0.5;
            var r2 = e2[0], i2 = e2[1], a2 = e2[2], o2 = e2[3], c2 = Math.sin(n2), s2 = Math.cos(n2);
            return t2[0] = r2 * s2 + i2 * c2, t2[1] = i2 * s2 - r2 * c2, t2[2] = a2 * s2 + o2 * c2, t2[3] = o2 * s2 - a2 * c2, t2;
          }
          function ue(t2, e2) {
            var n2 = e2[0], r2 = e2[1], i2 = e2[2];
            return t2[0] = n2, t2[1] = r2, t2[2] = i2, t2[3] = Math.sqrt(Math.abs(1 - n2 * n2 - r2 * r2 - i2 * i2)), t2;
          }
          function le(t2, e2) {
            var n2 = e2[0], r2 = e2[1], i2 = e2[2], a2 = e2[3], o2 = Math.sqrt(n2 * n2 + r2 * r2 + i2 * i2), c2 = Math.exp(a2), s2 = o2 > 0 ? c2 * Math.sin(o2) / o2 : 0;
            return t2[0] = n2 * s2, t2[1] = r2 * s2, t2[2] = i2 * s2, t2[3] = c2 * Math.cos(o2), t2;
          }
          function fe(t2, e2) {
            var n2 = e2[0], r2 = e2[1], i2 = e2[2], a2 = e2[3], o2 = Math.sqrt(n2 * n2 + r2 * r2 + i2 * i2), c2 = o2 > 0 ? Math.atan2(o2, a2) / o2 : 0;
            return t2[0] = n2 * c2, t2[1] = r2 * c2, t2[2] = i2 * c2, t2[3] = 0.5 * Math.log(n2 * n2 + r2 * r2 + i2 * i2 + a2 * a2), t2;
          }
          function he(t2, e2, n2) {
            return fe(t2, e2), Be(t2, t2, n2), le(t2, t2), t2;
          }
          function pe(t2, e2, n2, r2) {
            var i2, a2, o2, s2, u2, l2 = e2[0], f2 = e2[1], h2 = e2[2], p2 = e2[3], d2 = n2[0], v2 = n2[1], y3 = n2[2], g2 = n2[3];
            return (a2 = l2 * d2 + f2 * v2 + h2 * y3 + p2 * g2) < 0 && (a2 = -a2, d2 = -d2, v2 = -v2, y3 = -y3, g2 = -g2), 1 - a2 > c ? (i2 = Math.acos(a2), o2 = Math.sin(i2), s2 = Math.sin((1 - r2) * i2) / o2, u2 = Math.sin(r2 * i2) / o2) : (s2 = 1 - r2, u2 = r2), t2[0] = s2 * l2 + u2 * d2, t2[1] = s2 * f2 + u2 * v2, t2[2] = s2 * h2 + u2 * y3, t2[3] = s2 * p2 + u2 * g2, t2;
          }
          function de(t2) {
            var e2 = u(), n2 = u(), r2 = u(), i2 = Math.sqrt(1 - e2), a2 = Math.sqrt(e2);
            return t2[0] = i2 * Math.sin(2 * Math.PI * n2), t2[1] = i2 * Math.cos(2 * Math.PI * n2), t2[2] = a2 * Math.sin(2 * Math.PI * r2), t2[3] = a2 * Math.cos(2 * Math.PI * r2), t2;
          }
          function ve(t2, e2) {
            var n2 = e2[0], r2 = e2[1], i2 = e2[2], a2 = e2[3], o2 = n2 * n2 + r2 * r2 + i2 * i2 + a2 * a2, c2 = o2 ? 1 / o2 : 0;
            return t2[0] = -n2 * c2, t2[1] = -r2 * c2, t2[2] = -i2 * c2, t2[3] = a2 * c2, t2;
          }
          function ye(t2, e2) {
            return t2[0] = -e2[0], t2[1] = -e2[1], t2[2] = -e2[2], t2[3] = e2[3], t2;
          }
          function ge(t2, e2) {
            var n2, r2 = e2[0] + e2[4] + e2[8];
            if (r2 > 0)
              n2 = Math.sqrt(r2 + 1), t2[3] = 0.5 * n2, n2 = 0.5 / n2, t2[0] = (e2[5] - e2[7]) * n2, t2[1] = (e2[6] - e2[2]) * n2, t2[2] = (e2[1] - e2[3]) * n2;
            else {
              var i2 = 0;
              e2[4] > e2[0] && (i2 = 1), e2[8] > e2[3 * i2 + i2] && (i2 = 2);
              var a2 = (i2 + 1) % 3, o2 = (i2 + 2) % 3;
              n2 = Math.sqrt(e2[3 * i2 + i2] - e2[3 * a2 + a2] - e2[3 * o2 + o2] + 1), t2[i2] = 0.5 * n2, n2 = 0.5 / n2, t2[3] = (e2[3 * a2 + o2] - e2[3 * o2 + a2]) * n2, t2[a2] = (e2[3 * a2 + i2] + e2[3 * i2 + a2]) * n2, t2[o2] = (e2[3 * o2 + i2] + e2[3 * i2 + o2]) * n2;
            }
            return t2;
          }
          function me(t2, e2, n2, r2) {
            var i2 = 0.5 * Math.PI / 180;
            e2 *= i2, n2 *= i2, r2 *= i2;
            var a2 = Math.sin(e2), o2 = Math.cos(e2), c2 = Math.sin(n2), s2 = Math.cos(n2), u2 = Math.sin(r2), l2 = Math.cos(r2);
            return t2[0] = a2 * s2 * l2 - o2 * c2 * u2, t2[1] = o2 * c2 * l2 + a2 * s2 * u2, t2[2] = o2 * s2 * u2 - a2 * c2 * l2, t2[3] = o2 * s2 * l2 + a2 * c2 * u2, t2;
          }
          function be(t2) {
            return "quat(" + t2[0] + ", " + t2[1] + ", " + t2[2] + ", " + t2[3] + ")";
          }
          var ke, Oe, xe, je, Se, Pe, we, Re = function(t2) {
            var e2 = new s(4);
            return e2[0] = t2[0], e2[1] = t2[1], e2[2] = t2[2], e2[3] = t2[3], e2;
          }, Ce = function(t2, e2, n2, r2) {
            var i2 = new s(4);
            return i2[0] = t2, i2[1] = e2, i2[2] = n2, i2[3] = r2, i2;
          }, Ee = function(t2, e2) {
            return t2[0] = e2[0], t2[1] = e2[1], t2[2] = e2[2], t2[3] = e2[3], t2;
          }, $e = function(t2, e2, n2, r2, i2) {
            return t2[0] = e2, t2[1] = n2, t2[2] = r2, t2[3] = i2, t2;
          }, Ie = function(t2, e2, n2) {
            return t2[0] = e2[0] + n2[0], t2[1] = e2[1] + n2[1], t2[2] = e2[2] + n2[2], t2[3] = e2[3] + n2[3], t2;
          }, Te = ae, Be = function(t2, e2, n2) {
            return t2[0] = e2[0] * n2, t2[1] = e2[1] * n2, t2[2] = e2[2] * n2, t2[3] = e2[3] * n2, t2;
          }, Me = function(t2, e2) {
            return t2[0] * e2[0] + t2[1] * e2[1] + t2[2] * e2[2] + t2[3] * e2[3];
          }, Ve = function(t2, e2, n2, r2) {
            var i2 = e2[0], a2 = e2[1], o2 = e2[2], c2 = e2[3];
            return t2[0] = i2 + r2 * (n2[0] - i2), t2[1] = a2 + r2 * (n2[1] - a2), t2[2] = o2 + r2 * (n2[2] - o2), t2[3] = c2 + r2 * (n2[3] - c2), t2;
          }, De = Jt, Le = De, Ae = Qt, Fe = Ae, ze = function(t2, e2) {
            var n2 = e2[0], r2 = e2[1], i2 = e2[2], a2 = e2[3], o2 = n2 * n2 + r2 * r2 + i2 * i2 + a2 * a2;
            return o2 > 0 && (o2 = 1 / Math.sqrt(o2)), t2[0] = n2 * o2, t2[1] = r2 * o2, t2[2] = i2 * o2, t2[3] = a2 * o2, t2;
          }, Ne = function(t2, e2) {
            return t2[0] === e2[0] && t2[1] === e2[1] && t2[2] === e2[2] && t2[3] === e2[3];
          }, _e = function(t2, e2) {
            var n2 = t2[0], r2 = t2[1], i2 = t2[2], a2 = t2[3], o2 = e2[0], s2 = e2[1], u2 = e2[2], l2 = e2[3];
            return Math.abs(n2 - o2) <= c * Math.max(1, Math.abs(n2), Math.abs(o2)) && Math.abs(r2 - s2) <= c * Math.max(1, Math.abs(r2), Math.abs(s2)) && Math.abs(i2 - u2) <= c * Math.max(1, Math.abs(i2), Math.abs(u2)) && Math.abs(a2 - l2) <= c * Math.max(1, Math.abs(a2), Math.abs(l2));
          }, Ue = (ke = rt(), Oe = ot(1, 0, 0), xe = ot(0, 1, 0), function(t2, e2, n2) {
            var r2 = wt(e2, n2);
            return r2 < -0.999999 ? (Rt(ke, Oe, e2), Wt(ke) < 1e-6 && Rt(ke, xe, e2), Pt(ke, ke), ne(t2, ke, Math.PI), t2) : r2 > 0.999999 ? (t2[0] = 0, t2[1] = 0, t2[2] = 0, t2[3] = 1, t2) : (Rt(ke, e2, n2), t2[0] = ke[0], t2[1] = ke[1], t2[2] = ke[2], t2[3] = 1 + r2, ze(t2, t2));
          }), Ge = (je = te(), Se = te(), function(t2, e2, n2, r2, i2, a2) {
            return pe(je, e2, i2, a2), pe(Se, n2, r2, a2), pe(t2, je, Se, 2 * a2 * (1 - a2)), t2;
          }), He = (Pe = new s(9), s != Float32Array && (Pe[1] = 0, Pe[2] = 0, Pe[3] = 0, Pe[5] = 0, Pe[6] = 0, Pe[7] = 0), Pe[0] = 1, Pe[4] = 1, Pe[8] = 1, we = Pe, function(t2, e2, n2, r2) {
            return we[0] = n2[0], we[3] = n2[1], we[6] = n2[2], we[1] = r2[0], we[4] = r2[1], we[7] = r2[2], we[2] = -e2[0], we[5] = -e2[1], we[8] = -e2[2], ze(t2, ge(t2, we));
          });
          function Ke() {
            var t2 = new s(2);
            return s != Float32Array && (t2[0] = 0, t2[1] = 0), t2;
          }
          function Ye(t2) {
            var e2 = new s(2);
            return e2[0] = t2[0], e2[1] = t2[1], e2;
          }
          function Xe(t2, e2) {
            var n2 = new s(2);
            return n2[0] = t2, n2[1] = e2, n2;
          }
          function We(t2, e2) {
            return t2[0] = e2[0], t2[1] = e2[1], t2;
          }
          function Ze(t2, e2, n2) {
            return t2[0] = e2, t2[1] = n2, t2;
          }
          function qe(t2, e2, n2) {
            return t2[0] = e2[0] + n2[0], t2[1] = e2[1] + n2[1], t2;
          }
          function Je(t2, e2, n2) {
            return t2[0] = e2[0] - n2[0], t2[1] = e2[1] - n2[1], t2;
          }
          function Qe(t2, e2, n2) {
            return t2[0] = e2[0] * n2[0], t2[1] = e2[1] * n2[1], t2;
          }
          function tn(t2, e2, n2) {
            return t2[0] = e2[0] / n2[0], t2[1] = e2[1] / n2[1], t2;
          }
          function en(t2, e2) {
            return t2[0] = Math.ceil(e2[0]), t2[1] = Math.ceil(e2[1]), t2;
          }
          function nn(t2, e2) {
            return t2[0] = Math.floor(e2[0]), t2[1] = Math.floor(e2[1]), t2;
          }
          function rn(t2, e2, n2) {
            return t2[0] = Math.min(e2[0], n2[0]), t2[1] = Math.min(e2[1], n2[1]), t2;
          }
          function an(t2, e2, n2) {
            return t2[0] = Math.max(e2[0], n2[0]), t2[1] = Math.max(e2[1], n2[1]), t2;
          }
          function on(t2, e2) {
            return t2[0] = Math.round(e2[0]), t2[1] = Math.round(e2[1]), t2;
          }
          function cn(t2, e2, n2) {
            return t2[0] = e2[0] * n2, t2[1] = e2[1] * n2, t2;
          }
          function sn(t2, e2, n2, r2) {
            return t2[0] = e2[0] + n2[0] * r2, t2[1] = e2[1] + n2[1] * r2, t2;
          }
          function un(t2, e2) {
            var n2 = e2[0] - t2[0], r2 = e2[1] - t2[1];
            return Math.hypot(n2, r2);
          }
          function ln(t2, e2) {
            var n2 = e2[0] - t2[0], r2 = e2[1] - t2[1];
            return n2 * n2 + r2 * r2;
          }
          function fn(t2) {
            var e2 = t2[0], n2 = t2[1];
            return Math.hypot(e2, n2);
          }
          function hn(t2) {
            var e2 = t2[0], n2 = t2[1];
            return e2 * e2 + n2 * n2;
          }
          function pn(t2, e2) {
            return t2[0] = -e2[0], t2[1] = -e2[1], t2;
          }
          function dn(t2, e2) {
            return t2[0] = 1 / e2[0], t2[1] = 1 / e2[1], t2;
          }
          function vn(t2, e2) {
            var n2 = e2[0], r2 = e2[1], i2 = n2 * n2 + r2 * r2;
            return i2 > 0 && (i2 = 1 / Math.sqrt(i2)), t2[0] = e2[0] * i2, t2[1] = e2[1] * i2, t2;
          }
          function yn(t2, e2) {
            return t2[0] * e2[0] + t2[1] * e2[1];
          }
          function gn(t2, e2, n2) {
            var r2 = e2[0] * n2[1] - e2[1] * n2[0];
            return t2[0] = t2[1] = 0, t2[2] = r2, t2;
          }
          function mn(t2, e2, n2, r2) {
            var i2 = e2[0], a2 = e2[1];
            return t2[0] = i2 + r2 * (n2[0] - i2), t2[1] = a2 + r2 * (n2[1] - a2), t2;
          }
          function bn(t2, e2) {
            e2 = e2 || 1;
            var n2 = 2 * u() * Math.PI;
            return t2[0] = Math.cos(n2) * e2, t2[1] = Math.sin(n2) * e2, t2;
          }
          function kn(t2, e2, n2) {
            var r2 = e2[0], i2 = e2[1];
            return t2[0] = n2[0] * r2 + n2[2] * i2, t2[1] = n2[1] * r2 + n2[3] * i2, t2;
          }
          function On(t2, e2, n2) {
            var r2 = e2[0], i2 = e2[1];
            return t2[0] = n2[0] * r2 + n2[2] * i2 + n2[4], t2[1] = n2[1] * r2 + n2[3] * i2 + n2[5], t2;
          }
          function xn(t2, e2, n2) {
            var r2 = e2[0], i2 = e2[1];
            return t2[0] = n2[0] * r2 + n2[3] * i2 + n2[6], t2[1] = n2[1] * r2 + n2[4] * i2 + n2[7], t2;
          }
          function jn(t2, e2, n2) {
            var r2 = e2[0], i2 = e2[1];
            return t2[0] = n2[0] * r2 + n2[4] * i2 + n2[12], t2[1] = n2[1] * r2 + n2[5] * i2 + n2[13], t2;
          }
          function Sn(t2, e2, n2, r2) {
            var i2 = e2[0] - n2[0], a2 = e2[1] - n2[1], o2 = Math.sin(r2), c2 = Math.cos(r2);
            return t2[0] = i2 * c2 - a2 * o2 + n2[0], t2[1] = i2 * o2 + a2 * c2 + n2[1], t2;
          }
          function Pn(t2, e2) {
            var n2 = t2[0], r2 = t2[1], i2 = e2[0], a2 = e2[1], o2 = Math.sqrt(n2 * n2 + r2 * r2) * Math.sqrt(i2 * i2 + a2 * a2), c2 = o2 && (n2 * i2 + r2 * a2) / o2;
            return Math.acos(Math.min(Math.max(c2, -1), 1));
          }
          function wn(t2) {
            return t2[0] = 0, t2[1] = 0, t2;
          }
          function Rn(t2) {
            return "vec2(" + t2[0] + ", " + t2[1] + ")";
          }
          function Cn(t2, e2) {
            return t2[0] === e2[0] && t2[1] === e2[1];
          }
          function En(t2, e2) {
            var n2 = t2[0], r2 = t2[1], i2 = e2[0], a2 = e2[1];
            return Math.abs(n2 - i2) <= c * Math.max(1, Math.abs(n2), Math.abs(i2)) && Math.abs(r2 - a2) <= c * Math.max(1, Math.abs(r2), Math.abs(a2));
          }
          var $n = fn, In = Je, Tn = Qe, Bn = tn, Mn = un, Vn = ln, Dn = hn, Ln = function() {
            var t2 = Ke();
            return function(e2, n2, r2, i2, a2, o2) {
              var c2, s2;
              for (n2 || (n2 = 2), r2 || (r2 = 0), s2 = i2 ? Math.min(i2 * n2 + r2, e2.length) : e2.length, c2 = r2; c2 < s2; c2 += n2)
                t2[0] = e2[c2], t2[1] = e2[c2 + 1], a2(t2, t2, o2), e2[c2] = t2[0], e2[c2 + 1] = t2[1];
              return e2;
            };
          }();
        }, function(t, e, n) {
          var r = n(132);
          function i(e2, n2, a) {
            return typeof Reflect != "undefined" && Reflect.get ? (t.exports = i = Reflect.get, t.exports.default = t.exports, t.exports.__esModule = true) : (t.exports = i = function(t2, e3, n3) {
              var i2 = r(t2, e3);
              if (i2) {
                var a2 = Object.getOwnPropertyDescriptor(i2, e3);
                return a2.get ? a2.get.call(n3) : a2.value;
              }
            }, t.exports.default = t.exports, t.exports.__esModule = true), i(e2, n2, a || e2);
          }
          t.exports = i, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e, n) {
          "use strict";
          var r = n(7), i = n.n(r);
          function a(t2, e2) {
            var n2 = Object.assign({ width: 24, height: 24 }, e2);
            return '\n        <svg \n            xmlns="http://www.w3.org/2000/svg" \n            width="'.concat(n2.width, '" \n            height="').concat(n2.height, '" \n            viewBox="0 0 24 24">').concat(t2, "</svg>");
          }
          var o = a('\n    <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6-6-6z"/>\n'), c = a('\n    <path d="M22 6H12l-2-2H2v16h20V6zm-3 8h-3v3h-2v-3h-3v-2h3V9h2v3h3v2z"/>\n'), s = a('<path d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z"/>'), u = a('<path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"/>'), l = a('<path d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"/>'), f = a('<path d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"/>'), h = a('<path d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z"/>'), p = a('<path d="M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z"/>'), d = a('<path d="M18.4 10.6C16.55 8.99 14.15 8 11.5 8c-4.65 0-8.58 3.03-9.96 7.22L3.9 16c1.05-3.19 4.05-5.5 7.6-5.5 1.95 0 3.73.72 5.12 1.88L13 16h9V7l-3.6 3.6z"/>'), v = a('<path d="M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z"/><path fill="none" d="M0 0h24v24H0z"/>'), y2 = a('<path d="M9 3L5 6.99h3V14h2V6.99h3L9 3zm7 14.01V10h-2v7.01h-3L15 21l4-3.99h-3z"/>'), g = a('<path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"/>'), m = a('<path d="M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 14h-3v3h-2v-3H8v-2h3v-3h2v3h3v2zm-3-7V3.5L18.5 9H13z"/>'), b = a('<path d="M5 4v2h14V4H5zm0 10h4v6h6v-6h4l-7-7-7 7z"/>'), k = a('<path d="M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"/>'), O = a('<path d="M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z"/>'), x2 = a('<path d="M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z"/>'), j = a('<path d="M15.95 10.78c.03-.25.05-.51.05-.78s-.02-.53-.06-.78l1.69-1.32c.15-.12.19-.34.1-.51l-1.6-2.77c-.1-.18-.31-.24-.49-.18l-1.99.8c-.42-.32-.86-.58-1.35-.78L12 2.34c-.03-.2-.2-.34-.4-.34H8.4c-.2 0-.36.14-.39.34l-.3 2.12c-.49.2-.94.47-1.35.78l-1.99-.8c-.18-.07-.39 0-.49.18l-1.6 2.77c-.1.18-.06.39.1.51l1.69 1.32c-.04.25-.07.52-.07.78s.02.53.06.78L2.37 12.1c-.15.12-.19.34-.1.51l1.6 2.77c.1.18.31.24.49.18l1.99-.8c.42.32.86.58 1.35.78l.3 2.12c.04.2.2.34.4.34h3.2c.2 0 .37-.14.39-.34l.3-2.12c.49-.2.94-.47 1.35-.78l1.99.8c.18.07.39 0 .49-.18l1.6-2.77c.1-.18.06-.39-.1-.51l-1.67-1.32zM10 13c-1.65 0-3-1.35-3-3s1.35-3 3-3 3 1.35 3 3-1.35 3-3 3z"/>'), S = a('<path d="M19 13H5v-2h14v2z"/>'), P = a('<path d="M7 7h10v3l4-4-4-4v3H5v6h2V7zm10 10H7v-3l-4 4 4 4v-3h12v-6h-2v4z"/>'), w = a('<path d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"/>'), R = a('<path d="M10 17l5-5-5-5v10z"/>'), C = a('<path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/>'), E = a('<path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1z"/>'), $ = a('<path d="M3 5v3c0 .55.45 1 1 1s1-.45 1-1V6c0-.55.45-1 1-1h2c.55 0 1-.45 1-1s-.45-1-1-1H5c-1.1 0-2 .9-2 2zm1 10c-.55 0-1 .45-1 1v3c0 1.1.9 2 2 2h3c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1-.45-1-1v-2c0-.55-.45-1-1-1zm15 3c0 .55-.45 1-1 1h-2c-.55 0-1 .45-1 1s.45 1 1 1h3c1.1 0 2-.9 2-2v-3c0-.55-.45-1-1-1s-1 .45-1 1v2zm0-15h-3c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1 .45 1 1v2c0 .55.45 1 1 1s1-.45 1-1V5c0-1.1-.9-2-2-2z"/>'), I = a('<path d="M18 4V3c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V6h1v4H9v11c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-9h8V4h-3z"/>'), T = a('<path d="M5 4v3h5.5v12h3V7H19V4z"/>'), B = a('<path d="M15 1H9v2h6V1zm-4 13h2V8h-2v6zm8.03-6.61l1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42C16.07 4.74 14.12 4 12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9 9-4.03 9-9c0-2.12-.74-4.07-1.97-5.61zM12 20c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"/>'), M = a('<path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"/>'), V = a('<path d="M21 3.01H3c-1.1 0-2 .9-2 2V9h2V4.99h18v14.03H3V15H1v4.01c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98v-14c0-1.11-.9-2-2-2zM11 16l4-4-4-4v3H1v2h10v3z"/>'), D = a('<path d="M18.7 12.4c-.28-.16-.57-.29-.86-.4.29-.11.58-.24.86-.4 1.92-1.11 2.99-3.12 3-5.19-1.79-1.03-4.07-1.11-6 0-.28.16-.54.35-.78.54.05-.31.08-.63.08-.95 0-2.22-1.21-4.15-3-5.19C10.21 1.85 9 3.78 9 6c0 .32.03.64.08.95-.24-.2-.5-.39-.78-.55-1.92-1.11-4.2-1.03-6 0 0 2.07 1.07 4.08 3 5.19.28.16.57.29.86.4-.29.11-.58.24-.86.4-1.92 1.11-2.99 3.12-3 5.19 1.79 1.03 4.07 1.11 6 0 .28-.16.54-.35.78-.54-.05.32-.08.64-.08.96 0 2.22 1.21 4.15 3 5.19 1.79-1.04 3-2.97 3-5.19 0-.32-.03-.64-.08-.95.24.2.5.38.78.54 1.92 1.11 4.2 1.03 6 0-.01-2.07-1.08-4.08-3-5.19zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"/>'), L = a('<path d="M8 5v14l11-7z"/>'), A = a('<path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"/>'), F = a('<path d="M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z"/>'), z = a('<path d="M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z"/>'), N = a('<path d="M22.7 19l-9.1-9.1c.9-2.3.4-5-1.5-6.9-2-2-5-2.4-7.4-1.3L9 6 6 9 1.6 4.7C.4 7.1.9 10.1 2.9 12.1c1.9 1.9 4.6 2.4 6.9 1.5l9.1 9.1c.4.4 1 .4 1.4 0l2.3-2.3c.5-.4.5-1.1.1-1.4z"/>'), _ = a('<path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>'), U = a('<path d="M11 9h2v2h-2zm-2 2h2v2H9zm4 0h2v2h-2zm2-2h2v2h-2zM7 9h2v2H7zm12-6H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 18H7v-2h2v2zm4 0h-2v-2h2v2zm4 0h-2v-2h2v2zm2-7h-2v2h2v2h-2v-2h-2v2h-2v-2h-2v2H9v-2H7v2H5v-2h2v-2H5V5h14v6z"/>'), G = a('<path d="M22 18v-2H8V4h2L7 1 4 4h2v2H2v2h4v8c0 1.1.9 2 2 2h8v2h-2l3 3 3-3h-2v-2h4zM10 8h6v6h2V8c0-1.1-.9-2-2-2h-6v2z"/>'), H = a('<g fill="#010101"><circle cx="7" cy="14" r="3"/><circle cx="11" cy="6" r="3"/><circle cx="16.6" cy="17.6" r="3"/></g>'), K = a('<path d="M23 7V1h-6v2H7V1H1v6h2v10H1v6h6v-2h10v2h6v-6h-2V7h2zM3 3h2v2H3V3zm2 18H3v-2h2v2zm12-2H7v-2H5V7h2V5h10v2h2v10h-2v2zm4 2h-2v-2h2v2zM19 5V3h2v2h-2zm-5.27 9h-3.49l-.73 2H7.89l3.4-9h1.4l3.41 9h-1.63l-.74-2zm-3.04-1.26h2.61L12 8.91l-1.31 3.83z"/>'), Y = a('<clipPath><use xlink:href="#a" overflow="visible"/></clipPath><path fill-rule="evenodd" clip-rule="evenodd" d="M13 9.5h5v-2h-5v2zm0 7h5v-2h-5v2zm6 4.5H5c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2h14c1.1 0 2 .9 2 2v14c0 1.1-.9 2-2 2zM6 11h5V6H6v5zm1-4h3v3H7V7zM6 18h5v-5H6v5zm1-4h3v3H7v-3z"/>'), X = a('<path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z"/>'), W = a('<path d="M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10z"/>'), Z = a('<path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14zm-5.04-6.71l-2.75 3.54-1.96-2.36L6.5 17h11l-3.54-4.71z"/>'), q = a('<path d="M3 17.46v3.04c0 .28.22.5.5.5h3.04c.13 0 .26-.05.35-.15L17.81 9.94l-3.75-3.75L3.15 17.1c-.1.1-.15.22-.15.36zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"/>'), J = a('<path d="M21 15h2v2h-2v-2zm0-4h2v2h-2v-2zm2 8h-2v2c1 0 2-1 2-2zM13 3h2v2h-2V3zm8 4h2v2h-2V7zm0-4v2h2c0-1-1-2-2-2zM1 7h2v2H1V7zm16-4h2v2h-2V3zm0 16h2v2h-2v-2zM3 3C2 3 1 4 1 5h2V3zm6 0h2v2H9V3zM5 3h2v2H5V3zm-4 8v8c0 1.1.9 2 2 2h12V11H1zm2 8l2.5-3.21 1.79 2.15 2.5-3.22L13 19H3z"/>'), Q = a('<path d="M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9c.83 0 1.5-.67 1.5-1.5 0-.39-.15-.74-.39-1.01-.23-.26-.38-.61-.38-.99 0-.83.67-1.5 1.5-1.5H16c2.76 0 5-2.24 5-5 0-4.42-4.03-8-9-8zm-5.5 9c-.83 0-1.5-.67-1.5-1.5S5.67 9 6.5 9 8 9.67 8 10.5 7.33 12 6.5 12zm3-4C8.67 8 8 7.33 8 6.5S8.67 5 9.5 5s1.5.67 1.5 1.5S10.33 8 9.5 8zm5 0c-.83 0-1.5-.67-1.5-1.5S13.67 5 14.5 5s1.5.67 1.5 1.5S15.33 8 14.5 8zm3 4c-.83 0-1.5-.67-1.5-1.5S16.67 9 17.5 9s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"/>'), tt = a('<path d="M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z"/>'), et = a('<path d="M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z"/>'), nt = a('<path d="M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z"/>'), rt = a('<path d="M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z"/>'), it = a('<path d="M4 14h4v-4H4v4zm0 5h4v-4H4v4zM4 9h4V5H4v4zm5 5h12v-4H9v4zm0 5h12v-4H9v4zM9 5v4h12V5H9z"/>'), at = a('<path d="M4 11h5V5H4v6zm0 7h5v-6H4v6zm6 0h5v-6h-5v6zm6 0h5v-6h-5v6zm-6-7h5V5h-5v6zm6-6v6h5V5h-5z"/>'), ot = a('<path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"/>'), ct = a('<path d="M7 14c-1.66 0-3 1.34-3 3 0 1.31-1.16 2-2 2 .92 1.22 2.49 2 4 2 2.21 0 4-1.79 4-4 0-1.66-1.34-3-3-3zm13.71-9.37l-1.34-1.34c-.39-.39-1.02-.39-1.41 0L9 12.25 11.75 15l8.96-8.96c.39-.39.39-1.02 0-1.41z"/>'), st = a('<path d="M2 15.5v2h20v-2H2zm0-5v2h20v-2H2zm0-5v2h20v-2H2z"/>'), ut = a('<path d="M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"/>'), lt = a('<path d="M17,15.7V13H19V17L10,21L3,14L7,5H11V7H8.3L5.4,13.6L10.4,18.6L17,15.7M22,5V7H19V10H17V7H14V5H17V2H19V5H22Z" />'), ft = a('<path d="M21 16.5a1 1 0 0 1-.527.881l-7.907 4.443a.996.996 0 0 1-1.132 0l-7.907-4.443A1 1 0 0 1 3 16.5v-9a1 1 0 0 1 .527-.881l7.907-4.443a.995.995 0 0 1 1.132 0l7.907 4.443A1 1 0 0 1 21 7.5v9zM12 4.15L6.042 7.5l5.96 3.35 5.958-3.35-5.958-3.35zM5 15.916l6 3.372V12.58L5 9.209v6.706zm14 0V9.209l-6 3.372v6.707l6-3.373z" />'), ht = a('<path d="M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9c.83 0 1.5-.67 1.5-1.5 0-.39-.15-.74-.39-1.01-.23-.26-.38-.61-.38-.99 0-.83.67-1.5 1.5-1.5H16c2.76 0 5-2.24 5-5 0-4.42-4.03-8-9-8zm-5.5 9c-.83 0-1.5-.67-1.5-1.5S5.67 9 6.5 9 8 9.67 8 10.5 7.33 12 6.5 12zm3-4C8.67 8 8 7.33 8 6.5S8.67 5 9.5 5s1.5.67 1.5 1.5S10.33 8 9.5 8zm5 0c-.83 0-1.5-.67-1.5-1.5S13.67 5 14.5 5s1.5.67 1.5 1.5S15.33 8 14.5 8zm3 4c-.83 0-1.5-.67-1.5-1.5S16.67 9 17.5 9s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"/>'), pt = a('<path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"/>'), dt = a('<path d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"/>'), vt = a('<path d="M17 10H7v2h10v-2zm2-7h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zm-5-5H7v2h7v-2z"/>'), yt = a('<path d="M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z"/>'), gt = a('<path d="M6 6h2v12H6zm3.5 6l8.5 6V6z"/>'), mt = a('<path d="M4 18l8.5-6L4 6v12zm9-12v12l8.5-6L13 6z"/>'), bt = a('<path d="M11 18V6l-8.5 6 8.5 6zm.5-6l8.5 6V6l-8.5 6z"/>'), kt = a('<path d="M7 7h10v3l4-4-4-4v3H5v6h2V7zm10 10H7v-3l-4 4 4 4v-3h12v-6h-2v4z"/>'), Ot = a('<path d="M7 7h10v3l4-4-4-4v3H5v6h2V7zm10 10H7v-3l-4 4 4 4v-3h12v-6h-2v4z" />'), xt = a('<path d="M20.38 8.57l-1.23 1.85a8 8 0 0 1-.22 7.58H5.07A8 8 0 0 1 15.58 6.85l1.85-1.23A10 10 0 0 0 3.35 19a2 2 0 0 0 1.72 1h13.85a2 2 0 0 0 1.74-1 10 10 0 0 0-.27-10.44zm-9.79 6.84a2 2 0 0 0 2.83 0l5.66-8.49-8.49 5.66a2 2 0 0 0 0 2.83z"/>'), jt = a('<defs><path id="a" d="M0 0h24v24H0V0z"/></defs><clipPath id="b"><use xlink:href="#a" overflow="visible"/></clipPath><path d="M12 5V1L7 6l5 5V7c3.3 0 6 2.7 6 6s-2.7 6-6 6-6-2.7-6-6H4c0 4.4 3.6 8 8 8s8-3.6 8-8-3.6-8-8-8zm-1.1 11H10v-3.3L9 13v-.7l1.8-.6h.1V16zm4.3-1.8c0 .3 0 .6-.1.8l-.3.6s-.3.3-.5.3-.4.1-.6.1-.4 0-.6-.1-.3-.2-.5-.3-.2-.3-.3-.6-.1-.5-.1-.8v-.7c0-.3 0-.6.1-.8l.3-.6s.3-.3.5-.3.4-.1.6-.1.4 0 .6.1c.2.1.3.2.5.3s.2.3.3.6.1.5.1.8v.7zm-.9-.8v-.5s-.1-.2-.1-.3-.1-.1-.2-.2-.2-.1-.3-.1-.2 0-.3.1l-.2.2s-.1.2-.1.3v2s.1.2.1.3.1.1.2.2.2.1.3.1.2 0 .3-.1l.2-.2s.1-.2.1-.3v-1.5z" clip-path="url(#b)"/>'), St = a('<path d="M10.59 9.17L5.41 4 4 5.41l5.17 5.17 1.42-1.41zM14.5 4l2.04 2.04L4 18.59 5.41 20 17.96 7.46 20 9.5V4h-5.5zm.33 9.41l-1.41 1.41 3.13 3.13L14.5 20H20v-5.5l-2.04 2.04-3.13-3.13z"/>'), Pt = a('\n<path d="M712.4846,631.2673c-8.3777-59.9758-44.6997-121.2822-117.7703-198.7816\n	c-51.7295-54.8649-72.0865-105.7791-55.8514-139.6883c12.4393-25.9817,42.587-35.8935,65.343-34.1103\n	c26.3435,2.0661,37.3148,18.5905,41.88,32.0888c6.5847,19.471,2.7829,43.5175-8.4753,53.6029\n	c-2.4382,2.1843-19.5444,15.6083-31.617,2.486c-16.0995-17.4994,1.3123-34.1181,1.3123-34.1181s25.7198-19.4211,11.5477-34.6431\n	c-14.1721-15.2219-81.6211,4.7241-73.1766,62.9098c2.102,14.4833,9.8525,35.0453,41.7667,49.9105\n	c31.3411,14.5985,62.0806,11.5356,84.3365-8.4017c26.8387-24.0431,36.221-68.5172,22.8163-108.1526\n	c-13.0433-38.5685-45.3375-63.5167-86.387-66.7359c-22.4584-1.7602-45.9053,2.9182-66.0231,13.1776\n	c-22.1882,11.3155-39.3094,28.5606-49.5124,49.8713c-15.207,31.7608-27.0118,99.5788,64.7797,196.9337\n	c64.4428,68.3486,97.5892,122.6011,104.3126,170.7358c6.1263,43.8577-32.9753,141.2908-59.1734,141.8642\n	c-18.2653,0.3997-13.0681-28.0174-11.1219-46.1832c3.4623-32.3166,9.02-64.4668,7.8147-96.946\n	c-1.7692-47.6774-16.0649-83.7216-38.2463-125.1911c-20.1995-37.7643-37.8974-60.6029-92.5699-111.4463\n	c-13.4884-12.5438-27.4699-22.5866-44.7675-38.1754c-17.5431-15.8101-21.9685-33.5474-24.195-48.6835\n	c-4.6472-31.5926,5.266-35.0392,22.933-61.1816c7.51,6.1134,15.132,13.1576,22.5878,21.2593\n	c0.8908,0.9678,2.1063,1.4586,3.3257,1.4586c1.0938,0,2.1906-0.3947,3.059-1.1939c1.8362-1.6895,1.9548-4.548,0.2647-6.3846\n	c-8.043-8.7399-16.2394-16.2892-24.29-22.8068c1.0196-1.6815,1.9806-3.3693,2.913-5.06\n	c11.2809,3.873,22.4781,8.5857,32.8744,14.3263c0.6923,0.3824,1.4415,0.5638,2.1804,0.5638c1.592,0,3.1354-0.8433,3.9596-2.3353\n	c1.2061-2.1848,0.4133-4.9333-1.7714-6.14c-10.5501-5.8255-21.7927-10.625-33.0861-14.5846\n	c1.7051-3.6655,3.2152-7.3481,4.5178-11.0449c9.9095,1.0547,20.2559,2.6507,30.8756,4.9542\n	c2.4407,0.5281,4.8451-1.0193,5.3736-3.4585c0.5285-2.4387-1.0193-4.8446-3.4586-5.3736\n	c-10.3543-2.2456-20.4231-3.8448-30.0823-4.9431c6.761-25.5357,4.0583-51.5754-8.0207-76.8648\n	C448.2098,115.8869,474.731,76.8288,466.0513,18c-68.8775,17.9071-87.2624,54.1776-94.1043,50.875\n	c-7.9472-3.8361-40.5018-11.036-62.952-10.6586c-37.278,0.6267-61.382,7.0395-61.382,7.0395\n	c-11.2537-14.6686-35.9431-36.6889-90.105-41.2683c2.9433,47.1602,13.4346,82.2557,28.5291,102.9373l-0.7433,2.377\n	c-11.7879,32.4393-13.5817,62.8858-3.8016,89.6451c-9.0883,1.1019-18.5685,2.7173-28.321,4.9987\n	c-2.4299,0.5687-3.939,2.9991-3.3708,5.429c0.5687,2.4294,2.9972,3.939,5.429,3.3708c10.3087-2.4115,20.3424-4.0428,29.9266-5.0891\n	c1.4184,2.9763,2.9836,5.904,4.7147,8.7755c-11.2262,4.119-22.4456,9.1879-32.9296,15.4312\n	c-2.1445,1.2767-2.8476,4.0498-1.5704,6.1939c0.8453,1.4199,2.3461,2.2073,3.8866,2.2073c0.7859,0,1.5827-0.2054,2.3073-0.6369\n	c10.5541-6.2849,22.0078-11.3381,33.4798-15.4008c3.3157,4.5403,7.0729,8.9251,11.2576,13.1527\n	c-5.6694,5.3088-11.3757,11.2216-17,17.8125c-1.6199,1.8979-1.3944,4.7505,0.504,6.3699c0.8507,0.7266,1.8935,1.0816,2.931,1.0816\n	c1.2767,0,2.5456-0.5383,3.4389-1.5856c5.5062-6.4525,11.1144-12.2327,16.692-17.4078c5.7832,5.4212,11.3758,11.1287,15.514,17.8627\n	c7.8208,12.7265,8.3216,25.8196,6.7598,40.6753c-3.119,29.6671-13.4278,58.0414-20.0391,87.1301\n	c-16.8163,73.989-9.0635,132.7513,20.7169,202.5388c8.0053,18.7598,17.5698,36.9144,23.7843,56.341\n	c10.5081,32.8488,7.8436,88.3559,8.2697,122.8419v2.9318c0,0-19.9931,0.1384-28.4717,6.0748\n	c-8.2555,5.7802-10.3883,21.931-4.3929,28.6906c6.6872,7.5395,21.6739,10.6397,31.6837,11.8093\n	c119.664,13.9824,293.6021-2.6707,341.7446-8.3345C701.2023,821.2982,721.1432,693.2562,712.4846,631.2673z M437.2106,66.5267\n	c-0.1946,33.6617-23.5064,50.7886-23.5064,50.7886c-6.2684-17.19-21.1558-25.3943-21.1558-25.3943\n	C408.2194,68.8708,437.2106,66.5267,437.2106,66.5267z M201.6607,103.3024c0,0-19.8527-14.6264-20.0184-43.3732\n	c0,0,24.6894,2.0019,38.035,21.6866C219.6773,81.6158,206.999,88.6223,201.6607,103.3024z M215.969,158.6876\n	c15.0275-4.1452,27.2506-3.8264,37.1033-1.1182c-15.9193,16.5729-7.4137,31.0502-3.2583,36.286\n	C221.2402,186.9178,215.969,158.6876,215.969,158.6876z M252.8369,194.4974c13.6546-17.1619,7.1357-30.6827,3.4758-35.9226\n	c24.8589,8.5877,33.2057,32.5095,33.2057,32.5095C274.4792,195.6167,262.4471,196.221,252.8369,194.4974z M308.1766,232.8661\n	c-4.1644,0.2111-22.0216-7.8084-21.8634-21.8635c0.1244-11.0539,40.2451-7.8568,42.1652,0\n	C330.8523,220.7164,312.3411,232.655,308.1766,232.8661z M327.2252,191.0843c0,0,8.7972-25.2037,35.2186-33.1565\n	c-12.424,19.1432-1.5466,31.7233,3.55,36.1478C356.055,196.2867,343.3752,195.9514,327.2252,191.0843z M369.7458,193.0825\n	c10.0879-20.4091-1.0878-32.4358-4.9794-35.7968c9.66-2.4378,21.5306-2.5917,36.0081,1.4018\n	C400.7746,158.6876,395.8536,185.0439,369.7458,193.0825z"/>\n'), wt = a('<path d="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"/>'), Rt = a('<path d="M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"/>'), Ct = a('<path d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"/>'), Et = a('<path d="M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM12 17.5L6.5 12H10v-2h4v2h3.5L12 17.5zM5.12 5l.81-1h12l.94 1H5.12z"/>'), $t = a('<path d="M2 20h20v-4H2v4zm2-3h2v2H4v-2zM2 4v4h20V4H2zm4 3H4V5h2v2zm-4 7h20v-4H2v4zm2-3h2v2H4v-2z"/>'), It = a('<path d="M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z"/>'), Tt = a('<path d="M7 2v11h3v9l7-12h-4l4-8z"/>'), Bt = a('<path d="M4 14h4v-4H4v4zm0 5h4v-4H4v4zM4 9h4V5H4v4zm5 5h12v-4H9v4zm0 5h12v-4H9v4zM9 5v4h12V5H9z"/>'), Mt = a('<path d="M21 3L3 10.53v.98l6.84 2.65L12.48 21h.98L21 3z"/>'), Vt = a('<path d="M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z"/>'), Dt = a('<path d="M3.55 18.54l1.41 1.41 1.79-1.8-1.41-1.41-1.79 1.8zM11 22.45h2V19.5h-2v2.95zM4 10.5H1v2h3v-2zm11-4.19V1.5H9v4.81C7.21 7.35 6 9.28 6 11.5c0 3.31 2.69 6 6 6s6-2.69 6-6c0-2.22-1.21-4.15-3-5.19zm5 4.19v2h3v-2h-3zm-2.76 7.66l1.79 1.8 1.41-1.41-1.8-1.79-1.4 1.4z"/>'), Lt = a('<path d="M5 14.5h14v-6H5v6zM11 .55V3.5h2V.55h-2zm8.04 2.5l-1.79 1.79 1.41 1.41 1.8-1.79-1.42-1.41zM13 22.45V19.5h-2v2.95h2zm7.45-3.91l-1.8-1.79-1.41 1.41 1.79 1.8 1.42-1.42zM3.55 4.46l1.79 1.79 1.41-1.41-1.79-1.79-1.41 1.41zm1.41 15.49l1.79-1.8-1.41-1.41-1.79 1.79 1.41 1.42z"/>'), At = a('<path d="M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9c.83 0 1.5-.67 1.5-1.5 0-.39-.15-.74-.39-1.01-.23-.26-.38-.61-.38-.99 0-.83.67-1.5 1.5-1.5H16c2.76 0 5-2.24 5-5 0-4.42-4.03-8-9-8zm-5.5 9c-.83 0-1.5-.67-1.5-1.5S5.67 9 6.5 9 8 9.67 8 10.5 7.33 12 6.5 12zm3-4C8.67 8 8 7.33 8 6.5S8.67 5 9.5 5s1.5.67 1.5 1.5S10.33 8 9.5 8zm5 0c-.83 0-1.5-.67-1.5-1.5S13.67 5 14.5 5s1.5.67 1.5 1.5S15.33 8 14.5 8zm3 4c-.83 0-1.5-.67-1.5-1.5S16.67 9 17.5 9s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"/>'), Ft = a('<path d="M14 6l-3.75 5 2.85 3.8-1.6 1.2C9.81 13.75 7 10 7 10l-6 8h22L14 6z"/>'), zt = a('<path d="M6 13c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm-3 .5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM6 5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm15 5.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM14 7c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0-3.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zm-11 10c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm7 7c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm0-17c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM10 7c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0 5.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm8 .5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm3 8.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM14 17c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 3.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm-4-12c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0 8.5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm4-4.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-4c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"/>'), Nt = a('<path d="M5 17.5c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5.67 1.5 1.5 1.5zM9 13c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0-4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zM3 21h18v-2H3v2zM5 9.5c.83 0 1.5-.67 1.5-1.5S5.83 6.5 5 6.5 3.5 7.17 3.5 8 4.17 9.5 5 9.5zm0 4c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5.67 1.5 1.5 1.5zM9 17c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm8-.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM3 3v2h18V3H3zm14 5.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zm0 4c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM13 9c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0 4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0 4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1z"/>'), _t = a('<path d="M17 16.99c-1.35 0-2.2.42-2.95.8-.65.33-1.18.6-2.05.6-.9 0-1.4-.25-2.05-.6-.75-.38-1.57-.8-2.95-.8s-2.2.42-2.95.8c-.65.33-1.17.6-2.05.6v1.95c1.35 0 2.2-.42 2.95-.8.65-.33 1.17-.6 2.05-.6s1.4.25 2.05.6c.75.38 1.57.8 2.95.8s2.2-.42 2.95-.8c.65-.33 1.18-.6 2.05-.6.9 0 1.4.25 2.05.6.75.38 1.58.8 2.95.8v-1.95c-.9 0-1.4-.25-2.05-.6-.75-.38-1.6-.8-2.95-.8zm0-4.45c-1.35 0-2.2.43-2.95.8-.65.32-1.18.6-2.05.6-.9 0-1.4-.25-2.05-.6-.75-.38-1.57-.8-2.95-.8s-2.2.43-2.95.8c-.65.32-1.17.6-2.05.6v1.95c1.35 0 2.2-.43 2.95-.8.65-.35 1.15-.6 2.05-.6s1.4.25 2.05.6c.75.38 1.57.8 2.95.8s2.2-.43 2.95-.8c.65-.35 1.15-.6 2.05-.6s1.4.25 2.05.6c.75.38 1.58.8 2.95.8v-1.95c-.9 0-1.4-.25-2.05-.6-.75-.38-1.6-.8-2.95-.8zm2.95-8.08c-.75-.38-1.58-.8-2.95-.8s-2.2.42-2.95.8c-.65.32-1.18.6-2.05.6-.9 0-1.4-.25-2.05-.6-.75-.37-1.57-.8-2.95-.8s-2.2.42-2.95.8c-.65.33-1.17.6-2.05.6v1.93c1.35 0 2.2-.43 2.95-.8.65-.33 1.17-.6 2.05-.6s1.4.25 2.05.6c.75.38 1.57.8 2.95.8s2.2-.43 2.95-.8c.65-.32 1.18-.6 2.05-.6.9 0 1.4.25 2.05.6.75.38 1.58.8 2.95.8V5.04c-.9 0-1.4-.25-2.05-.58zM17 8.09c-1.35 0-2.2.43-2.95.8-.65.35-1.15.6-2.05.6s-1.4-.25-2.05-.6c-.75-.38-1.57-.8-2.95-.8s-2.2.43-2.95.8c-.65.35-1.15.6-2.05.6v1.95c1.35 0 2.2-.43 2.95-.8.65-.32 1.18-.6 2.05-.6s1.4.25 2.05.6c.75.38 1.57.8 2.95.8s2.2-.43 2.95-.8c.65-.32 1.18-.6 2.05-.6.9 0 1.4.25 2.05.6.75.38 1.58.8 2.95.8V9.49c-.9 0-1.4-.25-2.05-.6-.75-.38-1.6-.8-2.95-.8z"/>'), Ut = a('<path d="M18.7 12.4c-.28-.16-.57-.29-.86-.4.29-.11.58-.24.86-.4 1.92-1.11 2.99-3.12 3-5.19-1.79-1.03-4.07-1.11-6 0-.28.16-.54.35-.78.54.05-.31.08-.63.08-.95 0-2.22-1.21-4.15-3-5.19C10.21 1.85 9 3.78 9 6c0 .32.03.64.08.95-.24-.2-.5-.39-.78-.55-1.92-1.11-4.2-1.03-6 0 0 2.07 1.07 4.08 3 5.19.28.16.57.29.86.4-.29.11-.58.24-.86.4-1.92 1.11-2.99 3.12-3 5.19 1.79 1.03 4.07 1.11 6 0 .28-.16.54-.35.78-.54-.05.32-.08.64-.08.96 0 2.22 1.21 4.15 3 5.19 1.79-1.04 3-2.97 3-5.19 0-.32-.03-.64-.08-.95.24.2.5.38.78.54 1.92 1.11 4.2 1.03 6 0-.01-2.07-1.08-4.08-3-5.19zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"/>'), Gt = a('<path d="M12 10c-3.86 0-7 3.14-7 7h2c0-2.76 2.24-5 5-5s5 2.24 5 5h2c0-3.86-3.14-7-7-7zm0-4C5.93 6 1 10.93 1 17h2c0-4.96 4.04-9 9-9s9 4.04 9 9h2c0-6.07-4.93-11-11-11z"/>'), Ht = a('<path d="M17.66 8L12 2.35 6.34 8C4.78 9.56 4 11.64 4 13.64s.78 4.11 2.34 5.67 3.61 2.35 5.66 2.35 4.1-.79 5.66-2.35S20 15.64 20 13.64 19.22 9.56 17.66 8zM6 14c.01-2 .62-3.27 1.76-4.4L12 5.27l4.24 4.38C17.38 10.77 17.99 12 18 14H6z"/>'), Kt = a('<path d="M15.96 10.29l-2.75 3.54-1.96-2.36L8.5 15h11l-3.54-4.71zM3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z"/>'), Yt = a('<path d="M21 5v6.59l-3-3.01-4 4.01-4-4-4 4-3-3.01V5c0-1.1.9-2 2-2h14c1.1 0 2 .9 2 2zm-3 6.42l3 3.01V19c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2v-6.58l3 2.99 4-4 4 4 4-3.99z"/>'), Xt = a('<path d="M14 5c0-1.1-.9-2-2-2h-1V2c0-.55-.45-1-1-1H6c-.55 0-1 .45-1 1v1H4c-1.1 0-2 .9-2 2v15c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2h8V5h-8zm-2 13h-2v-2h2v2zm0-9h-2V7h2v2zm4 9h-2v-2h2v2zm0-9h-2V7h2v2zm4 9h-2v-2h2v2zm0-9h-2V7h2v2z"/>'), Wt = a('<path d="M3 9h4V5H3v4zm0 5h4v-4H3v4zm5 0h4v-4H8v4zm5 0h4v-4h-4v4zM8 9h4V5H8v4zm5-4v4h4V5h-4zm5 9h4v-4h-4v4zM3 19h4v-4H3v4zm5 0h4v-4H8v4zm5 0h4v-4h-4v4zm5 0h4v-4h-4v4zm0-14v4h4V5h-4z"/>'), Zt = a('<path d="M5 2c0-.55-.45-1-1-1s-1 .45-1 1v4H1v6h6V6H5V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2H9v2zm-8 0c0 1.3.84 2.4 2 2.82V23h2v-4.18C6.16 18.4 7 17.3 7 16v-2H1v2zM21 6V2c0-.55-.45-1-1-1s-1 .45-1 1v4h-2v6h6V6h-2zm-8-4c0-.55-.45-1-1-1s-1 .45-1 1v4H9v6h6V6h-2V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2h-6v2z"/>'), qt = a('<path d="M17 20.41L18.41 19 15 15.59 13.59 17 17 20.41zM7.5 8H11v5.59L5.59 19 7 20.41l6-6V8h3.5L12 3.5 7.5 8z"/>'), Jt = a('<path d="M19.51 3.08L3.08 19.51c.09.34.27.65.51.9.25.24.56.42.9.51L20.93 4.49c-.19-.69-.73-1.23-1.42-1.41zM11.88 3L3 11.88v2.83L14.71 3h-2.83zM5 3c-1.1 0-2 .9-2 2v2l4-4H5zm14 18c.55 0 1.05-.22 1.41-.59.37-.36.59-.86.59-1.41v-2l-4 4h2zm-9.71 0h2.83L21 12.12V9.29L9.29 21z"/>'), Qt = a('<path d="M22 11V3h-7v3H9V3H2v8h7V8h2v10h4v3h7v-8h-7v3h-2V8h2v3z"/>'), te = a('<path d="M23 7V1h-6v2H7V1H1v6h2v10H1v6h6v-2h10v2h6v-6h-2V7h2zM3 3h2v2H3V3zm2 18H3v-2h2v2zm12-2H7v-2H5V7h2V5h10v2h2v10h-2v2zm4 2h-2v-2h2v2zM19 5V3h2v2h-2zm-5.27 9h-3.49l-.73 2H7.89l3.4-9h1.4l3.41 9h-1.63l-.74-2zm-3.04-1.26h2.61L12 8.91l-1.31 3.83z"/>'), ee = a('<path d="M15 21h2v-2h-2v2zm4-12h2V7h-2v2zM3 5v14c0 1.1.9 2 2 2h4v-2H5V5h4V3H5c-1.1 0-2 .9-2 2zm16-2v2h2c0-1.1-.9-2-2-2zm-8 20h2V1h-2v22zm8-6h2v-2h-2v2zM15 5h2V3h-2v2zm4 8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2z"/>'), ne = a('<path d="M15 21h2v-2h-2v2zm4-12h2V7h-2v2zM3 5v14c0 1.1.9 2 2 2h4v-2H5V5h4V3H5c-1.1 0-2 .9-2 2zm16-2v2h2c0-1.1-.9-2-2-2zm-8 20h2V1h-2v22zm8-6h2v-2h-2v2zM15 5h2V3h-2v2zm4 8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2z"/>'), re = a('<path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>'), ie = a('\n    <path d="M9,12c0,1.66,1.34,3,3,3s3-1.34,3-3s-1.34-3-3-3S9,10.34,9,12z"/>\n    <path d="M8,10V8H5.09C6.47,5.61,9.05,4,12,4c3.72,0,6.85,2.56,7.74,6h2.06c-0.93-4.56-4.96-8-9.8-8C8.73,2,5.82,3.58,4,6.01V4H2v6\n        H8z"/>\n    <path d="M16,14v2h2.91c-1.38,2.39-3.96,4-6.91,4c-3.72,0-6.85-2.56-7.74-6H2.2c0.93,4.56,4.96,8,9.8,8c3.27,0,6.18-1.58,8-4.01V20\n        h2v-6H16z"/>\n'), ae = a('<path d="M17 16l-4-4V8.82C14.16 8.4 15 7.3 15 6c0-1.66-1.34-3-3-3S9 4.34 9 6c0 1.3.84 2.4 2 2.82V12l-4 4H3v5h5v-3.05l4-4.2 4 4.2V21h5v-5h-4z"/>'), oe = a('<path d="M12.75 3h-1.5L6.5 14h2.1l.9-2.2h5l.9 2.2h2.1L12.75 3zm-2.62 7L12 4.98 13.87 10h-3.74zm10.37 8l-3-3v2H5v2h12.5v2l3-3z"/>'), ce = a('\n<g class="cylinder">\n<path d="M 12 0 C 7.636719 0 3 1.226562 3 3.5 L 3 20.5 C 3 22.773438 7.636719 24 12 24 C 16.363281 24 21 22.773438 21 20.5 L 21 3.5 C 21 1.226562 16.363281 0 12 0 Z M 20 19.121094 C 19.921875 19.140625 19.84375 19.171875 19.78125 19.230469 C 19.574219 19.414062 19.554688 19.726562 19.738281 19.933594 C 19.914062 20.128906 20 20.320312 20 20.5 C 20 21.542969 16.957031 23 12 23 C 7.042969 23 4 21.542969 4 20.5 C 4 20.320312 4.085938 20.128906 4.261719 19.933594 C 4.445312 19.726562 4.425781 19.410156 4.21875 19.226562 C 4.15625 19.171875 4.078125 19.140625 4 19.121094 L 4 5.160156 C 5.59375 6.363281 8.863281 7 12 7 C 15.136719 7 18.40625 6.363281 20 5.160156 Z M 12 6 C 7.042969 6 4 4.542969 4 3.5 C 4 2.457031 7.042969 1 12 1 C 16.957031 1 20 2.457031 20 3.5 C 20 4.542969 16.957031 6 12 6 Z M 12 6 "/>\n</g>\n'), se = a('<path d="M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z"/>'), ue = a('<defs><path id="a" d="M0 0h24v24H0V0z"/></defs><clipPath id="b"><use xlink:href="#a" overflow="visible"/></clipPath><path clip-path="url(#b)" d="M7.24 8.75c-.26-.48-.39-1.03-.39-1.67 0-.61.13-1.16.4-1.67.26-.5.63-.93 1.11-1.29.48-.35 1.05-.63 1.7-.83.66-.19 1.39-.29 2.18-.29.81 0 1.54.11 2.21.34.66.22 1.23.54 1.69.94.47.4.83.88 1.08 1.43.25.55.38 1.15.38 1.81h-3.01c0-.31-.05-.59-.15-.85-.09-.27-.24-.49-.44-.68-.2-.19-.45-.33-.75-.44-.3-.1-.66-.16-1.06-.16-.39 0-.74.04-1.03.13-.29.09-.53.21-.72.36-.19.16-.34.34-.44.55-.1.21-.15.43-.15.66 0 .48.25.88.74 1.21.38.25.77.48 1.41.7H7.39c-.05-.08-.11-.17-.15-.25zM21 12v-2H3v2h9.62c.18.07.4.14.55.2.37.17.66.34.87.51.21.17.35.36.43.57.07.2.11.43.11.69 0 .23-.05.45-.14.66-.09.2-.23.38-.42.53-.19.15-.42.26-.71.35-.29.08-.63.13-1.01.13-.43 0-.83-.04-1.18-.13s-.66-.23-.91-.42c-.25-.19-.45-.44-.59-.75-.14-.31-.25-.76-.25-1.21H6.4c0 .55.08 1.13.24 1.58.16.45.37.85.65 1.21.28.35.6.66.98.92.37.26.78.48 1.22.65.44.17.9.3 1.38.39.48.08.96.13 1.44.13.8 0 1.53-.09 2.18-.28s1.21-.45 1.67-.79c.46-.34.82-.77 1.07-1.27s.38-1.07.38-1.71c0-.6-.1-1.14-.31-1.61-.05-.11-.11-.23-.17-.33H21z"/>'), le = a('<path d="M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z"/>'), fe = a('<path d="M12 11.55C9.64 9.35 6.48 8 3 8v11c3.48 0 6.64 1.35 9 3.55 2.36-2.19 5.52-3.55 9-3.55V8c-3.48 0-6.64 1.35-9 3.55zM12 8c1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3 1.34 3 3 3z"/>'), he = a('<path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2z"/>'), pe = a('<path d="M14.4 6L14 4H5v17h2v-7h5.6l.4 2h7V6z"/>'), de = a('<path d="M2,4 L2,20Z M6,10 L16,10 L16,14 L6,14Z" stroke-width="1" />'), ve = a('\n    <path d="M12,4 L12,20Z M6,10 L18,10 L18,14 L6,14Z" stroke-width="1" />\n'), ye = a('<path d="M20,4 L20,20Z M6,10 L16,10 L16,14 L6,14Z" stroke-width="1" />'), ge = a('<path d="M4,4 L20,4Z M10,8 L10,16 L14,16 L14,8Z" stroke-width="1" />'), me = a('<path d="M4,20 L20,20Z M10,8 L10,16 L14,16 L14,8Z" stroke-width="1" />'), be = a('<path d="M4,12 L20,12Z M10,8 L10,16 L14,16 L14,8Z" stroke-width="1" />'), ke = a('\n    <path d="M20,4 L20,20Z M2,4 L2,20Z M6,10 L16,10 L16,14 L6,14Z" stroke-width="1" />\n'), Oe = a('\n    <path d="M4,4 L20,4Z M4,20 L20,20Z M10,8 L10,16 L14,16 L14,8Z" stroke-width="1" />\n'), xe = a('<path d="M18 3v2h-2V3H8v2H6V3H4v18h2v-2h2v2h8v-2h2v2h2V3h-2zM8 17H6v-2h2v2zm0-4H6v-2h2v2zm0-4H6V7h2v2zm10 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V7h2v2z"/>'), je = a('<path d="M20 5H4c-1.1 0-1.99.9-1.99 2L2 17c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm-9 3h2v2h-2V8zm0 3h2v2h-2v-2zM8 8h2v2H8V8zm0 3h2v2H8v-2zm-1 2H5v-2h2v2zm0-3H5V8h2v2zm9 7H8v-2h8v2zm0-4h-2v-2h2v2zm0-3h-2V8h2v2zm3 3h-2v-2h2v2zm0-3h-2V8h2v2z"/>'), Se = a('<path d="M4 8h4V4H4v4zm6 12h4v-4h-4v4zm-6 0h4v-4H4v4zm0-6h4v-4H4v4zm6 0h4v-4h-4v4zm6-10v4h4V4h-4zm-6 4h4V4h-4v4zm6 6h4v-4h-4v4zm0 6h4v-4h-4v4z"/>'), Pe = a('<path d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"/>'), we = a('<path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"/>'), Re = a('\n        <path d="M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z"/>\n    '), Ce = a('\n    <g transform="translate(4.000003875248012, 4.000001937624006)">\n        <path stroke="currentColor" d="M 7.501491970838878 -0.0000015572448855733659Q 14.336036333057622 7.389304433496911 15.674208571053226 11.025537025755131Q 17.012380809048864 14.661769618013372 12.854180922821438 14.544928811787997L 12.854180922821438 16.99999278410904L 3.2146550430021494 16.99999278410904L 3.2146550430021494 14.544928811787997Q -0.8480130988910353 14.661769618013372 0.22369613306813782 11.025537025755131Q 1.295405365027311 7.389304433496911 7.501491970838878 -0.0000015572448855733659Z M 7.501491970838878 -0.0000015572448855733659M 7.043097362212707 10.615180199186797L 7.043097362212707 2.029497238417552Q 2.4235653311211847 7.389304433496911 1.2143202542326725 11.099378313047254Q 0.22369613306813782 14.380813978493594 4.269842778971384 13.709709450113499L 4.269842778971384 16.233605781316655L 11.751764459057853 16.233605781316655L 11.751764459057853 13.709709450113499Q 15.84146041516868 14.140123940309786 14.670231046646997 10.775846698306177Q 14.195747591990225 9.593976493057127 8.077664264490855 2.029497238417552L 8.077664264490855 10.615180199186797L 7.043097362212707 10.615180199186797Z"/>\n    </g>\n'), Ee = a('\n        <path d="M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z"/>\n    '), $e = a('\n        <path d="M18.5 12c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM5 9v6h4l5 5V4L9 9H5z"/>\n    '), Ie = a('\n    <path d="M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z"/>\n'), Te = a('\n    <path d="M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z"/>\n'), Be = a('<path d="M14 7l-5 5 5 5V7z"/>'), Me = a('\n        <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2zM7 17h10V7H7v10zm2-8h6v6H9V9z"/>\n    '), Ve = a('<path d="M10 17l5-5-5-5v10z"/>'), De = a('<path d="M11.99 18.54l-7.37-5.73L3 14.07l9 7 9-7-1.63-1.27-7.38 5.74zM12 16l7.36-5.73L21 9l-9-7-9 7 1.63 1.27L12 16z"/>'), Le = a('<polygon points="11,2 13,2 13,7 21,7 21,10 13,10 13,14 18,14 18,17 13,17 13,22 11,22 11,17 6,17 6,14 11,14 11,10 3,10 3,7 11,7"/>'), Ae = a('<path d="M4,22H2V2h2V22z M22,7H6v3h16V7z M16,14H6v3h10V14z"/>'), Fe = a('<path d="M20,2h2v20h-2V2z M2,10h16V7H2V10z M8,17h10v-3H8V17z"/>'), ze = a('<path d="M22,22H2v-2h20V22z M10,2H7v16h3V2z M17,8h-3v10h3V8z"/>'), Ne = a('<polygon points="22,11 17,11 17,6 14,6 14,11 10,11 10,3 7,3 7,11 1.84,11 1.84,13 7,13 7,21 10,21 10,13 14,13 14,18 17,18 17,13 22,13"/>'), _e = a('<path d="M22,2v2H2V2H22z M7,22h3V6H7V22z M14,16h3V6h-3V16z"/>'), Ue = a('<path d="M6.99 11L3 15l3.99 4v-3H14v-2H6.99v-3zM21 9l-3.99-4v3H10v2h7.01v3L21 9z"/>'), Ge = a('<path d="M7.11 8.53L5.7 7.11C4.8 8.27 4.24 9.61 4.07 11h2.02c.14-.87.49-1.72 1.02-2.47zM6.09 13H4.07c.17 1.39.72 2.73 1.62 3.89l1.41-1.42c-.52-.75-.87-1.59-1.01-2.47zm1.01 5.32c1.16.9 2.51 1.44 3.9 1.61V17.9c-.87-.15-1.71-.49-2.46-1.03L7.1 18.32zM13 4.07V1L8.45 5.55 13 10V6.09c2.84.48 5 2.94 5 5.91s-2.16 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93s-3.05-7.44-7-7.93z"/>'), He = a(`
        <path d="M7.11 8.53L5.7 7.11C4.8 8.27 4.24 9.61 4.07 11h2.02c.14-.87.49-1.72 1.02-2.47zM6.09 13H4.07c.17 1.39.72 2.73 1.62 3.89l1.41-1.42c-.52-.75-.87-1.59-1.01-2.47zm1.01 5.32c1.16.9 2.51 1.44 3.9 1.61V17.9c-.87-.15-1.71-.49-2.46-1.03L7.1 18.32zM13 4.07V1L8.45 5.55 13 10V6.09c2.84.48 5 2.94 5 5.91s-2.16 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93s-3.05-7.44-7-7.93z" stroke='white' stroke-width="0.5" />
    `), Ke = a('<path d="M22,2v2H2V2H22z M7,10.5v3h10v-3H7z M2,20v2h20v-2H2z"/>'), Ye = a('<path d="M4,22H2V2h2V22z M22,2h-2v20h2V2z M13.5,7h-3v10h3V7z"/>'), Xe = a('<path d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z"/>'), We = a('<rect fill-rule="evenodd" height="2" width="16" x="4" y="11"/>'), Ze = a('<path d="M12 2L4.5 20.29l.71.71L12 18l6.79 3 .71-.71z"/>'), qe = a('<path d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-5 14H4v-4h11v4zm0-5H4V9h11v4zm5 5h-4V9h4v9z"/>'), Je = a('<path d="M19 9l1.25-2.75L23 5l-2.75-1.25L19 1l-1.25 2.75L15 5l2.75 1.25L19 9zm-7.5.5L9 4 6.5 9.5 1 12l5.5 2.5L9 20l2.5-5.5L17 12l-5.5-2.5zM19 15l-1.25 2.75L15 19l2.75 1.25L19 23l1.25-2.75L23 19l-2.75-1.25L19 15z"/>'), Qe = a('<path d="M3 3h8v8H3zm10 0h8v8h-8zM3 13h8v8H3zm15 0h-2v3h-3v2h3v3h2v-3h3v-2h-3z"/>'), tn = a('<path d="M21 6H3c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 10H3V8h2v4h2V8h2v4h2V8h2v4h2V8h2v4h2V8h2v8z"/>'), en = a('<path d="M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"/>'), nn = a('<path d="M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"/>'), rn = a('<path d="M18 24h-6.55c-1.08 0-2.14-.45-2.89-1.23l-7.3-7.61 2.07-1.83c.62-.55 1.53-.66 2.26-.27L8 14.34V4.79c0-1.38 1.12-2.5 2.5-2.5.17 0 .34.02.51.05.09-1.3 1.17-2.33 2.49-2.33.86 0 1.61.43 2.06 1.09.29-.12.61-.18.94-.18 1.38 0 2.5 1.12 2.5 2.5v.28c.16-.03.33-.05.5-.05 1.38 0 2.5 1.12 2.5 2.5V20c0 2.21-1.79 4-4 4zM4.14 15.28l5.86 6.1c.38.39.9.62 1.44.62H18c1.1 0 2-.9 2-2V6.15c0-.28-.22-.5-.5-.5s-.5.22-.5.5V12h-2V3.42c0-.28-.22-.5-.5-.5s-.5.22-.5.5V12h-2V2.51c0-.28-.22-.5-.5-.5s-.5.22-.5.5V12h-2V4.79c0-.28-.22-.5-.5-.5s-.5.23-.5.5v12.87l-5.35-2.83-.51.45z"/>'), an = a('<path d="M18.85,10.39l1.06-1.06c0.78-0.78,0.78-2.05,0-2.83L18.5,5.09c-0.78-0.78-2.05-0.78-2.83,0l-1.06,1.06L18.85,10.39z M14.61,11.81L7.41,19H6v-1.41l7.19-7.19L14.61,11.81z M13.19,7.56L4,16.76V21h4.24l9.19-9.19L13.19,7.56L13.19,7.56z M19,17.5 c0,2.19-2.54,3.5-5,3.5c-0.55,0-1-0.45-1-1s0.45-1,1-1c1.54,0,3-0.73,3-1.5c0-0.47-0.48-0.87-1.23-1.2l1.48-1.48 C18.32,15.45,19,16.29,19,17.5z M4.58,13.35C3.61,12.79,3,12.06,3,11c0-1.8,1.89-2.63,3.56-3.36C7.59,7.18,9,6.56,9,6 c0-0.41-0.78-1-2-1C5.74,5,5.2,5.61,5.17,5.64C4.82,6.05,4.19,6.1,3.77,5.76C3.36,5.42,3.28,4.81,3.62,4.38C3.73,4.24,4.76,3,7,3 c2.24,0,4,1.32,4,3c0,1.87-1.93,2.72-3.64,3.47C6.42,9.88,5,10.5,5,11c0,0.31,0.43,0.6,1.07,0.86L4.58,13.35z" />');
          function on(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function cn(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? on(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : on(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          var sn = { fullscreen: $ };
          e.a = cn(cn({}, sn), {}, { draw: an, pantool: rn, left_hide: en, right_hide: nn, straighten: tn, plugin: Qe, auto_awesome: Je, web: qe, navigation: Ze, delete_forever: Xe, horizontal_rule: We, open_in_full: function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
            return a(`<polygon points="21,11 21,3 13,3 16.29,6.29 6.29,16.29 3,13 3,21 11,21 7.71,17.71 17.71,7.71" transform='`.concat(t2, `' stroke='white' stroke-width="0.5" />`), { width: 20, height: 20 });
          }, rotate: He, align_horizontal_center: Le, align_horizontal_left: Ae, align_horizontal_right: Fe, align_vertical_bottom: ze, align_vertical_center: Ne, align_vertical_top: _e, vertical_distribute: Ke, horizontal_distribute: Ye, rotate_left: Ge, swap_horiz: Ue, arrow_right: Ve, group: Me, volume_down: $e, arrowLeft: Be, volume_up: Ie, volume_off: Te, pentool: Ce, launch: Re, apps: Se, outline_rect: Pe, outline_circle: we, keyboard: je, local_movie: xe, same_height: Oe, same_width: ke, layers: De, middle: be, bottom: me, top: ge, right: ye, center: ve, left: de, flag: pe, lens: he, local_library: fe, italic: le, strikethrough: ue, underline: se, cylinder: ce, text_rotate: oe, device_hub: ae, control_point: re, flip_camera: ie, flipY: ne, flip: ee, account_tree: Qt, format_shapes: te, merge: qt, texture: Jt, settings_input_component: Zt, view_comfy: Wt, camera_roll: Xt, broken_image: Yt, shadow: Kt, opacity: Ht, looks: Gt, vintage: Ut, waves: _t, blur_linear: Nt, blur: zt, landscape: Ft, palette: At, diffuse: Lt, specular: Dt, photo: Vt, near_me: Mt, view_list: Bt, flash_on: Tt, doc: It, storage: $t, archive: Et, file_copy: Ct, gps_fixed: Rt, refresh: wt, cat: Pt, shuffle: St, replay: jt, speed: xt, alternate_reverse: Ot, alternate: kt, note: vt, rect: dt, circle: pt, color_lens: ht, cube: ft, polygon: lt, star: ut, dahaze: st, brush: ct, expand: ot, list: it, grid: at, align_center: tt, align_justify: et, align_left: nt, align_right: rt, color: Q, size: J, edit: q, outline_image: Z, ballot: Y, shape: K, scatter: H, transform: G, gradient: U, close: _, build: N, code: z, autorenew: F, play: L, pause: A, skip_next: yt, skip_prev: gt, fast_forward: mt, fast_rewind: bt, filter: D, input: V, timer: B, title: T, paint: I, border_all: E, border_inner: $, check: C, video: Ee, arrowRight: R, screen: w, repeat: P, remove2: S, setting: j, image: x2, artboard: O, folder: k, publish: b, add_note: m, add: g, save: v, export: y2, redo: d, undo: p, lock: h, lock_open: W, remove: l, copy: f, visible: u, add_box: s, add_circle: X, create_folder: c, chevron_right: o, chevron_left: M });
        }, function(t, e, n) {
          var r = n(95), i = n(131), a = n(84), o = n(96);
          t.exports = function(t2, e2) {
            return r(t2) || i(t2, e2) || a(t2, e2) || o();
          }, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return g;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(10), s = n.n(c), u = n(5), l = n.n(u), f = n(6), h = n.n(f), p = n(1), d = n.n(p), v = n(71);
          n(87), n(89), n(86), n(88);
          function y2(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var g = function(t2) {
            l()(n2, t2);
            var e2 = y2(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initialize", value: function() {
              s()(d()(n2.prototype), "initialize", this).call(this), this.$editor.registerI18nMessageWithLocale(this.initializeI18nMessage());
            } }, { key: "initializeI18nMessage", value: function() {
              return {};
            } }, { key: "$editor", get: function() {
              return this.parent.$editor;
            } }, { key: "$store", get: function() {
              return this.$editor.store || this.parent.$store;
            } }, { key: "$i18n", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n3 = arguments.length > 2 ? arguments[2] : void 0;
              return this.$editor.getI18nMessage(t3, e3, n3);
            } }, { key: "$initI18n", value: function(t3) {
              return this.$editor.initI18nMessage(t3);
            } }, { key: "$config", get: function() {
              return this.$editor.config;
            } }, { key: "$selection", get: function() {
              return this.$editor.selection;
            } }, { key: "$viewport", get: function() {
              return this.$editor.viewport;
            } }, { key: "$snapManager", get: function() {
              return this.$editor.snapManager;
            } }, { key: "$timeline", get: function() {
              return this.$editor.timeline;
            } }, { key: "$history", get: function() {
              return this.$editor.history;
            } }, { key: "$shortcuts", get: function() {
              return this.$editor.shortcuts;
            } }, { key: "$keyboardManager", get: function() {
              return this.$editor.keyboardManager;
            } }, { key: "$storageManager", get: function() {
              return this.$editor.storageManager;
            } }, { key: "$menuManager", get: function() {
              return this.$editor.menuItemManager;
            } }, { key: "command", value: function(t3, e3) {
              for (var n3 = arguments.length, r2 = new Array(n3 > 2 ? n3 - 2 : 0), i2 = 2; i2 < n3; i2++)
                r2[i2 - 2] = arguments[i2];
              return this.$editor.isPointerUp ? this.emit.apply(this, ["history.".concat(t3), e3].concat(r2)) : this.emit.apply(this, [t3].concat(r2));
            } }, { key: "$theme", value: function(t3) {
              return this.$editor.themeValue(t3);
            } }]), n2;
          }(v.a);
        }, function(t, e, n) {
          "use strict";
          n.r(e), n.d(e, "round", function() {
            return f;
          }), n.d(e, "degreeToRadian", function() {
            return h;
          }), n.d(e, "div", function() {
            return p;
          }), n.d(e, "radianToDegree", function() {
            return d;
          }), n.d(e, "getXInCircle", function() {
            return v;
          }), n.d(e, "getYInCircle", function() {
            return y2;
          }), n.d(e, "getXYInCircle", function() {
            return g;
          }), n.d(e, "getDist", function() {
            return m;
          }), n.d(e, "getPointBetweenVerties", function() {
            return b;
          }), n.d(e, "vertiesMap", function() {
            return k;
          }), n.d(e, "makeGuidePoint", function() {
            return j;
          }), n.d(e, "getVertiesMaxX", function() {
            return S;
          }), n.d(e, "getVertiesMaxY", function() {
            return P;
          }), n.d(e, "getVertiesMinX", function() {
            return w;
          }), n.d(e, "getVertiesCenterX", function() {
            return R;
          }), n.d(e, "getVertiesMinY", function() {
            return C;
          }), n.d(e, "getVertiesCenterY", function() {
            return E;
          }), n.d(e, "calculateAngle", function() {
            return $;
          }), n.d(e, "calculateAngleForVec3", function() {
            return I;
          }), n.d(e, "calculateRotationOriginMat4", function() {
            return T;
          }), n.d(e, "calculateMatrix", function() {
            return B;
          }), n.d(e, "calculateMatrixInverse", function() {
            return M;
          }), n.d(e, "calculateAnglePointDistance", function() {
            return V;
          }), n.d(e, "calculateAngle360", function() {
            return D;
          }), n.d(e, "uuid", function() {
            return A;
          }), n.d(e, "uuidShort", function() {
            return F;
          }), n.d(e, "cubicBezier", function() {
            return U;
          }), n.d(e, "getGradientLine", function() {
            return G;
          }), n.d(e, "CCW", function() {
            return H;
          }), n.d(e, "incircle", function() {
            return K;
          }), n.d(e, "initPolygon", function() {
            return Y;
          }), n.d(e, "Deluanay", function() {
            return W;
          }), n.d(e, "generate_sample_points", function() {
            return Z;
          }), n.d(e, "getCenterInTriangle", function() {
            return q;
          }), n.d(e, "normalize", function() {
            return Q;
          }), n.d(e, "isAPointLeftOfVectorOrOnTheLine", function() {
            return tt;
          }), n.d(e, "getConvexHull", function() {
            return et;
          });
          var r = n(15), i = n.n(r), a = n(12), o = n.n(a), c = (n(70), n(9)), s = (n(21), n(44)), u = n(8), l = { create: function(t2, e2, n2) {
            return { x: t2 || 0, y: e2 || 0, z: n2 || 0 };
          }, add: function(t2, e2) {
            return { x: t2.x + e2.x, y: t2.y + e2.y, z: t2.z + e2.z };
          }, sub: function(t2, e2) {
            return { x: t2.x - e2.x, y: t2.y - e2.y, z: t2.z - e2.z };
          }, mul: function(t2, e2) {
            return { x: t2.x * e2.x, y: t2.y * e2.y, z: t2.z * e2.z };
          }, div: function(t2, e2) {
            return { x: t2.x / e2.x, y: t2.y / e2.y, z: t2.z / e2.z };
          }, muls: function(t2, e2) {
            return { x: t2.x * e2, y: t2.y * e2, z: t2.z * e2 };
          }, divs: function(t2, e2) {
            return { x: t2.x / e2, y: t2.y / e2, z: t2.z / e2 };
          }, len: function(t2) {
            return Math.sqrt(t2.x * t2.x + t2.y * t2.y + t2.z * t2.z);
          }, dot: function(t2, e2) {
            return t2.x * e2.x + t2.y * e2.y + t2.z * e2.z;
          }, cross2d: function(t2, e2) {
            return t2.x * e2.y - t2.y * e2.x;
          }, cross: function(t2, e2) {
            return { x: t2.y * e2.z - t2.z * e2.y, y: t2.z * e2.x - t2.x * e2.z, z: t2.x * e2.y - t2.y * e2.x };
          }, normalize: function(t2) {
            return l.divs(t2, l.len(t2));
          }, ang: function(t2, e2) {
            return Math.acos(l.dot(t2, e2) / (l.len(t2) * l.len(e2)));
          }, copy: function(t2) {
            return { x: t2.x, y: t2.y, z: t2.z };
          }, equal: function(t2, e2) {
            return t2.x === e2.x && t2.y === e2.y && t2.z === e2.z;
          }, rotate: function(t2, e2) {
            var n2 = t2.x, r2 = t2.y, i2 = t2.z, a2 = e2.x / 2, o2 = e2.y / 2, c2 = e2.z / 2, s2 = Math.cos(a2), u2 = Math.cos(o2), l2 = Math.cos(c2), f2 = Math.sin(a2), h2 = Math.sin(o2), p2 = Math.sin(c2), d2 = s2 * u2 * l2 + -f2 * h2 * p2, v2 = f2 * u2 * l2 - -s2 * h2 * p2, y3 = s2 * h2 * l2 + f2 * u2 * -p2, g2 = s2 * u2 * p2 - -f2 * h2 * l2;
            return { x: n2 * (1 - 2 * (y3 * y3 + g2 * g2)) + r2 * (2 * (v2 * y3 - g2 * d2)) + i2 * (2 * (v2 * g2 + y3 * d2)), y: n2 * (2 * (v2 * y3 + g2 * d2)) + r2 * (1 - 2 * (v2 * v2 + g2 * g2)) + i2 * (2 * (y3 * g2 - v2 * d2)), z: n2 * (2 * (v2 * g2 - y3 * d2)) + r2 * (2 * (g2 * y3 + v2 * d2)) + i2 * (1 - 2 * (v2 * v2 + y3 * y3)) };
          } };
          function f(t2, e2) {
            return e2 = Object(u.isUndefined)(e2) ? 1 : e2, Math.round(t2 * e2) / e2;
          }
          function h(t2) {
            return t2 * (Math.PI / 180);
          }
          function p(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
            return t2 === 0 ? 0 : t2 / e2;
          }
          function d(t2) {
            var e2 = t2 * (180 / Math.PI);
            return e2 < 0 && (e2 = 360 + e2), e2;
          }
          function v(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
            return n2 + e2 * Math.cos(h(t2));
          }
          function y2(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
            return n2 + e2 * Math.sin(h(t2));
          }
          function g(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
            return { x: v(t2, e2, n2), y: y2(t2, e2, r2) };
          }
          function m(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
            return c.c.distance([t2, e2], [n2, r2]);
          }
          function b(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
            return c.d.lerp([], t2, e2, 1 + n2 / c.d.dist(t2, e2));
          }
          function k(t2, e2) {
            return t2.length === 1 ? [c.d.transformMat4([], t2[0], e2)] : t2.length === 2 ? [c.d.transformMat4([], t2[0], e2), c.d.transformMat4([], t2[1], e2)] : t2.length === 3 ? [c.d.transformMat4([], t2[0], e2), c.d.transformMat4([], t2[1], e2), c.d.transformMat4([], t2[2], e2)] : t2.length === 4 ? [c.d.transformMat4([], t2[0], e2), c.d.transformMat4([], t2[1], e2), c.d.transformMat4([], t2[2], e2), c.d.transformMat4([], t2[3], e2)] : t2.length === 5 ? [c.d.transformMat4([], t2[0], e2), c.d.transformMat4([], t2[1], e2), c.d.transformMat4([], t2[2], e2), c.d.transformMat4([], t2[3], e2), c.d.transformMat4([], t2[4], e2)] : t2.map(function(t3) {
              return c.d.transformMat4([], t3, e2);
            });
          }
          function O(t2, e2, n2, r2) {
            return [t2, [e2[0], t2[1], e2[2]], n2, Math.abs(t2[0] - e2[0]), r2];
          }
          function x2(t2, e2, n2, r2) {
            return [[e2[0], t2[1], t2[2]], e2, n2, Math.abs(t2[1] - e2[1]), r2];
          }
          function j(t2, e2) {
            var n2 = t2, r2 = e2, a2 = false;
            t2[4][0] - e2[4][0] > 0 && (n2 = e2, r2 = t2, a2 = true);
            var s2 = c.d.lerp([], n2[1], n2[2], 0.5), u2 = c.d.lerp([], r2[0], r2[3], 0.5), l2 = [];
            return r2[0][1] <= s2[1] && s2[1] <= r2[3][1] ? l2.push(O(s2, u2, "x", null)) : r2[0][1] <= n2[1][1] ? r2[3][0] <= n2[1][0] && n2[1][0] <= r2[2][0] ? l2.push(x2(r2[3], [r2[3][0], n2[1][1], n2[1][2]], "y", null)) : l2.push(O(n2[1], u2, "x", r2[3])) : n2[3][0] <= r2[0][0] && r2[0][0] <= n2[2][0] ? l2.push(x2(n2[3], r2[0], "y")) : r2[3][0] <= n2[0][0] && n2[0][0] <= r2[2][0] ? l2.push(x2([r2[0][0], n2[3][1], n2[3][2]], r2[0], "y")) : r2[3][0] <= n2[1][0] && n2[1][0] <= r2[2][0] ? l2.push(x2(r2[3], [r2[3][0], n2[1][1], n2[1][2]], "y")) : l2.push(O(n2[2], u2, "x", r2[0])), l2.sort(function(t3, e3) {
              return t3[3] - e3[3];
            }), function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
              if (e3 === false)
                return t3;
              var n3 = o()(t3, 7), r3 = n3[0], i2 = n3[1], a3 = n3[2], c2 = n3[3], s3 = n3[4], u3 = n3[5], l3 = n3[6];
              return s3 ? [[i2[0], s3[1], i2[2]], [r3[0], s3[1], r3[2]], a3, c2, [r3[0], r3[1], s3[2]], u3, l3, e3] : [i2, r3, a3, c2, s3, u3, l3, e3];
            }([].concat(i()(l2[0]), [t2, e2]), a2);
          }
          function S(t2) {
            var e2 = Number.MIN_SAFE_INTEGER;
            return t2.forEach(function(t3) {
              e2 = Math.max(t3[0], e2);
            }), e2;
          }
          function P(t2) {
            var e2 = Number.MIN_SAFE_INTEGER;
            return t2.forEach(function(t3) {
              e2 = Math.max(t3[1], e2);
            }), e2;
          }
          function w(t2) {
            var e2 = Number.MAX_SAFE_INTEGER;
            return t2.forEach(function(t3) {
              e2 = Math.min(t3[0], e2);
            }), e2;
          }
          function R(t2) {
            var e2 = Number.MAX_SAFE_INTEGER, n2 = Number.MIN_SAFE_INTEGER;
            return t2.forEach(function(t3) {
              e2 = Math.min(t3[0], e2), n2 = Math.max(t3[0], n2);
            }), Math.round((e2 + n2) / 2);
          }
          function C(t2) {
            var e2 = Number.MAX_SAFE_INTEGER;
            return t2.forEach(function(t3) {
              e2 = Math.min(t3[1], e2);
            }), e2;
          }
          function E(t2) {
            var e2 = Number.MAX_SAFE_INTEGER, n2 = Number.MIN_SAFE_INTEGER;
            return t2.forEach(function(t3) {
              e2 = Math.min(t3[1], e2), n2 = Math.max(t3[1], n2);
            }), Math.round((e2 + n2) / 2);
          }
          function $(t2, e2) {
            return d(Math.atan2(e2, t2));
          }
          function I(t2, e2, n2) {
            return V({ x: t2[0], y: t2[1] }, { x: e2[0], y: e2[1] }, { dx: n2[0], dy: n2[1] });
          }
          function T(t2, e2) {
            var n2 = c.a.create();
            return c.a.translate(n2, n2, e2), c.a.rotateZ(n2, n2, h(t2)), c.a.translate(n2, n2, c.d.negate([], e2)), n2;
          }
          function B() {
            for (var t2 = c.a.create(), e2 = arguments.length, n2 = new Array(e2), r2 = 0; r2 < e2; r2++)
              n2[r2] = arguments[r2];
            return n2.forEach(function(e3) {
              c.a.multiply(t2, t2, e3);
            }), t2;
          }
          function M() {
            return c.a.invert([], B.apply(void 0, arguments));
          }
          function V(t2, e2, n2) {
            var r2 = $(t2.x - e2.x, t2.y - e2.y);
            return $(t2.x + n2.dx - e2.x, t2.y + n2.dy - e2.y) - r2;
          }
          function D(t2, e2) {
            return ($(t2, e2) + 180) % 360;
          }
          var L = /[xy]/g;
          function A() {
            var t2 = new Date().getTime();
            return "xxx12-xx-34xx".replace(L, function(e2) {
              var n2 = (t2 + 16 * Math.random()) % 16 | 0;
              return t2 = Math.floor(t2 / 16), (e2 == "x" ? n2 : 3 & n2 | 8).toString(16);
            });
          }
          function F() {
            var t2 = new Date().getTime();
            return "idxxxxxxx".replace(L, function(e2) {
              var n2 = (t2 + 16 * Math.random()) % 16 | 0;
              return t2 = Math.floor(t2 / 16), (e2 == "x" ? n2 : 3 & n2 | 8).toString(16);
            });
          }
          var z = function(t2) {
            return 3 * t2 * t2 * (1 - t2);
          }, N = function(t2) {
            return 3 * t2 * (1 - t2) * (1 - t2);
          }, _ = function(t2) {
            return (1 - t2) * (1 - t2) * (1 - t2);
          };
          function U(t2, e2, n2, r2) {
            var i2 = e2, a2 = r2;
            return function(t3) {
              return 1 - (i2 * z(t3) + a2 * N(t3) + _(t3));
            };
          }
          function G(t2, e2) {
            var n2 = Math.abs(e2.width * Math.sin(t2)) + Math.abs(e2.height * Math.cos(t2)), r2 = { x: e2.x + e2.width / 2, y: e2.y + e2.height / 2 }, i2 = Math.sin(t2 - Math.PI / 2) * n2 / 2, a2 = Math.cos(t2 - Math.PI / 2) * n2 / 2;
            return { length: n2, center: r2, start: { x: r2.x - a2, y: r2.y - i2 }, end: { x: r2.x + a2, y: r2.y + i2 } };
          }
          function H(t2, e2, n2) {
            return Object(u.isUndefined)(n2) ? l.cross2d(t2, e2) : l.cross2d(l.sub(e2, t2), l.sub(n2, t2));
          }
          function K(t2, e2, n2, r2) {
            var i2 = H(t2, e2, n2), a2 = t2.x - r2.x, o2 = t2.y - r2.y, c2 = e2.x - r2.x, s2 = e2.y - r2.y, u2 = n2.x - r2.x, l2 = n2.y - r2.y, f2 = (a2 * a2 + o2 * o2) * (c2 * l2 - u2 * s2) + (c2 * c2 + s2 * s2) * (u2 * o2 - a2 * l2) + (u2 * u2 + l2 * l2) * (a2 * s2 - c2 * o2);
            return i2 > 0 ? f2 >= 0 : f2 <= 0;
          }
          function Y(t2, e2, n2) {
            for (var r2 = l.create(Math.min(e2, n2), Math.max(e2, n2)), i2 = -1, a2 = 0, o2 = t2.length; a2 < o2; a2++)
              if (l.equal(t2[a2], r2)) {
                i2 = a2;
                break;
              }
            i2 > -1 ? t2.splice(i2, 1) : t2.push(r2);
          }
          function X(t2, e2, n2) {
            var r2 = t2[e2];
            t2[e2] = t2[n2], t2[n2] = r2;
          }
          function W() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], e2 = t2.length;
            t2[e2] = l.create(-2e9, -2e9), t2[e2 + 1] = l.create(2e9, -2e9), t2[e2 + 2] = l.create(0, 2e9);
            for (var n2 = [l.create(e2, e2 + 1, e2 + 2)], r2 = 0; r2 < e2; r2++) {
              for (var i2 = [], a2 = new Array(n2.length), o2 = 0; o2 < n2.length; o2++) {
                if (!a2[o2]) {
                  if (h2 = n2[o2]) {
                    var c2 = t2[h2.x], s2 = t2[h2.y], u2 = t2[h2.z], f2 = t2[r2];
                    K(c2, s2, u2, f2) ? (Y(i2, h2.x, h2.y), Y(i2, h2.y, h2.z), Y(i2, h2.z, h2.x), X(a2, o2, n2.length - 1), X(n2, o2, n2.length - 1), n2.pop(), o2--) : a2[o2] = true;
                  }
                }
              }
              i2.forEach(function(e3) {
                H(t2[e3.x], t2[e3.y], t2[r2]) === 0 || n2.push(l.create(e3.x, e3.y, r2));
              });
            }
            for (r2 = 0; r2 < n2.length; r2++) {
              var h2;
              ((h2 = n2[r2]).x >= e2 || h2.y >= e2 || h2.z >= e2) && (X(n2, r2, n2.length - 1), n2.pop(), r2--);
            }
            return n2.map(function(e3) {
              return { a: t2[e3.x], b: t2[e3.y], c: t2[e3.z] };
            });
          }
          function Z(t2, e2) {
            for (var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 50, r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 50, i2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 100, a2 = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : 1, o2 = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : function() {
              return Math.random();
            }, c2 = [], s2 = -n2, u2 = t2 + n2, l2 = -r2, f2 = e2 + r2, h2 = s2; h2 < u2; h2 += i2)
              for (var p2 = l2; p2 < f2; p2 += i2) {
                var d2 = Math.floor(h2 + i2 / 2 * (o2() * a2 * 2 - a2)), v2 = Math.floor(p2 + i2 / 2 * (o2() * a2 * 2 - a2));
                c2[c2.length] = { x: d2, y: v2 };
              }
            return c2;
          }
          function q(t2, e2, n2) {
            return { x: (t2.x + e2.x + n2.x) / 3, y: (t2.y + e2.y + n2.y) / 3 };
          }
          var J = /[\b\t \,\n]/g;
          function Q(t2) {
            return t2.trim().split(J).filter(function(t3) {
              return t3;
            }).map(function(t3) {
              return +t3;
            });
          }
          function tt(t2, e2, n2) {
            return (t2[0] - n2[0]) * (e2[1] - n2[1]) - (t2[1] - n2[1]) * (e2[0] - n2[0]);
          }
          function et() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
            if (t2.length === 3)
              return t2;
            if (t2.length < 3)
              return null;
            for (var e2 = [], n2 = t2[0], r2 = 1, a2 = t2.length; r2 < a2; r2++) {
              var o2 = t2[r2];
              (o2[0] < n2[0] || Math.abs(o2[0] - n2[0]) < 1e-6 && o2[1] < n2[1]) && (n2 = t2[r2]);
            }
            e2.push(n2), t2 = t2.filter(function(t3) {
              return t3 !== n2;
            });
            for (var u2 = e2[0], l2 = [], f2 = 0, h2 = function() {
              f2 === 2 && t2.push(e2[0]);
              var n3 = Object(s.randomNumber)(0, t2.length - 1), o3 = t2[n3], h3 = u2, p3 = o3;
              for (r2 = 0, a2 = t2.length; r2 < a2; r2++)
                if (!c.d.equals(t2[r2], o3)) {
                  var d2 = tt(h3, p3, t2[r2]);
                  d2 < 1e-5 && d2 > -1e-5 ? l2.push(t2[r2]) : d2 < 0 && (p3 = o3 = t2[r2], l2 = []);
                }
              if (l2.length > 0 ? (l2.push(o3), l2.sort(function(t3, e3) {
                return c.d.equals(t3, e3) ? 0 : c.d.dist(t3, u2) > c.d.dist(e3, u2) ? 1 : -1;
              }), e2.push.apply(e2, i()(l2)), u2 = l2[l2.length - 1], t2 = t2.filter(function(t3) {
                return l2.some(function(e3) {
                  return c.d.equals(t3, e3);
                }) === false;
              }), l2 = []) : (e2.push(o3), t2 = t2.filter(function(t3) {
                return c.d.equals(t3, o3) === false;
              }), u2 = o3), c.d.equals(u2, e2[0]))
                return e2.pop(), "break";
              f2 += 1;
            }; ; ) {
              var p2 = h2();
              if (p2 === "break")
                break;
            }
            return e2;
          }
        }, function(t, e, n) {
          var r = n(129), i = n(94), a = n(84), o = n(130);
          t.exports = function(t2) {
            return r(t2) || i(t2) || a(t2) || o();
          }, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e, n) {
          t.exports = n(133);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return g;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f), p = n(0), d = n(8), v = n(13);
          n(153);
          function y2(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var g = function(t2) {
            s()(n2, t2);
            var e2 = y2(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "onToggleShow", value: function() {
            } }, { key: "template", value: function() {
              return "\n        <div class='elf--property ".concat(this.isHideHeader() ? "no-title" : "", " ").concat(this.getClassName(), " ").concat(this.isFirstShow() ? "show" : "", "'>\n            ").concat(this.isHideHeader() ? "" : "\n            <div class='property-title ".concat(this.getTitleClassName(), `' ref="$title">
                <label class="`).concat(this.hasKeyframe() ? "has-keyframe" : "", '"> \n                  ').concat(this.hasKeyframe() ? "\n                      <span class='add-timeline-property' data-property='".concat(this.getKeyframeProperty(), "'></span>\n                    ") : "", " \n                  <span ref='$propertyTitle'>").concat(this.getTitle(), '</span>\n                </label>\n                <span class="tools">').concat(this.getTools(), "</span>\n            </div>"), "\n            <div class='property-body ").concat(this.getBodyClassName(), "'>").concat(this.getBody(), "</div>\n            ").concat(this.getFooter() ? "<div class='property-footer'>".concat(this.getFooter(), "</div>") : "", "\n        </div>\n        ");
            } }, { key: "setTitle", value: function(t3) {
              this.refs.$propertyTitle.text(t3);
            } }, { key: "hasKeyframe", value: function() {
              return false;
            } }, { key: "isHideHeader", value: function() {
              return false;
            } }, { key: "isFirstShow", value: function() {
              return true;
            } }, { key: "getClassName", value: function() {
              return "";
            } }, { key: "getTitleClassName", value: function() {
              return "";
            } }, { key: "getBodyClassName", value: function() {
              return "";
            } }, { key: "getKeyframeProperty", value: function() {
              return "";
            } }, { key: "getTitle", value: function() {
              return "";
            } }, { key: "getTools", value: function() {
              return "";
            } }, { key: "getBody", value: function() {
              return "";
            } }, { key: "getFooter", value: function() {
              return "";
            } }, { key: Object(p.CLICK)("$el .property-body .add-timeline-property") + p.PREVENT + p.STOP, value: function(t3) {
              var e3 = t3.$dt.attr("data-property"), n3 = t3.$dt.attr("data-editor");
              this.emit("addTimelineCurrentProperty", { property: e3, editor: n3 });
            } }, { key: Object(p.CLICK)("$el .property-title .add-timeline-property") + p.PREVENT + p.STOP, value: function(t3) {
              var e3 = t3.$dt.attr("data-property"), n3 = t3.$dt.attr("data-editor");
              this.emit("addTimelineCurrentProperty", { property: e3, editor: n3 });
            } }, { key: "isPropertyShow", value: function() {
              return this.$el.hasClass("show");
            } }, { key: "toggle", value: function(t3) {
              this.$el.toggle(t3);
            } }, { key: "hide", value: function() {
              this.$el.hide();
            } }, { key: "show", value: function() {
              this.$el.show();
            } }, { key: "onShowTitle", value: function(t3) {
            } }, { key: "refreshShowIsNot", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1], n3 = this.$selection.current;
              n3 && (t3.includes(n3.itemType) ? this.hide() : (this.show(), e3 && this.refresh()));
            } }, { key: "refreshShow", value: function(t3) {
              var e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1], n3 = this.$selection.current;
              n3 && (Object(d.isFunction)(t3) && t3() || !Object(d.isFunction)(t3) && t3.includes(n3.itemType)) ? (this.show(), e3 && this.refresh()) : this.hide();
            } }, { key: "startInputEditing", value: function(t3) {
              t3 && (t3.attr("contenteditable", true), t3.css({ "background-color": "white", outline: "1px auto black", color: "black" }), t3.focus());
            } }, { key: "endInputEditing", value: function(t3, e3) {
              if (t3) {
                t3.attr("contenteditable", false), t3.css({ "background-color": null, outline: null, color: null });
                var n3 = t3.attr("data-index");
                e3 && e3(n3, t3.text().trim()), t3.blur();
              }
            } }, { key: "editableProperty", get: function() {
              return "";
            } }, { key: "checkShow", value: function() {
              return this.$selection.current && this.$selection.current.editable(this.editableProperty) ? (this.show(), true) : (this.hide(), false);
            } }]), n2;
          }(v.a);
        }, function(t, e) {
          function n(t2, e2, n2, r, i, a, o) {
            try {
              var c = t2[a](o), s = c.value;
            } catch (t3) {
              return void n2(t3);
            }
            c.done ? e2(s) : Promise.resolve(s).then(r, i);
          }
          t.exports = function(t2) {
            return function() {
              var e2 = this, r = arguments;
              return new Promise(function(i, a) {
                var o = t2.apply(e2, r);
                function c(t3) {
                  n(o, i, a, c, s, "next", t3);
                }
                function s(t3) {
                  n(o, i, a, c, s, "throw", t3);
                }
                c(void 0);
              });
            };
          }, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return O;
          });
          var r = n(12), i = n.n(r), a = n(15), o = n.n(a), c = n(7), s = n.n(c), u = n(3), l = n.n(u), f = n(4), h = n.n(f), p = n(8), d = function(t2, e2, n2, r2) {
            n2 ? r2 && n2 === r2 || function(t3, e3, n3) {
              typeof n3 == "boolean" ? function(t4, e4, n4) {
                n4 ? (t4.setAttribute(e4, e4), t4[e4] = n4) : (t4.removeAttribute(e4), t4[e4] = n4);
              }(t3, e3, n3) : t3.setAttribute(e3, n3);
            }(t2, e2, n2) : function(t3, e3, n3) {
              typeof n3 == "boolean" ? function(t4, e4) {
                t4.removeAttribute(e4), t4[e4] = false;
              }(t3, e3) : e3 && function(t4, e4) {
                t4.removeAttribute(e4);
              }(t3, e3);
            }(t2, e2, r2);
          };
          function v(t2) {
            return t2.nodeType !== Node.TEXT_NODE && t2.getAttribute("data-domdiff-pass") === "true";
          }
          function y2(t2) {
            for (var e2 = {}, n2 = t2.length, r2 = 0; r2 < n2; r2++) {
              var i2 = t2[r2];
              e2[i2.name] = i2.value;
            }
            return e2;
          }
          function g(t2, e2, n2, r2) {
            if (e2)
              if (n2) {
                if (v(e2) || v(n2))
                  ;
                else if (u2 = e2, (s2 = n2).nodeType === Node.TEXT_NODE && s2.textContent !== u2.textContent || s2.nodeName !== u2.nodeName || function(t3) {
                  return t3.nodeType !== Node.TEXT_NODE && t3.getAttribute("refClass");
                }(n2))
                  t2.replaceChild(n2.cloneNode(true), e2);
                else if (n2.nodeType !== Node.TEXT_NODE && n2.nodeType !== Node.COMMENT_NODE && n2.toString() !== "[object HTMLUnknownElement]") {
                  !function(t3) {
                    var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, r3 = [];
                    r3.push.apply(r3, Object.keys(e3)), r3.push.apply(r3, Object.keys(n3));
                    for (var i3 = o()(new Set(r3)), a3 = 0, c3 = i3.length; a3 < c3; a3++) {
                      var s3 = i3[a3];
                      d(t3, s3, e3[s3], n3[s3]);
                    }
                  }(e2, y2(n2.attributes), y2(e2.attributes));
                  var i2 = m(e2), a2 = m(n2), c2 = Math.max(i2.length, a2.length);
                  for (r2 = 0; r2 < c2; r2++)
                    g(e2, i2[r2], a2[r2], r2);
                }
              } else
                t2.removeChild(e2);
            else
              t2.appendChild(n2.cloneNode(true));
            var s2, u2;
          }
          var m = function(t2) {
            var e2 = t2.firstChild;
            if (!e2)
              return [];
            var n2 = [];
            do {
              n2.push(e2), e2 = e2.nextSibling;
            } while (e2);
            return n2;
          };
          function b(t2, e2) {
            t2 = t2.el || t2, e2 = e2.el || e2;
            for (var n2 = m(t2), r2 = m(e2), i2 = Math.max(n2.length, r2.length), a2 = 0; a2 < i2; a2++)
              g(t2, n2[a2], r2[a2], a2);
          }
          var k = n(2), O = function() {
            function t2(e2, n2, r2) {
              if (l()(this, t2), Object(p.isNotString)(e2))
                this.el = e2;
              else {
                var i2 = document.createElement(e2);
                for (var a2 in n2 && (i2.className = n2), r2 = r2 || {})
                  i2.setAttribute(a2, r2[a2]);
                this.el = i2;
              }
            }
            return h()(t2, [{ key: "setAttr", value: function(t3) {
              var e2 = this;
              return Object.keys(t3).forEach(function(n2) {
                e2.attr(n2, t3[n2]);
              }), this;
            } }, { key: "setAttrNS", value: function(t3) {
              var e2 = this, n2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "http://www.w3.org/2000/svg";
              return Object.keys(t3).forEach(function(r2) {
                e2.attr(r2, t3[r2], n2);
              }), this;
            } }, { key: "setProp", value: function(t3) {
              var e2 = this;
              return Object.keys(t3).forEach(function(n2) {
                e2.el[n2] != t3[n2] && (e2.el[n2] = t3[n2]);
              }), this;
            } }, { key: "data", value: function(t3, e2) {
              return arguments.length === 1 ? this.attr("data-" + t3) : arguments.length === 2 ? this.attr("data-" + t3, e2) : this;
            } }, { key: "attr", value: function(t3, e2) {
              return arguments.length == 1 ? this.el.getAttribute(t3) : (this.el.getAttribute(t3) != e2 && this.el.setAttribute(t3, e2), this);
            } }, { key: "attrNS", value: function(t3, e2) {
              var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "http://www.w3.org/2000/svg";
              return arguments.length == 1 ? this.el.getAttributeNS(n2, t3) : (this.el.getAttributeNS(n2, t3) != e2 && this.el.setAttributeNS(n2, t3, e2), this);
            } }, { key: "attrKeyValue", value: function(t3) {
              return s()({}, this.el.getAttribute(t3), this.val());
            } }, { key: "attrs", value: function() {
              for (var t3 = this, e2 = arguments.length, n2 = new Array(e2), r2 = 0; r2 < e2; r2++)
                n2[r2] = arguments[r2];
              return n2.map(function(e3) {
                return t3.el.getAttribute(e3);
              });
            } }, { key: "styles", value: function() {
              for (var t3 = this, e2 = arguments.length, n2 = new Array(e2), r2 = 0; r2 < e2; r2++)
                n2[r2] = arguments[r2];
              return n2.map(function(e3) {
                return t3.el.style[e3];
              });
            } }, { key: "removeAttr", value: function(t3) {
              return this.el.removeAttribute(t3), this;
            } }, { key: "removeStyle", value: function(t3) {
              return this.el.style.removeProperty(t3), this;
            } }, { key: "is", value: function(t3) {
              return this.el === (t3.el || t3);
            } }, { key: "isTag", value: function(t3) {
              return this.el.tagName.toLowerCase() === t3.toLowerCase();
            } }, { key: "closest", value: function(e2) {
              for (var n2 = this, r2 = false; !(r2 = n2.hasClass(e2)); ) {
                if (!n2.el.parentNode)
                  return null;
                n2 = t2.create(n2.el.parentNode);
              }
              return r2 ? n2 : null;
            } }, { key: "path", value: function() {
              if (!this.el)
                return [];
              var t3 = this.parent();
              return t3 ? [].concat(o()(t3.path()), [this]) : [this];
            } }, { key: "parent", value: function() {
              return t2.create(this.el.parentNode);
            } }, { key: "hasParent", value: function() {
              return !!this.el.parentNode;
            } }, { key: "removeClass", value: function() {
              var t3;
              return (t3 = this.el.classList).remove.apply(t3, arguments), this;
            } }, { key: "hasClass", value: function(t3) {
              return !!this.el.classList && this.el.classList.contains(t3);
            } }, { key: "addClass", value: function() {
              var t3;
              return (t3 = this.el.classList).add.apply(t3, arguments), this;
            } }, { key: "onlyOneClass", value: function(t3) {
              this.parent().children().forEach(function(e2) {
                e2.removeClass(t3);
              }), this.addClass(t3);
            } }, { key: "toggleClass", value: function(t3, e2) {
              return this.el.classList.toggle(t3, e2), this;
            } }, { key: "html", value: function(t3) {
              return Object(p.isUndefined)(t3) ? this.el.innerHTML : (Object(p.isString)(t3) ? this.el.innerHTML = t3 : this.empty().append(t3), this);
            } }, { key: "htmlDiff", value: function(t3) {
              b(this, t3);
            } }, { key: "updateDiff", value: function(e2) {
              var n2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "div";
              b(this, t2.create(n2).html(e2));
            } }, { key: "updateSVGDiff", value: function(e2) {
              var n2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "div";
              b(this, t2.create(n2).html("<svg>".concat(e2, "</svg>")).firstChild.firstChild);
            } }, { key: "find", value: function(t3) {
              return this.el.querySelector(t3);
            } }, { key: "$", value: function(e2) {
              var n2 = this.find(e2);
              return n2 ? t2.create(n2) : null;
            } }, { key: "findAll", value: function(t3) {
              return o()(this.el.querySelectorAll(t3));
            } }, { key: "$$", value: function(e2) {
              return this.findAll(e2).map(function(e3) {
                return t2.create(e3);
              });
            } }, { key: "empty", value: function() {
              for (; this.el.firstChild; )
                this.el.removeChild(this.el.firstChild);
              return this;
            } }, { key: "append", value: function(t3) {
              return Object(p.isString)(t3) ? this.el.appendChild(document.createTextNode(t3)) : this.el.appendChild(t3.el || t3), this;
            } }, { key: "prepend", value: function(t3) {
              return Object(p.isString)(t3) ? this.el.prepend(document.createTextNode(t3)) : this.el.prepend(t3.el || t3), this;
            } }, { key: "prependHTML", value: function(e2) {
              var n2 = t2.create("div").html(e2);
              return this.prepend(n2.createChildrenFragment()), n2;
            } }, { key: "appendHTML", value: function(e2) {
              var n2 = t2.create("div").html(e2);
              return this.append(n2.createChildrenFragment()), n2;
            } }, { key: "createChildrenFragment", value: function() {
              var t3 = this.children(), e2 = document.createDocumentFragment();
              return t3.forEach(function(t4) {
                return e2.appendChild(t4.el);
              }), e2;
            } }, { key: "appendTo", value: function(t3) {
              return (t3.el ? t3.el : t3).appendChild(this.el), this;
            } }, { key: "remove", value: function() {
              return this.el.parentNode && this.el.parentNode.removeChild(this.el), this;
            } }, { key: "removeChild", value: function(t3) {
              return this.el.removeChild(t3.el || t3), this;
            } }, { key: "text", value: function(e2) {
              if (Object(p.isUndefined)(e2))
                return this.el.textContent;
              var n2 = e2;
              return e2 instanceof t2 && (n2 = e2.text()), this.el.textContent !== n2 && (this.el.textContent = n2), this;
            } }, { key: "css", value: function(t3, e2) {
              var n2 = this;
              if (Object(p.isNotUndefined)(t3) && Object(p.isNotUndefined)(e2))
                t3.indexOf("--") === 0 && Object(p.isNotUndefined)(e2) ? this.el.style.setProperty(t3, e2) : this.el.style[t3] = e2;
              else if (Object(p.isNotUndefined)(t3)) {
                if (Object(p.isString)(t3))
                  return getComputedStyle(this.el)[t3];
                Object.entries(t3).forEach(function(t4) {
                  var e3 = i()(t4, 2), r2 = e3[0], a2 = e3[1];
                  r2.indexOf("--") === 0 && Object(p.isNotUndefined)(a2) ? n2.el.style.setProperty(r2, a2) : n2.el.style[r2] = a2;
                });
              }
              return this;
            } }, { key: "getComputedStyle", value: function(t3) {
              function e2() {
                return t3.apply(this, arguments);
              }
              return e2.toString = function() {
                return t3.toString();
              }, e2;
            }(function() {
              for (var t3 = getComputedStyle(this.el), e2 = {}, n2 = arguments.length, r2 = new Array(n2), i2 = 0; i2 < n2; i2++)
                r2[i2] = arguments[i2];
              return r2.forEach(function(n3) {
                e2[n3] = t3[n3];
              }), e2;
            }) }, { key: "getStyleList", value: function() {
              for (var t3 = this, e2 = {}, n2 = this.el.style.length, r2 = 0; r2 < n2; r2++) {
                var i2 = this.el.style[r2];
                e2[i2] = this.el.style[i2];
              }
              for (var a2 = arguments.length, o2 = new Array(a2), c2 = 0; c2 < a2; c2++)
                o2[c2] = arguments[c2];
              return o2.forEach(function(n3) {
                e2[n3] = t3.css(n3);
              }), e2;
            } }, { key: "cssText", value: function(t3) {
              return Object(p.isUndefined)(t3) ? this.el.style.cssText : (t3 != this.el.tempCssText && (this.el.style.cssText = t3, this.el.tempCssText = t3), this);
            } }, { key: "cssArray", value: function(t3) {
              return t3[0] && (this.el.style[t3[0]] = t3[1]), t3[2] && (this.el.style[t3[2]] = t3[3]), t3[4] && (this.el.style[t3[4]] = t3[5]), t3[6] && (this.el.style[t3[6]] = t3[7]), t3[8] && (this.el.style[t3[8]] = t3[9]), this;
            } }, { key: "cssFloat", value: function(t3) {
              return parseFloat(this.css(t3));
            } }, { key: "cssInt", value: function(t3) {
              return parseInt(this.css(t3));
            } }, { key: "px", value: function(t3, e2) {
              return this.css(t3, k.a.px(e2));
            } }, { key: "rect", value: function() {
              return this.el.getBoundingClientRect();
            } }, { key: "bbox", value: function() {
              return this.el.getBBox();
            } }, { key: "isSVG", value: function() {
              return this.el.tagName.toUpperCase() === "SVG";
            } }, { key: "offsetRect", value: function() {
              if (this.isSVG()) {
                var t3 = this.parent().rect(), e2 = this.rect();
                return { x: e2.x - t3.x, y: e2.y - t3.y, top: e2.x - t3.x, left: e2.y - t3.y, width: e2.width, height: e2.height };
              }
              return { x: this.el.offsetLeft, y: this.el.offsetTop, top: this.el.offsetTop, left: this.el.offsetLeft, width: this.el.offsetWidth, height: this.el.offsetHeight };
            } }, { key: "offset", value: function() {
              var e2 = this.rect(), n2 = t2.getScrollTop(), r2 = t2.getScrollLeft();
              return { top: e2.top + n2, left: e2.left + r2 };
            } }, { key: "offsetLeft", value: function() {
              return this.offset().left;
            } }, { key: "offsetTop", value: function() {
              return this.offset().top;
            } }, { key: "position", value: function() {
              return this.el.style.top ? { top: parseFloat(this.css("top")), left: parseFloat(this.css("left")) } : this.rect();
            } }, { key: "size", value: function() {
              return [this.width(), this.height()];
            } }, { key: "width", value: function() {
              return this.el.offsetWidth || this.rect().width;
            } }, { key: "contentWidth", value: function() {
              return this.width() - this.cssFloat("padding-left") - this.cssFloat("padding-right");
            } }, { key: "height", value: function() {
              return this.el.offsetHeight || this.rect().height;
            } }, { key: "contentHeight", value: function() {
              return this.height() - this.cssFloat("padding-top") - this.cssFloat("padding-bottom");
            } }, { key: "val", value: function(e2) {
              if (Object(p.isUndefined)(e2))
                return this.el.value;
              if (Object(p.isNotUndefined)(e2)) {
                var n2 = e2;
                e2 instanceof t2 && (n2 = e2.val()), this.el.value = n2;
              }
              return this;
            } }, { key: "matches", value: function(t3) {
              return this.el && this.el.matches ? this.el.matches(t3) ? this : this.parent().matches(t3) : null;
            } }, { key: "value", get: function() {
              return this.el.value;
            } }, { key: "naturalWidth", get: function() {
              return this.el.naturalWidth;
            } }, { key: "naturalHeight", get: function() {
              return this.el.naturalHeight;
            } }, { key: "files", get: function() {
              return this.el.files ? o()(this.el.files) : [];
            } }, { key: "realVal", value: function() {
              switch (this.el.nodeType) {
                case "INPUT":
                  var t3 = this.attr("type");
                  if (t3 == "checkbox" || t3 == "radio")
                    return this.checked();
                case "SELECT":
                case "TEXTAREA":
                  return this.el.value;
              }
              return "";
            } }, { key: "int", value: function() {
              return parseInt(this.val(), 10);
            } }, { key: "float", value: function() {
              return parseFloat(this.val());
            } }, { key: "show", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "block";
              return this.el.style.display = t3 != "none" ? t3 : "block", this;
            } }, { key: "hide", value: function() {
              return this.el.style.display = "none", this;
            } }, { key: "isHide", value: function() {
              return this.el.style.display === "none";
            } }, { key: "isShow", value: function() {
              return !this.isHide();
            } }, { key: "toggle", value: function(t3) {
              var e2 = this.isHide();
              return arguments.length == 1 ? t3 ? this.show() : this.hide() : e2 ? this.show() : this.hide();
            } }, { key: "totalLength", get: function() {
              return this.el.getTotalLength();
            } }, { key: "scrollIntoView", value: function() {
              this.el.scrollIntoView();
            } }, { key: "addScrollLeft", value: function(t3) {
              return this.el.scrollLeft += t3, this;
            } }, { key: "addScrollTop", value: function(t3) {
              return this.el.scrollTop += t3, this;
            } }, { key: "setScrollTop", value: function(t3) {
              return this.el.scrollTop = t3, this;
            } }, { key: "setScrollLeft", value: function(t3) {
              return this.el.scrollLeft = t3, this;
            } }, { key: "scrollTop", value: function() {
              return this.el === document.body ? t2.getScrollTop() : this.el.scrollTop;
            } }, { key: "scrollLeft", value: function() {
              return this.el === document.body ? t2.getScrollLeft() : this.el.scrollLeft;
            } }, { key: "scrollHeight", value: function() {
              return this.el.scrollHeight;
            } }, { key: "scrollWidth", value: function() {
              return this.el.scrollWidth;
            } }, { key: "on", value: function(t3, e2, n2, r2) {
              return this.el.addEventListener(t3, e2, n2, r2), this;
            } }, { key: "off", value: function(t3, e2) {
              return this.el.removeEventListener(t3, e2), this;
            } }, { key: "getElement", value: function() {
              return this.el;
            } }, { key: "createChild", value: function(e2) {
              var n2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", r2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, i2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {}, a2 = t2.create(e2, n2, r2);
              return a2.css(i2), this.append(a2), a2;
            } }, { key: "firstChild", get: function() {
              return t2.create(this.el.firstElementChild);
            } }, { key: "children", value: function() {
              var e2 = this.el.firstElementChild;
              if (!e2)
                return [];
              var n2 = [];
              do {
                n2.push(t2.create(e2)), e2 = e2.nextElementSibling;
              } while (e2);
              return n2;
            } }, { key: "childLength", value: function() {
              return this.el.children.length;
            } }, { key: "replace", value: function(t3) {
              return this.el.parentNode && this.el.parentNode.replaceChild(t3.el || t3, this.el), this;
            } }, { key: "replaceChild", value: function(t3, e2) {
              return this.el.replaceChild(e2.el || e2, t3.el || t3), this;
            } }, { key: "checked", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 && arguments[0];
              return arguments.length == 0 ? !!this.el.checked : (this.el.checked = !!t3, this);
            } }, { key: "click", value: function() {
              return this.el.click(), this;
            } }, { key: "focus", value: function() {
              return this.el.focus(), this;
            } }, { key: "select", value: function() {
              if (this.attr("contenteditable") === "true") {
                var t3 = document.createRange();
                t3.selectNodeContents(this.el);
                var e2 = window.getSelection();
                e2.removeAllRanges(), e2.addRange(t3);
              } else
                this.el.select();
              return this;
            } }, { key: "blur", value: function() {
              return this.el.blur(), this;
            } }, { key: "context", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "2d";
              return this._initContext || (this._initContext = this.el.getContext(t3)), this._initContext;
            } }, { key: "resize", value: function(t3) {
              var e2 = t3.width, n2 = t3.height;
              this._initContext = null;
              var r2 = this.context(), i2 = window.devicePixelRatio || 1;
              this.px("width", +e2), this.px("height", +n2), this.el.width = e2 * i2, this.el.height = n2 * i2, r2.scale(i2, i2);
            } }, { key: "toDataURL", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "image/png", e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
              return this.el.toDataURL(t3, e2);
            } }, { key: "clear", value: function() {
              this.context().clearRect(0, 0, this.el.width, this.el.height);
            } }, { key: "update", value: function(t3) {
              this.clear(), t3.call(this, this);
            } }, { key: "drawImage", value: function(t3) {
              var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, r2 = this.context(), i2 = window.devicePixelRatio || 1;
              r2.drawImage(t3, e2, n2, t3.width, t3.height, 0, 0, this.el.width / i2, this.el.height / i2);
            } }, { key: "drawOption", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, e2 = this.context();
              Object.assign(e2, t3);
            } }, { key: "drawLine", value: function(t3, e2, n2, r2) {
              var i2 = this.context();
              i2.beginPath(), i2.moveTo(t3, e2), i2.lineTo(n2, r2), i2.stroke(), i2.closePath();
            } }, { key: "drawPath", value: function() {
              var t3 = this.context();
              t3.beginPath();
              for (var e2 = arguments.length, n2 = new Array(e2), r2 = 0; r2 < e2; r2++)
                n2[r2] = arguments[r2];
              n2.forEach(function(e3, n3) {
                n3 == 0 ? t3.moveTo(e3[0], e3[1]) : t3.lineTo(e3[0], e3[1]);
              }), t3.stroke(), t3.fill(), t3.closePath();
            } }, { key: "drawCircle", value: function(t3, e2, n2) {
              var r2 = this.context();
              r2.beginPath(), r2.arc(t3, e2, n2, 0, 2 * Math.PI), r2.stroke(), r2.fill();
            } }, { key: "drawText", value: function(t3, e2, n2) {
              this.context().fillText(n2, t3, e2);
            } }, { key: "fullscreen", value: function() {
              var t3 = this.el;
              t3.requestFullscreen ? t3.requestFullscreen() : t3.wekitRequestFullscreen && t3.wekitRequestFullscreen();
            } }, { key: "toggleFullscreen", value: function() {
              this.el === document.fullscreenElement ? document.exitFullscreen() : this.fullscreen();
            } }], [{ key: "create", value: function(e2, n2, r2) {
              return new t2(e2, n2, r2);
            } }, { key: "createByHTML", value: function(e2) {
              var n2 = t2.create("div").html(e2).children();
              return n2.length ? t2.create(n2[0].el) : null;
            } }, { key: "getScrollTop", value: function() {
              return Math.max(window.pageYOffset, document.documentElement.scrollTop, document.body.scrollTop);
            } }, { key: "getScrollLeft", value: function() {
              return Math.max(window.pageXOffset, document.documentElement.scrollLeft, document.body.scrollLeft);
            } }, { key: "parse", value: function(t3) {
              return DOMParser().parseFromString(t3, "text/htmll");
            } }, { key: "body", value: function() {
              return t2.create(document.body);
            } }]), t2;
          }();
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return s;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(8), s = function() {
            function t2() {
              i()(this, t2);
            }
            return o()(t2, null, [{ key: "isEqual", value: function(e2, n2, r2) {
              return arguments.length === 2 ? e2.x === n2.x && e2.y === n2.y : arguments.length === 3 ? t2.isEqual(e2, n2) && t2.isEqual(n2, r2) : void 0;
            } }, { key: "isFirst", value: function(t3) {
              return t3 && t3.command == "M";
            } }, { key: "DouglasPeuker", value: function(e2, n2, r2, i2) {
              if (!(i2 <= r2 + 1)) {
                for (var a2 = 0, o2 = r2, c2 = e2 * e2, s2 = n2[r2], u = n2[i2], l = r2 + 1; l < i2; l++) {
                  var f = t2.segmentDistance2(n2[l].x, n2[l].y, s2, u);
                  f <= a2 || (o2 = l, a2 = f);
                }
                a2 > c2 && (n2[o2].mark = true, t2.DouglasPeuker(e2, n2, r2, o2), t2.DouglasPeuker(e2, n2, o2, i2));
              }
            } }, { key: "simply", value: function(e2, n2) {
              return e2.length <= 2 ? e2 : ((e2 = Object(c.clone)(e2))[0].mark = true, e2[e2.length - 1].mark = true, t2.DouglasPeuker(n2, e2, 0, e2.length - 1), e2.filter(function(t3) {
                return Boolean(t3.mark);
              }));
            } }, { key: "segmentDistance2", value: function(t3, e2, n2, r2) {
              var i2 = r2.x - n2.x, a2 = r2.y - n2.y, o2 = i2 * i2 + a2 * a2, c2 = t3 - n2.x, s2 = e2 - n2.y, u = i2 * c2 + a2 * s2;
              if (o2 === 0)
                return c2 * c2 + s2 * s2;
              if (u <= 0)
                return c2 * c2 + s2 * s2;
              if (u >= o2)
                return (c2 = t3 - r2.x) * c2 + (s2 = e2 - r2.y) * s2;
              var l = c2 * a2 - s2 * i2;
              return l * l / o2;
            } }, { key: "isInLine", value: function(t3, e2, n2) {
              return t3.x === n2.x ? e2.x === n2.x : t3.y === n2.y ? e2.y === n2.y : (t3.x - n2.x) * (t3.y - n2.y) == (n2.x - e2.x) * (n2.y - e2.y);
            } }, { key: "isLine", value: function(e2) {
              return t2.isInLine(e2.endPoint, e2.startPoint, e2, reversePoint);
            } }, { key: "getReversePoint", value: function(t3, e2) {
              var n2 = t3.x - e2.x, r2 = t3.y - e2.y;
              return { x: t3.x + n2, y: t3.y + r2 };
            } }, { key: "getIndexPoint", value: function(t3, e2) {
              return t3[e2];
            } }, { key: "getPoint", value: function(e2, n2) {
              return e2.filter(function(e3) {
                return t2.isEqual(e3.startPoint, n2);
              })[0];
            } }, { key: "getIndex", value: function(e2, n2) {
              for (var r2 = -1, i2 = 0, a2 = e2.length; i2 < a2; i2++) {
                var o2 = e2[i2];
                if (t2.isEqual(o2.startPoint, n2)) {
                  r2 = i2;
                  break;
                }
              }
              return r2;
            } }, { key: "getPointIndex", value: function(e2, n2) {
              for (var r2 = -1, i2 = 0, a2 = e2.length; i2 < a2; i2++) {
                var o2 = e2[i2];
                if (t2.isEqual(o2, n2)) {
                  r2 = i2;
                  break;
                }
              }
              return r2;
            } }, { key: "getLastPoint", value: function(t3, e2) {
              if (!t3.length)
                return null;
              for (var n2 = -1, r2 = e2 + 1, i2 = t3.length; r2 < i2; r2++)
                if (t3[r2].command === "M") {
                  n2 = r2 - 1;
                  break;
                }
              n2 == -1 && (n2 = t3.length - 1), t3[n2] && t3[n2].command === "Z" && (n2 -= 1);
              var a2 = t3[n2];
              return a2 && (a2.index = n2), a2;
            } }, { key: "getFirstPoint", value: function(t3, e2) {
              for (var n2 = -1, r2 = e2 - 1; r2 > 0; r2--)
                if (t3[r2].command === "M") {
                  n2 = r2;
                  break;
                }
              n2 === -1 && (n2 = 0);
              var i2 = t3[n2];
              return i2 && (i2.index = n2), i2;
            } }, { key: "getConnectedPoint", value: function(t3, e2) {
            } }, { key: "getPrevPoint", value: function(e2, n2) {
              var r2 = n2 - 1;
              if (r2 < 0)
                return t2.getLastPoint(e2, n2);
              var i2 = e2[r2];
              return i2 && (i2.index = r2), i2;
            } }, { key: "getNextPoint", value: function(e2, n2) {
              var r2 = e2[n2], i2 = e2[n2 + 1];
              return i2 && (i2.index = n2 + 1), r2.connected && (i2 = t2.getFirstPoint(e2, n2)), i2;
            } }, { key: "removePoint", value: function(t3, e2, n2) {
              if (n2 === "startPoint")
                return t3.filter(function(t4, n3) {
                  return n3 !== e2;
                });
            } }, { key: "splitPoints", value: function(e2) {
              var n2 = [], r2 = [];
              return e2.forEach(function(e3) {
                t2.isFirst(e3) ? (r2 = [e3], n2.push(r2)) : r2.push(e3);
              }), n2;
            } }, { key: "recoverPoints", value: function(t3) {
              var e2 = [];
              return t3.forEach(function(t4) {
                t4.forEach(function(t5, e3) {
                  e3 === 0 && (t5.command = "M", t5.originalCommand = "M");
                }), e2.push.apply(e2, t4);
              }), e2.forEach(function(t4, e3) {
                t4.index = e3;
              }), e2;
            } }]), t2;
          }();
        }, function(t, e, n) {
          "use strict";
          n.d(e, "c", function() {
            return l;
          }), n.d(e, "d", function() {
            return h;
          }), n.d(e, "e", function() {
            return p;
          }), n.d(e, "a", function() {
            return d;
          }), n.d(e, "f", function() {
            return v;
          }), n.d(e, "b", function() {
            return y2;
          }), n.d(e, "i", function() {
            return g;
          }), n.d(e, "h", function() {
            return m;
          }), n.d(e, "g", function() {
            return b;
          });
          var r = n(12), i = n.n(r), a = n(48), o = n(2), c = n(9), s = n(14);
          function u(t2, e2, n2, r2, i2, a2, o2, c2) {
            var s2 = ((o2 - i2) * (e2 - a2) - (c2 - a2) * (t2 - i2)) / ((c2 - a2) * (n2 - t2) - (o2 - i2) * (r2 - e2)), u2 = ((n2 - t2) * (e2 - a2) - (r2 - e2) * (t2 - i2)) / ((c2 - a2) * (n2 - t2) - (o2 - i2) * (r2 - e2));
            return 0 <= s2 && s2 <= 1 && 0 <= u2 && u2 <= 1;
          }
          function l() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], e2 = arguments.length > 1 ? arguments[1] : void 0, n2 = arguments.length > 2 ? arguments[2] : void 0, r2 = false, a2 = t2.length;
            return t2.forEach(function(o2, c2) {
              var s2 = i()(o2, 2), u2 = s2[0], l2 = s2[1], f2 = i()(t2[(c2 + 1) % a2], 2), h2 = f2[0], p2 = f2[1];
              (l2 >= n2 && p2 < n2 || l2 < n2 && p2 >= n2) && e2 < (h2 - u2) * (n2 - l2) / (p2 - l2) + u2 && (r2 = !r2);
            }), r2;
          }
          function f() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], e2 = arguments.length > 1 ? arguments[1] : void 0, n2 = arguments.length > 2 ? arguments[2] : void 0, r2 = arguments.length > 3 ? arguments[3] : void 0, a2 = arguments.length > 4 ? arguments[4] : void 0, o2 = t2.length;
            return t2.some(function(c2, s2) {
              var l2 = i()(c2, 2), f2 = l2[0], h2 = l2[1], p2 = i()(t2[(s2 + 1) % o2], 2), d2 = p2[0], v2 = p2[1];
              return u(e2, n2, r2, a2, f2, h2, d2, v2);
            });
          }
          function h() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], n2 = t2.length;
            return t2.some(function(r2, a2) {
              var o2 = i()(r2, 2), c2 = o2[0], s2 = o2[1], u2 = i()(t2[(a2 + 1) % n2], 2), h2 = u2[0], p2 = u2[1], d2 = f(e2, c2, s2, h2, p2);
              return !!d2 || !!(d2 = l(t2, e2[0][0], e2[0][1]));
            });
          }
          function p(t2, e2, n2, r2) {
            var i2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : "50% 50% 0px", o2 = a.a.scale(i2, n2, r2);
            return [[t2, e2, 0], [t2 + n2, e2, 0], [t2 + n2, e2 + r2, 0], [t2, e2 + r2, 0], [t2 + o2[0], e2 + o2[1], 0]];
          }
          function d(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, n2 = c.d.lerp([], t2[0], t2[1], 0.5), r2 = c.d.lerp([], t2[2], t2[3], 0.5), i2 = Object(s.getPointBetweenVerties)(r2, n2, e2);
            return i2;
          }
          function v(t2, e2, n2, r2) {
            return p(t2, e2, n2, r2);
          }
          function y2() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], e2 = Number.MAX_SAFE_INTEGER, n2 = Number.MAX_SAFE_INTEGER, r2 = Number.MIN_SAFE_INTEGER, i2 = Number.MIN_SAFE_INTEGER, a2 = [], o2 = [];
            return t2.forEach(function(t3) {
              t3.originVerties.forEach(function(t4) {
                a2.push(t4[0]), o2.push(t4[1]);
              });
            }), e2 = Math.min.apply(Math, a2), r2 = Math.max.apply(Math, a2), n2 = Math.min.apply(Math, o2), i2 = Math.max.apply(Math, o2), e2 === Number.MAX_SAFE_INTEGER && (e2 = 0), n2 === Number.MAX_SAFE_INTEGER && (n2 = 0), r2 === Number.MIN_SAFE_INTEGER && (r2 = 0), i2 === Number.MIN_SAFE_INTEGER && (i2 = 0), p(e2, n2, r2 - e2, i2 - n2);
          }
          function g(t2) {
            var e2 = o.a.px(t2[0][0]).floor(), n2 = o.a.px(t2[0][1]).floor();
            return { x: e2, left: e2, y: n2, top: n2, width: o.a.px(c.d.dist(t2[0], t2[1])).floor(), height: o.a.px(c.d.dist(t2[0], t2[3])).floor() };
          }
          function m(t2) {
            return b(t2).filter(function(t3, e2) {
              return e2 < 4;
            });
          }
          function b(t2) {
            var e2 = Number.MAX_SAFE_INTEGER, n2 = Number.MAX_SAFE_INTEGER, r2 = Number.MIN_SAFE_INTEGER, i2 = Number.MIN_SAFE_INTEGER, a2 = [], o2 = [];
            return t2.forEach(function(t3) {
              a2.push(t3[0]), o2.push(t3[1]);
            }), e2 = Math.min.apply(Math, a2), r2 = Math.max.apply(Math, a2), n2 = Math.min.apply(Math, o2), i2 = Math.max.apply(Math, o2), e2 === Number.MAX_SAFE_INTEGER && (e2 = 0), n2 === Number.MAX_SAFE_INTEGER && (n2 = 0), r2 === Number.MIN_SAFE_INTEGER && (r2 = 0), i2 === Number.MIN_SAFE_INTEGER && (i2 = 0), p(e2, n2, r2 - e2, i2 - n2);
          }
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return Qe;
          }), n.d(e, "b", function() {
            return tn;
          });
          var r = n(12), i = n.n(r), a = n(15), o = n.n(a), c = n(3), s = n.n(c), u = n(4), l = n.n(u), f = n(14), h = (n(32), n(90), n(8)), p = function() {
            function t2(e2) {
              s()(this, t2), this.cachedCallback = {}, this.callbacks = {}, this.commandes = [], this.editor = e2;
            }
            return l()(t2, [{ key: "getCallbacks", value: function(t3) {
              return this.callbacks[t3] || (this.callbacks[t3] = []), this.callbacks[t3];
            } }, { key: "setCallbacks", value: function(t3) {
              var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
              this.callbacks[t3] = e2;
            } }, { key: "debug", value: function() {
              var t3;
              this.editor && this.editor.config.get("debug") && (t3 = console).debug.apply(t3, arguments);
            } }, { key: "on", value: function(t3, e2, n2) {
              var r2 = this, i2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, a2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0, o2 = arguments.length > 5 && arguments[5] !== void 0 && arguments[5], c2 = arguments.length > 6 && arguments[6] !== void 0 && arguments[6], s2 = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : [], u2 = e2;
              return i2 > 0 ? u2 = Object(h.debounce)(e2, i2) : a2 > 0 && (u2 = Object(h.throttle)(e2, a2)), s2.length && (u2 = Object(h.ifCheck)(u2, n2, s2)), this.getCallbacks(t3).push({ event: t3, callback: u2, context: n2, originalCallback: e2, enableAllTrigger: o2, enableSelfTrigger: c2 }), this.debug("add message event", t3, n2.sourceName), function() {
                r2.off(t3, e2);
              };
            } }, { key: "off", value: function(t3, e2) {
              this.debug("off message event", t3), arguments.length == 1 ? this.setCallbacks(t3) : arguments.length == 2 && this.setCallbacks(t3, this.getCallbacks(t3).filter(function(t4) {
                return t4.originalCallback !== e2;
              }));
            } }, { key: "offAll", value: function(t3) {
              var e2 = this;
              Object.keys(this.callbacks).forEach(function(n2) {
                e2.setCallbacks(n2, e2.getCallbacks(n2).filter(function(e3) {
                  return e3.context !== t3;
                }));
              }), this.debug("off all message", t3.sourceName);
            } }, { key: "getCachedCallbacks", value: function(t3) {
              return this.getCallbacks(t3);
            } }, { key: "sendMessage", value: function(t3, e2) {
              for (var n2 = this, r2 = arguments.length, i2 = new Array(r2 > 2 ? r2 - 2 : 0), a2 = 2; a2 < r2; a2++)
                i2[a2 - 2] = arguments[a2];
              Promise.resolve().then(function() {
                var r3 = n2.getCachedCallbacks(e2);
                if (r3)
                  for (var a3 = 0, o2 = r3.length; a3 < o2; a3++) {
                    var c2 = r3[a3];
                    c2.enableSelfTrigger || (c2.enableAllTrigger || c2.originalCallback.source !== t3) && c2.callback.apply(c2.context, i2);
                  }
              });
            } }, { key: "nextSendMessage", value: function(t3, e2) {
              for (var n2 = arguments.length, r2 = new Array(n2 > 2 ? n2 - 2 : 0), i2 = 2; i2 < n2; i2++)
                r2[i2 - 2] = arguments[i2];
              Promise.resolve().then(function() {
                e2.apply(void 0, r2);
              });
            } }, { key: "triggerMessage", value: function(t3, e2) {
              for (var n2 = this, r2 = arguments.length, i2 = new Array(r2 > 2 ? r2 - 2 : 0), a2 = 2; a2 < r2; a2++)
                i2[a2 - 2] = arguments[a2];
              Promise.resolve().then(function() {
                var r3 = n2.getCachedCallbacks(e2);
                if (r3)
                  for (var a3 = 0, o2 = r3.length; a3 < o2; a3++) {
                    var c2 = r3[a3];
                    c2.originalCallback.source === t3 && c2.callback.apply(c2.context, i2);
                  }
                else
                  console.warn(e2, " is not valid event");
              });
            } }, { key: "emit", value: function(t3) {
              for (var e2 = arguments.length, n2 = new Array(e2 > 1 ? e2 - 1 : 0), r2 = 1; r2 < e2; r2++)
                n2[r2 - 1] = arguments[r2];
              Object(h.isFunction)(t3) ? t3.apply(void 0, n2) : this.sendMessage.apply(this, [this.source, t3].concat(n2));
            } }, { key: "nextTick", value: function(t3) {
              this.nextSendMessage(this.source, t3);
            } }, { key: "trigger", value: function(t3) {
              for (var e2 = arguments.length, n2 = new Array(e2 > 1 ? e2 - 1 : 0), r2 = 1; r2 < e2; r2++)
                n2[r2 - 1] = arguments[r2];
              Object(h.isFunction)(t3) ? t3.apply(void 0, n2) : this.triggerMessage.apply(this, [this.source, t3].concat(n2));
            } }]), t2;
          }(), d = n(33), v = { dark: { left_size: 250, left_max_size: 400, bottom_size: 150, bottom_max_size: 500, timeline_grid_font_color: "#ececec", timeline_line_color: "red", timeline_timeview_bottom_color: "black" }, light: { left_size: 250, left_max_size: 400, bottom_size: 150, bottom_max_size: 500, timeline_grid_font_color: "black", timeline_line_color: "#4778d4", timeline_timeview_bottom_color: "#ececec" } }, y2 = n(7), g = n.n(y2);
          function m(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          var b = function() {
            function t2(e2) {
              s()(this, t2), this.$editor = e2, this.items = [], this.itemKeys = {};
            }
            return l()(t2, [{ key: "initialize", value: function() {
              this.items = [], this.itemKeys = {};
            } }, { key: "currentProject", value: function(t3) {
              var e2 = this.$editor.selection.currentProject;
              e2 && t3 && t3(e2);
            } }, { key: "empty", value: function() {
              this.select();
            } }, { key: "each", value: function(t3) {
              this.items.forEach(function(e2, n2) {
                t3 && t3(e2, n2);
              });
            } }, { key: "refreshCache", value: function(t3) {
              var e2 = this;
              this.items = t3, this.itemKeys = {}, this.items.forEach(function(t4) {
                e2.itemKeys[t4.id] = t4;
              });
            } }, { key: "cachedList", value: function() {
              return this.items.map(function(t3) {
                return function(t4) {
                  for (var e2 = 1; e2 < arguments.length; e2++) {
                    var n2 = arguments[e2] != null ? arguments[e2] : {};
                    e2 % 2 ? m(Object(n2), true).forEach(function(e3) {
                      g()(t4, e3, n2[e3]);
                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(n2)) : m(Object(n2)).forEach(function(e3) {
                      Object.defineProperty(t4, e3, Object.getOwnPropertyDescriptor(n2, e3));
                    });
                  }
                  return t4;
                }({}, t3);
              });
            } }, { key: "checked", value: function(t3) {
              return !!this.itemKeys[t3];
            } }, { key: "selectLayer", value: function(t3) {
              var e2 = this;
              this.currentProject(function(n2) {
                var r2 = n2.getKeyframeListReturnArray().filter(function(e3) {
                  return e3.layerId === t3;
                });
                e2.refreshCache(r2);
              });
            } }, { key: "toggleLayerContainer", value: function(t3) {
              this.currentProject(function(e2) {
                e2.getSelectedTimeline().animations.filter(function(e3) {
                  return e3.id === t3;
                }).forEach(function(t4) {
                  t4.collapsed = !t4.collapsed;
                });
              });
            } }, { key: "selectProperty", value: function(t3, e2) {
              var n2 = this;
              this.currentProject(function(r2) {
                var i2 = r2.getKeyframeListReturnArray().filter(function(n3) {
                  return n3.layerId === t3 && n3.property === e2;
                });
                n2.refreshCache(i2);
              });
            } }, { key: "select", value: function() {
              for (var t3 = arguments.length, e2 = new Array(t3), n2 = 0; n2 < t3; n2++)
                e2[n2] = arguments[n2];
              this.refreshCache(e2);
            } }, { key: "selectBySearch", value: function(t3, e2, n2) {
              var r2 = this;
              this.currentProject(function(i2) {
                var a2 = [];
                t3.forEach(function(t4) {
                  var r3 = [];
                  if (t4.property) {
                    var o2 = i2.getTimelineProperty(t4.layerId, t4.property);
                    r3 = o2.keyframes.filter(function(t5) {
                      return e2 <= t5.time && t5.time <= n2;
                    });
                  } else {
                    (o2 = i2.getTimelineObject(t4.layerId)).properties.filter(function(e3) {
                      return e3.property === t4.property;
                    }).forEach(function(t5) {
                      r3.push.apply(r3, t5.keyframes.filter(function(t6) {
                        return e2 <= t6.time && t6.time <= n2;
                      }));
                    });
                  }
                  a2.push.apply(a2, r3);
                });
                var c2 = {};
                a2.forEach(function(t4) {
                  c2[t4.id] = t4;
                }), r2.select.apply(r2, o()(Object.values(c2)));
              });
            } }, { key: "checkLayer", value: function(t3) {
              var e2 = this;
              return Object.keys(this.itemKeys).some(function(n2) {
                return e2.itemKeys[n2].layerId === t3;
              });
            } }, { key: "checkProperty", value: function(t3, e2) {
              var n2 = this;
              return Object.keys(this.itemKeys).some(function(r2) {
                return n2.itemKeys[r2].layerId === t3 && n2.itemKeys[r2].property === e2;
              });
            } }]), t2;
          }(), k = n(86), O = function() {
            function t2(e2) {
              s()(this, t2), this.editor = e2, this.components = {}, this.inspectors = {};
            }
            return l()(t2, [{ key: "registerComponent", value: function(t3, e2) {
              if (this.components[t3])
                throw new Error("It has duplicated item name. " + t3);
              this.components[t3] = e2;
            } }, { key: "registerInspector", value: function(t3, e2) {
              if (this.inspectors[t3])
                throw new Error("It has duplicated item name. " + t3);
              this.inspectors[t3] = e2;
            } }, { key: "getComponentClass", value: function(t3) {
              return this.components[t3] || this.components.rect;
            } }, { key: "getInspector", value: function(t3) {
              return this.inspectors[t3];
            } }, { key: "createComponent", value: function(t3) {
              var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n2 = this.getComponentClass(t3);
              if (!n2)
                throw new Error("".concat(t3, " type is not valid."));
              return new n2(e2);
            } }, { key: "createInspector", value: function(t3) {
              var e2 = this.getInspector(t3.itemType);
              return Object(h.isFunction)(e2) ? e2(t3) || [] : Object(h.isFunction)(t3.getProps) && t3.getProps() || [];
            } }]), t2;
          }();
          function x2(t2) {
            t2.emit("noneSelectMenu"), t2.nextTick(function() {
              t2.emit("refreshAll"), t2.emit("refreshSelectionTool");
            });
          }
          var j = n(2);
          var S = n(29);
          function P(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function w(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? P(Object(n2), true).forEach(function(e3) {
                g()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : P(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function R(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function C(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? R(Object(n2), true).forEach(function(e3) {
                g()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : R(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          var E = n(35);
          function $(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function I(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? $(Object(n2), true).forEach(function(e3) {
                g()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : $(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          var T, B = n(18), M = n.n(B), V = n(16), D = n.n(V), L = { command: "clipboard.paste", execute: (T = M()(D.a.mark(function t2(e2, n2) {
            var r2;
            return D.a.wrap(function(t3) {
              for (; ; )
                switch (t3.prev = t3.next) {
                  case 0:
                    if (!e2.selection.length || !e2.selection.copyItems.length) {
                      t3.next = 5;
                      break;
                    }
                    e2.selection.paste(), e2.emit("refreshAll"), t3.next = 9;
                    break;
                  case 5:
                    return t3.next = 7, navigator.clipboard.readText();
                  case 7:
                    (r2 = t3.sent) && e2.emit("convertPasteText", r2);
                  case 9:
                  case "end":
                    return t3.stop();
                }
            }, t2);
          })), function(t2, e2) {
            return T.apply(this, arguments);
          }) }, A = { command: "fileDropItems", execute: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
            t2.emit("updateResource", e2);
          } }, F = { command: "updateImage", execute: function(t2, e2, n2, r2) {
            var i2 = new FileReader();
            i2.onload = function(i3) {
              var a2 = i3.target.result, o2 = URL.createObjectURL(e2);
              t2.emit("addImageAssetItem", { id: Object(f.uuidShort)(), type: e2.type, name: e2.name, original: a2, local: o2 }, n2, r2);
            }, i2.readAsDataURL(e2);
          } }, z = { command: "updateVideo", execute: function(t2, e2, n2) {
            var r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : void 0, i2 = new FileReader();
            i2.onload = function(i3) {
              var a2 = i3.target.result, o2 = URL.createObjectURL(e2);
              t2.emit("addVideoAssetItem", { id: Object(f.uuidShort)(), type: e2.type, name: e2.name, original: a2, local: o2 }, n2, r2);
            }, i2.readAsDataURL(e2);
          } };
          function N(t2, e2) {
            var n2 = new Image();
            n2.onload = function() {
              var r2 = { id: t2.id, local: t2.local, naturalWidth: j.a.px(n2.naturalWidth), naturalHeight: j.a.px(n2.naturalHeight), width: j.a.px(n2.naturalWidth), height: j.a.px(n2.naturalHeight) };
              e2 && e2(r2, n2);
            }, n2.onerror = function(t3) {
              console.log(t3, t3.message);
            }, n2.src = t2.local;
          }
          function _(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function U(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? _(Object(n2), true).forEach(function(e3) {
                g()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : _(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          var G = { command: "addImageAssetItem", execute: function(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : void 0, i2 = t2.selection.currentProject;
            i2 && (i2.createImage(e2), t2.emit("addImageAsset"), N(e2, function(i3) {
              var a2 = n2.width.value / i3.width.value, o2 = n2.width, c2 = j.a.px(i3.height.value * a2);
              t2.emit("addImage", U(U(U({ src: e2.id }, i3), n2), {}, { width: o2, height: c2 }), r2), t2.changeMode(Qe), t2.emit("afterChangeMode");
            }));
          } };
          function H(t2, e2) {
            var n2 = document.createElement("video");
            n2.onloadeddata = function() {
              var r2 = { local: t2.local, naturalWidth: j.a.px(n2.videoWidth), naturalHeight: j.a.px(n2.videoHeight), width: j.a.px(n2.videoWidth), height: j.a.px(n2.videoHeight), duration: n2.duration, playTime: "0:1:".concat(n2.duration), volume: n2.volume, muted: n2.muted, placebackRate: n2.playbackRate };
              e2 && e2(r2, n2);
            }, n2.src = t2.local;
          }
          function K(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Y(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? K(Object(n2), true).forEach(function(e3) {
                g()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : K(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          var X = { command: "addVideoAssetItem", execute: function(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : void 0, i2 = t2.selection.currentProject;
            i2 && (i2.createVideo(e2), t2.emit("addVideoAsset"), H(e2, function(i3) {
              t2.emit("addVideo", Y(Y({ src: e2.id }, i3), n2), r2), t2.changeMode(Qe), t2.emit("afterChangeMode");
            }));
          } };
          function W(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          var Z = { command: "dropImageUrl", execute: function(t2, e2) {
            N({ local: e2 }, function(e3) {
              t2.emit("addImage", function(t3) {
                for (var e4 = 1; e4 < arguments.length; e4++) {
                  var n2 = arguments[e4] != null ? arguments[e4] : {};
                  e4 % 2 ? W(Object(n2), true).forEach(function(e5) {
                    g()(t3, e5, n2[e5]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(n2)) : W(Object(n2)).forEach(function(e5) {
                    Object.defineProperty(t3, e5, Object.getOwnPropertyDescriptor(n2, e5));
                  });
                }
                return t3;
              }({ src: e3.local }, e3)), t2.changeMode(Qe), t2.emit("afterChangeMode");
            });
          } }, q = { command: "addSVGFilterAssetItem", execute: function(t2, e2) {
            var n2 = t2.selection.currentProject;
            if (n2) {
              var r2 = Object(f.uuidShort)(), i2 = n2.createSVGFilter({ id: r2, filters: [] });
              e2 && e2(i2, r2);
            }
          } }, J = { command: "updateImageAssetItem", execute: function(t2, e2, n2) {
            var r2 = new FileReader();
            r2.onload = function(r3) {
              var i2 = r3.target.result, a2 = URL.createObjectURL(e2), o2 = t2.selection.currentProject;
              if (o2) {
                var c2 = o2.createImage({ id: Object(f.uuidShort)(), type: e2.type, name: e2.name, original: i2, local: a2 });
                t2.emit("addImageAsset"), Object(h.isFunction)(n2) && n2(c2.id);
              }
            }, r2.readAsDataURL(e2);
          } }, Q = { command: "updateVideoAssetItem", execute: function(t2, e2, n2) {
            var r2 = new FileReader();
            r2.onload = function(r3) {
              var i2 = r3.target.result, a2 = URL.createObjectURL(e2), o2 = t2.selection.currentProject;
              o2 && (o2.createVideo({ id: Object(f.uuidShort)(), type: e2.type, name: e2.name, original: i2, local: a2 }), t2.emit("addVideoAsset"), Object(h.isFunction)(n2) && n2(a2));
            }, r2.readAsDataURL(e2);
          } }, tt = n(40), et = n.n(tt), nt = function() {
            function t2() {
              s()(this, t2);
            }
            return l()(t2, null, [{ key: "parse", value: function(e2) {
              var n2 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1], r2 = e2.split("data:"), a2 = i()(r2, 2), o2 = (a2[0], a2[1]), c2 = o2.split(","), s2 = et()(c2), u2 = s2[0], l2 = s2.slice(1), f2 = u2.split(";"), h2 = i()(f2, 2), p2 = h2[0], d2 = h2[1];
              return l2 = l2.join(","), { mimeType: p2, local: n2 && t2.getLink(p2, d2, l2) };
            } }, { key: "getLink", value: function(t3, e2, n2) {
              if (e2 === "base64") {
                for (var r2 = atob(n2), i2 = r2.length, a2 = new Uint8Array(i2), o2 = 0; o2 < i2; o2++)
                  a2[o2] = r2.charCodeAt(o2);
                var c2 = new Blob([a2], { type: t3 });
                return URL.createObjectURL(c2);
              }
              return "";
            } }]), t2;
          }(), rt = { command: "updateUriList", execute: function(t2, e2) {
            var n2 = e2.data;
            if (n2.indexOf("data:") > -1) {
              var r2 = nt.parse(n2, true);
              switch (r2.mimeType) {
                case "image/png":
                case "image/gif":
                case "image/jpg":
                case "image/jpeg":
                  t2.emit("addImageAssetItem", { id: Object(f.uuidShort)(), type: r2.mimeType, name: "", original: n2, local: r2.local });
              }
            } else {
              var i2 = e2.data.split(".").pop(), a2 = e2.data.split("/").pop();
              switch (i2) {
                case "png":
                case "jpg":
                case "gif":
                case "svg":
                  t2.emit("addImageAssetItem", { id: Object(f.uuidShort)(), type: "image/" + i2, name: a2, original: e2.data, local: e2.data });
              }
            }
          } };
          function it(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "easylogic.json", n2 = document.createElement("a");
            n2.href = t2, n2.download = e2, n2.click();
          }
          var at = { command: "downloadJSON", execute: function(t2, e2) {
            var n2 = JSON.stringify(t2.projects);
            it("data:application/json;base64," + window.btoa(n2), e2 || "easylogic.json");
          } }, ot = function(t2, e2) {
            return t2.replaceLocalUrltoRealUrl(t2.svg.render(e2));
          }, ct = { command: "downloadSVG", execute: function(t2) {
            var e2 = t2.selection.current;
            if (e2) {
              var n2 = ot(t2, e2).trim();
              it("data:image/svg+xml;base64," + window.btoa(n2), e2.id);
            }
          } }, st = n(19);
          function ut(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "image/png", r2 = st.a.create("canvas"), i2 = t2.width, a2 = t2.height;
            r2.resize({ width: i2, height: a2 }), r2.drawImage(t2), e2 && e2(r2.toDataURL(n2));
          }
          var lt = { command: "downloadPNG", execute: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", n2 = t2.selection.current;
            if (n2) {
              var r2 = ot(t2, n2).trim(), i2 = "data:image/svg+xml;base64," + window.btoa(r2), a2 = n2.id;
              N({ local: i2 }, function(n3, r3) {
                ut(r3, function(n4) {
                  it(n4, a2), e2 && t2.emit(e2, n4);
                });
              });
            }
          } }, ft = { command: "load.json", execute: function(t2, e2) {
            (e2 = t2.loadResource("projects", []) || e2).length === 0 && (e2 = [{ itemType: "project", layers: [{ itemType: "artboard", name: "New ArtBoard", x: "300px", y: "200px", width: "375px", height: "667px", "background-color": "white", layer: [] }] }]);
            var n2 = e2.map(function(e3) {
              return t2.createItem(e3);
            });
            if (n2.forEach(function(t3) {
              t3.artboards.forEach(function(e3) {
                t3.selectTimeline(e3.id);
              });
            }), n2.length) {
              var r2 = n2[0];
              t2.selection.selectProject(r2), t2.load(n2), x2(t2);
            }
          } };
          function ht(t2, e2) {
            var n2 = t2.selection.currentProject;
            if (n2) {
              var r2 = n2.getSelectedTimeline();
              e2 && e2(n2, r2);
            }
          }
          var pt = { command: "addTimelineProperty", execute: function(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : { timing: "linear" };
            ht(t2, function(r2, i2) {
              var a2;
              Object(h.isArray)(e2) === false && (e2 = [e2]);
              var o2 = [];
              e2.forEach(function(t3) {
                var e3 = { layerId: t3, property: n2.property, value: n2.value + "", timing: n2.timing, editor: n2.editor }, i3 = r2.addTimelineKeyframe(e3);
                i3 && o2.push(i3);
              }), (a2 = t2.timeline).select.apply(a2, o2), t2.emit("refreshTimeline"), t2.emit("refreshSelectedOffset");
            });
          } }, dt = { command: "setTimelineOffset", debounce: 100, execute: function(t2, e2) {
            ht(t2, function(n2, r2) {
              n2.setTimelineKeyframeOffsetValue(e2.layerId, e2.property, e2.id, e2.value, e2.timing, e2.time), t2.emit("refreshTimeline");
            });
          } }, vt = { command: "addTimelineCurrentProperty", execute: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : { timing: "linear" };
            ht(t2, function(n2, r2) {
              var i2, a2 = [];
              t2.selection.each(function(t3) {
                var r3 = { layerId: t3.id, property: e2.property, value: t3[e2.property] + "", timing: e2.timing, editor: e2.editor }, i3 = n2.addTimelineKeyframe(r3);
                i3 && a2.push(i3);
              }), (i2 = t2.timeline).select.apply(i2, a2), t2.emit("refreshTimeline"), t2.emit("refreshSelectedOffset");
            });
          } }, yt = { command: "removeTimelineProperty", execute: function(t2, e2, n2) {
            ht(t2, function(r2, i2) {
              r2.removeTimelineProperty(e2, n2), t2.timeline.empty(), t2.emit("refreshTimeline"), t2.emit("refreshSelectedOffset");
            });
          } }, gt = { command: "deleteTimelineKeyframe", execute: function(t2) {
            ht(t2, function(e2, n2) {
              t2.timeline.each(function(t3) {
                e2.deleteTimelineKeyframe(t3.layerId, t3.property, t3.id);
              }), t2.timeline.empty(), t2.emit("refreshTimeline"), t2.emit("refreshSelectedOffset");
            });
          } }, mt = { command: "selectTimelineItem", execute: function(t2, e2) {
            ht(t2, function(n2, r2) {
              n2.selectTimeline(e2), t2.emit("refreshTimeline"), t2.emit("selectTimeline");
            });
          } }, bt = { command: "removeTimeline", execute: function(t2, e2) {
            ht(t2, function(n2, r2) {
              n2.removeTimeline(e2), t2.timeline.empty(), t2.emit("refreshTimeline"), t2.emit("refreshSelectedOffset");
            });
          } }, kt = { command: "removeAnimationItem", execute: function(t2, e2) {
            ht(t2, function(n2, r2) {
              n2.removeAnimation(e2), t2.timeline.empty(), t2.emit("refreshTimeline"), t2.emit("removeAnimation");
            });
          } }, Ot = { command: "addTimelineKeyframe", execute: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : { timing: "linear" };
            ht(t2, function(n2, r2) {
              var i2 = n2.searchById(e2.layerId), a2 = { layerId: e2.layerId, property: e2.property, time: e2.time, value: i2[e2.property] + "", timing: e2.timing, editor: e2.editor }, o2 = n2.addTimelineKeyframe(a2);
              t2.timeline.select(o2), t2.emit("refreshTimeline"), t2.emit("refreshSelectedOffset");
            });
          } }, xt = { command: "copyTimelineProperty", execute: function(t2, e2, n2) {
            var r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
            ht(t2, function(i2, a2) {
              i2.copyTimelineKeyframe(e2, n2, r2), t2.emit("refreshTimeline");
            });
          } }, jt = n(31), St = { command: "playTimelineItem", description: "Play button action", execute: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1, n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1, r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "normal";
            t2.selection.empty(), t2.emit("refreshSelection"), t2.changeMode("play"), t2.emit("afterChangeMode"), ht(t2, function(i2, a2) {
              var o2 = i2.getSelectedTimelineLastTime();
              t2.timer ? t2.timer.stop() : t2.timer = Object(jt.b)({ elapsed: 1e3 * a2.currentTime, speed: e2, duration: 1e3 * o2, iterationCount: n2, direction: r2 }), t2.timer.play({ duration: 1e3 * o2, elapsed: 1e3 * a2.currentTime, speed: e2, iterationCount: n2, direction: r2, tick: function(e3, n3) {
                i2.seek(Object(jt.d)(a2.fps, e3 / 1e3)), t2.emit("playTimeline");
              }, last: function(e3, n3) {
                i2.seek(Object(jt.d)(a2.fps, e3 / 1e3)), t2.emit("playTimeline"), t2.nextTick(function() {
                  t2.emit("stopTimeline"), t2.changeMode("SELECTION"), t2.emit("afterChangeMode");
                });
              }, stop: function(e3, n3) {
                i2.stop(Object(jt.d)(a2.fps, e3 / 1e3)), t2.emit("stopTimeline"), t2.changeMode("SELECTION"), t2.emit("afterChangeMode");
              } });
            });
          } }, Pt = { command: "prevTimelineItem", execute: function(t2) {
            ht(t2, function(e2, n2) {
              var r2 = e2.getSelectedTimelinePrevTime();
              e2.setTimelineCurrentTime(Object(jt.d)(n2.fps, r2)), e2.seek(), t2.emit("playTimeline"), t2.changeMode("SELECTION"), t2.emit("afterChangeMode");
            });
          } }, wt = { command: "firstTimelineItem", execute: function(t2) {
            ht(t2, function(e2, n2) {
              var r2 = e2.getSelectedTimelineFirstTime();
              e2.setTimelineCurrentTime(Object(jt.d)(n2.fps, r2)), e2.seek(), t2.emit("playTimeline"), t2.changeMode("SELECTION"), t2.emit("afterChangeMode");
            });
          } }, Rt = { command: "nextTimelineItem", execute: function(t2) {
            ht(t2, function(e2, n2) {
              var r2 = e2.getSelectedTimelineNextTime();
              e2.setTimelineCurrentTime(Object(jt.d)(n2.fps, r2)), e2.seek(), t2.emit("playTimeline"), t2.changeMode("SELECTION"), t2.emit("afterChangeMode");
            });
          } }, Ct = { command: "lastTimelineItem", execute: function(t2) {
            ht(t2, function(e2, n2) {
              var r2 = e2.getSelectedTimelineLastTime();
              e2.setTimelineCurrentTime(Object(jt.d)(n2.fps, r2)), e2.seek(), t2.emit("playTimeline"), t2.changeMode("SELECTION"), t2.emit("afterChangeMode");
            });
          } }, Et = { command: "addTimelineItem", execute: function(t2, e2) {
            ht(t2, function(n2, r2) {
              e2 ? n2.addTimelineLayer(e2) : n2.addTimeline(), t2.emit("refreshTimeline"), t2.emit("addTimeline");
            });
          } }, $t = { command: "drop.asset", execute: function() {
            var t2 = M()(D.a.mark(function t3(e2, n2) {
              var r2, i2, a2 = arguments;
              return D.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      if (r2 = a2.length > 2 && a2[2] !== void 0 ? a2[2] : null, !n2.color) {
                        t4.next = 5;
                        break;
                      }
                      e2.emit("addBackgroundColor", n2.color, r2), t4.next = 22;
                      break;
                    case 5:
                      if (!n2.gradient) {
                        t4.next = 9;
                        break;
                      }
                      e2.emit("addBackgroundImageGradient", n2.gradient, r2), t4.next = 22;
                      break;
                    case 9:
                      if (!n2.pattern) {
                        t4.next = 13;
                        break;
                      }
                      e2.emit("addBackgroundImagePattern", n2.pattern, r2), t4.next = 22;
                      break;
                    case 13:
                      if (!n2.imageUrl) {
                        t4.next = 17;
                        break;
                      }
                      e2.emit("addBackgroundImageAsset", n2.imageUrl, r2), t4.next = 22;
                      break;
                    case 17:
                      if (!n2.asset) {
                        t4.next = 22;
                        break;
                      }
                      return t4.next = 20, e2.storageManager.getCustomAsset(n2.asset.id);
                    case 20:
                      (i2 = t4.sent) && e2.emit("addArtBoard", i2, n2.asset.center);
                    case 22:
                      x2(e2);
                    case 23:
                    case "end":
                      return t4.stop();
                  }
              }, t3);
            }));
            return function(e2, n2) {
              return t2.apply(this, arguments);
            };
          }() }, It = n(34), Tt = { command: "addBackgroundImageGradient", execute: function(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
            console.log(n2);
            var r2 = t2.selection.itemsByIds(n2);
            console.log(r2);
            var i2 = {};
            r2.forEach(function(t3) {
              var n3 = It.a.parseStyle(Object(h.STRING_TO_CSS)(t3["background-image"]));
              n3.unshift(new It.a({ image: It.a.parseImage(e2) })), i2[t3.id] = { "background-image": It.a.join(n3) };
            }), t2.emit("history.setAttributeForMulti", "add gradient", i2);
          } }, Bt = n(60), Mt = { command: "addBackgroundImageAsset", execute: function(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, r2 = t2.selection.itemsByIds(n2), i2 = {};
            r2.forEach(function(t3) {
              var n3 = It.a.parseStyle(Object(h.STRING_TO_CSS)(t3["background-image"]));
              n3.unshift(new It.a({ image: new Bt.a({ url: e2 }) })), i2[t3.id] = { "background-image": It.a.join(n3) };
            }), t2.emit("history.setAttributeForMulti", "add background image", i2);
          } }, Vt = { command: "removeLayer", execute: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : void 0;
            t2.selection.itemsByIds(e2 || t2.selection.ids).forEach(function(t3) {
              t3.remove();
            }), t2.selection.empty(), t2.nextTick(function() {
              t2.emit("refreshAll");
            });
          } }, Dt = { command: "change.mode.view", execute: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "CanvasView";
            t2.changeModeView(e2);
          } }, Lt = { command: "segment.move.down", execute: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : { dy: 1 }, n2 = +e2.dy;
            t2.emit("moveSegment", 0, n2);
          } }, At = { command: "segment.move.up", execute: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : { dy: 1 }, n2 = +e2.dy;
            t2.emit("moveSegment", 0, -1 * n2);
          } }, Ft = { command: "segment.move.right", execute: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : { dx: 1 }, n2 = +e2.dx;
            t2.emit("moveSegment", n2, 0);
          } }, zt = { command: "segment.move.left", execute: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : { dx: 1 }, n2 = +e2.dx;
            t2.emit("moveSegment", -1 * n2, 0);
          } }, Nt = n(43), _t = { command: "addBackgroundImagePattern", execute: function(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, r2 = t2.selection.itemsByIds(n2), i2 = {};
            r2.forEach(function(t3) {
              i2[t3.id] = { pattern: Nt.a.join([].concat(o()(Nt.a.parseStyle(e2)), o()(Nt.a.parseStyle(t3.pattern)))) };
            }), t2.emit("history.setAttributeForMulti", "add pattern", i2);
          } }, Ut = { command: "addBackgroundColor", execute: function(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
            t2.command("setAttributeForMulti", "add background color", t2.selection.packByValue({ "background-color": e2 }, n2));
          } };
          var Gt = { command: "sort.center", execute: function(t2) {
            if (t2.selection.isOne) {
              var e2 = t2.selection.current;
              if (e2.parent.is("project"))
                ;
              else if (e2.artboard) {
                var n2 = Object(f.getVertiesCenterX)(e2.artboard.verties) - Object(f.getVertiesCenterX)(t2.selection.verties);
                t2.emit("moveLayer", n2, 0);
              }
            } else if (t2.selection.isMany) {
              var r2 = Object(f.getVertiesCenterX)(t2.selection.verties);
              t2.emit("moveLayerForItems", t2.selection.map(function(t3) {
                var e3 = Object(f.getVertiesCenterX)(t3.verties);
                return { item: t3, dist: [r2 - e3, 0, 0] };
              }));
            }
          } }, Ht = { command: "sort.left", execute: function(t2) {
            if (t2.selection.isOne) {
              var e2 = t2.selection.current;
              if (e2.parent.is("project"))
                ;
              else if (e2.artboard) {
                var n2 = Object(f.getVertiesMinX)(e2.artboard.verties) - Object(f.getVertiesMinX)(t2.selection.verties);
                t2.emit("moveLayer", n2, 0);
              }
            } else if (t2.selection.isMany) {
              var r2 = Object(f.getVertiesMinX)(t2.selection.verties);
              t2.emit("moveLayerForItems", t2.selection.map(function(t3) {
                var e3 = Object(f.getVertiesMinX)(t3.verties);
                return { item: t3, dist: [r2 - e3, 0, 0] };
              }));
            }
          } }, Kt = { command: "sort.middle", execute: function(t2) {
            if (t2.selection.isOne) {
              var e2 = t2.selection.current;
              if (e2.parent.is("project"))
                ;
              else if (e2.artboard) {
                var n2 = Object(f.getVertiesCenterY)(e2.artboard.verties) - Object(f.getVertiesCenterY)(t2.selection.verties);
                t2.emit("moveLayer", 0, n2);
              }
            } else if (t2.selection.isMany) {
              var r2 = Object(f.getVertiesCenterY)(t2.selection.verties);
              t2.emit("moveLayerForItems", t2.selection.map(function(t3) {
                var e3 = Object(f.getVertiesCenterY)(t3.verties);
                return { item: t3, dist: [0, r2 - e3, 0, 0] };
              }));
            }
          } }, Yt = { command: "sort.bottom", execute: function(t2) {
            if (t2.selection.isOne) {
              var e2 = t2.selection.current;
              if (e2.parent.is("project"))
                ;
              else if (e2.artboard) {
                var n2 = Object(f.getVertiesMaxY)(e2.artboard.verties) - Object(f.getVertiesMaxY)(t2.selection.verties);
                t2.emit("moveLayer", 0, n2);
              }
            } else if (t2.selection.isMany) {
              var r2 = Object(f.getVertiesMaxY)(t2.selection.verties);
              t2.emit("moveLayerForItems", t2.selection.map(function(t3) {
                var e3 = Object(f.getVertiesMaxY)(t3.verties);
                return { item: t3, dist: [0, r2 - e3, 0, 0] };
              }));
            }
          } }, Xt = { command: "sort.top", execute: function(t2) {
            if (t2.selection.isOne) {
              var e2 = t2.selection.current;
              if (e2.parent.is("project"))
                ;
              else if (e2.artboard) {
                var n2 = Object(f.getVertiesMinY)(e2.artboard.verties) - Object(f.getVertiesMinY)(t2.selection.verties);
                t2.emit("moveLayer", 0, n2);
              }
            } else if (t2.selection.isMany) {
              var r2 = Object(f.getVertiesMinY)(t2.selection.verties);
              t2.emit("moveLayerForItems", t2.selection.map(function(t3) {
                var e3 = Object(f.getVertiesMinY)(t3.verties);
                return { item: t3, dist: [0, r2 - e3, 0, 0] };
              }));
            }
          } }, Wt = { command: "sort.right", execute: function(t2) {
            if (t2.selection.isOne) {
              var e2 = t2.selection.current;
              if (e2.parent.is("project"))
                ;
              else if (e2.artboard) {
                var n2 = Object(f.getVertiesMaxX)(e2.artboard.verties) - Object(f.getVertiesMaxX)(t2.selection.verties);
                t2.emit("moveLayer", n2, 0);
              }
            } else if (t2.selection.isMany) {
              var r2 = Object(f.getVertiesMaxX)(t2.selection.verties);
              t2.emit("moveLayerForItems", t2.selection.map(function(t3) {
                var e3 = Object(f.getVertiesMaxX)(t3.verties);
                return { item: t3, dist: [r2 - e3, 0, 0] };
              }));
            }
          } }, Zt = n(21), qt = { command: "same.width", description: "fit at the same width", execute: function(t2) {
            if (console.log(t2.selection.isMany), t2.selection.isMany) {
              var e2 = Object(Zt.i)(t2.selection.verties);
              t2.command("setAttributeForMulti", "fit at the same width", t2.selection.packByValue({ x: e2.x, width: e2.width }));
            }
          } }, Jt = { command: "same.height", description: "fit at the same height", execute: function(t2) {
            var e2 = t2.selection.length;
            if (e2 == 1)
              ;
            else if (e2 > 1) {
              var n2 = Object(Zt.i)(t2.selection.verties);
              t2.command("setAttributeForMulti", "fit at the same height", t2.selection.packByValue({ y: n2.y, height: n2.height }));
            }
          } };
          var Qt = { command: "item.move.depth.down", execute: function(t2) {
            var e2 = t2.selection.current;
            e2 && e2.orderPrev(), x2(t2);
          } }, te = { command: "item.move.depth.up", execute: function(t2) {
            var e2 = t2.selection.current;
            e2 && e2.orderNext(), x2(t2);
          } };
          function ee(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          var ne = { command: "group.item", execute: function(t2) {
            if (t2.selection.length !== 0) {
              var e2 = t2.selection.currentProject;
              if (e2) {
                e2.generateListNumber();
                var n2 = t2.selection.map(function(t3) {
                  return { depth: t3.depth, item: t3 };
                });
                n2.sort(function(t3, e3) {
                  return t3.depth === e3.depth ? t3.no > e3.no ? -1 : 1 : t3.depth > e3.depth ? 1 : -1;
                });
                var r2 = t2.createItem(function(t3) {
                  for (var e3 = 1; e3 < arguments.length; e3++) {
                    var n3 = arguments[e3] != null ? arguments[e3] : {};
                    e3 % 2 ? ee(Object(n3), true).forEach(function(e4) {
                      g()(t3, e4, n3[e4]);
                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(n3)) : ee(Object(n3)).forEach(function(e4) {
                      Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(n3, e4));
                    });
                  }
                  return t3;
                }({ itemType: "rect" }, t2.selection.itemRect));
                n2[0].item.appendAfter(r2), n2.forEach(function(t3) {
                  var e3 = t3.item;
                  r2.appendChildItem(e3);
                }), t2.selection.select(r2), t2.emit("refreshAll");
              }
            }
          } }, re = { command: "ungroup.item", execute: function(t2) {
            if (t2.selection.length !== 0) {
              var e2 = t2.selection.current;
              if (e2) {
                var n2, r2 = e2, i2 = o()(r2.layers);
                i2.reverse(), i2.forEach(function(t3) {
                  r2.appendAfter(t3);
                }), (n2 = t2.selection).selection.apply(n2, o()(i2)), t2.emit("refreshAll");
              }
            }
          } }, ie = { command: "history.refreshSelection", description: "save selection in history ", description_ko: "Selection \uC815\uBCF4\uB97C \uAC31\uC2E0\uD558\uBA74\uC11C History \uC5D0 \uC800\uC7A5\uD55C\uB2E4", execute: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "selection", n2 = t2.selection.ids, r2 = t2.history.selectedIds;
            Object(h.isArrayEquals)(n2, r2) || (t2.history.add(e2, this, { currentValues: n2, undoValues: r2 }), this.nextAction(t2));
          }, nextAction: function(t2) {
            t2.nextTick(function() {
              t2.history.saveSelection(), t2.emit("refreshSelection"), t2.nextTick(function() {
                t2.emit("refreshSelectionTool");
              });
            });
          }, redo: function(t2, e2) {
            var n2 = e2.currentValues;
            t2.selection.selectById(n2), this.nextAction(t2);
          }, undo: function(t2, e2) {
            var n2 = e2.undoValues;
            t2.selection.selectById(n2), this.nextAction(t2);
          } }, ae = { command: "setAttributeForMulti", execute: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
            Object.keys(e2).forEach(function(n2) {
              var r2 = e2[n2];
              t2.selection.itemsByIds(n2).forEach(function(e3) {
                var i2 = {};
                Object.keys(r2).forEach(function(t3) {
                  var n3 = r2[t3];
                  i2[t3] = Object(h.isFunction)(n3) ? n3(e3) : n3;
                }), e3.reset(i2) && (t2.emit("refreshElement", e3), t2.emit("changeValue", n2, i2));
              });
            });
          } }, oe = { command: "history.setAttributeForMulti", execute: function(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
            t2.emit("setAttributeForMulti", n2), t2.history.add(e2, this, { currentValues: [n2], undoValues: t2.history.getUndoValuesForMulti(n2) }), t2.nextTick(function() {
              t2.history.saveSelection();
            });
          }, redo: function(t2, e2) {
            var n2 = e2.currentValues;
            t2.emit.apply(t2, ["setAttributeForMulti"].concat(o()(n2))), t2.nextTick(function() {
              t2.selection.reselect(), t2.emit("refreshAll");
            });
          }, undo: function(t2, e2) {
            var n2 = e2.undoValues, r2 = Object.keys(n2);
            t2.selection.itemsByIds(r2).forEach(function(t3) {
              t3.reset(n2[t3.id]);
            }), t2.selection.reselect(), t2.nextTick(function() {
              t2.emit("refreshAll");
            });
          } }, ce = { command: "history.addLayer", description: "add layer in history ", execute: function(t2, e2, n2) {
            var r2 = this, i2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {}, a2 = !(arguments.length > 4 && arguments[4] !== void 0) || arguments[4], o2 = arguments.length > 5 ? arguments[5] : void 0;
            t2.emit("addLayer", n2, i2, a2, o2), t2.nextTick(function() {
              t2.history.add(e2, r2, { currentValues: [n2, {}, a2, n2.parent], undoValues: [n2.id] });
            }), t2.nextTick(function() {
              t2.history.saveSelection();
            });
          }, redo: function(t2, e2) {
            var n2 = e2.currentValues;
            t2.emit.apply(t2, ["addLayer"].concat(o()(n2))), t2.nextTick(function() {
              t2.emit("refreshAll");
            });
          }, undo: function(t2, e2) {
            var n2 = e2.undoValues;
            t2.selection.itemsByIds(n2).forEach(function(t3) {
              t3 && t3.remove();
            }), t2.nextTick(function() {
              t2.emit("refreshAll");
            });
          } };
          function se() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
            return t2.filter(function(e2) {
              var n2 = 0;
              return e2.path.forEach(function(e3) {
                n2 += t2.filter(function(t3) {
                  return t3.id === e3.id;
                }).length ? 1 : 0;
              }), n2 === 1;
            });
          }
          var ue = { command: "history.removeLayer", description: "remove layer", execute: function(t2, e2, n2, r2) {
            var i2 = t2.selection.itemsByIds(r2 || t2.selection.ids), a2 = (i2 = se(i2)).map(function(t3) {
              return t3.id;
            }), o2 = t2.serialize(i2);
            i2.forEach(function(t3) {
              return t3.remove();
            }), t2.history.add(e2, this, { currentValues: [a2], undoValues: o2 }), t2.nextTick(function() {
              t2.selection.removeById(i2.map(function(t3) {
                return t3.id;
              })), t2.emit("refreshAll"), t2.emit("removeGuideLine"), t2.nextTick(function() {
                t2.history.saveSelection();
              });
            });
          }, redo: function(t2, e2) {
            var n2 = e2.currentValues[0], r2 = t2.selection.itemsByIds(n2 || t2.selection.ids);
            (r2 = se(r2)).forEach(function(t3) {
              return t3.remove();
            }), t2.nextTick(function() {
              t2.emit("refreshAll");
            });
          }, undo: function(t2, e2) {
            var n2 = e2.undoValues;
            t2.deserialize(n2, true), t2.nextTick(function() {
              t2.emit("refreshAll");
            });
          } }, le = n(9), fe = { command: "updatePathItem", description: "Update path string for selected svg path item", execute: function(t2, e2) {
            var n2 = t2.selection.current;
            if (n2)
              if (e2.box === "box") {
                var r2 = n2.invertPath(e2.d);
                t2.emit("setAttributeForMulti", t2.selection.packByValue({ d: r2.scale(1 / n2.width.value, 1 / n2.height.value).d }));
              } else {
                var i2 = n2.invertPath(e2.d), a2 = i2.getBBox(), o2 = n2.offsetX.value + a2[0][0], c2 = n2.offsetY.value + a2[0][1], s2 = le.d.distance(a2[1], a2[0]), u2 = le.d.distance(a2[3], a2[0]);
                i2.translate(-a2[0][0], -a2[0][1]), t2.emit("setAttributeForMulti", t2.selection.packByValue({ d: i2.scale(1 / s2, 1 / u2).d, x: j.a.px(o2), y: j.a.px(c2), width: j.a.px(s2), height: j.a.px(u2) }));
              }
          } }, he = { command: "moveLayer", description: "move layer by keydown with matrix ", execute: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
            t2.command("setAttributeForMulti", "item move down", t2.selection.packByValue({ x: function(t3) {
              return j.a.px(t3.offsetX.value + e2);
            }, y: function(t3) {
              return j.a.px(t3.offsetY.value + n2);
            } })), t2.nextTick(function() {
              t2.selection.reselect(), t2.emit("refreshAll");
            });
          } }, pe = { command: "moveToCenter", description: "Move Layer to Center on Viewport", execute: function(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 && arguments[2];
            e2 && t2.viewport.moveLayerToCenter(e2, void 0, n2);
          } }, de = { command: "moveLayerForItems", description: "mova layer by multi items ", execute: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], n2 = {};
            e2.forEach(function(t3) {
              n2[t3.item.id] = { x: j.a.px(t3.item.offsetX.value + t3.dist[0]).round(), y: j.a.px(t3.item.offsetY.value + t3.dist[1]).round() };
            }), t2.emit("history.setAttributeForMulti", "item move down", n2), t2.nextTick(function() {
              t2.selection.reselect(), t2.emit("refreshAll");
            });
          } }, ve = { command: "moveSelectionToCenter", description: "Move selection project or artboards to center on Viewport", execute: function(t2) {
            var e2 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1], n2 = [];
            n2 = t2.selection.isEmpty ? t2.selection.currentProject.rectVerties : Object(Zt.b)(t2.selection.items), t2.emit("moveToCenter", n2, e2);
          } }, ye = { command: "savePNG", execute: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", n2 = t2.selection.current;
            if (n2) {
              var r2 = ot(t2, n2).trim(), i2 = "data:image/svg+xml;base64," + window.btoa(r2);
              N({ local: i2 }, function(n3, r3) {
                ut(r3, function(n4) {
                  e2 && t2.emit(e2, n4);
                });
              });
            }
          } }, ge = { command: "refreshCursor", execute: function(t2, e2) {
            for (var n2 = arguments.length, r2 = new Array(n2 > 2 ? n2 - 2 : 0), i2 = 2; i2 < n2; i2++)
              r2[i2 - 2] = arguments[i2];
            t2.emit.apply(t2, ["changeIconView", e2].concat(r2));
          } }, me = n(92), be = n.n(me), ke = { command: "convertPasteText", execute: function() {
            var t2 = M()(D.a.mark(function t3(e2, n2) {
              var r2, i2;
              return D.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      (r2 = be.a.create({ videoInfo: be.a.parse(n2), format: "embed", mediaType: "clip" })) && (i2 = e2.viewport.center, 300, 200, e2.emit("newComponent", "iframe", { x: j.a.px(i2[0] - 150), y: j.a.px(i2[1] - 100), width: j.a.px(300), height: j.a.px(200), "background-color": "transparent", url: r2 }));
                    case 2:
                    case "end":
                      return t4.stop();
                  }
              }, t3);
            }));
            return function(e2, n2) {
              return t2.apply(this, arguments);
            };
          }() };
          function Oe(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function xe(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Oe(Object(n2), true).forEach(function(e3) {
                g()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Oe(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          var je = n(26), Se = { command: "rotateLayer", description: "rotate layer by keydown with matrix ", execute: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
            t2.command("setAttributeForMulti", "change rotate", t2.selection.packByValue({ transform: function(t3) {
              return je.a.addTransform(t3.transform, "rotateZ(".concat(j.a.deg(e2).round(1e3), ")"));
            } })), t2.nextTick(function() {
              t2.selection.reselect(), t2.emit("refreshAll");
            });
          } };
          var Pe, we = n(36), Re = (Pe = { openEditor: { command: "openEditor", description: "Open custom editor for item  when doubleclick is fired", execute: function(t2) {
            if (t2.selection.isOne !== false) {
              var e2 = t2.selection.current;
              if (e2) {
                if (e2.setCache(), e2.d)
                  t2.emit("showPathEditor", "modify", { box: "canvas", current: e2, d: e2.accumulatedPath().d, changeEvent: function(e3) {
                    console.log(e3.d), t2.emit("updatePathItem", e3);
                  } }), t2.emit("hideSelectionToolView");
                else if (e2["clip-path"]) {
                  var n2 = we.a.parseStyle(e2["clip-path"]);
                  if (n2.type === "path") {
                    var r2 = e2.accumulatedPath(e2.clipPathString).d, i2 = r2 ? "modify" : "path";
                    t2.emit("showPathEditor", i2, { changeEvent: function(n3) {
                      n3.d = e2.invertPath(n3.d).scale(1 / e2.width.value, 1 / e2.height.value).d, t2.command("setAttributeForMulti", "change clip-path", t2.selection.packByValue({ "clip-path": "path(".concat(n3.d, ")") }));
                    }, current: e2, d: r2 }), t2.emit("hideSelectionToolView");
                  } else
                    n2.type === "svg" || t2.emit("showClipPathPopup", { "clip-path": e2["clip-path"], changeEvent: function(e3) {
                      t2.command("setAttributeForMulti", "change clip-path", t2.selection.packByValue(e3));
                    } });
                }
              }
            }
          } }, openPathEditor: { command: "openPathEditor", description: "Show path editor for d property ", execute: function(t2, e2) {
            var n2 = t2.selection.current;
            n2 && n2.d && (n2.setCache(), t2.emit("hideSelectionToolView"), t2.emit("showPathEditor", "modify", { box: "canvas", current: n2, d: n2.accumulatedPath().d }));
          } }, refreshHistory: function(t2) {
            t2.emit("saveJSON");
          }, convertPasteText: ke, refreshCursor: ge, recoverCursor: { command: "recoverCursor", execute: function(t2) {
            t2.emit("changeIconView", "auto");
          } }, toggleToolHand: { command: "toggleToolHand", execute: function(t2) {
            t2.config.toggle("set.tool.hand");
          } }, rotateLayer: Se, historyAddLayer: ce, historyRemoveLayer: ue, historySetAttributeForMulti: oe, historyRefreshSelection: ie, historyRedo: { command: "history.redo", execute: function(t2) {
            t2.history.redo();
          } }, historyUndo: { command: "history.undo", execute: function(t2) {
            t2.history.undo();
          } }, moveLayer: he, moveLayerForItems: de, moveToCenter: pe, moveSelectionToCenter: ve, groupItem: ne, ungroupItem: re, setEditorLayout: { command: "setEditorLayout", execute: function(t2, e2) {
            t2.setLayout(e2), t2.emit("changedEditorlayout");
          } }, refreshArtboard: function(t2) {
            t2.emit("refreshLayerTreeView"), t2.emit("refreshAllCanvas"), t2.emit("refreshStyleView"), t2.emit("refreshSelectionStyleView"), t2.emit("refreshAllElementBoundSize"), t2.emit("refreshSelection"), t2.nextTick(function() {
              t2.emit("refreshSelectionTool", true);
            });
          }, resetSelection: function(t2) {
            t2.nextTick(function() {
              t2.emit("refreshSelectionTool");
            });
          }, addBackgroundColor: Ut, addBackgroundImagePattern: _t, segmentDelete: { command: "segment.delete", execute: function(t2, e2) {
            t2.emit("deleteSegment");
          } }, segmentMoveDown: Lt, segmentMoveUp: At, segmentMoveRight: Ft, segmentMoveLeft: zt, changeModeView: Dt, removeLayer: Vt, itemMoveDepthDown: Qt, itemMoveDepthUp: te, keymapKeydown: { command: "keymap.keydown", execute: function(t2, e2) {
            t2.keyboardManager.add(e2.code, e2.keyCode), t2.shortcuts.execute(e2, "keydown");
          } }, keymapKeyup: { command: "keymap.keyup", execute: function(t2, e2) {
            t2.keyboardManager.remove(e2.key, e2.keyCode), t2.shortcuts.execute(e2, "keyup");
          } }, scaleMinus: { command: "scale.minus", execute: function(t2) {
            var e2 = t2.viewport.scale;
            t2.viewport.setScale(t2.viewport.scale - 0.25), t2.emit("updateViewport", t2.viewport.scale, e2);
          } }, scalePlus: { command: "scale.plus", execute: function(t2) {
            var e2 = t2.viewport.scale;
            t2.viewport.setScale(t2.viewport.scale + 0.25), t2.emit("updateViewport", t2.viewport.scale, e2);
          } }, dropAsset: $t, addBackgroundImageAsset: Mt, addBackgroundImageGradient: Tt, addTimelineItem: Et, pauseTimelineItem: { command: "pauseTimelineItem", execute: function(t2) {
            t2.timer && t2.timer.stop();
          } }, lastTimelineItem: Ct, nextTimelineItem: Rt, firstTimelineItem: wt, prevTimelineItem: Pt, playTimelineItem: St, copyTimelineProperty: xt, addTimelineKeyframe: Ot, removeAnimationItem: kt, removeTimeline: bt, selectTimelineItem: mt, deleteTimelineKeyframe: gt, removeTimelineProperty: yt, addTimelineCurrentProperty: vt, setTimelineOffset: dt, refreshSelectedOffset: { command: "refreshSelectedOffset", execute: function(t2) {
            var e2 = t2.timeline.items[0];
            e2 && t2.emit("refreshOffsetValue", e2);
          } }, addTimelineProperty: pt, setLocale: { command: "setLocale", execute: function(t2, e2) {
            t2.setLocale(e2), t2.emit("changed.locale");
          } }, loadJSON: ft, saveJSON: { command: "saveJSON", execute: function(t2) {
            t2.saveResource("projects", t2.projects);
          } }, savePNG: ye, downloadPNG: lt, downloadSVG: ct, downloadJSON: at, updateUriList: rt, updateImageAssetItem: J, updateVideoAssetItem: Q, addSVGFilterAssetItem: q, dropImageUrl: Z, addImageAssetItem: G, addVideoAssetItem: X, updateImage: F, updateVideo: z, updateResource: { command: "updateResource", execute: function(t2, e2) {
            e2.forEach(function(e3) {
              switch (e3.type) {
                case "image/svg+xml":
                case "image/png":
                case "image/gif":
                case "image/jpg":
                case "image/jpeg":
                  t2.emit("updateImage", e3);
                  break;
                case "text/plain":
                case "text/html":
                  t2.emit("addText", { content: e3.data });
                  break;
                case "text/uri-list":
                  t2.emit("updateUriList", e3);
              }
            });
          } }, fileDropItems: A, updateScale: { command: "updateScale", execute: function(t2, e2) {
            var n2 = t2.viewport.scale;
            t2.viewport.setScale(e2), t2.emit("updateViewport", e2, n2);
          } }, showExportView: { command: "showExportView", execute: function(t2) {
            t2.emit("showExportWindow");
          } }, switchTheme: { command: "switchTheme", execute: function(t2, e2) {
            t2.changeTheme(e2), t2.emit("changeTheme");
          } }, clipboardPaste: L, clipboardCopy: { command: "clipboard.copy", title: "Copy", description: "Copy", execute: function(t2, e2) {
            t2.selection.copy();
          } }, addComponentType: function(t2, e2) {
            t2.changeAddType(e2), t2.emit("afterChangeMode"), t2.emit("addStatusBarMessage", "Drag if you want to create ".concat(e2, " layer"));
          }, addArtBoard: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, r2 = t2.selection.currentProject;
            r2 || (r2 = t2.add(t2.createItem({ itemType: "project" })), t2.selection.selectProject(r2));
            var i2 = r2.appendChildItem(t2.createItem(w({ itemType: "artboard", x: j.a.px(300), y: j.a.px(200), width: j.a.px(375), height: j.a.px(667) }, e2)));
            n2 && (i2.reset({ x: j.a.px(0), y: j.a.px(0) }), i2.moveByCenter(n2)), t2.selection.select(i2), x2(t2);
          }, addCustomComponent: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, r2 = t2.selection.currentProject, i2 = r2.appendChildItem(t2.createItem(xe({ x: j.a.px(300), y: j.a.px(200), width: j.a.px(375), height: j.a.px(667) }, e2)));
            n2 && (i2.reset({ x: j.a.px(0), y: j.a.px(0) }), i2.moveByCenter(n2)), t2.selection.select(i2), x2(t2);
          }, addImage: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : void 0;
            t2.emit("newComponent", "image", e2, true, n2);
          }, addVideo: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : void 0;
            t2.emit("newComponent", "video", e2, true, n2);
          }, addLayer: function(t2, e2) {
            var n2 = !(arguments.length > 3 && arguments[3] !== void 0) || arguments[3], r2 = arguments.length > 4 ? arguments[4] : void 0;
            r2 || (r2 = t2.selection.current || t2.selection.currentProject), r2 && (r2.is("project") || r2.enableHasChildren() || (r2 = r2.parent), r2.appendChildItem(e2), n2 && t2.selection.select(e2), x2(t2));
          }, addLayerView: function(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
            t2.selection.empty(), t2.emit("refreshSelectionTool"), t2.emit("hideAddViewLayer"), t2.emit("removeGuideLine"), e2 === "select" || (e2 === "brush" ? t2.emit("showPathDrawEditor") : e2 === "path" ? t2.emit("showPathEditor", "path") : t2.emit("showLayerAppendView", e2, n2));
          }, addProject: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n2 = t2.add(t2.createItem(C({ itemType: "project" }, e2)));
            t2.selection.selectProject(n2), x2(t2);
          }, convertPath: function(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, r2 = t2.selection.current;
            if (r2) {
              if (r2.is("svg-path", "svg-brush", "svg-textpath")) {
                var i2 = e2;
                if (n2)
                  (a2 = new S.a(e2)).scale(r2.width.value / n2.width, r2.height.value / n2.height), i2 = a2.d;
                t2.command("setAttributeForMulti", "set attribute -d", t2.selection.packByValue({ d: i2 }, r2.id));
              } else if (r2["clip-path"].includes("path")) {
                var a2;
                i2 = e2;
                if (n2)
                  (a2 = new S.a(e2)).scale(r2.width.value / n2.width, r2.height.value / n2.height), i2 = a2.d;
                t2.command("setAttributeForMulti", "change clip path", t2.selection.packByValue({ "clip-path": "path(".concat(i2, ")") }, r2.id));
              }
            }
          }, newComponent: function(t2, e2, n2) {
            var r2 = !(arguments.length > 3 && arguments[3] !== void 0) || arguments[3], i2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : void 0;
            e2 === "svg-textpath" ? n2 = I(I({}, n2), {}, { "font-size": j.a.parse(n2.height), textLength: "100%", d: E.a.makeLine(0, 1, 1, 1) }) : e2 === "svg-circle" ? (e2 = "svg-path", n2 = I(I({}, n2), {}, { "background-color": void 0, fill: "#C4C4C4", d: E.a.makeCircle(0, 0, 1, 1) })) : e2 === "svg-rect" ? (e2 = "svg-path", n2 = I(I({}, n2), {}, { "background-color": void 0, fill: "#C4C4C4", d: E.a.makeRect(0, 0, 1, 1) })) : e2 === "text" ? n2 = I({ width: j.a.px(300), height: j.a.px(50) }, n2) : e2 === "artboard" && (n2 = I(I({}, n2), {}, { "background-color": "white" })), t2.command("addLayer", "add layer - ".concat(e2), t2.createItem(I({ itemType: e2 }, n2)), n2, r2, i2), t2.changeMode(Qe), t2.emit("afterChangeMode");
          }, refreshElement: function(t2, e2) {
            t2.emit("refreshSelectionStyleView", e2), t2.emit("refreshElementBoundSize", t2.selection.getRootItem(e2));
          }, refreshProject: function(t2, e2) {
            t2.emit("refreshStyleView", e2, true);
          }, resizeArtBoard: function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", n2 = t2.selection.current;
            if (n2 && n2.is("artboard")) {
              if (!e2.trim())
                return;
              var r2 = e2.split("x"), a2 = i()(r2, 2), o2 = a2[0], c2 = a2[1];
              o2 = j.a.px(+o2), c2 = j.a.px(+c2), n2.reset({ width: o2, height: c2 }), t2.selection.select(n2), x2(t2);
            }
          }, setAttributeForMulti: ae, sortBottom: Yt, sortCenter: Gt, sortLeft: Ht, sortMiddle: Kt }, g()(Pe, "sortBottom", Yt), g()(Pe, "sortTop", Xt), g()(Pe, "sortRight", Wt), g()(Pe, "sameWidth", qt), g()(Pe, "sameHeight", Jt), g()(Pe, "updatePathItem", fe), g()(Pe, "updateClipPath", { command: "updateClipPath", description: "update clip-path property ", execute: function(t2, e2) {
            t2.command("setAttributeForMulti", "change clip-path", t2.selection.packByValue({ "clip-path": "path(".concat(e2.d, ")") }));
          } }), Pe), Ce = function() {
            function t2(e2) {
              s()(this, t2), this.$editor = e2, this.loadCommands();
            }
            return l()(t2, [{ key: "loadCommands", value: function() {
              var t3 = this;
              Object.keys(Re).forEach(function(e2) {
                Object(h.isFunction)(Re[e2]) ? t3.registerCommand(e2, Re[e2]) : t3.registerCommand(Re[e2]);
              });
            } }, { key: "registerCommand", value: function(t3, e2) {
              var n2 = this;
              if (arguments.length === 2) {
                var r2 = function() {
                  for (var t4, r3 = arguments.length, i3 = new Array(r3), a2 = 0; a2 < r3; a2++)
                    i3[a2] = arguments[a2];
                  e2.call.apply(e2, [n2, n2.$editor].concat(i3)), (t4 = n2.$editor).debug.apply(t4, ["command execute", n2].concat(i3));
                };
                return r2.source = t3, this.$editor.on(t3, r2, this, 0);
              }
              if (Object(h.isObject)(t3)) {
                var i2 = function() {
                  for (var e3, r3, i3 = arguments.length, a2 = new Array(i3), o2 = 0; o2 < i3; o2++)
                    a2[o2] = arguments[o2];
                  (e3 = t3.execute).call.apply(e3, [t3, n2.$editor].concat(a2)), (r3 = n2.$editor).debug.apply(r3, ["command execute", t3].concat(a2));
                };
                return i2.source = t3.command, this.$editor.on(t3.command, i2, this, t3.debounce || 0);
              }
            } }]), t2;
          }(), Ee = n(80), $e = n(75), Ie = n(47);
          function Te(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Be(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Te(Object(n2), true).forEach(function(e3) {
                g()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Te(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Me() {
            for (var t2 = arguments.length, e2 = new Array(t2), n2 = 0; n2 < t2; n2++)
              e2[n2] = arguments[n2];
            return e2.filter(Boolean).join("+");
          }
          function Ve(t2) {
            return Ie.a["".concat(t2).toLowerCase()] || t2;
          }
          var De = function() {
            function t2(e2) {
              s()(this, t2), this.$editor = e2, this.loadShortCuts();
            }
            return l()(t2, [{ key: "getGeneratedKeyCode", value: function(t3) {
              return Ve(t3);
            } }, { key: "loadShortCuts", value: function() {
              var t3 = this;
              this.list = [], this.commands = {}, $e.a.forEach(function(e2) {
                t3.registerShortCut(e2);
              }), this.sort();
            } }, { key: "registerShortCut", value: function(t3) {
              var e2 = Object(Ee.a)();
              this.list.push(Be(Be({ key: "", command: "", args: [], eventType: "keydown" }, t3), {}, { checkKeyString: this.splitShortCut(t3[e2] || t3.key), whenFunction: this.makeWhenFunction(t3.command, t3.when || true) })), this.sort();
            } }, { key: "makeWhenFunction", value: function(t3, e2) {
              if (Object(h.isBoolean)(e2) && e2)
                return function() {
                  return true;
                };
              var n2 = this.$editor, r2 = e2.split("|").map(function(t4) {
                return t4.trim();
              });
              return function() {
                return r2.some(function(t4) {
                  return t4 === n2.modeView;
                });
              };
            } }, { key: "sort", value: function() {
              var t3 = this;
              this.commands = {}, this.list.forEach(function(e2) {
                Object(h.isArray)(t3.commands[e2.checkKeyString]) === false && (t3.commands[e2.checkKeyString] = []), t3.commands[e2.checkKeyString].push(e2);
              });
            } }, { key: "splitShortCut", value: function(t3) {
              var e2 = t3.toUpperCase().split("+").map(function(t4) {
                return t4.trim();
              }).filter(Boolean), n2 = false, r2 = false, i2 = false, a2 = false, o2 = [];
              return e2.forEach(function(t4) {
                t4.includes("ALT") ? n2 = true : t4.includes("CTRL") ? r2 = true : t4.includes("SHIFT") ? i2 = true : t4.includes("CMD") || t4.includes("WIN") || t4.includes("META") ? a2 = true : o2.push(t4);
              }), Me(n2 ? "ALT" : "", r2 ? "CTRL" : "", i2 ? "SHIFT" : "", a2 ? "META" : "", Ve(o2.join("")));
            } }, { key: "makeKeyString", value: function(t3) {
              return Me(t3.altKey ? "ALT" : "", t3.ctrlKey ? "CTRL" : "", t3.shiftKey ? "SHIFT" : "", t3.metaKey ? "META" : "", t3.key.toUpperCase());
            } }, { key: "makeCodeString", value: function(t3) {
              return Me(t3.altKey ? "ALT" : "", t3.ctrlKey ? "CTRL" : "", t3.shiftKey ? "SHIFT" : "", t3.metaKey ? "META" : "", t3.code.toUpperCase());
            } }, { key: "makeKeyCodeString", value: function(t3) {
              return Me(t3.altKey ? "ALT" : "", t3.ctrlKey ? "CTRL" : "", t3.shiftKey ? "SHIFT" : "", t3.metaKey ? "META" : "", t3.keyCode);
            } }, { key: "checkShortCut", value: function(t3, e2, n2) {
              return this.commands[t3] || this.commands[e2] || this.commands[n2];
            } }, { key: "checkWhen", value: function(t3) {
              return t3.whenFunction();
            } }, { key: "execute", value: function(t3) {
              var e2 = this, n2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "keydown", r2 = this.checkShortCut(this.makeKeyCodeString(t3), this.makeKeyString(t3), this.makeCodeString(t3));
              if (r2) {
                var i2 = r2.filter(function(t4) {
                  return t4.eventType === n2;
                }).filter(function(t4) {
                  return e2.checkWhen(t4);
                });
                i2.length && t3.preventDefault(), i2.forEach(function(n3) {
                  var r3;
                  (r3 = e2.$editor).emit.apply(r3, [n3.command].concat(o()(n3.args), [t3]));
                });
              }
            } }]), t2;
          }(), Le = n(87), Ae = function() {
            function t2(e2) {
              s()(this, t2), this.$editor = e2, this.currentIndex = -1, this.undoHistories = [], this.redoHistories = [], this.selection = {};
            }
            return l()(t2, [{ key: "length", get: function() {
              return this.undoHistories.length;
            } }, { key: "selectedIds", get: function() {
              return Object.keys(this.selection);
            } }, { key: "createCommand", value: function(t3) {
              return this.$editor.isPointerUp ? "history.".concat(t3) : t3;
            } }, { key: "saveSelection", value: function() {
              this.selection = this.$editor.selection.toCloneObject();
            } }, { key: "getUndoValues", value: function() {
              var t3 = this, e2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n2 = {};
              return Object.keys(this.selection).forEach(function(r2) {
                n2[r2] = {}, Object.keys(e2).forEach(function(e3) {
                  n2[r2][e3] = t3.selection[r2][e3];
                });
              }), n2;
            } }, { key: "getUndoValuesForMulti", value: function() {
              var t3 = this, e2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n2 = {};
              return Object.keys(e2).forEach(function(r2) {
                n2[r2] = {};
                var i2 = t3.selection[r2] || t3.$editor.selection.itemsByIds(r2)[0], a2 = e2[r2];
                Object.keys(a2).forEach(function(t4) {
                  n2[r2][t4] = i2[t4];
                });
              }), n2;
            } }, { key: "add", value: function(t3, e2, n2) {
              var r2 = performance.now(), i2 = this.undoHistories[this.undoHistories.length - 1], a2 = { message: t3, command: e2, data: n2, time: r2 };
              return i2 && i2.message === t3 && r2 - i2.time < this.$editor.config.get("history.delay.ms") ? this.undoHistories[this.undoHistories.length - 1] = a2 : (this.undoHistories.push(a2), this.currentIndex++, this.undoHistories.length = this.currentIndex + 1), this.$editor.emit("refreshHistory", e2.command), a2;
            } }, { key: "map", value: function(t3) {
              return [].concat(o()(this.undoHistories.map(t3)), ["-"], o()(this.redoHistories.map(t3))).reverse();
            } }, { key: "undo", value: function() {
              var t3 = this;
              if (!(this.currentIndex < -1)) {
                this.currentIndex--;
                var e2 = this.undoHistories.pop();
                e2 && e2.command && e2.command.undo(this.$editor, e2.data), this.$editor.nextTick(function() {
                  t3.$editor.emit("refreshHistory", e2.command);
                });
              }
            } }, { key: "redo", value: function() {
              var t3 = this;
              if (!(this.currentIndex > this.length)) {
                this.currentIndex < 0 && this.currentIndex++;
                var e2 = this.undoHistories[this.currentIndex];
                e2 && e2.command && (e2.command.redo(this.$editor, e2.data), this.$editor.debug(e2)), this.$editor.nextTick(function() {
                  t3.$editor.emit("refreshHistory", e2.command);
                });
              }
            } }]), t2;
          }(), Fe = le.d.fromValues(0, 0, 0);
          function ze(t2, e2) {
            return Math.abs(t2[0] - e2[0]) < 1;
          }
          function Ne(t2, e2) {
            return Math.abs(t2[1] - e2[1]) < 1;
          }
          var _e = function() {
            function t2(e2) {
              var n2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 3;
              s()(this, t2), this.editor = e2, this.map = new Map(), this.snapTargetLayers = [], this.snapDistance = n2;
            }
            return l()(t2, [{ key: "dist", get: function() {
              return this.editor.config.get("snap.distance") || this.snapDistance;
            } }, { key: "gridSize", get: function() {
              return this.editor.config.get("snap.grid") || 50;
            } }, { key: "clear", value: function() {
              var t3 = this;
              this.snapTargetLayers = this.editor.selection.snapTargetLayers.map(function(e2) {
                return t3.convertMatrix(e2);
              });
            } }, { key: "convertMatrix", value: function(t3) {
              var e2 = this.convertGuideAndPathMatrix(t3), n2 = e2.map(function(t4) {
                return t4[0];
              }), r2 = e2.map(function(t4) {
                return t4[1];
              });
              return { id: t3.id, xList: n2, yList: r2, verties: e2, rectVerties: Object(Zt.h)(t3.originVerties) };
            } }, { key: "convertGuideAndPathMatrix", value: function(t3) {
              var e2 = t3.guideVerties;
              return o()(e2);
            } }, { key: "getSnapPoints", value: function() {
              var t3 = this, e2 = [];
              return this.editor.selection.snapTargetLayersWithSelection.forEach(function(n2) {
                e2.push.apply(e2, t3.convertGuideAndPathMatrix(n2));
              }), e2;
            } }, { key: "checkX", value: function(t3, e2) {
              var n2 = this, r2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, i2 = [];
              return t3.forEach(function(t4, a2) {
                e2.forEach(function(e3, o2) {
                  var c2 = t4 - e3, s2 = n2.gridSize - Math.abs(e3) % n2.gridSize;
                  Math.abs(c2) <= r2 ? i2.push({ targetX: t4, sourceX: e3, sourceIndex: o2, targetIndex: a2, dx: c2 }) : Math.abs(s2) <= r2 && i2.push({ targetX: t4, sourceX: e3, sourceIndex: o2, targetIndex: a2, dx: s2 });
                });
              }), i2;
            } }, { key: "checkY", value: function(t3, e2) {
              var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, r2 = [];
              return t3.forEach(function(t4, i2) {
                e2.forEach(function(e3, a2) {
                  var o2 = t4 - e3;
                  Math.abs(o2) <= n2 && r2.push({ targetY: t4, sourceY: e3, sourceIndex: a2, targetIndex: i2, dy: o2 });
                });
              }), r2;
            } }, { key: "check", value: function(t3) {
              var e2 = this, n2 = [], r2 = this.dist, i2 = t3.map(function(t4) {
                return t4[0];
              }), a2 = t3.map(function(t4) {
                return t4[1];
              });
              return this.snapTargetLayers.forEach(function(t4) {
                var o2 = e2.checkX(t4.xList, i2, r2)[0], c2 = e2.checkY(t4.yList, a2, r2)[0];
                n2.push(le.d.fromValues(o2 ? o2.dx : 0, c2 ? c2.dy : 0, 0));
              }), n2.find(function(t4) {
                return Object(h.isNotZero)(t4[0]) || Object(h.isNotZero)(t4[1]);
              }) || Fe;
            } }, { key: "checkPoint", value: function(t3) {
              var e2 = this.check([t3]);
              return le.d.add([], t3, e2);
            } }, { key: "getGuidesByPointPoint", value: function(t3, e2) {
              for (var n2, r2, a2 = [], o2 = {}, c2 = 0, s2 = t3.length; c2 < s2; c2++) {
                n2 = t3[c2];
                var u2 = "".concat(n2[0], "_x"), l2 = "".concat(n2[1], "_y");
                o2[u2] || (o2[u2] = []), o2[l2] || (o2[l2] = []);
                for (var f2 = 0, h2 = e2.length; f2 < h2; f2++)
                  ze(n2, r2 = e2[f2]) && o2[u2].push([n2, r2, "x", le.d.dist(n2, r2)]), Ne(n2, r2) && o2[l2].push([n2, r2, "y", le.d.dist(n2, r2)]);
              }
              return Object.keys(o2).forEach(function(t4) {
                if (o2[t4] && o2[t4].length) {
                  var e3 = o2[t4].sort(function(t5, e4) {
                    return t5[3] - e4[3];
                  }), n3 = i()(e3[0], 3), r3 = n3[0], c3 = n3[1], s3 = n3[2];
                  a2.push([r3, c3, s3]);
                }
              }), a2;
            } }, { key: "findGuide", value: function(t3) {
              var e2 = this, n2 = [];
              return this.snapTargetLayers.forEach(function(r2) {
                var i2 = e2.getGuidesByPointPoint(t3, r2.verties);
                n2.push.apply(n2, i2);
              }), n2;
            } }, { key: "findGuideOne", value: function(t3) {
              return [this.findGuide(t3)[0]];
            } }]), t2;
          }(), Ue = function() {
            function t2(e2) {
              s()(this, t2), this.editor = e2, this.codeSet = new Set(), this.keyCodeSet = new Set();
            }
            return l()(t2, [{ key: "add", value: function(t3, e2) {
              this.codeSet.has(t3) === false && this.codeSet.add(t3), this.keyCodeSet.has(e2) === false && this.keyCodeSet.add(e2);
            } }, { key: "remove", value: function(t3, e2) {
              this.codeSet.delete(t3), this.keyCodeSet.delete(e2);
            } }, { key: "hasKey", value: function(t3) {
              return this.codeSet.has(t3) || this.keyCodeSet.has(t3);
            } }, { key: "check", value: function() {
              for (var t3 = this, e2 = arguments.length, n2 = new Array(e2), r2 = 0; r2 < e2; r2++)
                n2[r2] = arguments[r2];
              return n2.some(function(e3) {
                return t3.hasKey(e3);
              });
            } }]), t2;
          }(), Ge = n(88), He = function() {
            function t2(e3) {
              s()(this, t2), this.editor = e3, this.customAssetKey = "custom-assets";
            }
            var e2, n2, r2, i2, a2;
            return l()(t2, [{ key: "getCustomAssetList", value: (a2 = M()(D.a.mark(function t3() {
              var e3, n3;
              return D.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      if (e3 = false, n3 = (this.editor.loadItem(this.customAssetKey) || []).map(function(t5) {
                        return t5.id || (t5.id = Object(f.uuid)(), e3 = true), t5;
                      }), !e3) {
                        t4.next = 5;
                        break;
                      }
                      return t4.next = 5, this.setCustomAssetList(n3);
                    case 5:
                      return t4.abrupt("return", n3);
                    case 6:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function() {
              return a2.apply(this, arguments);
            }) }, { key: "setCustomAssetList", value: (i2 = M()(D.a.mark(function t3(e3) {
              return D.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      this.editor.saveItem(this.customAssetKey, e3);
                    case 1:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3) {
              return i2.apply(this, arguments);
            }) }, { key: "getCustomAsset", value: (r2 = M()(D.a.mark(function t3(e3) {
              var n3, r3;
              return D.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.next = 2, this.getCustomAssetList();
                    case 2:
                      if (n3 = t4.sent, !(r3 = n3.find(function(t5) {
                        return t5.id === e3;
                      })) || !r3.component) {
                        t4.next = 6;
                        break;
                      }
                      return t4.abrupt("return", r3.component);
                    case 6:
                      return t4.abrupt("return", null);
                    case 7:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3) {
              return r2.apply(this, arguments);
            }) }, { key: "saveCustomAsset", value: (n2 = M()(D.a.mark(function t3() {
              var e3, n3, r3, i3, a3 = arguments;
              return D.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      if (e3 = a3.length > 0 && a3[0] !== void 0 ? a3[0] : "", !(n3 = this.editor.selection.current)) {
                        t4.next = 13;
                        break;
                      }
                      return t4.next = 5, this.getCustomAssetList();
                    case 5:
                      return r3 = t4.sent, t4.next = 8, this.editor.json.render(n3);
                    case 8:
                      return (i3 = t4.sent).x = "0px", i3.y = "0px", t4.next = 13, this.setCustomAssetList([].concat(o()(r3), [{ id: Object(f.uuid)(), preview: e3, component: i3 }]));
                    case 13:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function() {
              return n2.apply(this, arguments);
            }) }, { key: "removeCustomAsset", value: (e2 = M()(D.a.mark(function t3(e3) {
              var n3;
              return D.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.next = 2, this.getCustomAssetList();
                    case 2:
                      return n3 = t4.sent, t4.next = 5, this.setCustomAssetList(n3.filter(function(t5) {
                        return t5.id !== e3;
                      }));
                    case 5:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3) {
              return e2.apply(this, arguments);
            }) }]), t2;
          }(), Ke = n(11), Ye = function() {
            function t2() {
              s()(this, t2);
            }
            var e2;
            return l()(t2, [{ key: "load", value: (e2 = M()(D.a.mark(function t3() {
              var e3, n2, r2, i2, a2, o2, c2, s2 = arguments;
              return D.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      if (e3 = s2.length > 0 && s2[0] !== void 0 ? s2[0] : "default", !Ke.a[e3]) {
                        t4.next = 8;
                        break;
                      }
                      for (r2 = s2.length, i2 = new Array(r2 > 1 ? r2 - 1 : 0), a2 = 1; a2 < r2; a2++)
                        i2[a2 - 1] = s2[a2];
                      return o2 = Object(h.isFunction)(Ke.a[e3]) ? (n2 = Ke.a[e3]).call.apply(n2, [Ke.a[e3]].concat(i2)) : Ke.a[e3], c2 = new Blob([o2], { type: "image/svg+xml" }), t4.abrupt("return", new Promise(function(t5, e4) {
                        var n3 = new FileReader();
                        n3.onload = function(e5) {
                          var n4 = e5.target.result;
                          t5("url(".concat(n4, ") 12 12, auto"));
                        }, n3.readAsDataURL(c2);
                      }));
                    case 8:
                      return t4.abrupt("return", e3);
                    case 9:
                    case "end":
                      return t4.stop();
                  }
              }, t3);
            })), function() {
              return e2.apply(this, arguments);
            }) }]), t2;
          }(), Xe = function() {
            function t2(e2) {
              s()(this, t2), this.$editor = e2;
            }
            return l()(t2, [{ key: "project", get: function() {
              return this.$editor.selection.currentProject;
            } }, { key: "revokeResource", value: function(t3) {
              var e2 = this, n2 = JSON.parse(t3 || "[]"), r2 = {};
              return n2.forEach(function(t4) {
                t4.images.forEach(function(t5) {
                  r2["#".concat(t5.id)] = t5;
                });
              }), Object.keys(r2).map(function(t4) {
                var e3 = r2[t4], n3 = nt.parse(e3.original, true);
                e3.local = n3.local;
              }), n2.forEach(function(t4) {
                t4.layers = e2.applyAsset(t4.layers, r2);
              }), n2;
            } }, { key: "applyAsset", value: function(t3, e2) {
              var n2 = this;
              return Object(h.isArray)(t3) ? t3 = t3.map(function(t4) {
                return n2.applyAsset(t4, e2);
              }) : Object(h.isObject)(t3) ? Object.keys(t3).forEach(function(r2) {
                t3[r2] = n2.applyAsset(t3[r2], e2);
              }) : Object(h.isString)(t3) && Object.keys(e2).forEach(function(n3) {
                var r2 = e2[n3];
                t3.indexOf("#".concat(r2.id)) > -1 && (t3 = t3.replace(new RegExp("#".concat(r2.id), "g"), r2.local));
              }), t3;
            } }]), t2;
          }(), We = function() {
            function t2(e3) {
              s()(this, t2), this.editor = e3, this.plugins = [];
            }
            var e2;
            return l()(t2, [{ key: "registerPlugin", value: function(t3) {
              this.plugins.push(t3);
            } }, { key: "initializePlugin", value: (e2 = M()(D.a.mark(function t3() {
              var e3, n2 = this, r2 = arguments;
              return D.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return e3 = r2.length > 0 && r2[0] !== void 0 ? r2[0] : {}, t4.next = 3, Promise.all(this.plugins.map(function() {
                        var t5 = M()(D.a.mark(function t6(r3) {
                          return D.a.wrap(function(t7) {
                            for (; ; )
                              switch (t7.prev = t7.next) {
                                case 0:
                                  return t7.next = 2, r3(n2.editor, e3);
                                case 2:
                                  return t7.abrupt("return", t7.sent);
                                case 3:
                                case "end":
                                  return t7.stop();
                              }
                          }, t6);
                        }));
                        return function(e4) {
                          return t5.apply(this, arguments);
                        };
                      }()));
                    case 3:
                      return t4.abrupt("return", t4.sent);
                    case 4:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function() {
              return e2.apply(this, arguments);
            }) }]), t2;
          }(), Ze = function() {
            function t2(e2) {
              s()(this, t2), this.editor = e2, this.renderers = {}, this.rendererTypes = {};
            }
            return l()(t2, [{ key: "getRenderType", value: function(t3) {
              return this.renderers[t3] || (this.renderers[t3] = {}), this.renderers[t3];
            } }, { key: "registerRenderer", value: function(t3, e2, n2) {
              var r2 = this.getRenderType(t3);
              if (r2[e2])
                throw new Error("It has duplicated renderer name. " + e2);
              r2[e2] = n2;
            } }, { key: "registerRendererType", value: function(t3, e2) {
              if (this.rendererTypes[t3])
                throw new Error("It has duplcated renderer type name. " + name);
              this.rendererTypes[t3] = e2;
            } }, { key: "getRenderer", value: function(t3) {
              return this.rendererTypes[t3];
            } }, { key: "getRendererInstance", value: function(t3, e2) {
              return this.getRenderType(t3)[e2];
            } }]), t2;
          }(), qe = n(89), Je = function() {
            function t2(e2) {
              s()(this, t2), this.editor = e2, this.locales = {}, this.fallbackLang = "en_US";
            }
            return l()(t2, [{ key: "getLang", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : void 0;
              return t3 || this.fallbackLang;
            } }, { key: "setFallbackLang", value: function(t3) {
              this.fallbackLang = t3;
            } }, { key: "get", value: function(t3) {
              var e2, n2, r2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, a2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : void 0, o2 = this.getLang(a2), c2 = ((e2 = this.locales[o2]) === null || e2 === void 0 ? void 0 : e2[t3]) || ((n2 = this.locales[this.fallbackLang]) === null || n2 === void 0 ? void 0 : n2[t3]) || t3 || void 0;
              if (Object(h.isFunction)(c2))
                return c2(r2);
              var s2 = c2;
              return t3 === s2 ? t3.split(".").pop() : (Object.entries(r2).forEach(function(t4) {
                var e3 = i()(t4, 2), n3 = e3[0], r3 = e3[1];
                s2 = s2.replace(new RegExp("{".concat(n3, "}"), "ig"), r3);
              }), s2);
            } }, { key: "hasKey", value: function(t3) {
              var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : void 0, n2 = this.getLang(e2);
              return !(!this.locales[n2][t3] && !this.locales[this.fallbackLang][t3]);
            } }, { key: "registerI18nMessage", value: function(t3, e2) {
              this.locales[t3] || (this.locales[t3] = {}), Object.assign(this.locales[t3], e2);
            } }]), t2;
          }(), Qe = "SELECTION", tn = function() {
            function t2() {
              s()(this, t2), this.EDITOR_ID = Object(f.uuid)(), this.projects = [], this.popupZIndex = 1e4, this.canvasWidth = 1e5, this.canvasHeight = 1e5, this.symbols = {}, this.images = {}, this.openRightPanel = true, this.mode = Qe, this.modeView = "CanvasView", this.addComponentType = "", this.loadManagers();
            }
            return l()(t2, [{ key: "loadManagers", value: function() {
              this.store = new p(this), this.config = new Le.a(this), this.snapManager = new _e(this), this.commands = new Ce(this), this.shortcuts = new De(this), this.selection = new k.a(this), this.timeline = new b(this), this.history = new Ae(this), this.keyboardManager = new Ue(this), this.viewport = new Ge.a(this), this.storageManager = new He(this), this.cursorManager = new Ye(this), this.assetManager = new Xe(this), this.menuItemManager = new qe.a(this), this.components = new O(this), this.pluginManager = new We(this), this.renderers = new Ze(this), this.i18n = new Je(this), this.initTheme(), this.initPlugins(), this.initStorage();
            } }, { key: "initStorage", value: function() {
              this.locale = this.loadItem("locale") || "en_US", this.layout = this.loadItem("layout") || "all";
            } }, { key: "createProject", value: function() {
              return this.createItem({ itemType: "project" });
            } }, { key: "getI18nMessage", value: function(t3) {
              var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n2 = arguments.length > 2 ? arguments[2] : void 0;
              return this.i18n.get(t3, e2, n2 || this.locale);
            } }, { key: "hasI18nkey", value: function(t3, e2) {
              return this.i18n.hasKey(t3, e2 || this.locale);
            } }, { key: "initI18nMessage", value: function() {
              var t3 = this, e2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
              return function(n2) {
                var r2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, i2 = arguments.length > 2 ? arguments[2] : void 0, a2 = "".concat(e2, ".").concat(n2);
                return t3.hasI18nkey(a2, i2) ? t3.i18n("".concat(e2, ".").concat(n2), r2, i2) : t3.i18n("".concat(n2), r2, i2);
              };
            } }, { key: "setLocale", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "en_US";
              this.locale = t3, this.saveItem("locale", this.locale);
            } }, { key: "setLayout", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "all";
              this.layout = t3, this.saveItem("layout", this.layout);
            } }, { key: "setUser", value: function(t3) {
              this.user = t3;
            } }, { key: "initTheme", value: function() {
              var t3 = "dark";
              window.localStorage && (t3 = window.localStorage.getItem("easylogic.studio.theme"), t3 = ["dark", "light"].includes(t3) ? t3 : "dark"), this.theme = t3 || "dark", window.localStorage.setItem("easylogic.studio.theme", this.theme);
            } }, { key: "initPlugins", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.pluginManager.initializePlugin(t3);
            } }, { key: "themeValue", value: function(t3) {
              var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
              return v[this.theme][t3] || e2;
            } }, { key: "changeMode", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Qe;
              this.mode = t3;
            } }, { key: "changeModeView", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "CanvasView";
              this.modeView = t3;
            } }, { key: "isMode", value: function(t3) {
              return this.mode === t3;
            } }, { key: "isAddMode", value: function() {
              return this.isMode("ADD");
            } }, { key: "isSelectionMode", value: function() {
              return this.isMode(Qe);
            } }, { key: "changeAddType", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", e2 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
              this.changeMode("ADD"), this.addComponentType = t3, this.isComponent = e2;
            } }, { key: "changeTheme", value: function(t3) {
              t3 = ["light", "toon"].includes(t3) ? t3 : "dark", this.theme = t3, window.localStorage.setItem("easylogic.studio.theme", t3);
            } }, { key: "zIndex", get: function() {
              return this.popupZIndex++;
            } }, { key: "isPointerUp", get: function() {
              var t3 = this.config.get("bodyEvent");
              return !t3 || (t3.type === "pointerup" || t3.type === "pointermove" && t3.buttons === 0);
            } }, { key: "isPointerDown", get: function() {
              return !this.isPointerUp;
            } }, { key: "isPointerMove", get: function() {
              return !!this.config.get("bodyEvent") && this.config.get("bodyEvent").type === "pointermove";
            } }, { key: "getFile", value: function(t3) {
              return this.images[t3] || t3;
            } }, { key: "setStore", value: function(t3) {
              this.store = t3;
            } }, { key: "emit", value: function() {
              var t3;
              this.store.source = "EDITOR_ID", (t3 = this.store).emit.apply(t3, arguments);
            } }, { key: "on", value: function() {
              for (var t3, e2 = arguments.length, n2 = new Array(e2), r2 = 0; r2 < e2; r2++)
                n2[r2] = arguments[r2];
              var i2 = n2[0], a2 = n2[1], c2 = n2.slice(2);
              return (t3 = this.store).on.apply(t3, [i2, a2, this].concat(o()(c2)));
            } }, { key: "off", value: function() {
              var t3;
              (t3 = this.store).off.apply(t3, arguments);
            } }, { key: "offAll", value: function() {
              var t3;
              (t3 = this.store).offAll.apply(t3, arguments);
            } }, { key: "debug", value: function() {
              var t3;
              this.config.get("debug") && (t3 = console).log.apply(t3, arguments);
            } }, { key: "command", value: function(t3, e2) {
              for (var n2 = arguments.length, r2 = new Array(n2 > 2 ? n2 - 2 : 0), i2 = 2; i2 < n2; i2++)
                r2[i2 - 2] = arguments[i2];
              var a2, o2;
              return this.isPointerUp ? (a2 = this.store).emit.apply(a2, ["history.".concat(t3), e2].concat(r2)) : (o2 = this.store).emit.apply(o2, [t3].concat(r2));
            } }, { key: "nextTick", value: function(t3) {
              this.store && this.store.nextTick(t3);
            } }, { key: "load", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
              this.projects = t3;
            } }, { key: "add", value: function(t3) {
              return this.projects.push(t3), t3;
            } }, { key: "remove", value: function(t3) {
              this.projects.splice(t3, 1);
            } }, { key: "clear", value: function() {
              this.projects = [];
            } }, { key: "get", value: function(t3) {
              return this.projects[t3];
            } }, { key: "replaceLocalUrltoRealUrl", value: function(t3) {
              var e2 = this.selection.currentProject, n2 = {};
              return e2.images.forEach(function(e3) {
                t3.indexOf(e3.local) > -1 && (n2[e3.local] = e3.original);
              }), Object.keys(n2).forEach(function(e3) {
                t3.indexOf(e3) > -1 && (t3 = t3.replace(new RegExp(e3, "g"), n2[e3]));
              }), t3;
            } }, { key: "replaceLocalUrltoId", value: function(t3) {
              var e2 = this.projects, n2 = {};
              return e2.forEach(function(e3) {
                e3.images.forEach(function(e4) {
                  t3.indexOf(e4.local) > -1 && (n2[e4.local] = "#" + e4.id);
                });
              }), Object.keys(n2).forEach(function(e3) {
                t3.indexOf(e3) > -1 && (t3 = t3.replace(new RegExp(e3, "g"), n2[e3]));
              }), t3;
            } }, { key: "makeResource", value: function(t3) {
              var e2 = JSON.stringify(t3);
              return e2 = this.replaceLocalUrltoId(e2);
            } }, { key: "serialize", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], e2 = [];
              return t3.forEach(function(t4) {
                var n2 = t4.toJSON();
                n2._parentId = t4.parent ? t4.parent.id : void 0, n2._positionInParent = t4.positionInParent, e2.push(n2);
              }), JSON.stringify(e2);
            } }, { key: "createItem", value: function(t3) {
              var e2 = this, n2 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
              t3._parentId && (t3.parent = this.searchItem(t3._parentId), delete t3._parentId), t3.layers = (t3.layers || []).map(function(t4) {
                return e2.createItem(t4);
              });
              var r2 = this.components.createComponent(t3.itemType, t3);
              return n2 && r2.parent.setPositionInPlace(t3._positionInParent, r2), r2;
            } }, { key: "searchItem", value: function(t3) {
              var e2 = [];
              return Object(h.isString)(t3) ? e2.push(t3) : Object(h.isArray)(t3) && (e2 = o()(t3)), this.selection.currentProject.getSearchedIndexItemList(e2).filter(Boolean)[0];
            } }, { key: "deserialize", value: function(t3) {
              var e2 = this, n2 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1], r2 = JSON.parse(t3) || [];
              return r2.map(function(t4) {
                return e2.createItem(t4, n2);
              });
            } }, { key: "storeKey", get: function() {
              return "__els__.".concat(this.config.get("store.key"));
            } }, { key: "saveResource", value: function(t3, e2) {
              window.localStorage.setItem("".concat(this.storeKey, ".").concat(t3), this.makeResource(e2));
            } }, { key: "saveItem", value: function(t3, e2) {
              window.localStorage.setItem("".concat(this.storeKey, ".").concat(t3), JSON.stringify(e2));
            } }, { key: "loadResource", value: function(t3) {
              return this.assetManager.revokeResource(window.localStorage.getItem("".concat(this.storeKey, ".").concat(t3)));
            } }, { key: "loadItem", value: function(t3) {
              return JSON.parse(window.localStorage.getItem("".concat(this.storeKey, ".").concat(t3)) || JSON.stringify(""));
            } }, { key: "registerElement", value: function(t3) {
              Object(d.a)(t3);
            } }, { key: "registerMenuItem", value: function(t3, e2) {
              this.menuItemManager.registerMenuItem(t3, e2), this.registerElement(e2);
            } }, { key: "registerComponent", value: function(t3, e2) {
              this.components.registerComponent(t3, e2);
            } }, { key: "registerItem", value: function(t3, e2) {
              this.registerComponent(t3, e2);
            } }, { key: "registerInspector", value: function(t3, e2) {
              this.components.registerInspector(t3, e2);
            } }, { key: "registerRenderer", value: function(t3, e2, n2) {
              this.renderers.registerRenderer(t3, e2, n2);
            } }, { key: "registerRendererType", value: function(t3, e2) {
              this.renderers.registerRendererType(t3, e2);
            } }, { key: "getRendererInstance", value: function(t3, e2) {
              return this.renderers.getRendererInstance(t3, e2);
            } }, { key: "renderer", value: function(t3) {
              return this.renderers.getRenderer(t3);
            } }, { key: "html", get: function() {
              return this.renderer("html");
            } }, { key: "svg", get: function() {
              return this.renderer("svg");
            } }, { key: "json", get: function() {
              return this.renderer("json");
            } }, { key: "registerCommand", value: function(t3) {
              return this.commands.registerCommand(t3);
            } }, { key: "registerShortCut", value: function(t3) {
              this.shortcuts.registerShortCut(t3);
            } }, { key: "registerPlugin", value: function(t3) {
              this.pluginManager.registerPlugin(t3);
            } }, { key: "registerPluginList", value: function() {
              var t3 = this, e2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
              e2.forEach(function(e3) {
                return t3.registerPlugin(e3);
              });
            } }, { key: "registerConfig", value: function(t3) {
              this.config.registerConfig(t3);
            } }, { key: "registerI18nMessage", value: function(t3, e2) {
              this.i18n.registerI18nMessage(t3, e2);
            } }, { key: "registerI18nMessageWithLocale", value: function(t3) {
              var e2 = this;
              Object.entries(t3).forEach(function(t4) {
                var n2 = i()(t4, 2), r2 = n2[0], a2 = n2[1];
                e2.registerI18nMessage(r2, a2);
              });
            } }]), t2;
          }();
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return g;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f), p = n(0), d = n(11), v = n(13);
          function y2(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var g = function(t2) {
            s()(n2, t2);
            var e2 = y2(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              return `
        <button 
            type="button" 
            class='elf--menu-item `.concat(this.getClassName(), `' 
            data-no-title="`).concat(this.isHideTitle(), '" \n            ').concat(this.isHideTitle() ? 'data-tooltip="'.concat(this.getTitle(), '"') : "", ' \n            checked="').concat(this.getChecked() ? "checked" : "", '"\n            ').concat(this.isDisabled() ? "disabled" : "", '\n            data-direction="').concat(this.getDirection(), '"\n        >\n            <div class="icon ').concat(this.getIcon(), '">').concat(d.a[this.getIconString()] || this.getIconString() || "", '</div>\n            <div class="title">').concat(this.getTitle(), "</div>\n        </button>\n        ");
            } }, { key: "getClassName", value: function() {
              return "";
            } }, { key: "clickButton", value: function(t3) {
            } }, { key: "getChecked", value: function() {
              return false;
            } }, { key: "isDisabled", value: function() {
              return false;
            } }, { key: "setSelected", value: function(t3) {
              this.$el.toggleClass("selected", t3);
            } }, { key: "getTitle", value: function() {
              return "";
            } }, { key: "getIcon", value: function() {
              return "";
            } }, { key: "getIconString", value: function() {
              return "";
            } }, { key: "isHideTitle", value: function() {
              return false;
            } }, { key: Object(p.CLICK)(), value: function(t3) {
              this.clickButton(t3);
            } }, { key: "getDirection", value: function() {
              return this.props.direction || "";
            } }], [{ key: "createMenuItem", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return function(e3) {
                s()(r2, e3);
                var n3 = y2(r2);
                function r2() {
                  return i()(this, r2), n3.apply(this, arguments);
                }
                return o()(r2, [{ key: "getIconString", value: function() {
                  return t3.iconString || "add_box";
                } }, { key: "getTitle", value: function() {
                  return t3.title || "New Item";
                } }, { key: "isHideTitle", value: function() {
                  return t3.isHideTitle || true;
                } }, { key: "clickButton", value: function(e4) {
                  t3.clickButton(e4);
                } }, { key: "getDirection", value: function() {
                  return t3.direction;
                } }]), r2;
              }(n2);
            } }]), n2;
          }(v.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return R;
          });
          var r = n(7), i = n.n(r), a = n(3), o = n.n(a), c = n(4), s = n.n(c), u = n(10), l = n.n(u), f = n(5), h = n.n(f), p = n(6), d = n.n(p), v = n(1), y2 = n.n(v), g = n(32), m = n(2), b = n(25), k = n(8), O = n(44), x2 = n(28);
          function j(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function S(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? j(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : j(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function P(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = y2()(t2);
              if (e2) {
                var i2 = y2()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return d()(this, n2);
            };
          }
          var w = 1e10;
          var R = function(t2) {
            h()(n2, t2);
            var e2 = P(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "getDefaultObject", value: function() {
              return { id: "c" + w++, cut: false, percent: 0, unit: "%", px: 0, em: 0, color: "rgba(0, 0, 0, 0)", prevColorStep: null };
            } }, { key: "toCloneObject", value: function() {
              return S(S({}, l()(y2()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("cut", "percent", "unit", "px", "em", "color"));
            } }, { key: "on", value: function() {
              this.json.cut = true;
            } }, { key: "off", value: function() {
              this.json.cut = false;
            } }, { key: "toggle", value: function() {
              this.json.cut = !this.json.cut;
            } }, { key: "getUnit", value: function() {
              return this.json.unit == "%" ? "percent" : this.json.unit;
            } }, { key: "add", value: function(t3) {
              var e3 = this.getUnit();
              return this.json[e3] += +t3, this;
            } }, { key: "sub", value: function(t3) {
              var e3 = this.getUnit();
              return this.json[e3] -= +t3, this;
            } }, { key: "mul", value: function(t3) {
              var e3 = this.getUnit();
              return this.json[e3] *= +t3, this;
            } }, { key: "div", value: function(t3) {
              var e3 = this.getUnit();
              return this.json[e3] /= +t3, this;
            } }, { key: "mod", value: function(t3) {
              var e3 = this.getUnit();
              return this.json[e3] %= +t3, this;
            } }, { key: "isPx", get: function() {
              return this.json.unit == "px";
            } }, { key: "isPercent", get: function() {
              return this.json.unit == "%" || this.json.unit === "percent";
            } }, { key: "isEm", get: function() {
              return this.json.unit == "em";
            } }, { key: "toLength", value: function(t3) {
              return m.a.parse(this.json);
            } }, { key: "getPrevLength", value: function() {
              return this.json.prevColorStep ? this.json.prevColorStep.toLength() : "";
            } }, { key: "toString", value: function() {
              var t3 = this.json.cut ? this.getPrevLength() : "", e3 = this.json.color || "transparent";
              return "".concat(e3, " ").concat(t3, " ").concat(this.toLength());
            } }, { key: "reset", value: function(t3) {
              l()(y2()(n2.prototype), "reset", this).call(this, t3), this.parent && this.parent.sortColorStep();
            } }, { key: "setValue", value: function(t3, e3) {
              this.isPx ? this.reset({ px: e3 * t3 / 100 }) : this.isPercent ? this.reset({ percent: t3 }) : this.isEm && this.reset({ em: e3 * t3 / 100 / 16 });
            } }], [{ key: "parse", value: function(t3) {
              var e3 = [], r2 = Object(b.convertMatches)(t3), i2 = r2.str.split(" ").filter(function(t4) {
                return t4.trim();
              }), a2 = +i2[0].replace("@", ""), o2 = r2.matches[a2].color;
              if (i2.length === 1)
                e3.push(new n2({ color: o2, unit: "%", percent: 0, hasNotUnit: true }));
              else if (i2.length === 2) {
                var c2 = m.a.parse(i2[1]), s2 = { unit: c2.unit };
                c2.isPercent() ? s2.percent = c2.value : c2.isPx() ? s2.px = c2.value : c2.isEm() && (s2.em = c2.value), e3.push(new n2(S({ color: o2 }, s2)));
              } else if (i2.length === 3) {
                var u2 = m.a.parse(i2[2]), l2 = { unit: u2.unit };
                u2.isPercent() ? l2.percent = u2.value : u2.isPx() ? l2.px = u2.value : u2.isEm() && (l2.em = u2.value), e3.push(new n2(S({ color: o2, cut: true }, l2)));
              }
              return e3;
            } }, { key: "createColorStep", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 2, e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 100, n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "%", r2 = Object(O.randomNumber)(2, t3), i2 = e3 / r2, a2 = Object(k.repeat)(r2).map(function(t4, e4) {
                return "".concat(x2.a.random(), " ").concat(e4 * i2).concat(n3);
              }).join(",");
              return a2;
            } }, { key: "createRepeatColorStep", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 2, e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : m.a.px(1), n3 = Object(O.randomNumber)(2, t3), r2 = Object(k.repeat)(n3).map(function(t4, n4) {
                return "".concat(x2.a.random(), " ").concat(m.a.parse(e3).mul(n4 + 1));
              }).join(",");
              return r2;
            } }]), n2;
          }(g.a);
        }, function(t, e, n) {
          "use strict";
          n.r(e), n.d(e, "getColorIndexString", function() {
            return v;
          }), n.d(e, "isColor", function() {
            return y2;
          }), n.d(e, "matches", function() {
            return g;
          }), n.d(e, "convertMatches", function() {
            return m;
          }), n.d(e, "convertMatchesArray", function() {
            return b;
          }), n.d(e, "reverseMatches", function() {
            return k;
          }), n.d(e, "trim", function() {
            return x2;
          }), n.d(e, "parse", function() {
            return j;
          }), n.d(e, "parseGradient", function() {
            return S;
          });
          var r = n(15), i = n.n(r), a = n(7), o = n.n(a), c = { aliceblue: "rgb(240, 248, 255)", antiquewhite: "rgb(250, 235, 215)", aqua: "rgb(0, 255, 255)", aquamarine: "rgb(127, 255, 212)", azure: "rgb(240, 255, 255)", beige: "rgb(245, 245, 220)", bisque: "rgb(255, 228, 196)", black: "rgb(0, 0, 0)", blanchedalmond: "rgb(255, 235, 205)", blue: "rgb(0, 0, 255)", blueviolet: "rgb(138, 43, 226)", brown: "rgb(165, 42, 42)", burlywood: "rgb(222, 184, 135)", cadetblue: "rgb(95, 158, 160)", chartreuse: "rgb(127, 255, 0)", chocolate: "rgb(210, 105, 30)", coral: "rgb(255, 127, 80)", cornflowerblue: "rgb(100, 149, 237)", cornsilk: "rgb(255, 248, 220)", crimson: "rgb(237, 20, 61)", cyan: "rgb(0, 255, 255)", darkblue: "rgb(0, 0, 139)", darkcyan: "rgb(0, 139, 139)", darkgoldenrod: "rgb(184, 134, 11)", darkgray: "rgb(169, 169, 169)", darkgrey: "rgb(169, 169, 169)", darkgreen: "rgb(0, 100, 0)", darkkhaki: "rgb(189, 183, 107)", darkmagenta: "rgb(139, 0, 139)", darkolivegreen: "rgb(85, 107, 47)", darkorange: "rgb(255, 140, 0)", darkorchid: "rgb(153, 50, 204)", darkred: "rgb(139, 0, 0)", darksalmon: "rgb(233, 150, 122)", darkseagreen: "rgb(143, 188, 143)", darkslateblue: "rgb(72, 61, 139)", darkslategray: "rgb(47, 79, 79)", darkslategrey: "rgb(47, 79, 79)", darkturquoise: "rgb(0, 206, 209)", darkviolet: "rgb(148, 0, 211)", deeppink: "rgb(255, 20, 147)", deepskyblue: "rgb(0, 191, 255)", dimgray: "rgb(105, 105, 105)", dimgrey: "rgb(105, 105, 105)", dodgerblue: "rgb(30, 144, 255)", firebrick: "rgb(178, 34, 34)", floralwhite: "rgb(255, 250, 240)", forestgreen: "rgb(34, 139, 34)", fuchsia: "rgb(255, 0, 255)", gainsboro: "rgb(220, 220, 220)", ghostwhite: "rgb(248, 248, 255)", gold: "rgb(255, 215, 0)", goldenrod: "rgb(218, 165, 32)", gray: "rgb(128, 128, 128)", grey: "rgb(128, 128, 128)", green: "rgb(0, 128, 0)", greenyellow: "rgb(173, 255, 47)", honeydew: "rgb(240, 255, 240)", hotpink: "rgb(255, 105, 180)", indianred: "rgb(205, 92, 92)", indigo: "rgb(75, 0, 130)", ivory: "rgb(255, 255, 240)", khaki: "rgb(240, 230, 140)", lavender: "rgb(230, 230, 250)", lavenderblush: "rgb(255, 240, 245)", lawngreen: "rgb(124, 252, 0)", lemonchiffon: "rgb(255, 250, 205)", lightblue: "rgb(173, 216, 230)", lightcoral: "rgb(240, 128, 128)", lightcyan: "rgb(224, 255, 255)", lightgoldenrodyellow: "rgb(250, 250, 210)", lightgreen: "rgb(144, 238, 144)", lightgray: "rgb(211, 211, 211)", lightgrey: "rgb(211, 211, 211)", lightpink: "rgb(255, 182, 193)", lightsalmon: "rgb(255, 160, 122)", lightseagreen: "rgb(32, 178, 170)", lightskyblue: "rgb(135, 206, 250)", lightslategray: "rgb(119, 136, 153)", lightslategrey: "rgb(119, 136, 153)", lightsteelblue: "rgb(176, 196, 222)", lightyellow: "rgb(255, 255, 224)", lime: "rgb(0, 255, 0)", limegreen: "rgb(50, 205, 50)", linen: "rgb(250, 240, 230)", magenta: "rgb(255, 0, 255)", maroon: "rgb(128, 0, 0)", mediumaquamarine: "rgb(102, 205, 170)", mediumblue: "rgb(0, 0, 205)", mediumorchid: "rgb(186, 85, 211)", mediumpurple: "rgb(147, 112, 219)", mediumseagreen: "rgb(60, 179, 113)", mediumslateblue: "rgb(123, 104, 238)", mediumspringgreen: "rgb(0, 250, 154)", mediumturquoise: "rgb(72, 209, 204)", mediumvioletred: "rgb(199, 21, 133)", midnightblue: "rgb(25, 25, 112)", mintcream: "rgb(245, 255, 250)", mistyrose: "rgb(255, 228, 225)", moccasin: "rgb(255, 228, 181)", navajowhite: "rgb(255, 222, 173)", navy: "rgb(0, 0, 128)", oldlace: "rgb(253, 245, 230)", olive: "rgb(128, 128, 0)", olivedrab: "rgb(107, 142, 35)", orange: "rgb(255, 165, 0)", orangered: "rgb(255, 69, 0)", orchid: "rgb(218, 112, 214)", palegoldenrod: "rgb(238, 232, 170)", palegreen: "rgb(152, 251, 152)", paleturquoise: "rgb(175, 238, 238)", palevioletred: "rgb(219, 112, 147)", papayawhip: "rgb(255, 239, 213)", peachpuff: "rgb(255, 218, 185)", peru: "rgb(205, 133, 63)", pink: "rgb(255, 192, 203)", plum: "rgb(221, 160, 221)", powderblue: "rgb(176, 224, 230)", purple: "rgb(128, 0, 128)", rebeccapurple: "rgb(102, 51, 153)", red: "rgb(255, 0, 0)", rosybrown: "rgb(188, 143, 143)", royalblue: "rgb(65, 105, 225)", saddlebrown: "rgb(139, 69, 19)", salmon: "rgb(250, 128, 114)", sandybrown: "rgb(244, 164, 96)", seagreen: "rgb(46, 139, 87)", seashell: "rgb(255, 245, 238)", sienna: "rgb(160, 82, 45)", silver: "rgb(192, 192, 192)", skyblue: "rgb(135, 206, 235)", slateblue: "rgb(106, 90, 205)", slategray: "rgb(112, 128, 144)", slategrey: "rgb(112, 128, 144)", snow: "rgb(255, 250, 250)", springgreen: "rgb(0, 255, 127)", steelblue: "rgb(70, 130, 180)", tan: "rgb(210, 180, 140)", teal: "rgb(0, 128, 128)", thistle: "rgb(216, 191, 216)", tomato: "rgb(255, 99, 71)", turquoise: "rgb(64, 224, 208)", violet: "rgb(238, 130, 238)", wheat: "rgb(245, 222, 179)", white: "rgb(255, 255, 255)", whitesmoke: "rgb(245, 245, 245)", yellow: "rgb(255, 255, 0)", yellowgreen: "rgb(154, 205, 50)", transparent: "rgba(0, 0, 0, 0)", currentColor: "currentColor" };
          var s = { isColorName: function(t2) {
            return !!c[t2];
          }, getColorByName: function(t2) {
            return c[t2];
          } }, u = n(42), l = n(73), f = n(8);
          function h(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function p(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? h(Object(n2), true).forEach(function(e3) {
                o()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : h(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          var d = /(#(?:[\da-f]{3}){1,2}|#(?:[\da-f]{8})|rgb\((?:\s*\d{1,3},\s*){2}\d{1,3}\s*\)|rgba\((?:\s*\d{1,3},\s*){3}\d*\.?\d+\s*\)|hsl\(\s*\d{1,3}(?:,\s*\d{1,3}%){2}\s*\)|hsla\(\s*\d{1,3}(?:,\s*\d{1,3}%){2},\s*\d*\.?\d+\s*\)|([\w_\-]+))/gi;
          function v(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "@";
            return "".concat(e2).concat(t2.startIndex).padEnd(10, "0");
          }
          function y2(t2) {
            return !!g(t2).length;
          }
          function g(t2) {
            var e2 = t2.match(d), n2 = [];
            if (!e2)
              return n2;
            for (var r2 = 0, i2 = e2.length; r2 < i2; r2++)
              if (e2[r2].indexOf("#") > -1 || e2[r2].indexOf("rgb") > -1 || e2[r2].indexOf("hsl") > -1)
                n2.push({ color: e2[r2] });
              else {
                var a2 = s.getColorByName(e2[r2]);
                a2 && n2.push({ color: e2[r2], nameColor: a2 });
              }
            var o2 = { next: 0 };
            return n2.forEach(function(e3) {
              var n3 = t2.indexOf(e3.color, o2.next);
              e3.startIndex = n3, e3.endIndex = n3 + e3.color.length, o2.next = e3.endIndex;
            }), n2;
          }
          function m(t2) {
            var e2 = g(t2);
            return e2.forEach(function(e3) {
              t2 = t2.replace(e3.color, v(e3));
            }), { str: t2, matches: e2 };
          }
          function b(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : ",", n2 = m(t2);
            return n2.str.split(e2).map(function(t3, e3) {
              return t3 = x2(t3), n2.matches[e3] && (t3 = t3.replace(v(n2.matches[e3]), n2.matches[e3].color)), t3;
            });
          }
          function k(t2, e2) {
            return e2.forEach(function(e3) {
              t2 = t2.replace(v(e3), e3.color);
            }), t2;
          }
          var O = /^\s+|\s+$/g;
          function x2(t2) {
            return t2.replace(O, "");
          }
          function j(t2) {
            if (Object(f.isString)(t2)) {
              if (s.isColorName(t2) && (t2 = s.getColorByName(t2)), t2.indexOf("rgb(") > -1) {
                for (var e2 = 0, n2 = (r2 = t2.replace("rgb(", "").replace(")", "").split(",")).length; e2 < n2; e2++)
                  r2[e2] = parseInt(x2(r2[e2]), 10);
                return o2 = p(p({}, o2 = { type: "rgb", r: r2[0], g: r2[1], b: r2[2], a: 1 }), Object(u.RGBtoHSL)(o2));
              }
              if (t2.indexOf("rgba(") > -1) {
                for (e2 = 0, n2 = (r2 = t2.replace("rgba(", "").replace(")", "").split(",")).length; e2 < n2; e2++)
                  r2[e2] = n2 - 1 == e2 ? parseFloat(x2(r2[e2])) : parseInt(x2(r2[e2]), 10);
                return o2 = p(p({}, o2 = { type: "rgb", r: r2[0], g: r2[1], b: r2[2], a: r2[3] }), Object(u.RGBtoHSL)(o2));
              }
              if (t2.indexOf("hsl(") > -1) {
                for (e2 = 0, n2 = (r2 = t2.replace("hsl(", "").replace(")", "").split(",")).length; e2 < n2; e2++)
                  r2[e2] = parseFloat(x2(r2[e2]));
                return o2 = p(p({}, o2 = { type: "hsl", h: r2[0], s: r2[1], l: r2[2], a: 1 }), Object(l.HSLtoRGB)(o2));
              }
              if (t2.indexOf("hsla(") > -1) {
                for (e2 = 0, n2 = (r2 = t2.replace("hsla(", "").replace(")", "").split(",")).length; e2 < n2; e2++)
                  r2[e2] = n2 - 1 == e2 ? parseFloat(x2(r2[e2])) : parseInt(x2(r2[e2]), 10);
                return o2 = p(p({}, o2 = { type: "hsl", h: r2[0], s: r2[1], l: r2[2], a: r2[3] }), Object(l.HSLtoRGB)(o2));
              }
              if (t2.indexOf("#") == 0) {
                var r2 = [], i2 = 1;
                if ((t2 = t2.replace("#", "")).length == 3)
                  for (e2 = 0, n2 = t2.length; e2 < n2; e2++) {
                    var a2 = t2.substr(e2, 1);
                    r2.push(parseInt(a2 + a2, 16));
                  }
                else if (t2.length === 8) {
                  for (e2 = 0, n2 = t2.length; e2 < n2; e2 += 2)
                    r2.push(parseInt(t2.substr(e2, 2), 16));
                  i2 = r2.pop() / 255;
                } else
                  for (e2 = 0, n2 = t2.length; e2 < n2; e2 += 2)
                    r2.push(parseInt(t2.substr(e2, 2), 16));
                return o2 = p(p({}, o2 = { type: "hex", r: r2[0], g: r2[1], b: r2[2], a: i2 }), Object(u.RGBtoHSL)(o2));
              }
            } else if (Object(f.isNumber)(t2)) {
              var o2;
              if (0 <= t2 && t2 <= 16777215)
                return o2 = p(p({}, o2 = { type: "hex", r: (16711680 & t2) >> 16, g: (65280 & t2) >> 8, b: (255 & t2) >> 0, a: 1 }), Object(u.RGBtoHSL)(o2));
              if (0 <= t2 && t2 <= 4294967295)
                return o2 = p(p({}, o2 = { type: "hex", r: (4278190080 & t2) >> 24, g: (16711680 & t2) >> 16, b: (65280 & t2) >> 8, a: (255 & t2) / 255 }), Object(u.RGBtoHSL)(o2));
            }
            return t2;
          }
          function S(t2) {
            Object(f.isString)(t2) && (t2 = b(t2));
            var e2 = (t2 = t2.map(function(t3) {
              if (Object(f.isString)(t3)) {
                var e3 = m(t3), n3 = x2(e3.str).split(" ");
                return n3[1] ? n3[1].indexOf("%") > -1 ? n3[1] = parseFloat(n3[1].replace(/%/, "")) / 100 : n3[1] = parseFloat(n3[1]) : n3[1] = "*", n3[0] = k(n3[0], e3.matches), n3;
              }
              if (Array.isArray(t3))
                return t3[1] ? Object(f.isString)(t3[1]) && (t3[1].indexOf("%") > -1 ? t3[1] = parseFloat(t3[1].replace(/%/, "")) / 100 : t3[1] = +t3[1]) : t3[1] = "*", i()(t3);
            })).filter(function(t3) {
              return t3[1] === "*";
            }).length;
            if (e2 > 0) {
              var n2 = (1 - t2.filter(function(t3) {
                return t3[1] != "*" && t3[1] != 1;
              }).map(function(t3) {
                return t3[1];
              }).reduce(function(t3, e3) {
                return t3 + e3;
              }, 0)) / e2;
              t2.forEach(function(e3, r2) {
                e3[1] == "*" && r2 > 0 && (t2.length - 1 == r2 || (e3[1] = n2));
              });
            }
            return t2;
          }
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return E;
          });
          var r = n(12), i = n.n(r), a = n(15), o = n.n(a), c = n(7), s = n.n(c), u = n(3), l = n.n(u), f = n(4), h = n.n(f), p = n(5), d = n.n(p), v = n(6), y2 = n.n(v), g = n(1), m = n.n(g), b = n(2), k = n(30), O = n(8), x2 = n(9), j = n(14), S = new Map(), P = function() {
            function t2() {
              l()(this, t2);
            }
            return h()(t2, null, [{ key: "has", value: function(t3) {
              return S.has(t3);
            } }, { key: "get", value: function(t3) {
              return S.get(t3);
            } }, { key: "set", value: function(t3, e2) {
              S.size > 1e3 && S.clear(), S.set(t3, e2);
            } }]), t2;
          }();
          function w(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function R(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = m()(t2);
              if (e2) {
                var i2 = m()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return y2()(this, n2);
            };
          }
          var C = /((matrix|translate(X|Y|Z|3d)?|scale(X|Y|Z|3d)?|rotate(X|Y|Z|3d)?|skew(X|Y)?|matrix(3d)?|perspective)\(([^\)]*)\))/gi, E = function(t2) {
            d()(n2, t2);
            var e2 = R(n2);
            function n2() {
              return l()(this, n2), e2.apply(this, arguments);
            }
            return h()(n2, [{ key: "getDefaultObject", value: function() {
              return { itemType: "transform", value: [] };
            } }, { key: "toCloneObject", value: function() {
              return function(t3) {
                for (var e3 = 1; e3 < arguments.length; e3++) {
                  var n3 = arguments[e3] != null ? arguments[e3] : {};
                  e3 % 2 ? w(Object(n3), true).forEach(function(e4) {
                    s()(t3, e4, n3[e4]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(n3)) : w(Object(n3)).forEach(function(e4) {
                    Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(n3, e4));
                  });
                }
                return t3;
              }({}, this.attrs("itemType", "type", "value"));
            } }, { key: "toString", value: function() {
              return "".concat(this.json.type, "(").concat(this.json.value.join(", ") || "", ")");
            } }, { key: "hasNumberValue", value: function() {
              var t3 = this.json.type;
              return t3.includes("matrix") || t3.includes("scale");
            } }], [{ key: "join", value: function(t3) {
              var e3 = t3.filter(function(t4) {
                return t4.type === "perspective";
              }), r2 = t3.filter(function(t4) {
                return t4.type === "matrix3d";
              }), i2 = t3.filter(function(t4) {
                return t4.type !== "perspective" && t4.type !== "matrix3d";
              });
              return [].concat(o()(e3), o()(i2), o()(r2)).map(function(t4) {
                return new n2(t4).toString();
              }).join(" ");
            } }, { key: "parse", value: function(t3) {
              return new n2(t3);
            } }, { key: "remove", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
              return Object(O.isString)(e3) && (e3 = [e3]), n2.filter(t3, function(t4) {
                return e3.includes(t4.type) === false;
              });
            } }, { key: "filter", value: function(t3, e3) {
              return n2.join(n2.parseStyle(t3, false).filter(function(t4) {
                return e3(t4);
              }));
            } }, { key: "replace", value: function(t3, e3) {
              var r2 = n2.parseStyle(t3, false), i2 = r2.find(function(t4) {
                return t4.type === e3.type;
              });
              return i2 ? i2.value = e3.value : r2.push(e3), n2.join(r2);
            } }, { key: "replaceAll", value: function(t3, e3) {
              for (var r2 = n2.parseStyle(t3, false), i2 = n2.parseStyle(e3), a2 = 0, o2 = i2.length; a2 < o2; a2++) {
                var c2 = i2[a2], s2 = r2.find(function(t4) {
                  return t4.type === c2.type;
                });
                s2 ? s2.value = c2.value : r2.push(c2);
              }
              return n2.join(r2);
            } }, { key: "addTransform", value: function(t3, e3) {
              for (var r2 = n2.parseStyle(t3, false), i2 = n2.parseStyle(e3), a2 = 0, o2 = i2.length; a2 < o2; a2++) {
                var c2 = i2[a2], s2 = r2.find(function(t4) {
                  return t4.type === c2.type;
                });
                s2 ? c2.value.forEach(function(t4, e4) {
                  s2.value[e4].value += t4.value;
                }) : r2.push(c2);
              }
              return n2.join(r2);
            } }, { key: "get", value: function(t3, e3) {
              var r2 = n2.parseStyle(t3, true);
              if (r2 = Object(O.isFunction)(e3) ? r2.find(e3) : r2.find(function(t4) {
                return t4.type === e3;
              }))
                return r2.value;
            } }, { key: "createRotateKey", value: function(t3, e3, n3) {
              return "".concat(t3, ":::").concat(n3, "(").concat(e3, ")");
            } }, { key: "rotate", value: function(t3, e3) {
              var r2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "rotate", i2 = n2.createRotateKey(t3, e3, r2);
              return P.has(i2) || P.set(i2, n2.replace(t3, { type: r2, value: [e3] })), P.get(i2);
            } }, { key: "rotateZ", value: function(t3, e3) {
              return n2.rotate(t3, e3, "rotateZ");
            } }, { key: "rotateX", value: function(t3, e3) {
              return n2.rotate(t3, e3, "rotateX");
            } }, { key: "rotateY", value: function(t3, e3) {
              return n2.rotate(t3, e3, "rotateY");
            } }, { key: "parseStyle", value: function(t3) {
              var e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1], r2 = [];
              if (!t3)
                return r2;
              if (e3 && P.has(t3))
                return P.get(t3);
              var a2 = t3.match(C) || [];
              return a2.forEach(function(t4, e4) {
                var a3 = t4.split("("), o2 = i()(a3, 2), c2 = o2[0], s2 = o2[1], u2 = (s2 = s2.split(")")[0]).split(",");
                u2 = s2.includes("matrix") || s2.includes("scale") ? u2.map(function(t5) {
                  return b.a.number(t5.trim());
                }) : u2.map(function(t5) {
                  return b.a.parse(t5.trim());
                }), r2[e4] = n2.parse({ type: c2, value: u2 });
              }), e3 && P.set(t3, r2), r2;
            } }, { key: "createTransformMatrix", value: function(t3, e3, n3) {
              for (var r2 = x2.a.create(), i2 = 0, a2 = t3.length; i2 < a2; i2++) {
                var o2 = t3[i2];
                switch (o2.type) {
                  case "translate":
                  case "translateX":
                  case "translateY":
                  case "translateZ":
                    var c2 = o2.value;
                    o2.type === "translate" ? c2 = [c2[0].toPx(e3).value, c2[1].toPx(n3).value, 0] : o2.type === "translateX" ? c2 = [c2[0].toPx(e3).value, 0, 0] : o2.type === "translateY" ? c2 = [0, c2[0].toPx(n3).value, 0] : o2.type === "translateZ" && (c2 = [0, 0, c2[0].toPx().value]), x2.a.translate(r2, r2, c2);
                    break;
                  case "rotate":
                  case "rotateZ":
                    x2.a.rotateZ(r2, r2, Object(j.degreeToRadian)(o2.value[0].value));
                    break;
                  case "rotateX":
                    x2.a.rotateX(r2, r2, Object(j.degreeToRadian)(o2.value[0].value));
                    break;
                  case "rotateY":
                    x2.a.rotateY(r2, r2, Object(j.degreeToRadian)(o2.value[0].value));
                    break;
                  case "rotate3d":
                    c2 = o2.value;
                    x2.a.rotate(r2, r2, Object(j.degreeToRadian)(o2.value[3].value), [c2[0].value, c2[1].value, c2[2].value]);
                    break;
                  case "scale":
                    x2.a.scale(r2, r2, [o2.value[0].value, o2.value[1].value, 1]);
                    break;
                  case "scaleX":
                    x2.a.scale(r2, r2, [o2.value[0].value, 1, 1]);
                    break;
                  case "scaleY":
                    x2.a.scale(r2, r2, [1, o2.value[0].value, 1]);
                    break;
                  case "scaleZ":
                    x2.a.scale(r2, r2, [1, 1, o2.value[0].value]);
                    break;
                  case "skewX":
                    var s2 = o2.value[0].toDeg().toRad();
                    x2.a.multiply(r2, r2, x2.a.fromValues(1, 0, 0, 0, Math.tan(s2.value), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1));
                    break;
                  case "skewY":
                    s2 = o2.value[0].toDeg().toRad();
                    x2.a.multiply(r2, r2, x2.a.fromValues(1, Math.tan(s2.value), 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1));
                    break;
                  case "skew":
                    var u2 = o2.value[0].toDeg().toRad(), l2 = o2.value.length > 1 ? o2.value[1].toDeg().toRad() : u2;
                    x2.a.multiply(r2, r2, x2.a.fromValues(1, Math.tan(l2.value), 0, 0, Math.tan(u2.value), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1));
                    break;
                  case "matrix":
                    c2 = [(c2 = o2.value)[0].value, c2[1].value, 0, 0, c2[2].value, c2[3].value, 0, 0, 0, 0, 1, 0, c2[4].value, c2[5].value, 0, 1], x2.a.multiply(r2, r2, c2);
                    break;
                  case "matrix3d":
                    c2 = o2.value.map(function(t4) {
                      return t4.value;
                    });
                    x2.a.multiply(r2, r2, c2);
                    break;
                  case "perspective":
                    c2 = o2.value;
                    x2.a.perspective(r2, 0.5 * Math.PI, e3 / n3, 1, c2[0].value);
                }
              }
              return r2;
            } }, { key: "fromScale", value: function(t3) {
              if (t3[0] === 1 && t3[1] === 1)
                return "";
              var e3 = [];
              return t3[0] != 1 && e3.push("scaleX(".concat(t3[0], ")")), t3[1] != 1 && e3.push("scaleY(".concat(t3[1], ")")), t3[2] != 1 && e3.push("scaleZ(".concat(t3[2], ")")), e3.join(" ");
            } }]), n2;
          }(k.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return u;
          }), n.d(e, "k", function() {
            return l;
          }), n.d(e, "c", function() {
            return f;
          }), n.d(e, "j", function() {
            return g;
          }), n.d(e, "l", function() {
            return m;
          }), n.d(e, "m", function() {
            return k;
          }), n.d(e, "o", function() {
            return O;
          }), n.d(e, "n", function() {
            return x2;
          }), n.d(e, "b", function() {
            return j;
          }), n.d(e, "d", function() {
            return P;
          }), n.d(e, "e", function() {
            return w;
          }), n.d(e, "f", function() {
            return C;
          }), n.d(e, "h", function() {
            return E;
          }), n.d(e, "g", function() {
            return $;
          }), n.d(e, "i", function() {
            return T;
          });
          var r = n(15), i = n.n(r), a = n(9), o = n(14), c = { linear: true, ease: true, "ease-in": true, "ease-out": true, "ease-in-out": true }, s = { ease: "cubic-bezier(0.25, 0.1, 0.25, 1)", "ease-in": "cubic-bezier(0.42, 0, 1, 1)", "ease-out": "cubic-bezier(0, 0, 0.58, 1)" }, u = [[0, 0, 1, 1, "linear", true], [0.25, 0.1, 0.25, 1, "ease", true], [0.42, 0, 1, 1, "ease-in", true], [0, 0, 0.58, 1, "ease-out", true], [0.47, 0, 0.745, 0.715, "ease-in-sine"], [0.39, 0.575, 0.565, 1, "ease-out-sine"], [0.445, 0.05, 0.55, 0.95, "ease-in-out-sine"], [0.55, 0.085, 0.68, 0.53, "ease-in-quad"], [0.25, 0.46, 0.45, 0.94, "ease-out-quad"], [0.455, 0.03, 0.515, 0.955, "ease-in-out-quad"], [0.55, 0.055, 0.675, 0.19, "ease-in-cubic"], [0.215, 0.61, 0.355, 1, "ease-out-cubic"], [0.645, 0.045, 0.355, 1, "ease-in-out-cubic"], [0.895, 0.03, 0.685, 0.22, "ease-in-quart"], [0.165, 0.84, 0.44, 1, "ease-out-quart"], [0.77, 0, 0.175, 1, "ease-in-out-quart"], [0.6, 0.04, 0.98, 0.335, "ease-in-circ"], [0.075, 0.82, 0.165, 1, "ease-out-circ"], [0.785, 0.135, 0.15, 0.86, "ease-in-out-circ"], [0.95, 0.05, 0.795, 0.035, "ease-in-expo"], [0.19, 1, 0.22, 1, "ease-out-expo"], [1, 0, 0, 1, "ease-in-out-expo"], [0.755, 0.05, 0.855, 0.06, "ease-in-quint"], [0.23, 1, 0.32, 1, "ease-out-quint"], [0.86, 0, 0.07, 1, "ease-in-out-quint"], [0.6, -0.28, 0.735, 0.045, "ease-in-back"], [0.175, 0.885, 0.32, 1.275, "ease-out-back"], [0.68, -0.55, 0.265, 1.55, "ease-in-out-back"]], l = function(t2) {
            return i()(h(s[t2] || t2));
          }, f = function(t2) {
            t2 = t2.map(function(t3) {
              return Math.floor(100 * t3) / 100;
            });
            for (var e2 = 0, n2 = u.length; e2 < n2; e2++) {
              var r2 = u[e2];
              if (r2[0] == t2[0] && r2[1] == t2[1] && r2[2] == t2[2] && r2[3] == t2[3] && r2[5])
                return r2[4];
            }
            return "cubic-bezier( ".concat(t2.filter(function(t3, e3) {
              return e3 < 4;
            }).join(","), " )");
          }, h = function(t2) {
            if (typeof t2 == "string") {
              if (c[t2])
                return u.filter(function(e3) {
                  return e3[4] === t2;
                })[0];
              var e2 = t2.replace("cubic-bezier", "").replace("(", "").replace(")", "").split(",");
              return e2 = e2.map(function(t3) {
                return parseFloat(t3.trim());
              });
            }
            return t2;
          }, p = function(t2, e2, n2, r2) {
            var i2 = [t2, e2, n2, r2];
            return function(t3) {
              return P(i2, t3);
            };
          }, d = function(t2, e2, n2) {
            var r2 = [t2, e2, n2];
            return function(t3) {
              return w(r2, t3);
            };
          }, v = function(t2, e2) {
            var n2 = [t2, e2];
            return function(t3) {
              return R(n2, t3);
            };
          }, y2 = function(t2, e2, n2, r2, i2) {
            var a2 = e2(n2), c2 = Object(o.getDist)(r2, i2, a2.x, a2.y);
            c2 < t2.minDist && (t2.minDist = c2, t2.minT = n2);
          }, g = function(t2, e2, n2, r2, i2, a2, c2, s2) {
            for (var u2 = arguments.length > 8 && arguments[8] !== void 0 ? arguments[8] : 1e3, l2 = p({ x: t2, y: e2 }, { x: n2, y: r2 }, { x: i2, y: a2 }, { x: c2, y: s2 }), f2 = 0, h2 = l2(0), d2 = 0; d2 <= u2; d2++) {
              var v2 = d2 / u2, y3 = l2(v2);
              f2 += Object(o.getDist)(h2.x, h2.y, y3.x, y3.y), h2 = y3;
            }
            return f2;
          }, m = function(t2, e2, n2, r2, i2, a2) {
            for (var c2 = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : 1e3, s2 = d({ x: t2, y: e2 }, { x: n2, y: r2 }, { x: i2, y: a2 }), u2 = 0, l2 = s2(0), f2 = 0; f2 <= c2; f2++) {
              var h2 = f2 / c2, p2 = s2(h2);
              u2 += Object(o.getDist)(l2.x, l2.y, p2.x, p2.y), l2 = p2;
            }
            return u2;
          }, b = function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 100, n2 = { minDist: 1 / 0, minT: 0 };
            return function(r2, i2) {
              for (var a2 = 0; a2 <= e2; a2++)
                y2(n2, t2, a2 / e2, r2, i2);
              var o2 = 1 / (2 * e2), c2 = n2.minT;
              for (a2 = 0; a2 < e2; a2++)
                y2(n2, t2, c2 - o2, r2, i2), y2(n2, t2, c2 + o2, r2, i2), o2 /= 2;
              return n2.minT;
            };
          }, k = function(t2, e2, n2, r2) {
            var i2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 100;
            return b(p(t2, e2, n2, r2), i2);
          }, O = function(t2, e2, n2) {
            var r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 100;
            return b(d(t2, e2, n2), r2);
          }, x2 = function(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 100;
            return b(v(t2, e2), n2);
          }, j = function(t2) {
            if (t2 === "linear")
              return v(n2 = { x: 0, y: 0 }, r2 = { x: 1, y: 1 });
            var e2 = h(t2), n2 = { x: 0, y: 0 }, r2 = { x: e2[0], y: e2[1] }, i2 = { x: e2[2], y: e2[3] };
            return p(n2, r2, i2, { x: 1, y: 1 });
          }, S = function(t2, e2, n2) {
            return { x: t2.x + (e2.x - t2.x) * n2, y: t2.y + (e2.y - t2.y) * n2 };
          }, P = function(t2, e2) {
            var n2 = S(t2[0], t2[1], e2), r2 = S(t2[1], t2[2], e2), i2 = S(t2[2], t2[3], e2), a2 = S(n2, r2, e2), o2 = S(r2, i2, e2);
            return S(a2, o2, e2);
          }, w = function(t2, e2) {
            var n2 = S(t2[0], t2[1], e2), r2 = S(t2[1], t2[2], e2);
            return S(n2, r2, e2);
          }, R = function(t2, e2) {
            return S(t2[0], t2[1], e2);
          }, C = function(t2, e2) {
            var n2 = S(t2[0], t2[1], e2), r2 = S(t2[1], t2[2], e2), i2 = S(t2[2], t2[3], e2), a2 = S(n2, r2, e2), o2 = S(r2, i2, e2), c2 = S(a2, o2, e2);
            return { first: [t2[0], n2, a2, c2], second: [c2, o2, i2, t2[3]] };
          }, E = function(t2, e2) {
            var n2 = S(t2[0], t2[1], e2), r2 = S(t2[1], t2[2], e2), i2 = S(n2, r2, e2);
            return { first: [t2[0], n2, i2], second: [i2, r2, t2[2]] };
          }, $ = function(t2, e2) {
            var n2 = S(t2[0], t2[1], e2);
            return { first: [t2[0], n2], second: [n2, t2[1]] };
          }, I = function(t2) {
            var e2 = function(t3) {
              var e3 = a.d.negate([], t3[0]), n3 = a.d.multiply([], [3, 3, 3], t3[1]), r3 = a.d.multiply([], [-3, -3, -3], t3[2]), i3 = t3[3], o3 = a.d.add([], a.d.add([], e3, n3), a.d.add([], r3, i3));
              return a.d.multiply([], [3, 3, 3], o3);
            }(t2), n2 = function(t3) {
              var e3 = t3[0], n3 = a.d.multiply([], [-2, -2, -2], t3[1]), r3 = t3[2], i3 = a.d.add([], a.d.add([], e3, n3), r3);
              return a.d.multiply([], [6, 6, 6], i3);
            }(t2), r2 = function(t3) {
              var e3 = a.d.add([], t3[1], a.d.negate([], t3[0]));
              return a.d.multiply([], [3, 3, 3], e3);
            }(t2), i2 = [], o2 = n2[0] * n2[0] - 4 * e2[0] * r2[0];
            if (o2 < 0)
              ;
            else if (o2 === 0) {
              var c2 = -n2[0] / (2 * e2[0]);
              0 <= c2 && c2 <= 1 && i2.push(c2);
            } else if (o2 > 0) {
              var s2 = (-n2[0] + Math.sqrt(o2)) / (2 * e2[0]), u2 = (-n2[0] - Math.sqrt(o2)) / (2 * e2[0]);
              0 <= s2 && s2 <= 1 && i2.push(s2), 0 <= u2 && u2 <= 1 && i2.push(u2);
            }
            var l2 = n2[1] * n2[1] - 4 * e2[1] * r2[1];
            if (l2 < 0)
              ;
            else if (l2 === 0) {
              var f2 = -n2[1] / (2 * e2[1]);
              0 <= f2 && f2 <= 1 && i2.push(f2);
            } else if (l2 > 0) {
              var h2 = (-n2[1] + Math.sqrt(l2)) / (2 * e2[1]), p2 = (-n2[1] - Math.sqrt(l2)) / (2 * e2[1]);
              0 <= h2 && h2 <= 1 && i2.push(h2), 0 <= p2 && p2 <= 1 && i2.push(p2);
            }
            return i2;
          }, T = function(t2) {
            var e2 = I(t2), n2 = t2.map(function(t3) {
              return { x: t3[0], y: t3[1] };
            });
            return e2.map(function(t3) {
              var e3 = P(n2, t3);
              return [e3.x, e3.y, 0];
            });
          };
        }, function(t, e, n) {
          "use strict";
          var r = {};
          n.r(r), n.d(r, "CMYKtoRGB", function() {
            return f;
          });
          var i = {};
          n.r(i), n.d(i, "YCrCbtoRGB", function() {
            return v;
          });
          var a = n(7), o = n.n(a), c = n(57), s = n(44), u = n(14), l = n(42);
          function f(t2, e2, n2, r2) {
            if (arguments.length == 1) {
              var i2 = arguments[0];
              t2 = i2.c, e2 = i2.m, n2 = i2.y, r2 = i2.k;
            }
            var a2 = 255 * (1 - t2) * (1 - r2), o2 = 255 * (1 - e2) * (1 - r2), c2 = 255 * (1 - n2) * (1 - r2);
            return { r: a2, g: o2, b: c2 };
          }
          var h = n(76), p = n(77), d = n(73);
          function v(t2, e2, n2, r2) {
            if (arguments.length == 1) {
              var i2 = arguments[0];
              t2 = i2.y, e2 = i2.cr, n2 = i2.cb;
              r2 = (r2 = i2.bit) || 0;
            }
            var a2 = t2 + 1.402 * (e2 - r2), o2 = t2 - 0.344 * (n2 - r2) - 0.714 * (e2 - r2), c2 = t2 + 1.772 * (n2 - r2);
            return { r: Math.ceil(a2), g: Math.ceil(o2), b: Math.ceil(c2) };
          }
          var y2 = n(78), g = n(25), m = n(8);
          function b(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function k(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? b(Object(n2), true).forEach(function(e3) {
                o()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : b(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          e.a = k(k(k(k(k(k(k(k(k(k(k(k({}, s), c), u), y2), g), i), l), r), p), d), h), m);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return m;
          });
          var r = n(12), i = n.n(r), a = n(15), o = n.n(a), c = n(3), s = n.n(c), u = n(4), l = n.n(u), f = n(27), h = n(8), p = n(14), d = n(9), v = n(20), y2 = /([mMlLvVhHcCsSqQtTaAzZ]([^mMlLvVhHcCsSqQtTaAzZ]*))/g, g = /-?[0-9]*\.?[0-9]+(?:e[-+]?\d+)?/gi, m = function() {
            function t2() {
              var e2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
              s()(this, t2), this.reset(e2);
            }
            return l()(t2, [{ key: "reset", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
              this.segments = [], this.pathString = t3, this.parse();
            } }, { key: "resetSegments", value: function(t3) {
              this.segments = t3 || [], this.pathString = this.joinPath();
            } }, { key: "trim", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", e2 = t3.match(g) || [];
              return e2.filter(function(t4) {
                return t4 != "";
              });
            } }, { key: "parse", value: function() {
              var t3 = this, e2 = this.pathString.match(y2) || [];
              this.segments = e2.map(function(e3) {
                var n2 = e3[0];
                return { command: n2, values: t3.trim(e3.replace(n2, "")).map(function(t4) {
                  return +t4;
                }) };
              }), this.segments = this.segments.map(function(e3, n2) {
                switch (e3.command) {
                  case "c":
                  case "m":
                  case "l":
                  case "q":
                  case "s":
                  case "t":
                  case "v":
                  case "h":
                    for (var r2 = t3.segments[n2 - 1], i2 = r2.values[r2.values.length - 2], a2 = r2.values[r2.values.length - 1], c2 = 0, s2 = e3.values.length; c2 < s2; c2 += 2)
                      e3.values[c2] += i2, e3.values[c2 + 1] += a2;
                    return { command: e3.command.toUpperCase(), values: o()(e3.values) };
                  default:
                    return e3;
                }
              });
            } }, { key: "convertGenerator", value: function() {
              for (var t3 = [], e2 = 0, n2 = this.segments.length; e2 < n2; e2++) {
                var r2 = this.segments[e2], a2 = this.segments[e2 + 1], o2 = r2.command, c2 = r2.values;
                if (o2 === "M") {
                  var s2 = i()(c2, 2), u2 = s2[0], l2 = s2[1];
                  t3.push({ command: o2, originalCommand: o2, startPoint: { x: u2, y: l2 }, endPoint: { x: u2, y: l2 }, reversePoint: { x: u2, y: l2 }, curve: false });
                } else if (o2 === "L") {
                  if ((P = v.a.getPrevPoint(t3, t3.length)).curve) {
                    var f2 = i()(c2, 2);
                    u2 = f2[0], l2 = f2[1];
                    t3.push({ command: o2, originalCommand: o2, startPoint: { x: u2, y: l2 }, endPoint: { x: u2, y: l2 }, reversePoint: Object(h.clone)(P.endPoint), curve: true });
                  } else {
                    var p2 = i()(c2, 2);
                    u2 = p2[0], l2 = p2[1];
                    t3.push({ command: o2, originalCommand: o2, startPoint: { x: u2, y: l2 }, endPoint: { x: u2, y: l2 }, reversePoint: { x: u2, y: l2 }, curve: false });
                  }
                } else if (o2 === "Q") {
                  var d2 = i()(c2, 4), y3 = d2[0], g2 = d2[1];
                  u2 = d2[2], l2 = d2[3];
                  if ((P = v.a.getPrevPoint(t3, t3.length)).curve) {
                    var m2 = { x: u2, y: l2 }, b = { x: u2, y: l2 }, k = { x: u2, y: l2 };
                    t3.push({ command: "L", originalCommand: o2, startPoint: m2, endPoint: b, reversePoint: k, curve: false }), P.endPoint = { x: y3, y: g2 };
                  } else if (a2 && a2.command === "L") {
                    P.curve = true, P.endPoint = { x: y3, y: g2 };
                    m2 = { x: u2, y: l2 }, k = { x: u2, y: l2 }, b = { x: u2, y: l2 };
                    t3.push({ command: "L", originalCommand: o2, curve: false, startPoint: m2, endPoint: b, reversePoint: k });
                  } else {
                    m2 = { x: u2, y: l2 }, k = { x: y3, y: g2 }, b = { x: u2, y: l2 };
                    t3.push({ command: o2, originalCommand: o2, curve: true, startPoint: m2, endPoint: b, reversePoint: k });
                  }
                } else if (o2 === "T") {
                  var O = i()(c2, 2);
                  u2 = O[0], l2 = O[1];
                  if ((E = segments[e2 - 1]) && E.command === "Q") {
                    var x2 = i()(E.values, 4), j = (y3 = x2[0], g2 = x2[1], x2[2]), S = x2[3];
                    (P = v.a.getPrevPoint(t3, t3.length)).endPoint = v.a.getReversePoint({ x: j, y: S }, { x: y3, y: g2 });
                    m2 = { x: u2, y: l2 }, b = { x: u2, y: l2 }, k = { x: u2, y: l2 };
                    t3.push({ command: "L", originalCommand: o2, startPoint: m2, endPoint: b, reversePoint: k, curve: false });
                  }
                } else if (o2 === "C") {
                  var P = v.a.getPrevPoint(t3, t3.length), w = i()(c2, 6), R = (y3 = w[0], g2 = w[1], w[2]), C = w[3];
                  m2 = { x: u2 = w[4], y: l2 = w[5] }, k = { x: R, y: C }, b = { x: u2, y: l2 };
                  t3.push({ command: o2, originalCommand: o2, curve: true, startPoint: m2, endPoint: b, reversePoint: k }), P && (P.curve = true, P.endPoint = { x: y3, y: g2 });
                } else if (o2 === "S") {
                  var E, $ = i()(c2, 2);
                  u2 = $[0], l2 = $[1];
                  if ((E = segments[e2 - 1]) && E.command === "C") {
                    var I = i()(E.values, 4);
                    R = I[0], C = I[1], j = I[2], S = I[3];
                    (P = v.a.getPrevPoint(t3, t3.length)).endPoint = v.a.getReversePoint(P.startPoint, P.reversePoint);
                    m2 = { x: u2, y: l2 }, b = { x: u2, y: l2 }, k = { x: R, y: C };
                    t3.push({ command: "Q", originalCommand: o2, startPoint: m2, endPoint: b, reversePoint: k, curve: false });
                  }
                } else if (o2 === "Z") {
                  P = v.a.getPrevPoint(t3, t3.length);
                  var T = v.a.getFirstPoint(t3, t3.length);
                  v.a.isEqual(P.startPoint, T.startPoint) && (P.connected = true, P.endPoint = Object(h.clone)(T.endPoint), T.reversePoint = Object(h.clone)(P.reversePoint)), P.close = true;
                }
              }
              return t3 = t3.filter(function(t4) {
                return !!t4;
              });
            } }, { key: "length", value: function() {
              return this.segments.length;
            } }, { key: "setSegments", value: function(t3, e2) {
              this.segments[t3] = e2;
            } }, { key: "getSegments", value: function(t3) {
              return Object(h.isNotUndefined)(t3) ? this.segments[t3] : this.segments;
            } }, { key: "joinPath", value: function(t3) {
              return (t3 || this.segments).map(function(t4) {
                return "".concat(t4.command, " ").concat(t4.values.length ? t4.values.join(" ") : "");
              }).join("");
            } }, { key: "each", value: function(t3) {
              var e2 = this, n2 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1], r2 = this.segments.map(function(n3, r3) {
                return t3.call(e2, n3, r3);
              });
              if (n2)
                return r2;
              this.segments = r2;
            } }, { key: "_loop", value: function(t3) {
              var e2 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
              return this.each(function(e3) {
                var n2 = e3.values;
                switch (e3.command) {
                  case "M":
                  case "L":
                    var r2 = t3(n2, 0);
                    e3.values = [r2[0], r2[1]];
                    break;
                  case "V":
                    r2 = t3([+n2[0], 0]);
                    e3.values = [r2[0]];
                    break;
                  case "H":
                    r2 = t3([0, +n2[0]]);
                    e3.values = [r2[1]];
                    break;
                  case "C":
                  case "S":
                  case "T":
                  case "Q":
                    for (var i2 = 0, a2 = n2.length; i2 < a2; i2 += 2) {
                      r2 = t3(n2, i2);
                      e3.values[i2] = r2[0], e3.values[i2 + 1] = r2[1];
                    }
                }
                return e3;
              }, e2);
            } }, { key: "clone", value: function() {
              return new t2(this.joinPath());
            } }, { key: "translate", value: function(t3, e2) {
              return this.transformMat4(d.a.fromTranslation([], [t3, e2, 0])), this;
            } }, { key: "translateTo", value: function(t3, e2) {
              return this.joinPath(this.transformMat4(d.a.fromTranslation([], [t3, e2, 0]), true));
            } }, { key: "scale", value: function(t3, e2) {
              return this.transformMat4(d.a.fromScaling([], [t3, e2, 1])), this;
            } }, { key: "scaleTo", value: function(t3, e2) {
              return this.joinPath(this.transformMat4(d.a.fromScaling([], [t3, e2, 1]), true));
            } }, { key: "rotate", value: function(t3, e2, n2) {
              return this.transformMat4(d.a.fromRotation([], Object(p.degreeToRadian)(t3), [e2 || 0, n2 || 0, 0])), this;
            } }, { key: "rotateTo", value: function(t3) {
              return this.joinPath(this.transformMat4(d.a.fromRotation([], Object(p.degreeToRadian)(t3), [centerX || 0, centerY || 0, 0]), true));
            } }, { key: "reflectionOrigin", value: function() {
              return this.transformMat4(d.a.fromScaling([], [-1, -1, 0])), this;
            } }, { key: "reflectionOriginTo", value: function() {
              return this.joinPath(this.transformMat4(d.a.fromScaling([], [-1, -1, 0]), true));
            } }, { key: "flipX", value: function() {
              return this.transformMat4(d.a.fromScaling([], [1, -1, 0])), this;
            } }, { key: "flipXTo", value: function() {
              return this.joinPath(this.transformMat4(d.a.fromScaling([], [1, -1, 0]), true));
            } }, { key: "flipY", value: function() {
              return this.transformMat4(d.a.fromScaling([], [-1, 1, 0])), this;
            } }, { key: "flipYTo", value: function() {
              return this.joinPath(this.transformMat4(d.a.fromScaling([], [-1, 1, 0]), true));
            } }, { key: "skewX", value: function(t3) {
              return this.transformMat4(d.a.fromValues(1, Math.tan(Object(p.degreeToRadian)(t3)), 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)), this;
            } }, { key: "skewXTo", value: function(t3) {
              return this.joinPath(this.transformMat4(d.a.fromValues(1, Math.tan(Object(p.degreeToRadian)(t3)), 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), true));
            } }, { key: "skewY", value: function(t3) {
              return this.transformMat4(d.a.fromValues(1, 0, 0, 0, Math.tan(Object(p.degreeToRadian)(t3)), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)), this;
            } }, { key: "skewYTo", value: function(t3) {
              return this.joinPath(this.transformMat4(d.a.fromValues(1, 0, 0, 0, Math.tan(Object(p.degreeToRadian)(t3)), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), true));
            } }, { key: "normalize", value: function() {
            } }, { key: "getBBox", value: function() {
              var t3 = Number.MAX_SAFE_INTEGER, e2 = Number.MAX_SAFE_INTEGER, n2 = Number.MIN_SAFE_INTEGER, r2 = Number.MIN_SAFE_INTEGER;
              return this.each(function(i2, a2) {
                var o2 = i2.values, c2 = i2.command, s2 = this.segments[a2 - 1];
                switch (c2) {
                  case "M":
                  case "L":
                    t3 = Math.min(t3, o2[0]), n2 = Math.max(n2, o2[0]), e2 = Math.min(e2, o2[1]), r2 = Math.max(r2, o2[1]);
                    break;
                  case "V":
                    t3 = Math.min(t3, o2[0]), n2 = Math.max(n2, o2[0]);
                    break;
                  case "H":
                    e2 = Math.min(e2, o2[1]), r2 = Math.max(r2, o2[1]);
                    break;
                  case "C":
                    Object(f.i)([[s2.values[s2.values.length - 2], s2.values[s2.values.length - 1], 0], [o2[0], o2[1], 0], [o2[2], o2[3], 0], [o2[4], o2[5], 0]]).forEach(function(i3) {
                      t3 = Math.min(t3, i3[0]), n2 = Math.max(n2, i3[0]), e2 = Math.min(e2, i3[1]), r2 = Math.max(r2, i3[1]);
                    });
                    break;
                  case "Q":
                    for (var u2 = [[s2.values[s2.values.length - 2], s2.values[s2.values.length - 1], 0], [o2[0], o2[1], 0], [o2[2], o2[3], 0]].map(function(t4) {
                      return { x: t4[0], y: t4[1] };
                    }), l2 = 0; l2 <= 1; l2 += 1e-4) {
                      var h2 = Object(f.e)(u2, l2), p2 = h2.x, d2 = h2.y;
                      t3 = Math.min(t3, p2), n2 = Math.max(n2, p2), e2 = Math.min(e2, d2), r2 = Math.max(r2, d2);
                    }
                }
                return i2;
              }), [[t3, e2, 0], [n2, e2, 0], [n2, r2, 0], [t3, r2, 0]];
            } }, { key: "d", get: function() {
              return this.toString();
            } }, { key: "toString", value: function() {
              return this.joinPath();
            } }, { key: "transformMat4", value: function(t3) {
              var e2 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
              return this.each(function(e3) {
                var n2 = e3.values;
                switch (e3.command) {
                  case "M":
                  case "L":
                    var r2 = d.d.transformMat4([], [n2[0], n2[1], 0], t3);
                    e3.values = [r2[0], r2[1]];
                    break;
                  case "V":
                    r2 = d.d.transformMat4([], [+n2[0], 0, 0], t3);
                    e3.values = [r2[0]];
                    break;
                  case "H":
                    r2 = d.d.transformMat4([], [0, +n2[0], 0], t3);
                    e3.values = [r2[1]];
                    break;
                  case "C":
                  case "S":
                  case "T":
                  case "Q":
                    for (var i2 = 0, a2 = n2.length; i2 < a2; i2 += 2) {
                      r2 = d.d.transformMat4([], [n2[i2], n2[i2 + 1], 0], t3);
                      e3.values[i2] = r2[0], e3.values[i2 + 1] = r2[1];
                    }
                }
                return e3;
              }, e2);
            } }, { key: "invert", value: function(t3) {
              this.transformMat4(d.a.invert([], t3));
            } }, { key: "round", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
              return this.each(function(e2) {
                return e2.values = e2.values.map(function(e3) {
                  return Object(p.round)(e3, t3);
                }), e2;
              }), this;
            } }, { key: "reverseSegments", value: function(t3) {
              for (var e2 = [], n2 = t3.length - 1, r2 = n2; r2 > 0; r2--) {
                var i2 = t3[r2], a2 = i2.values, o2 = i2.command, c2 = t3[r2 - 1], s2 = c2.values[c2.values.length - 2], u2 = c2.values[c2.values.length - 1];
                switch (o2) {
                  case "L":
                    r2 === n2 && e2.push({ command: "M", values: [a2[0], a2[1]] }), e2.push({ command: "L", values: [s2, u2] });
                    break;
                  case "C":
                    r2 === n2 && e2.push({ command: "M", values: [a2[4], a2[5]] }), e2.push({ command: "C", values: [a2[2], a2[3], a2[0], a2[1], s2, u2] });
                    break;
                  case "Q":
                    r2 === n2 && e2.push({ command: "M", values: [a2[2], a2[3]] }), e2.push({ command: "Q", values: [a2[0], a2[1], s2, u2] });
                    break;
                  case "Z":
                    e2.push(i2), n2 = r2 - 1;
                }
              }
              return e2[0].command === "Z" && e2.push(e2.shift()), e2;
            } }, { key: "splitSegments", value: function() {
              var t3 = [], e2 = [];
              return this.segments.forEach(function(n2) {
                n2.command === "M" ? (e2 = [n2], t3.push(e2)) : e2.push(n2);
              }), t3;
            } }, { key: "reverse", value: function() {
              var t3 = this, e2 = this.splitSegments(), n2 = [];
              e2.forEach(function(e3) {
                n2.push.apply(n2, t3.reverseSegments(e3));
              }), this.segments = n2;
            } }, { key: "verties", get: function() {
              var t3 = [], e2 = [];
              return this.each(function(n2) {
                var r2 = n2.values;
                switch (n2.command) {
                  case "M":
                  case "L":
                    t3.push([].concat(o()(n2.values), [0]));
                    break;
                  case "V":
                    t3.push([r2[0], e2.pop(), 0]);
                    break;
                  case "H":
                    e2.pop(), t3.push([e2.pop(), r2[0], 0]);
                    break;
                  case "C":
                  case "S":
                  case "T":
                  case "Q":
                    for (var i2 = 0, a2 = r2.length; i2 < a2; i2 += 2)
                      t3.push([r2[i2], r2[i2 + 1], 0]);
                }
                e2 = r2;
              }), t3;
            } }]), t2;
          }();
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return k;
          });
          var r = n(7), i = n.n(r), a = n(3), o = n.n(a), c = n(4), s = n.n(c), u = n(5), l = n.n(u), f = n(6), h = n.n(f), p = n(1), d = n.n(p), v = n(32), y2 = n(8);
          function g(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function m(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? g(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : g(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function b(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var k = function(t2) {
            l()(n2, t2);
            var e2 = b(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return m({ selected: false, layers: [] }, t3);
            } }, { key: "isAttribute", value: function() {
              return true;
            } }, { key: "toCSS", value: function() {
              return {};
            } }, { key: "toString", value: function() {
              return Object(y2.CSS_TO_STRING)(this.toCSS());
            } }]), n2;
          }(v.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "c", function() {
            return o;
          }), n.d(e, "d", function() {
            return c;
          }), n.d(e, "a", function() {
            return s;
          }), n.d(e, "b", function() {
            return u;
          });
          var r = n(12), i = n.n(r), a = n(8);
          function o(t2, e2) {
            if (Object(a.isString)(e2)) {
              var n2 = e2.split(":"), r2 = i()(n2, 4), o2 = r2[0], c2 = r2[1], s2 = r2[2], u2 = r2[3];
              return 3600 * (o2 = parseInt(o2, 10)) + 60 * (c2 = parseInt(c2, 10)) + (s2 = parseInt(s2, 10)) + (u2 = parseInt(u2, 10)) * (1 / t2);
            }
            return Object(a.isNumber)(e2) ? e2 / t2 : 0;
          }
          function c(t2, e2) {
            var n2 = Math.floor(e2 / 3600), r2 = Math.floor(e2 / 60 % 60), i2 = Math.floor(e2 % 60), a2 = Math.round((e2 - Math.floor(e2)) * t2);
            return a2 === t2 && (a2 = 0, (i2 += 1) === 60 && (r2 += 1) === 60 && (n2 += 1)), [n2, r2, i2, a2].map(function(t3) {
              return (t3 + "").padStart(2, "0");
            }).join(":");
          }
          function s(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
            return c(t2, o(t2, e2) - o(t2, n2));
          }
          function u(t2) {
            var e2 = { id: 0, start: 0, speed: t2.speed || 1, elapsed: t2.elapsed || 0, duration: t2.duration || 0, iterationStartCount: 1, iterationCount: t2.iterationCount || Number.MAX_SAFE_INTEGER, direction: t2.direction || "normal", log: [], logIndex: 0, tick: t2.tick || function() {
            }, startCallback: t2.start || function() {
            }, endCallback: t2.end || function() {
            }, firstCallback: t2.first || function() {
            }, lastCallback: t2.last || function() {
            } }, n2 = function(t3) {
              return e2.direction === "normal" || e2.direction !== "reverse" && (e2.direction === "alternate" ? e2.iterationStartCount % 2 == 1 : e2.direction === "alternate-reverse" ? e2.iterationStartCount % 2 == 0 : void 0) ? t3 : 1 - t3;
            }, r2 = function(t3) {
              var r3 = false;
              e2.start === null && (e2.start = t3, r3 = true);
              var a2 = t3 - e2.start;
              e2.elapsed += a2 * e2.speed, e2.start = t3, e2.elapsed > e2.duration && (e2.elapsed = e2.duration);
              var c3 = n2(e2.elapsed / e2.duration) * e2.duration;
              r3 && e2.startCallback(c3, e2), e2.log[e2.logIndex++] = { elapsed: c3, dt: e2.lastTime - c3 }, e2.lastTime = c3, e2.tick(c3, e2), e2.elapsed === e2.duration ? o2() : i2();
            }, i2 = function() {
              e2.id = requestAnimationFrame(r2);
            }, o2 = function() {
              e2.endCallback(e2.elapsed, e2), e2.iterationStartCount++, e2.iterationStartCount > e2.iterationCount ? (e2.lastCallback(e2.elapsed, e2), cancelAnimationFrame(e2.id)) : (e2.start = null, e2.elapsed = 0, i2());
            }, c2 = function(t3) {
              e2.elapsed = t3, e2.tick(e2.elapsed, e2);
            };
            return { play: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              e2.start = null, e2.iterationStartCount = 1, e2.log = [], e2.lastTime = 0, e2.logIndex = 0, Object(a.isNumber)(t3.elapsed) && (e2.elapsed = t3.elapsed), Object(a.isNumber)(t3.speed) && (e2.speed = t3.speed), Object(a.isNumber)(t3.duration) && (e2.duration = t3.duration), Object(a.isNumber)(t3.iterationCount) && (e2.iterationCount = t3.iterationCount || Number.MAX_SAFE_INTEGER), Object(a.isString)(t3.direction) && (e2.direction = t3.direction), Object(a.isFunction)(t3.tick) && (e2.tick = t3.tick), Object(a.isFunction)(t3.start) && (e2.startCallback = t3.start), Object(a.isFunction)(t3.end) && (e2.endCallback = t3.end), Object(a.isFunction)(t3.first) && (e2.firstCallback = t3.first), Object(a.isFunction)(t3.last) && (e2.lastCallback = t3.last), Object(a.isFunction)(t3.stop) && (e2.stopCallback = t3.stop), e2.firstCallback(e2.elapsed, e2), i2();
            }, stop: function() {
              e2.stopCallback(e2.elapsed, e2), cancelAnimationFrame(e2.id);
            }, tick: r2, first: function(t3) {
              c2(0);
            }, last: function(t3) {
              c2(e2.duration);
            }, seek: c2, timer: e2 };
          }
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return g;
          });
          var r = n(7), i = n.n(r), a = n(3), o = n.n(a), c = n(4), s = n.n(c), u = n(15), l = n.n(u), f = n(14), h = n(8);
          function p(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function d(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? p(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : p(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          var v = function() {
            return true;
          };
          function y2(t2) {
            for (var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : v, n2 = [], r2 = t2.layers.length, i2 = r2; i2--; ) {
              var a2 = t2.layers[i2];
              n2.push.apply(n2, l()(y2(a2.ref, e2)));
            }
            return e2(t2) && n2.push(t2), n2;
          }
          var g = function() {
            function t2() {
              var e2 = this, n2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return o()(this, t2), this.ref = new Proxy(this, { get: function(t3, e3) {
                var n3 = t3[e3];
                return Object(h.isFunction)(n3) ? function() {
                  for (var e4 = arguments.length, r2 = new Array(e4), i2 = 0; i2 < e4; i2++)
                    r2[i2] = arguments[i2];
                  return n3.apply(t3, r2);
                } : n3 || t3.json[e3];
              }, set: function(t3, n3, r2) {
                return t3.json[n3] != r2 && (t3.json[n3] = r2, e2.changed()), true;
              } }), n2 instanceof t2 && (n2 = n2.toJSON()), this.json = this.convert(Object.assign(this.getDefaultObject(), n2)), this.lastChangedField = {}, this.lastChangedFieldKeys = [], this.cachedValue = {}, this.ref;
            }
            return s()(t2, [{ key: "getDefaultTitle", value: function() {
              return "Item";
            } }, { key: "getIcon", value: function() {
              return "";
            } }, { key: "isAttribute", value: function() {
              return false;
            } }, { key: "isChanged", value: function(t3) {
              return this.json.timestamp != Number(t3);
            } }, { key: "changed", value: function() {
              this.json.timestamp = this.json._timestamp + performance.now();
            } }, { key: "title", get: function() {
              return this.json.name || this.getDefaultTitle();
            } }, { key: "renameWithCount", value: function() {
              var t3 = this.json.name.split(" ");
              if (!(t3.length < 2)) {
                var e2 = t3.pop(), n2 = +e2;
                Object(h.isNumber)(n2) && isNaN(n2) === false ? n2++ : n2 = e2;
                var r2 = [].concat(l()(t3), [n2]).join(" ");
                this.reset({ name: r2 });
              }
            } }, { key: "allLayers", get: function() {
              return y2(this.ref);
            } }, { key: "filteredAllLayers", value: function(t3) {
              return y2(this.ref, t3);
            } }, { key: "id", get: function() {
              return this.json.id;
            } }, { key: "layers", get: function() {
              return this.json.layers;
            } }, { key: "parent", get: function() {
              return this.json.parent;
            } }, { key: "setParent", value: function(t3) {
              this.json.parent = t3;
            } }, { key: "depth", get: function() {
              return this.parent ? this.parent.depth + 1 : 1;
            } }, { key: "top", get: function() {
              if (!this.parent)
                return this.ref;
              var t3 = this.parent;
              do {
                if (!t3.parent)
                  return t3;
                t3 = t3.parent;
              } while (t3);
            } }, { key: "project", get: function() {
              return this.path.find(function(t3) {
                return t3.is("project");
              });
            } }, { key: "artboard", get: function() {
              return this.path.find(function(t3) {
                return t3.is("artboard");
              });
            } }, { key: "path", get: function() {
              if (!this.parent)
                return [this.ref];
              var t3 = this.parent.path;
              return t3.push(this.ref), t3;
            } }, { key: "positionInParent", get: function() {
              if (!this.parent)
                return -1;
              for (var t3 = this.parent.layers, e2 = -1, n2 = 0, r2 = t3.length; n2 < r2; n2++)
                if (t3[n2] === this.ref) {
                  e2 = n2;
                  break;
                }
              return e2;
            } }, { key: "getInnerId", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
              return this.json.id + t3;
            } }, { key: "is", value: function(t3) {
              return !!this.json && t3 === this.json.itemType;
            } }, { key: "isNot", value: function(t3) {
              return this.is(t3) === false;
            } }, { key: "isSVG", value: function() {
              return false;
            } }, { key: "addCache", value: function(t3, e2) {
              this.cachedValue[t3] = e2;
            } }, { key: "getCache", value: function(t3) {
              return this.cachedValue[t3];
            } }, { key: "computed", value: function(t3, e2) {
              var n2 = "__cachedKey_".concat(t3), r2 = "".concat(n2, "__parseValue"), i2 = this.json[t3];
              return this.getCache(t3) === i2 && this.getCache(r2) || (this.addCache(t3, i2), this.addCache(r2, e2(i2, this.ref))), this.getCache(r2);
            } }, { key: "editable", value: function(t3) {
              return true;
            } }, { key: "generateListNumber", value: function() {
              this.layers.forEach(function(t3, e2) {
                t3.no = e2, t3.generateListNumber();
              });
            } }, { key: "convert", value: function(t3) {
              var e2 = this;
              return t3.layers && t3.layers.forEach(function(t4) {
                t4.parent = e2.ref;
              }), t3;
            } }, { key: "setCache", value: function() {
            } }, { key: "toCloneObject", value: function() {
              var t3 = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0], e2 = this.attrs("itemType", "name", "elementType", "type", "visible", "lock", "selected");
              return t3 && (e2.layers = this.json.layers.map(function(e3) {
                return e3.clone(t3);
              })), e2;
            } }, { key: "clone", value: function() {
              var t3 = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0], e2 = this.constructor, n2 = new e2(this.toCloneObject(t3));
              return n2.setParent(this.json.parent), n2;
            } }, { key: "reset", value: function(t3) {
              return t3.__changedId || (t3.__changedId = Object(f.uuid)()), this.lastChangedField.__changedId !== t3.__changedId && (this.json = this.convert(Object.assign(this.json, t3)), this.lastChangedField = t3, this.lastChangedFieldKeys = Object.keys(t3), this.changed()), true;
            } }, { key: "hasChangedField", value: function() {
              for (var t3 = this, e2 = arguments.length, n2 = new Array(e2), r2 = 0; r2 < e2; r2++)
                n2[r2] = arguments[r2];
              return n2.some(function(e3) {
                return t3.lastChangedFieldKeys.includes(e3);
              });
            } }, { key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, e2 = Object(f.uuidShort)();
              return d({ id: e2, _timestamp: Date.now(), _time: performance.now(), visible: true, lock: false, selected: false, layers: [] }, t3);
            } }, { key: "attrs", value: function() {
              for (var t3 = this, e2 = {}, n2 = arguments.length, r2 = new Array(n2), i2 = 0; i2 < n2; i2++)
                r2[i2] = arguments[i2];
              return r2.forEach(function(n3) {
                e2[n3] = Object(h.clone)(t3.json[n3]);
              }), e2;
            } }, { key: "hasChildren", value: function() {
              return this.layers.length > 0;
            } }, { key: "appendChildItem", value: function(t3) {
              return t3.parent === this.ref || (this.resetMatrix(t3), t3.parent && t3.remove(), t3.setParent(this.ref), this.json.layers.push(t3), this.project.addIndexItem(t3)), t3;
            } }, { key: "prependChildItem", value: function(t3) {
              return this.resetMatrix(t3), t3.parent && t3.remove(), t3.setParent(this.ref), this.json.layers.unshift(t3), this.project.addIndexItem(t3), t3;
            } }, { key: "resetMatrix", value: function(t3) {
            } }, { key: "refreshMatrixCache", value: function() {
            } }, { key: "insertChildItem", value: function(t3) {
              var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
              return this.resetMatrix(t3), t3.parent && t3.remove(), t3.setParent(this.ref), this.json.layers.splice(e2, 0, t3), this.project.addIndexItem(t3), t3;
            } }, { key: "appendAfter", value: function(t3) {
              var e2 = this.parent.findIndex(this);
              return this.parent.insertChildItem(t3, e2), this.project.addIndexItem(t3), t3;
            } }, { key: "appendBefore", value: function(t3) {
              var e2 = this.parent.findIndex(this);
              return this.parent.insertChildItem(t3, e2 - 1), this.project.addIndexItem(t3), t3;
            } }, { key: "setPositionInPlace", value: function(t3, e2) {
              this.layers.splice(t3, 0, e2);
            } }, { key: "toggle", value: function(t3, e2) {
              Object(h.isUndefined)(e2) ? this.json[t3] = !this.json[t3] : this.json[t3] = !!e2;
            } }, { key: "isTreeItemHide", value: function() {
              var t3 = this.parent, e2 = [];
              do {
                if (t3.is("project"))
                  break;
                e2.push(Boolean(t3.collapsed)), t3 = t3.parent;
              } while (t3);
              return Boolean(e2.filter(Boolean).length);
            } }, { key: "expectJSON", value: function(t3) {
              return t3 !== "parent" && !Object(h.isUndefined)(this.json[t3]);
            } }, { key: "toJSON", value: function() {
              var t3 = this, e2 = this.json, n2 = {};
              return Object.keys(e2).filter(function(e3) {
                return t3.expectJSON(e3);
              }).forEach(function(t4) {
                n2[t4] = e2[t4];
              }), n2;
            } }, { key: "resize", value: function() {
            } }, { key: "copy", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
              return this.json.parent.copyItem(this.ref, t3);
            } }, { key: "findIndex", value: function(t3) {
              return this.json.layers.indexOf(t3.ref);
            } }, { key: "copyItem", value: function(t3) {
              var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10, n2 = t3.clone();
              n2.renameWithCount(), n2.move([e2, e2, 0]);
              var r2 = this.findIndex(t3);
              return r2 > -1 && (this.json.layers.push(n2), this.project.addIndexItem(n2)), n2;
            } }, { key: "remove", value: function() {
              this.json.parent.removeItem(this.ref), this.project.removeIndexItem(this.ref);
            } }, { key: "removeItem", value: function(t3) {
              var e2 = this.findIndex(t3);
              e2 > -1 && this.json.layers.splice(e2, 1);
            } }, { key: "hasParent", value: function(t3) {
              var e2 = this.json.parent.id === t3;
              return e2 || this.json.parent.is("project") !== false ? e2 : this.json.parent.hasParent(t3);
            } }, { key: "searchById", value: function(t3) {
              if (this.id === t3)
                return e2.addIndexItem(this.ref), this.ref;
              for (var e2 = this.project, n2 = 0, r2 = this.layers.length; n2 < r2; n2++) {
                var i2 = this.layers[n2];
                if (i2.id === t3)
                  return e2.addIndexItem(i2), i2;
                var a2 = i2.searchById(t3);
                if (a2)
                  return a2;
              }
              return null;
            } }]), t2;
          }();
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return i;
          }), n.d(e, "b", function() {
            return a;
          });
          var r = {};
          function i() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
            Object.keys(t2).forEach(function(e2) {
              r[e2] || (r[e2] = t2[e2]);
            });
          }
          function a(t2) {
            return r[t2];
          }
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return N;
          });
          var r = n(12), i = n.n(r), a = n(7), o = n.n(a), c = n(3), s = n.n(c), u = n(4), l = n.n(u), f = n(10), h = n.n(f), p = n(5), d = n.n(p), v = n(6), y2 = n.n(v), g = n(1), m = n.n(g), b = n(2), k = n(8), O = n(30), x2 = n(37), j = n(24);
          function S(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function P(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? S(Object(n2), true).forEach(function(e3) {
                o()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : S(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function w(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = m()(t2);
              if (e2) {
                var i2 = m()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return y2()(this, n2);
            };
          }
          var R = function(t2) {
            d()(n2, t2);
            var e2 = w(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { type: "static-gradient", static: true, colorsteps: [new j.a({ color: "red", percent: 0, index: 0 }), new j.a({ color: "red", percent: 100, index: 0 })] });
            } }, { key: "toCloneObject", value: function() {
              return P(P({}, h()(m()(n2.prototype), "toCloneObject", this).call(this)), {}, { static: true });
            } }, { key: "toString", value: function() {
              var t3 = this.json.colorsteps[0].color;
              return "linear-gradient(to right, ".concat(t3, " 0%, ").concat(t3, " 100%)");
            } }, { key: "isStatic", value: function() {
              return true;
            } }], [{ key: "create", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "transparent";
              return new n2({ colorsteps: [new j.a({ color: t3, percent: 0, index: 0 }), new j.a({ color: t3, percent: 100, index: 1 })] });
            } }]), n2;
          }(x2.a), C = n(60), E = n(46), $ = n(61), I = n(51), T = n(62), B = n(52), M = n(63), V = n(25);
          function D(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function L(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? D(Object(n2), true).forEach(function(e3) {
                o()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : D(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function A(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = m()(t2);
              if (e2) {
                var i2 = m()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return y2()(this, n2);
            };
          }
          var F = ["repeat", "no-repeat", "repeat-x", "repeat-y", "round", "space"], z = /((linear\-gradient|repeating\-linear\-gradient|radial\-gradient|repeating\-radial\-gradient|conic\-gradient|repeating\-conic\-gradient|url)\(([^\)]*)\))/gi, N = function(t2) {
            d()(n2, t2);
            var e2 = A(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "addImageResource", value: function(t3) {
              return this.clear("image-resource"), this.addItem("image-resource", t3);
            } }, { key: "addGradient", value: function(t3) {
              return this.addImageResource(t3);
            } }, { key: "setImageUrl", value: function(t3) {
              t3.images && t3.images.length && this.reset({ type: "image", image: n2.createImage(t3.images[0]) });
            } }, { key: "setGradient", value: function(t3) {
              this.reset({ type: t3.type, image: n2.createGradient(t3, this.json.image) });
            } }, { key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { itemType: "background-image", checked: false, blendMode: "normal", size: "auto", repeat: "repeat", width: b.a.percent(100), height: b.a.percent(100), x: b.a.percent(0), y: b.a.percent(0) });
            } }, { key: "toCloneObject", value: function() {
              var t3 = this.json;
              return L(L(L({}, h()(m()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("checked", "blendMode", "size", "repeat", "width", "height", "x", "y")), {}, { image: t3.image.clone() });
            } }, { key: "convert", value: function(t3) {
              return t3.x = b.a.parse(t3.x), t3.y = b.a.parse(t3.y), t3.width && (t3.width = b.a.parse(t3.width)), t3.height && (t3.height = b.a.parse(t3.height)), Object(k.isString)(t3.image) && (t3.image = n2.parseImage(t3.image)), t3;
            } }, { key: "image", get: function() {
              return this.json.image;
            }, set: function(t3) {
              this.json.image = t3;
            } }, { key: "checkField", value: function(t3, e3) {
              return t3 === "repeat" ? F.includes(e3) : h()(m()(n2.prototype), "checkField", this).call(this, t3, e3);
            } }, { key: "toBackgroundImageCSS", value: function() {
              return this.json.image ? { "background-image": this.json.image.toString() } : {};
            } }, { key: "toBackgroundPositionCSS", value: function() {
              var t3 = this.json;
              return { "background-position": "".concat(t3.x, " ").concat(t3.y) };
            } }, { key: "toBackgroundSizeCSS", value: function() {
              var t3 = this.json, e3 = "auto";
              return t3.size == "contain" || t3.size == "cover" ? e3 = t3.size : t3.width.isPercent() && t3.width.isPercent() && +t3.width == 100 && +t3.height == 100 || (e3 = "".concat(t3.width, " ").concat(t3.height)), { "background-size": e3 };
            } }, { key: "toBackgroundRepeatCSS", value: function() {
              return { "background-repeat": this.json.repeat };
            } }, { key: "toBackgroundBlendCSS", value: function() {
              return { "background-blend-mode": this.json.blendMode };
            } }, { key: "toCSS", value: function() {
              return L(L(L(L(L({}, this.toBackgroundImageCSS()), this.toBackgroundPositionCSS()), this.toBackgroundSizeCSS()), this.toBackgroundRepeatCSS()), this.toBackgroundBlendCSS());
            } }, { key: "toString", value: function() {
              return Object(k.keyMap)(this.toCSS(), function(t3, e3) {
                return "".concat(t3, ": ").concat(e3);
              }).join(";");
            } }, { key: "toBackgroundCSS", value: function() {
              var t3 = this.toCSS();
              return { background: "".concat(t3["background-image"], " ") };
            } }], [{ key: "createImage", value: function(t3) {
              return new C.a({ url: t3 });
            } }, { key: "createGradient", value: function(t3, e3) {
              var n3 = t3.colorsteps || e3.colorsteps, r2 = t3.angle || e3.angle, i2 = t3.radialType || e3.radialType, a2 = t3.radialPosition || e3.radialPosition, o2 = e3.toJSON();
              switch (delete o2.itemType, delete o2.type, t3.type) {
                case "static-gradient":
                  return new R(L(L({}, o2), {}, { colorsteps: n3 }));
                case "linear-gradient":
                  return new E.a(L(L({}, o2), {}, { colorsteps: n3, angle: r2 }));
                case "repeating-linear-gradient":
                  return new $.a(L(L({}, o2), {}, { colorsteps: n3, angle: r2 }));
                case "radial-gradient":
                  return new I.a(L(L({}, o2), {}, { colorsteps: n3, radialType: i2, radialPosition: a2 }));
                case "repeating-radial-gradient":
                  return new T.a(L(L({}, o2), {}, { colorsteps: n3, radialType: i2, radialPosition: a2 }));
                case "conic-gradient":
                  return new B.a(L(L({}, o2), {}, { colorsteps: n3, angle: r2, radialPosition: a2 }));
                case "repeating-conic-gradient":
                  return new M.a(L(L({}, o2), {}, { colorsteps: n3, angle: r2, radialPosition: a2 }));
              }
              return new x2.a();
            } }, { key: "parse", value: function(t3) {
              return new n2(t3);
            } }, { key: "parseImage", value: function(t3) {
              var e3 = Object(V.convertMatches)(t3), n3 = null, r2 = e3.str.match(z);
              return r2 ? (r2.forEach(function(t4, r3) {
                (t4 = Object(V.reverseMatches)(t4, e3.matches)).includes("repeating-linear-gradient") ? n3 = $.a.parse(t4) : t4.includes("linear-gradient") ? n3 = E.a.parse(t4) : t4.includes("repeating-radial-gradient") ? n3 = T.a.parse(t4) : t4.includes("radial-gradient") ? n3 = I.a.parse(t4) : t4.includes("repeating-conic-gradient") ? n3 = M.a.parse(t4) : t4.includes("conic-gradient") ? n3 = B.a.parse(t4) : t4.includes("url") && (n3 = C.a.parse(t4));
              }), n3) : n3;
            } }, { key: "changeImageType", value: function(t3) {
              switch (t3.type) {
                case "static-gradient":
                  return new R(t3);
                case "linear-gradient":
                  return new E.a(t3);
                case "repeating-linear-gradient":
                  return new $.a(t3);
                case "radial-gradient":
                  return new I.a(t3);
                case "repeating-radial-gradient":
                  return new T.a(t3);
                case "conic-gradient":
                  return new B.a(t3);
                case "repeating-conic-gradient":
                  return new M.a(t3);
                case "image-resource":
                case "url":
                  return new C.a(t3);
              }
            } }, { key: "parseStyle", value: function(t3) {
              var e3 = [];
              JSON.stringify(t3);
              if (t3["background-image"]) {
                var r2 = Object(V.convertMatches)(t3["background-image"]);
                r2.str.match(z).forEach(function(t4, i2) {
                  var a2 = null;
                  (t4 = Object(V.reverseMatches)(t4, r2.matches)).includes("repeating-linear-gradient") ? a2 = $.a.parse(t4) : t4.includes("linear-gradient") ? a2 = E.a.parse(t4) : t4.includes("repeating-radial-gradient") ? a2 = T.a.parse(t4) : t4.includes("radial-gradient") ? a2 = I.a.parse(t4) : t4.includes("repeating-conic-gradient") ? a2 = M.a.parse(t4) : t4.includes("conic-gradient") ? a2 = B.a.parse(t4) : t4.includes("url") && (a2 = C.a.parse(t4)), e3[i2] = new n2({ type: a2.type, image: a2 });
                });
              }
              return t3["background-repeat"] && t3["background-repeat"].split(",").map(function(t4) {
                return t4.trim();
              }).forEach(function(t4, n3) {
                e3[n3] && (e3[n3].repeat = t4);
              }), t3["background-blend-mode"] && t3["background-blend-mode"].split(",").map(function(t4) {
                return t4.trim();
              }).forEach(function(t4, n3) {
                e3[n3] && (e3[n3].blendMode = t4);
              }), t3["background-size"] && t3["background-size"].split(",").map(function(t4) {
                return t4.trim();
              }).forEach(function(t4, n3) {
                if (e3[n3])
                  if (t4 == "cover" || t4 === "contain" || t4 === "auto")
                    e3[n3].size = t4;
                  else {
                    e3[n3].size = "auto";
                    var r3 = t4.split(" "), a2 = i()(r3, 2), o2 = a2[0], c2 = a2[1];
                    e3[n3].width = b.a.parse(o2), e3[n3].height = b.a.parse(c2);
                  }
              }), t3["background-position"] && t3["background-position"].split(",").map(function(t4) {
                return t4.trim();
              }).forEach(function(t4, n3) {
                if (e3[n3]) {
                  var r3 = t4.split(" "), a2 = i()(r3, 2), o2 = a2[0], c2 = a2[1];
                  e3[n3].x = b.a.parse(o2), e3[n3].y = b.a.parse(c2);
                }
              }), e3;
            } }, { key: "toPropertyCSS", value: function(t3) {
              var e3 = {};
              return t3.forEach(function(t4) {
                Object(k.keyEach)(t4.toCSS(), function(t5, n3) {
                  e3[t5] || (e3[t5] = []), e3[t5].push(n3);
                });
              }), Object(k.combineKeyArray)(e3);
            } }, { key: "join", value: function(t3) {
              return Object(k.CSS_TO_STRING)(n2.toPropertyCSS(t3.map(function(t4) {
                return n2.parse(t4);
              })));
            } }, { key: "joinCSS", value: function(t3) {
              return n2.toPropertyCSS(t3.map(function(t4) {
                return n2.parse(t4);
              }));
            } }]), n2;
          }(O.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return l;
          });
          var r = n(12), i = n.n(r), a = n(3), o = n.n(a), c = n(4), s = n.n(c), u = n(29), l = function() {
            function t2() {
              o()(this, t2), this.pathArray = [];
            }
            return s()(t2, [{ key: "reset", value: function() {
              this.pathArray = [];
            } }, { key: "getPointString", value: function(t3) {
              return t3.map(function(t4) {
                return "".concat(t4.x, " ").concat(t4.y);
              }).join(" ");
            } }, { key: "makeString", value: function(t3) {
              var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
              return this.pathArray.push("".concat(t3, " ").concat(this.getPointString(e2))), this;
            } }, { key: "M", value: function() {
              for (var t3 = arguments.length, e2 = new Array(t3), n2 = 0; n2 < t3; n2++)
                e2[n2] = arguments[n2];
              return this.makeString("M", e2);
            } }, { key: "L", value: function() {
              for (var t3 = arguments.length, e2 = new Array(t3), n2 = 0; n2 < t3; n2++)
                e2[n2] = arguments[n2];
              return this.makeString("L", e2);
            } }, { key: "X", value: function() {
              var t3 = 3, e2 = arguments.length <= 0 ? void 0 : arguments[0], n2 = { x: e2.x - t3, y: e2.y - t3 }, r2 = { x: e2.x + t3, y: e2.y - t3 }, i2 = { x: e2.x - t3, y: e2.y + t3 }, a2 = { x: e2.x + t3, y: e2.y + t3 };
              return this.M(n2).L(a2).M(r2).L(i2);
            } }, { key: "Q", value: function() {
              for (var t3 = arguments.length, e2 = new Array(t3), n2 = 0; n2 < t3; n2++)
                e2[n2] = arguments[n2];
              return this.makeString("Q", e2);
            } }, { key: "C", value: function() {
              for (var t3 = arguments.length, e2 = new Array(t3), n2 = 0; n2 < t3; n2++)
                e2[n2] = arguments[n2];
              return this.makeString("C", e2);
            } }, { key: "Z", value: function() {
              return this.makeString("Z");
            } }, { key: "d", get: function() {
              return this.pathArray.join(" ").trim();
            } }, { key: "toString", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "object";
              return '<path d="'.concat(this.d, `" class='`).concat(t3, "'/>");
            } }], [{ key: "makeRect", value: function(e2, n2, r2, i2) {
              return new t2().M({ x: e2, y: n2 }).L({ x: e2 + r2, y: n2 }).L({ x: e2 + r2, y: n2 + i2 }).L({ x: e2, y: n2 + i2 }).L({ x: e2, y: n2 }).Z().d;
            } }, { key: "makeLine", value: function(e2, n2, r2, i2) {
              return new t2().M({ x: e2, y: n2 }).L({ x: r2, y: i2 }).d;
            } }, { key: "makeCircle", value: function(e2, n2, r2, i2) {
              var a2 = new t2().M({ x: 0, y: -1 }).C({ x: 0.552284749831, y: -1 }, { x: 1, y: -0.552284749831 }, { x: 1, y: 0 }).C({ x: 1, y: 0.552284749831 }, { x: 0.552284749831, y: 1 }, { x: 0, y: 1 }).C({ x: -0.552284749831, y: 1 }, { x: -1, y: 0.552284749831 }, { x: -1, y: 0 }).C({ x: -1, y: -0.552284749831 }, { x: -0.552284749831, y: -1 }, { x: 0, y: -1 }).Z().d, o2 = new u.a(a2);
              return o2.translate(1, 1).scale(r2 / 2, i2 / 2).translate(e2, n2), o2.toString();
            } }, { key: "makePathByPoints", value: function() {
              for (var e2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], n2 = new t2(), r2 = 0, i2 = e2.length; r2 < i2; r2++) {
                var a2 = e2[r2];
                r2 === 0 ? n2.M(a2) : n2.L(a2);
              }
              return n2.d;
            } }, { key: "makePathByVerties", value: function() {
              for (var e2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], n2 = new t2(), r2 = 0, a2 = e2.length; r2 < a2; r2++) {
                var o2 = i()(e2[r2], 3), c2 = o2[0], s2 = o2[1];
                o2[2];
                r2 === 0 ? n2.M({ x: c2, y: s2 }) : n2.L({ x: c2, y: s2 });
              }
              return n2.L({ x: e2[0][0], y: e2[0][1] }), n2.d;
            } }]), t2;
          }();
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return R;
          });
          var r = n(12), i = n.n(r), a = n(7), o = n.n(a), c = n(3), s = n.n(c), u = n(4), l = n.n(u), f = n(10), h = n.n(f), p = n(5), d = n.n(p), v = n(6), y2 = n.n(v), g = n(1), m = n.n(g), b = n(2), k = n(8), O = n(58), x2 = n(30);
          function j(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function S(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? j(Object(n2), true).forEach(function(e3) {
                o()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : j(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function P(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = m()(t2);
              if (e2) {
                var i2 = m()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return y2()(this, n2);
            };
          }
          var w = /(content\-box|padding\-box|border\-box|margin\-box|view\-box|stroke\-box|fill\-box|none|(inset|circle|ellipse|polygon|path|svg|url)(\(([^\)]*)\))?)/gi, R = function(t2) {
            d()(n2, t2);
            var e2 = P(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, S({ itemType: "clip-path", type: "none", value: "" }, t3));
            } }, { key: "toCloneObject", value: function() {
              return S(S({}, h()(m()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("value"));
            } }, { key: "toString", value: function() {
              var t3 = this.json.type, e3 = this.json.value, n3 = this.json.box, r2 = "";
              switch (t3) {
                case "circle":
                case "inset":
                case "ellipse":
                case "polygon":
                case "path":
                  r2 = "".concat(t3, "(").concat(e3, ")");
                  break;
                case "svg":
                  r2 = "url(#".concat(e3, ")");
                  break;
                default:
                  r2 = "none";
              }
              return n3 ? "".concat(n3, " ").concat(r2) : r2;
            } }, { key: "toCSS", value: function() {
              return { "clip-path": this.toString() };
            } }], [{ key: "toCSS", value: function(t3) {
              return new n2(t3).toCSS();
            } }, { key: "toString", value: function(t3) {
              return n2.toCSS(t3)["clip-path"];
            } }, { key: "parse", value: function(t3) {
              return new n2(t3);
            } }, { key: "parseStyle", value: function(t3) {
              var e3 = {};
              return t3 ? ((t3.match(w) || []).forEach(function(t4, n3) {
                if (t4.includes("-box"))
                  e3.box = t4;
                else {
                  var r2 = t4.split("("), a2 = i()(r2, 2), o2 = a2[0], c2 = a2[1];
                  c2 = c2 || "", c2 = o2 === "none" ? "" : c2.split(")")[0], e3.type = o2, e3.value = c2;
                }
              }), e3) : {};
            } }, { key: "parseStyleForCircle", value: function(t3) {
              var e3 = new b.a("", "closest-side"), n3 = "";
              if ((t3 = t3 || "50%").includes("at")) {
                var r2 = t3.split("at").map(function(t4) {
                  return t4.trim();
                }), a2 = i()(r2, 2);
                e3 = a2[0], n3 = a2[1];
              } else
                n3 = t3.trim();
              var o2 = n3.split(" "), c2 = i()(o2, 2), s2 = c2[0], u2 = c2[1];
              return Object(k.isUndefined)(u2) && (u2 = s2), { radius: e3, x: s2 = b.a.parse(s2), y: u2 = b.a.parse(u2) };
            } }, { key: "parseStyleForEllipse", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "50% 50%", e3 = "50% 50%", n3 = "";
              if ((t3 = t3 || "50%").includes("at")) {
                var r2 = t3.split("at").map(function(t4) {
                  return t4.trim();
                }), a2 = i()(r2, 2);
                e3 = a2[0], n3 = a2[1];
              } else
                n3 = t3.trim();
              var o2 = n3.split(" "), c2 = i()(o2, 2), s2 = c2[0], u2 = c2[1];
              Object(k.isUndefined)(u2) && (u2 = s2), s2 = b.a.parse(s2), u2 = b.a.parse(u2);
              var l2 = e3.split(" "), f2 = i()(l2, 2), h2 = f2[0], p2 = f2[1];
              return Object(k.isUndefined)(p2) && (p2 = h2), { radiusX: h2 = b.a.parse(h2), radiusY: p2 = b.a.parse(p2), x: s2, y: u2 };
            } }, { key: "parseStyleForInset", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", e3 = t3.split("round"), n3 = i()(e3, 2), r2 = n3[0], a2 = n3[1], o2 = O.a.parse(r2), c2 = i()(o2, 5), s2 = c2[0], u2 = c2[1], l2 = c2[2], f2 = c2[3], h2 = c2[4];
              if (a2)
                var p2 = O.a.parse(a2), d2 = i()(p2, 5), v2 = d2[0], y3 = d2[1], g2 = d2[2], m2 = d2[3], b2 = d2[4];
              return { isAll: s2 === 1, top: u2, right: l2, bottom: f2, left: h2, round: a2, isAllRadius: v2 === 1, topRadius: y3, rightRadius: g2, bottomRadius: m2, leftRadius: b2 };
            } }, { key: "parseStyleForPolygon", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
              return t3.split(",").filter(function(t4) {
                return t4.trim();
              }).map(function(t4) {
                var e3 = t4.trim().split(" "), n3 = i()(e3, 2), r2 = n3[0], a2 = n3[1];
                return { x: b.a.parse(r2), y: b.a.parse(a2) };
              });
            } }]), n2;
          }(x2.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return P;
          });
          var r = n(7), i = n.n(r), a = n(3), o = n.n(a), c = n(4), s = n.n(c), u = n(10), l = n.n(u), f = n(5), h = n.n(f), p = n(6), d = n.n(p), v = n(1), y2 = n.n(v), g = n(65), m = n(24), b = n(8), k = n(28);
          function O(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function x2(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? O(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : O(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function j(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = y2()(t2);
              if (e2) {
                var i2 = y2()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return d()(this, n2);
            };
          }
          var S = { "to top": 0, "to top right": 45, "to right": 90, "to bottom right": 135, "to bottom": 180, "to bottom left": 225, "to left": 270, "to top left": 315 }, P = function(t2) {
            h()(n2, t2);
            var e2 = j(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "isGradient", value: function() {
              return true;
            } }, { key: "toString", value: function() {
              return "none";
            } }, { key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return x2({ itemType: "image-resource", type: "gradient", colorsteps: [] }, t3);
            } }, { key: "toCloneObject", value: function() {
              return x2(x2({}, l()(y2()(n2.prototype), "toCloneObject", this).call(this)), {}, { colorsteps: this.json.colorsteps.map(function(t3) {
                return t3.clone();
              }) });
            } }, { key: "convert", value: function(t3) {
              return t3.colorsteps[0] instanceof m.a || (t3.colorsteps = t3.colorsteps.map(function(t4) {
                return new m.a(t4);
              })), t3;
            } }, { key: "calculateAngle", value: function() {
              var t3 = this.json.angle;
              return Object(b.isUndefined)(S[t3]) ? t3 : S[t3] || 0;
            } }, { key: "addColorStep", value: function(t3) {
              var e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1];
              return this.json.colorsteps.push(t3), e3 && this.sortColorStep(), t3;
            } }, { key: "insertColorStep", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "rgba(216,216,216,0)", n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "rgba(216,216,216,1)", r2 = this.colorsteps;
              if (r2.length) {
                if (t3 < r2[0].percent)
                  return r2[0].index = 1, void this.addColorStep(new m.a({ index: 0, color: r2[0].color, percent: t3 }));
                var i2 = r2.length - 1;
                if (r2[i2].percent < t3) {
                  var a2 = r2[i2].color, o2 = r2[i2].index + 1;
                  this.addColorStep(new m.a({ index: o2, color: a2, percent: t3 }));
                } else
                  for (var c2 = 0, s2 = r2.length - 1; c2 < s2; c2++) {
                    var u2 = r2[c2], l2 = r2[c2 + 1];
                    if (u2.percent <= t3 && t3 <= l2.percent) {
                      a2 = k.a.mix(u2.color, l2.color, (t3 - u2.percent) / (l2.percent - u2.percent), "rgb");
                      return void this.addColorStep(new m.a({ index: u2.index + 1, color: a2, percent: t3 }));
                    }
                  }
              } else
                this.addColorStepList([new m.a({ color: e3, percent: t3, index: 0 }), new m.a({ color: n3, percent: 100, index: 100 })]);
            } }, { key: "sortColorStep", value: function() {
              var t3 = this.colorsteps;
              t3.sort(function(t4, e3) {
                return t4.percent > e3.percent ? 1 : t4.percent < e3.percent ? -1 : t4.percent == e3.percent ? t4.index === e3.index ? 0 : t4.index > e3.index ? 1 : -1 : void 0;
              }), t3.forEach(function(t4, e3) {
                t4.index = 100 * e3;
              });
            } }, { key: "addColorStepList", value: function() {
              var t3 = this, e3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
              e3.forEach(function(e4) {
                t3.addColorStep(e4, false);
              }), this.sortColorStep();
            } }, { key: "getColorStep", value: function(t3) {
              return this.json.colorsteps.filter(function(e3) {
                return e3.id == t3;
              })[0];
            } }, { key: "clear", value: function() {
              arguments.length ? this.json.colorsteps.splice(+(arguments.length <= 0 ? void 0 : arguments[0]), 1) : this.json.colorsteps = [];
            } }, { key: "removeColorStep", value: function(t3) {
              this.json.colorsteps = this.json.colorsteps.filter(function(e3) {
                return e3.id != t3;
              });
            } }, { key: "colorsteps", get: function() {
              return this.json.colorsteps;
            } }, { key: "getColorString", value: function() {
              var t3 = this.colorsteps;
              return n2.toColorString(t3);
            } }], [{ key: "toColorString", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
              if (!t3.length)
                return "";
              var e3 = t3.map(function(e4, n3) {
                return e4.prevColorStep = e4.cut && n3 > 0 ? t3[n3 - 1] : null, e4;
              });
              return e3.length === 1 && e3.push(new m.a({ color: e3[0].color || "transparent", percent: 100 })), e3.map(function(t4) {
                return "".concat(t4);
              }).join(",");
            } }]), n2;
          }(g.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return G;
          });
          var r = n(7), i = n.n(r), a = n(3), o = n.n(a), c = n(4), s = n.n(c), u = n(5), l = n.n(u), f = n(6), h = n.n(f), p = n(1), d = n.n(p), v = n(30), y2 = n(25), g = n(12), m = n.n(g), b = n(10), k = n.n(b), O = n(24), x2 = n(66), j = n(2);
          function S(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function P(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? S(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : S(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function w(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var R = function(t2) {
            l()(n2, t2);
            var e2 = w(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "getDefaultObject", value: function(t3) {
              return k()(d()(n2.prototype), "getDefaultObject", this).call(this, P({ type: "linear-gradient", x1: "0%", y1: "0%", x2: "100%", y2: "0%", spreadMethod: "pad" }, t3));
            } }, { key: "toCloneObject", value: function() {
              return P(P({}, k()(d()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("x1", "y1", "x2", "y2", "spreadMethod"));
            } }, { key: "toString", value: function() {
              if (this.colorsteps.length === 0)
                return "";
              var t3 = this.getColorString(), e3 = this.json, n3 = [e3.x1, e3.y1, e3.x2, e3.y2, e3.spreadMethod].join(" ");
              return "".concat(this.json.type, "(").concat(n3, ", ").concat(t3, ")");
            } }, { key: "toSVGString", value: function(t3) {
              var e3 = this.json, n3 = e3.x1, r2 = e3.y1, i2 = e3.x2, a2 = e3.y2, o2 = e3.spreadMethod;
              return '\n        <linearGradient \n            id="'.concat(t3, '"\n            x1="').concat(n3, '"\n            x2="').concat(i2, '"\n            y1="').concat(r2, '"\n            y2="').concat(a2, '"\n            spreadMethod="').concat(o2, '"\n          >\n          ').concat(this.colorsteps.map(function(t4) {
                return '<stop offset="'.concat(t4.percent, '%"  stop-color="').concat(t4.color, '" ></stop>');
              }).join("\n"), "\n        </linearGradient>\n      ");
            } }, { key: "toFillValue", value: function(t3) {
              return "url(#".concat(t3, ")");
            } }], [{ key: "toLinearGradient", value: function(t3) {
              return t3.length === 0 ? "none" : new LinearGradient({ angle: "to right", colorsteps: t3 }) + "";
            } }, { key: "parse", value: function(t3) {
              var e3 = Object(y2.convertMatches)(t3), r2 = {}, i2 = [];
              return e3.str.split("(")[1].split(")")[0].split(",").map(function(t4) {
                return t4.trim();
              }).forEach(function(t4, n3) {
                if (t4.includes("@"))
                  t4 = Object(y2.reverseMatches)(t4, e3.matches), i2.push.apply(i2, O.a.parse(t4));
                else {
                  var a2 = t4.split(" "), o2 = m()(a2, 5), c2 = o2[0], s2 = o2[1], u2 = o2[2], l2 = o2[3], f2 = o2[4];
                  r2.x1 = j.a.parse(c2), r2.y1 = j.a.parse(s2), r2.x2 = j.a.parse(u2), r2.y2 = j.a.parse(l2), r2.spreadMethod = f2 || "pad";
                }
              }), new n2(P(P({}, r2), {}, { colorsteps: i2 }));
            } }]), n2;
          }(x2.a), C = n(8);
          function E(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function $(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? E(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : E(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function I(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var T = function(t2) {
            l()(n2, t2);
            var e2 = I(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return k()(d()(n2.prototype), "getDefaultObject", this).call(this, $({ type: "radial-gradient", cx: "50%", cy: "50%", r: "50%", fx: "50%", fy: "50%", fr: "0%", spreadMethod: "pad" }, t3));
            } }, { key: "toCloneObject", value: function() {
              return $($({}, k()(d()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("cx", "cy", "r", "fx", "fy", "fr", "spreadMethod"));
            } }, { key: "toString", value: function() {
              if (this.colorsteps.length === 0)
                return "";
              var t3 = this.getColorString(), e3 = this.json, n3 = [e3.cx, e3.cy, e3.r, e3.fx, e3.fy, e3.fr, e3.spreadMethod].join(" ");
              return "".concat(this.json.type, "(").concat(n3, ", ").concat(t3, ")");
            } }, { key: "toSVGString", value: function(t3) {
              var e3 = this.json, n3 = e3.cx, r2 = e3.cy, i2 = e3.r, a2 = e3.fx, o2 = e3.fy, c2 = e3.fr, s2 = e3.spreadMethod;
              return "\n<radialGradient ".concat(Object(C.OBJECT_TO_PROPERTY)({ id: t3, cx: n3, cy: r2, r: i2, fx: a2, fy: o2, fr: c2, spreadMethod: s2 }), " >\n  ").concat(this.colorsteps.map(function(t4) {
                return '<stop offset="'.concat(t4.percent, '%"  stop-color="').concat(t4.color, '" />');
              }).join("\n"), "\n</radialGradient>\n");
            } }, { key: "toFillValue", value: function(t3) {
              return "url(#".concat(t3, ")");
            } }], [{ key: "parse", value: function(t3) {
              var e3 = Object(y2.convertMatches)(t3), r2 = {}, i2 = [];
              return e3.str.split("(")[1].split(")")[0].split(",").map(function(t4) {
                return t4.trim();
              }).forEach(function(t4, n3) {
                if (t4.includes("@"))
                  t4 = Object(y2.reverseMatches)(t4, e3.matches), i2.push.apply(i2, O.a.parse(t4));
                else {
                  var a2 = t4.split(" "), o2 = m()(a2, 7), c2 = o2[0], s2 = o2[1], u2 = o2[2], l2 = o2[3], f2 = o2[4], h2 = o2[5], p2 = o2[6];
                  r2.cx = c2, r2.cy = s2, r2.r = u2, r2.fx = l2, r2.fy = f2, r2.fr = h2, r2.spreadMethod = p2 || "pad";
                }
              }), new n2($($({}, r2), {}, { colorsteps: i2 }));
            } }]), n2;
          }(x2.a), B = n(54), M = n(65);
          function V(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function D(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? V(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : V(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function L(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var A = ["jpg", "jpeg", "png", "gif", "svg"];
          var F = function(t2) {
            l()(n2, t2);
            var e2 = L(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return k()(d()(n2.prototype), "getDefaultObject", this).call(this, D({ type: "url", url: "", datauri: "", patternUnits: "userSpaceOnUse", patternWidth: "100%", patternHeight: "100%", imageX: "0%", imageY: "0%", imageWidth: "100%", imageHeight: "100%" }, t3));
            } }, { key: "toCloneObject", value: function() {
              return D(D({}, k()(d()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("url", "datauri", "patternUnits", "patternWidth", "patternHeight", "imageX", "imageY", "imageWidth", "imageHeight"));
            } }, { key: "isUrl", value: function() {
              return true;
            } }, { key: "toString", value: function() {
              var t3 = this.json, e3 = t3.patternUnits, n3 = t3.patternWidth, r2 = t3.patternHeight, i2 = t3.imageX, a2 = t3.imageY, o2 = t3.imageWidth, c2 = t3.imageHeight, s2 = t3.url, u2 = [e3, n3, r2, i2, a2, o2, c2].join(",").trim();
              return "url(".concat(s2, "#").concat(u2, ")");
            } }, { key: "toSVGString", value: function(t3) {
              var e3 = this.json, n3 = e3.patternUnits, r2 = e3.patternWidth, i2 = e3.patternHeight, a2 = e3.imageX, o2 = e3.imageY, c2 = e3.imageWidth, s2 = e3.imageHeight;
              return "\n  <pattern ".concat(Object(C.OBJECT_TO_PROPERTY)({ id: t3, patternUnits: n3, width: r2, height: i2 }), ' >\n    <image xlink:href="').concat(this.json.url, '" ').concat(Object(C.OBJECT_TO_PROPERTY)({ x: a2, y: o2, width: c2, height: s2, preserveAspectRatio: "none" }), " />\n  </pattern>\n      ");
            } }, { key: "toFillValue", value: function(t3) {
              return "url(#".concat(t3, ")");
            } }], [{ key: "parse", value: function(t3) {
              var e3 = t3.split("(")[1].split(")")[0].trim().split("#"), r2 = m()(e3, 2), i2 = r2[0], a2 = r2[1];
              if (!a2)
                return new n2({ url: i2 });
              var o2 = a2.split(","), c2 = m()(o2, 7);
              return new n2({ patternUnits: c2[0], patternWidth: c2[1], patternHeight: c2[2], imageX: c2[3], imageY: c2[4], imageWidth: c2[5], imageHeight: c2[6], url: i2 });
            } }, { key: "isImageFile", value: function(t3) {
              return A.includes(t3);
            } }]), n2;
          }(M.a);
          function z(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function N(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? z(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : z(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function _(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var U = /((linear\-gradient|radial\-gradient|url)\(([^\)]*)\))/gi, G = function(t2) {
            l()(n2, t2);
            var e2 = _(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "addImageResource", value: function(t3) {
              return this.clear("image-resource"), this.addItem("image-resource", t3);
            } }, { key: "addGradient", value: function(t3) {
              return this.addImageResource(t3);
            } }, { key: "setImageUrl", value: function(t3) {
              t3.images && t3.images.length && this.reset({ type: "image", image: n2.createImage(t3.images[0]) });
            } }, { key: "setGradient", value: function(t3) {
              this.reset({ type: t3.type, image: n2.createGradient(t3, this.json.image) });
            } }, { key: "image", get: function() {
              return this.json.image;
            }, set: function(t3) {
              this.json.image = t3;
            } }], [{ key: "createImage", value: function(t3) {
              return new SVGLImageResource({ url: t3 });
            } }, { key: "createGradient", value: function(t3, e3) {
              var n3 = t3.colorsteps || e3.colorsteps, r2 = e3.toJSON();
              switch (delete r2.itemType, delete r2.type, t3.type) {
                case "linear-gradient":
                  return new R(N(N({}, r2), {}, { colorsteps: n3 }));
                case "radial-gradient":
                  return new T(N(N({}, r2), {}, { colorsteps: n3 }));
                default:
                  return new B.a(N(N({}, r2), {}, { colorsteps: n3 }));
              }
            } }, { key: "parse", value: function(t3) {
              return new n2(t3);
            } }, { key: "parseImage", value: function(t3) {
              var e3 = Object(y2.convertMatches)(t3), n3 = null, r2 = e3.str.match(U);
              return r2 ? (r2.forEach(function(t4, r3) {
                t4 = Object(y2.reverseMatches)(t4, e3.matches), n3 = t4.includes("linear") ? R.parse(t4) : t4.includes("radial") ? T.parse(t4) : t4.includes("url") ? F.parse(t4) : B.a.parse(t4);
              }), n3) : B.a.create(t3 || "transparent");
            } }, { key: "changeImageType", value: function(t3) {
              switch (t3.type) {
                case "linear-gradient":
                  return new R(t3);
                case "radial-gradient":
                  return new T(t3);
                case "image-resource":
                case "url":
                  return new F(t3);
                default:
                  return new B.a(t3);
              }
            } }]), n2;
          }(v.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return h;
          });
          var r = n(3), i = n.n(r), a = n(5), o = n.n(a), c = n(6), s = n.n(c), u = n(1), l = n.n(u);
          function f(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = l()(t2);
              if (e2) {
                var i2 = l()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return s()(this, n2);
            };
          }
          var h = function(t2) {
            o()(n2, t2);
            var e2 = f(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return n2;
          }(n(56).a);
        }, function(t, e, n) {
          var r = n(95), i = n(94), a = n(84), o = n(96);
          t.exports = function(t2) {
            return r(t2) || i(t2) || a(t2) || o();
          }, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e, n) {
          "use strict";
          n.d(e, "e", function() {
            return w;
          }), n.d(e, "a", function() {
            return R;
          }), n.d(e, "l", function() {
            return C;
          }), n.d(e, "f", function() {
            return E;
          }), n.d(e, "g", function() {
            return $;
          }), n.d(e, "h", function() {
            return I;
          }), n.d(e, "b", function() {
            return T;
          }), n.d(e, "c", function() {
            return B;
          }), n.d(e, "i", function() {
            return M;
          }), n.d(e, "j", function() {
            return V;
          }), n.d(e, "k", function() {
            return D;
          }), n.d(e, "d", function() {
            return L;
          });
          var r = n(12), i = n.n(r), a = n(7), o = n.n(a), c = n(3), s = n.n(c), u = n(4), l = n.n(u), f = n(10), h = n.n(f), p = n(5), d = n.n(p), v = n(6), y2 = n.n(v), g = n(1), m = n.n(g), b = n(2), k = n(30), O = n(25);
          function x2(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function j(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? x2(Object(n2), true).forEach(function(e3) {
                o()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : x2(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function S(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = m()(t2);
              if (e2) {
                var i2 = m()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return y2()(this, n2);
            };
          }
          var P = /((blur|drop\-shadow|hue\-rotate|invert|brightness|contrast|opacity|saturate|sepia|url)\(([^\)]*)\))/gi, w = function(t2) {
            d()(n2, t2);
            var e2 = S(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, j({ itemType: "filter" }, t3));
            } }, { key: "toString", value: function() {
              return "".concat(this.json.type, "(").concat(this.json.value || "", ")");
            } }], [{ key: "parse", value: function(t3) {
              var e3 = A[t3.type];
              return e3 ? new e3(t3) : new C({ value: t3.value });
            } }, { key: "parseStyle", value: function(t3) {
              var e3 = [];
              if (!t3)
                return e3;
              var r2 = Object(O.convertMatches)(t3);
              return (r2.str.match(P) || []).forEach(function(t4, a2) {
                var o2 = t4.split("("), c2 = i()(o2, 2), s2 = c2[0], u2 = c2[1];
                if (u2 = u2.split(")")[0], s2 === "drop-shadow") {
                  var l2 = u2.split(" "), f2 = l2.filter(function(t5) {
                    return t5.includes("@");
                  }).map(function(t5) {
                    return Object(O.reverseMatches)(t5, r2.matches);
                  }), h2 = l2.filter(function(t5) {
                    return !t5.includes("@");
                  });
                  e3[a2] = n2.parse({ type: s2, offsetX: b.a.parse(h2[0]), offsetY: b.a.parse(h2[1]), blurRadius: b.a.parse(h2[2]), color: f2[0] || "rgba(0, 0, 0, 1)" });
                } else
                  e3[a2] = n2.parse({ type: s2, value: b.a.parse(u2) });
              }), e3;
            } }, { key: "join", value: function(t3) {
              return t3.map(function(t4) {
                return n2.parse(t4);
              }).join(" ");
            } }]), n2;
          }(k.a), R = function(t2) {
            d()(n2, t2);
            var e2 = S(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { type: "blur", value: n2.spec.defaultValue });
            } }, { key: "toCloneObject", value: function() {
              return j(j({}, h()(m()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("value"));
            } }]), n2;
          }(w);
          R.spec = { inputType: "range", min: 0, max: 100, step: 1, unit: "px", units: ["px", "em"], defaultValue: b.a.z() };
          var C = function(t2) {
            d()(n2, t2);
            var e2 = S(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { type: "svg", value: n2.spec.defaultValue });
            } }, { key: "toCloneObject", value: function() {
              return j(j({}, h()(m()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("value"));
            } }, { key: "toString", value: function() {
              return "url(#".concat(this.json.value || "", ")");
            } }]), n2;
          }(w);
          C.spec = { inputType: "select", defaultValue: "" };
          var E = function(t2) {
            d()(n2, t2);
            var e2 = S(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { type: "grayscale", value: n2.spec.defaultValue });
            } }, { key: "toCloneObject", value: function() {
              return j(j({}, h()(m()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("value"));
            } }]), n2;
          }(w);
          E.spec = { inputType: "range", min: 0, max: 100, step: 1, unit: "%", units: ["%"], defaultValue: b.a.percent(0) };
          var $ = function(t2) {
            d()(n2, t2);
            var e2 = S(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { type: "hue-rotate", value: n2.spec.defaultValue });
            } }]), n2;
          }(w);
          $.spec = { inputType: "range", min: 0, max: 360, step: 1, unit: "deg", units: ["deg"], defaultValue: b.a.deg(0) };
          var I = function(t2) {
            d()(n2, t2);
            var e2 = S(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { type: "invert", value: n2.spec.defaultValue });
            } }]), n2;
          }(w);
          I.spec = { inputType: "range", min: 0, max: 100, step: 1, unit: "%", units: ["%"], defaultValue: b.a.percent(0) };
          var T = function(t2) {
            d()(n2, t2);
            var e2 = S(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { type: "brightness", value: n2.spec.defaultValue });
            } }]), n2;
          }(w);
          T.spec = { inputType: "range", min: 0, max: 200, step: 1, unit: "%", units: ["%"], defaultValue: b.a.percent(100) };
          var B = function(t2) {
            d()(n2, t2);
            var e2 = S(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { type: "contrast", value: n2.spec.defaultValue });
            } }]), n2;
          }(w);
          B.spec = { inputType: "range", min: 0, max: 200, step: 1, unit: "%", units: ["%"], defaultValue: b.a.percent(100) };
          var M = function(t2) {
            d()(n2, t2);
            var e2 = S(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { type: "opacity", value: n2.spec.defaultValue });
            } }]), n2;
          }(w);
          M.spec = { inputType: "range", min: 0, max: 100, step: 1, unit: "%", units: ["%"], defaultValue: b.a.percent(100) };
          var V = function(t2) {
            d()(n2, t2);
            var e2 = S(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { type: "saturate", value: n2.spec.defaultValue });
            } }]), n2;
          }(w);
          V.spec = { inputType: "range", min: 0, max: 100, step: 1, unit: "%", units: ["%"], defaultValue: b.a.percent(100) };
          var D = function(t2) {
            d()(n2, t2);
            var e2 = S(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { type: "sepia", value: n2.spec.defaultValue });
            } }]), n2;
          }(w);
          D.spec = { inputType: "range", min: 0, max: 100, step: 1, unit: "%", units: ["%"], defaultValue: b.a.percent(0) };
          var L = function(t2) {
            d()(n2, t2);
            var e2 = S(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { type: "drop-shadow", multi: true, offsetX: n2.spec.offsetX.defaultValue, offsetY: n2.spec.offsetY.defaultValue, blurRadius: n2.spec.blurRadius.defaultValue, color: n2.spec.color.defaultValue });
            } }, { key: "toString", value: function() {
              var t3 = this.json;
              return "drop-shadow(".concat(t3.offsetX, " ").concat(t3.offsetY, " ").concat(t3.blurRadius, " ").concat(t3.color, ")");
            } }]), n2;
          }(w);
          L.spec = { offsetX: { title: "Offset X", inputType: "range", min: -100, max: 100, step: 1, defaultValue: b.a.z(), unit: "px", units: ["px", "em"] }, offsetY: { title: "Offset Y", inputType: "range", min: -100, max: 100, step: 1, defaultValue: b.a.z(), unit: "px", units: ["px", "em"] }, blurRadius: { title: "Blur Radius", inputType: "range", min: 0, max: 100, step: 1, defaultValue: b.a.z(), unit: "px", units: ["px", "em", "%"] }, color: { title: "Color", inputType: "color", defaultValue: "rgba(0, 0, 0, 1)", unit: "color" } };
          var A = { blur: R, grayscale: E, "hue-rotate": $, invert: I, brightness: T, contrast: B, opacity: M, saturate: V, sepia: D, "drop-shadow": L, svg: C };
        }, function(t, e, n) {
          "use strict";
          n.r(e), n.d(e, "RGBtoHSV", function() {
            return a;
          }), n.d(e, "RGBtoCMYK", function() {
            return o;
          }), n.d(e, "RGBtoHSL", function() {
            return c;
          }), n.d(e, "c", function() {
            return s;
          }), n.d(e, "gray", function() {
            return u;
          }), n.d(e, "RGBtoSimpleGray", function() {
            return l;
          }), n.d(e, "RGBtoGray", function() {
            return f;
          }), n.d(e, "brightness", function() {
            return h;
          }), n.d(e, "RGBtoYCrCb", function() {
            return p;
          }), n.d(e, "PivotRGB", function() {
            return d;
          }), n.d(e, "RGBtoXYZ", function() {
            return v;
          }), n.d(e, "RGBtoLAB", function() {
            return y2;
          });
          var r = n(14), i = n(76);
          function a(t2, e2, n2) {
            if (arguments.length == 1) {
              var r2 = arguments[0];
              t2 = r2.r, e2 = r2.g, n2 = r2.b;
            }
            var i2 = t2 / 255, a2 = e2 / 255, o2 = n2 / 255, c2 = Math.max(i2, a2, o2), s2 = Math.min(i2, a2, o2), u2 = c2 - s2, l2 = 0;
            u2 == 0 ? l2 = 0 : c2 == i2 ? l2 = (a2 - o2) / u2 % 6 * 60 : c2 == a2 ? l2 = 60 * ((o2 - i2) / u2 + 2) : c2 == o2 && (l2 = 60 * ((i2 - a2) / u2 + 4)), l2 < 0 && (l2 = 360 + l2);
            return { h: l2, s: c2 == 0 ? 0 : u2 / c2, v: c2 };
          }
          function o(t2, e2, n2) {
            if (arguments.length == 1) {
              var r2 = arguments[0];
              t2 = r2.r, e2 = r2.g, n2 = r2.b;
            }
            var i2 = t2 / 255, a2 = e2 / 255, o2 = n2 / 255, c2 = 1 - Math.max(i2, a2, o2), s2 = (1 - i2 - c2) / (1 - c2), u2 = (1 - a2 - c2) / (1 - c2), l2 = (1 - o2 - c2) / (1 - c2);
            return { c: s2, m: u2, y: l2, k: c2 };
          }
          function c(t2, e2, n2) {
            if (arguments.length == 1) {
              var i2 = arguments[0];
              t2 = i2.r, e2 = i2.g, n2 = i2.b;
            }
            t2 /= 255, e2 /= 255, n2 /= 255;
            var a2, o2, c2 = Math.max(t2, e2, n2), s2 = Math.min(t2, e2, n2), u2 = (c2 + s2) / 2;
            if (c2 == s2)
              a2 = o2 = 0;
            else {
              var l2 = c2 - s2;
              switch (o2 = u2 > 0.5 ? l2 / (2 - c2 - s2) : l2 / (c2 + s2), c2) {
                case t2:
                  a2 = (e2 - n2) / l2 + (e2 < n2 ? 6 : 0);
                  break;
                case e2:
                  a2 = (n2 - t2) / l2 + 2;
                  break;
                case n2:
                  a2 = (t2 - e2) / l2 + 4;
              }
              a2 /= 6;
            }
            return { h: Object(r.round)(360 * a2), s: Object(r.round)(100 * o2), l: Object(r.round)(100 * u2) };
          }
          function s(t2, e2, n2) {
            if (arguments.length == 1) {
              var r2 = arguments[0];
              t2 = r2.r, e2 = r2.g, n2 = r2.b;
            }
            return u((t2 + e2 + n2) / 3 > 90 ? 0 : 255);
          }
          function u(t2) {
            return { r: t2, g: t2, b: t2 };
          }
          function l(t2, e2, n2) {
            if (arguments.length == 1) {
              var r2 = arguments[0];
              t2 = r2.r, e2 = r2.g, n2 = r2.b;
            }
            return u(Math.ceil((t2 + e2 + n2) / 3));
          }
          function f(t2, e2, n2) {
            if (arguments.length == 1) {
              var r2 = arguments[0];
              t2 = r2.r, e2 = r2.g, n2 = r2.b;
            }
            return u(p(t2, e2, n2).y);
          }
          function h(t2, e2, n2) {
            return Math.ceil(0.2126 * t2 + 0.7152 * e2 + 0.0722 * n2);
          }
          function p(t2, e2, n2) {
            if (arguments.length == 1) {
              var r2 = arguments[0];
              t2 = r2.r, e2 = r2.g, n2 = r2.b;
            }
            var i2 = h(t2, e2, n2), a2 = 0.564 * (n2 - i2), o2 = 0.713 * (t2 - i2);
            return { y: i2, cr: o2, cb: a2 };
          }
          function d(t2) {
            return 100 * (t2 > 0.04045 ? Math.pow((t2 + 0.055) / 1.055, 2.4) : t2 / 12.92);
          }
          function v(t2, e2, n2) {
            if (arguments.length == 1) {
              var r2 = arguments[0];
              t2 = r2.r, e2 = r2.g, n2 = r2.b;
            }
            var i2 = t2 / 255, a2 = e2 / 255, o2 = n2 / 255, c2 = 0.4124 * (i2 = d(i2)) + 0.3576 * (a2 = d(a2)) + 0.1805 * (o2 = d(o2)), s2 = 0.2126 * i2 + 0.7152 * a2 + 0.0722 * o2, u2 = 0.0193 * i2 + 0.1192 * a2 + 0.9505 * o2;
            return { x: c2, y: s2, z: u2 };
          }
          function y2(t2, e2, n2) {
            if (arguments.length == 1) {
              var r2 = arguments[0];
              t2 = r2.r, e2 = r2.g, n2 = r2.b;
            }
            return Object(i.XYZtoLAB)(v(t2, e2, n2));
          }
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return $;
          });
          var r = n(12), i = n.n(r), a = n(7), o = n.n(a), c = n(3), s = n.n(c), u = n(4), l = n.n(u), f = n(10), h = n.n(f), p = n(5), d = n.n(p), v = n(6), y2 = n.n(v), g = n(1), m = n.n(g), b = n(2), k = n(30), O = n(25), x2 = n(34), j = n(8), S = new Map(), P = function() {
            function t2() {
              s()(this, t2);
            }
            return l()(t2, null, [{ key: "has", value: function(t3) {
              return S.has(t3);
            } }, { key: "get", value: function(t3) {
              return S.get(t3);
            } }, { key: "set", value: function(t3, e2) {
              S.size > 1e3 && S.clear(), S.set(t3, e2);
            } }]), t2;
          }();
          function w(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function R(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? w(Object(n2), true).forEach(function(e3) {
                o()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : w(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function C(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = m()(t2);
              if (e2) {
                var i2 = m()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return y2()(this, n2);
            };
          }
          var E = /((check|grid|dot|cross\-dot|diagonal\-line|vertical\-line|horizontal\-line|)\(([^\)]*)\))/gi, $ = function(t2) {
            d()(n2, t2);
            var e2 = C(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, R({ itemType: "pattern" }, t3));
            } }, { key: "toString", value: function() {
              return "".concat(this.json.type, "(").concat(this.json.value || "", ")");
            } }], [{ key: "parse", value: function(t3) {
              var e3 = F[t3.type];
              if (e3)
                return new e3(t3);
            } }, { key: "parseStyle", value: function(t3) {
              var e3 = [];
              if (!t3)
                return e3;
              if (P.has(t3))
                return P.get(t3);
              var r2 = Object(O.convertMatches)(t3);
              return (r2.str.match(E) || []).forEach(function(t4, a2) {
                var o2 = t4.split("("), c2 = i()(o2, 2), s2 = c2[0], u2 = c2[1], l2 = (u2 = u2.split(")")[0]).split(",").map(function(t5) {
                  return t5.trim();
                }), f2 = i()(l2, 6), h2 = f2[0], p2 = f2[1], d2 = f2[2], v2 = f2[3], y3 = f2[4], g2 = f2[5], m2 = h2.split(" "), k2 = i()(m2, 2), x3 = k2[0], j2 = k2[1], S2 = p2.split(" "), P2 = i()(S2, 2), w2 = P2[0], R2 = P2[1], C2 = (g2 || "").split(" "), E2 = i()(C2, 2), $2 = E2[0], I2 = E2[1];
                e3[a2] = n2.parse({ type: s2, x: b.a.parse(w2), y: b.a.parse(R2), width: b.a.parse(x3), height: b.a.parse(j2), foreColor: Object(O.reverseMatches)(d2, r2.matches), backColor: Object(O.reverseMatches)(v2, r2.matches), blendMode: y3 || "normal", lineWidth: b.a.parse($2 || "1px"), lineHeight: b.a.parse(I2 || "1px") });
              }), P.set(t3, e3), e3;
            } }, { key: "join", value: function(t3) {
              return t3.map(function(t4) {
                return n2.parse(t4);
              }).join(" ");
            } }, { key: "toCSS", value: function(t3) {
              var e3 = [];
              return n2.parseStyle(t3).forEach(function(t4) {
                e3.push.apply(e3, x2.a.parseStyle(Object(j.STRING_TO_CSS)(t4.toCSS())));
              }), x2.a.joinCSS(e3);
            } }]), n2;
          }(k.a), I = function(t2) {
            d()(n2, t2);
            var e2 = C(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { type: "base", x: b.a.z(), y: b.a.z(), width: b.a.px(20), height: b.a.px(20), lineWidth: b.a.px(1), lineHeight: b.a.px(1), foreColor: "black", backColor: "white", blendMode: "normal" });
            } }, { key: "convert", value: function(t3) {
              return (t3 = h()(m()(n2.prototype), "convert", this).call(this, t3)).width = b.a.parse(t3.width), t3.height = b.a.parse(t3.height), t3.lineWidth = b.a.parse(t3.lineWidth), t3.lineHeight = b.a.parse(t3.lineHeight), t3.x = b.a.parse(t3.x), t3.y = b.a.parse(t3.y), t3;
            } }, { key: "toString", value: function() {
              var t3 = this.json, e3 = t3.type, n3 = t3.width, r2 = t3.height, i2 = t3.x, a2 = t3.y, o2 = t3.foreColor, c2 = t3.backColor, s2 = t3.blendMode, u2 = t3.lineWidth, l2 = t3.lineHeight;
              return "".concat(e3, "(").concat(n3, " ").concat(r2, ", ").concat(i2, " ").concat(a2, ", ").concat(o2, ", ").concat(c2, ", ").concat(s2, ", ").concat(u2, " ").concat(l2, ")");
            } }]), n2;
          }($), T = function(t2) {
            d()(n2, t2);
            var e2 = C(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { type: "check" });
            } }, { key: "toCSS", value: function() {
              var t3 = this.json, e3 = t3.width, n3 = t3.height, r2 = t3.x, i2 = t3.y, a2 = t3.backColor, o2 = t3.foreColor, c2 = t3.blendMode;
              return a2 = a2 || "transparent", "\n      background-image: repeating-linear-gradient(45deg, ".concat(o2 = o2 || "black", " 25%, ").concat(a2, " 25%, ").concat(a2, " 75%, ").concat(o2, " 75%, ").concat(o2, " 100%),repeating-linear-gradient(45deg, ").concat(o2, " 25%, ").concat(a2, " 25%, ").concat(a2, " 75%, ").concat(o2, " 75%, ").concat(o2, " 100%);\n      background-position: 0px 0px, ").concat(r2, " ").concat(i2, ";\n      background-size: ").concat(e3, " ").concat(n3, ", ").concat(e3, " ").concat(n3, ";\n      background-blend-mode: ").concat(c2, ", ").concat(c2, ";\n    ");
            } }]), n2;
          }(I), B = function(t2) {
            d()(n2, t2);
            var e2 = C(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { type: "grid" });
            } }, { key: "toCSS", value: function() {
              var t3 = this.json, e3 = t3.width, n3 = t3.height, r2 = t3.lineWidth, i2 = t3.lineHeight, a2 = t3.backColor, o2 = t3.foreColor, c2 = t3.blendMode;
              return a2 = a2 || "transparent", "\n      background-image: linear-gradient(".concat(o2 = o2 || "black", " ").concat(i2, ", ").concat(a2, " ").concat(i2, "),linear-gradient(to right, ").concat(o2, " ").concat(r2, ", ").concat(a2, " ").concat(r2, ");\n      background-size: ").concat(e3.value / 2, "px ").concat(n3.value / 2, "px, ").concat(e3.value / 2, "px ").concat(n3.value / 2, "px;      \n      background-blend-mode: ").concat(c2, ", ").concat(c2, ";      \n    ");
            } }]), n2;
          }(I), M = function(t2) {
            d()(n2, t2);
            var e2 = C(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { type: "dot" });
            } }, { key: "toCSS", value: function() {
              var t3 = this.json, e3 = t3.width, n3 = t3.height, r2 = t3.lineWidth, i2 = (t3.lineHeight, t3.backColor), a2 = t3.foreColor, o2 = t3.blendMode;
              return i2 = i2 || "transparent", "\n      background-image: radial-gradient(".concat(a2 = a2 || "black", " ").concat(r2, ", ").concat(i2, " ").concat(r2, ");\n      background-size: ").concat(e3.value / 2, "px ").concat(n3.value / 2, "px;          \n      background-blend-mode: ").concat(o2, ";      \n    ");
            } }]), n2;
          }(I), V = function(t2) {
            d()(n2, t2);
            var e2 = C(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { type: "cross-dot" });
            } }, { key: "toCSS", value: function() {
              var t3 = this.json, e3 = t3.width, n3 = t3.height, r2 = t3.x, i2 = t3.y, a2 = t3.lineWidth, o2 = (t3.lineHeight, t3.backColor), c2 = t3.foreColor, s2 = t3.blendMode;
              return o2 = o2 || "transparent", "\n      background-image: radial-gradient(".concat(c2 = c2 || "black", " ").concat(a2, ", ").concat(o2, " ").concat(a2, "),radial-gradient(").concat(c2, " ").concat(a2, ", ").concat(o2, " ").concat(a2, ");\n      background-size: ").concat(e3, " ").concat(n3, ",").concat(e3, " ").concat(n3, ";\n      background-position: 0px 0px, ").concat(r2, " ").concat(i2, ";      \n      background-blend-mode: multiply, ").concat(s2, ";\n    ");
            } }]), n2;
          }(I), D = function(t2) {
            d()(n2, t2);
            var e2 = C(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { type: "diagonal-line" });
            } }, { key: "toCSS", value: function() {
              var t3 = this.json, e3 = t3.width, n3 = t3.height, r2 = t3.x, i2 = t3.lineWidth, a2 = t3.backColor, o2 = t3.foreColor, c2 = t3.blendMode;
              return a2 = a2 || "transparent", o2 = o2 || "black", "\n    background-image: repeating-linear-gradient(".concat(r2, ", ").concat(o2, " 0px, ").concat(o2, " ").concat(i2, ", ").concat(a2, " 0px, ").concat(a2, " 50%);\n    background-size: ").concat(e3, " ").concat(n3, ";      \n    background-blend-mode: ").concat(c2, ";\n  ");
            } }]), n2;
          }(I), L = function(t2) {
            d()(n2, t2);
            var e2 = C(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { type: "vertical-line" });
            } }, { key: "toCSS", value: function() {
              var t3 = this.json, e3 = t3.width, n3 = t3.height, r2 = t3.x, i2 = t3.y, a2 = t3.lineWidth, o2 = t3.backColor, c2 = t3.foreColor, s2 = t3.blendMode;
              return o2 = o2 || "transparent", "\n      background-image: repeating-linear-gradient(to right, ".concat(c2 = c2 || "black", " 0px, ").concat(c2, " ").concat(a2, ", ").concat(o2, " ").concat(a2, ", ").concat(o2, " 100%);\n      background-size: ").concat(e3, " ").concat(n3, "; \n      background-position: ").concat(r2, " ").concat(i2, ";        \n      background-blend-mode: ").concat(s2, ";\n    ");
            } }]), n2;
          }(I), A = function(t2) {
            d()(n2, t2);
            var e2 = C(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { type: "horizontal-line" });
            } }, { key: "toCSS", value: function() {
              var t3 = this.json, e3 = t3.width, n3 = t3.height, r2 = t3.x, i2 = t3.y, a2 = t3.lineWidth, o2 = t3.backColor, c2 = t3.foreColor, s2 = t3.blendMode;
              return o2 = o2 || "transparent", "\n      background-image: repeating-linear-gradient(0deg, ".concat(c2 = c2 || "black", " 0px, ").concat(c2, " ").concat(a2, ", ").concat(o2, " ").concat(a2, ", ").concat(o2, " 100%);    \n      background-position: ").concat(r2, " ").concat(i2, ";\n      background-size: ").concat(e3, " ").concat(n3, ";   \n      background-blend-mode: ").concat(s2, ";\n    ");
            } }]), n2;
          }(I), F = { check: T, grid: B, dot: M, "cross-dot": V, "diagonal-line": D, "vertical-line": L, "horizontal-line": A };
        }, function(t, e, n) {
          "use strict";
          n.r(e), n.d(e, "randomNumber", function() {
            return i;
          }), n.d(e, "randomByCount", function() {
            return a;
          }), n.d(e, "random", function() {
            return o;
          }), n.d(e, "randomRGBA", function() {
            return c;
          });
          var r = n(57);
          function i(t2, e2) {
            return Math.floor(Math.random() * (e2 - t2 + 1)) + t2;
          }
          function a() {
            for (var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, e2 = [], n2 = 0; n2 < t2; n2++)
              e2[e2.length] = o();
            return e2;
          }
          function o() {
            return Object(r.rgb)({ r: i(0, 255), g: i(0, 255), b: i(0, 255) });
          }
          function c() {
            return Object(r.rgb)({ r: i(0, 255), g: i(0, 255), b: i(0, 255), a: i(0, 1e3) / 1e3 });
          }
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return x2;
          });
          var r = n(7), i = n.n(r), a = n(3), o = n.n(a), c = n(4), s = n.n(c), u = n(10), l = n.n(u), f = n(5), h = n.n(f), p = n(6), d = n.n(p), v = n(1), y2 = n.n(v), g = n(83), m = n(11);
          function b(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function k(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? b(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : b(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function O(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = y2()(t2);
              if (e2) {
                var i2 = y2()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return d()(this, n2);
            };
          }
          var x2 = function(t2) {
            h()(n2, t2);
            var e2 = O(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return l()(y2()(n2.prototype), "getDefaultObject", this).call(this, k({ itemType: "layer", name: "New Layer", tagName: "div" }, t3));
            } }, { key: "getDefaultTitle", value: function() {
              return "Layer";
            } }, { key: "getIcon", value: function() {
              return m.a.rect;
            } }, { key: "toCloneObject", value: function() {
              return k(k({}, l()(y2()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("tagName"));
            } }], [{ key: "getIcon", value: function() {
              return m.a.rect;
            } }]), n2;
          }(g.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return R;
          });
          var r = n(7), i = n.n(r), a = n(3), o = n.n(a), c = n(4), s = n.n(c), u = n(10), l = n.n(u), f = n(5), h = n.n(f), p = n(6), d = n.n(p), v = n(1), y2 = n.n(v), g = n(37), m = n(8), b = n(25), k = n(2), O = n(24);
          function x2(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function j(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? x2(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : x2(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function S(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = y2()(t2);
              if (e2) {
                var i2 = y2()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return d()(this, n2);
            };
          }
          var P = { 0: "to top", 45: "to top right", 90: "to right", 135: "to bottom right", 180: "to bottom", 225: "to bottom left", 270: "to left", 315: "to top left" }, w = { "to top": "0", "to top right": "45", "to right": "90", "to bottom right": "135", "to bottom": "180", "to bottom left": "225", "to left": "270", "to top left": "315" }, R = function(t2) {
            h()(n2, t2);
            var e2 = S(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "getDefaultObject", value: function(t3) {
              return l()(y2()(n2.prototype), "getDefaultObject", this).call(this, j({ type: "linear-gradient", angle: 0 }, t3));
            } }, { key: "toCloneObject", value: function() {
              return j(j({}, l()(y2()(n2.prototype), "toCloneObject", this).call(this)), {}, { angle: this.json.angle });
            } }, { key: "isLinear", value: function() {
              return true;
            } }, { key: "hasAngle", value: function() {
              return true;
            } }, { key: "toString", value: function() {
              if (this.colorsteps.length === 0)
                return "";
              var t3 = this.getColorString(), e3 = "";
              return e3 = this.json.angle || 0, Object(m.isNumber)(e3) && (e3 = P["".concat(e3)] || e3), Object(m.isNumber)(e3) && (e3 = "".concat(e3 = e3 > 360 ? e3 % 360 : e3, "deg")), "".concat(this.json.type, "(").concat(e3, ", ").concat(t3, ")");
            } }], [{ key: "toLinearGradient", value: function(t3) {
              return t3.length === 0 ? "none" : new n2({ angle: "to right", colorsteps: t3 }) + "";
            } }, { key: "parse", value: function(t3) {
              var e3 = Object(b.convertMatches)(t3), r2 = 0, i2 = [];
              return e3.str.split("(")[1].split(")")[0].split(",").map(function(t4) {
                return t4.trim();
              }).forEach(function(t4, n3) {
                t4.includes("@") ? (t4 = Object(b.reverseMatches)(t4, e3.matches), i2.push.apply(i2, O.a.parse(t4))) : r2 = Object(m.isUndefined)(w[t4]) ? k.a.parse(t4) : k.a.deg(+w[t4]);
              }), new n2({ angle: r2.value, colorsteps: i2 });
            } }]), n2;
          }(g.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return r;
          });
          var r = { backspace: 8, tab: 9, enter: 13, escape: 27, space: 32, pageup: 33, pagedown: 34, end: 35, home: 36, left: 37, up: 38, right: 39, down: 40, insert: 45, delete: 46, 0: 48, 1: 49, 2: 50, 3: 51, 4: 52, 5: 53, 6: 54, 7: 55, 8: 56, 9: 57, semicolon: 59, equals: 61, a: 65, b: 66, c: 67, d: 68, e: 69, f: 70, g: 71, h: 72, i: 73, j: 74, k: 75, l: 76, m: 77, n: 78, o: 79, p: 80, q: 81, r: 82, s: 83, t: 84, u: 85, v: 86, w: 87, x: 88, y: 89, z: 90, multiply: 106, add: 107, subtract: 109, divide: 111, f1: 112, f2: 113, f3: 114, f4: 115, f5: 116, f6: 117, f7: 118, f8: 119, f9: 120, f10: 121, f11: 122, f12: 123, f13: 124, f14: 125, f15: 126, f16: 127, f17: 128, f18: 129, f19: 130, comma: 188, ",": 188, period: 190, ".": 190, slash: 191, "/": 191, backquote: 192, "`": 192, openbracket: 219, "[": 219, backslash: 220, "\\": 220, closebracket: 221, "]": 221, quote: 222, "'": 222, altgr: 225 };
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return h;
          });
          var r = n(12), i = n.n(r), a = n(3), o = n.n(a), c = n(4), s = n.n(c), u = n(2), l = new Map(), f = function() {
            function t2() {
              o()(this, t2);
            }
            return s()(t2, null, [{ key: "has", value: function(t3) {
              return l.has(t3);
            } }, { key: "get", value: function(t3) {
              return l.get(t3);
            } }, { key: "set", value: function(t3, e2) {
              l.size > 1e3 && l.clear(), l.set(t3, e2);
            } }]), t2;
          }(), h = function() {
            function t2() {
              o()(this, t2);
            }
            return s()(t2, null, [{ key: "parseStyle", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "50% 50% 0%";
              if (f.has(t3))
                return f.get(t3);
              var e2 = t3.trim().split(" ").filter(function(t4) {
                return t4.trim();
              }), n2 = null;
              return n2 = e2.length === 1 ? [e2[0], e2[0]].map(function(t4) {
                return u.a.parse(t4);
              }) : e2.map(function(t4) {
                return u.a.parse(t4);
              }), f.set(t3, n2), n2;
            } }, { key: "scale", value: function(e2, n2, r2) {
              var i2 = t2.parseStyle(e2);
              return [i2[0].toPx(n2).value, i2[1].toPx(r2).value, i2[2].value];
            } }, { key: "toPx", value: function(e2, n2, r2) {
              var a2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, o2 = t2.parseStyle(e2), c2 = i()(o2, 3), s2 = c2[0], u2 = c2[1], l2 = c2[2];
              return s2 = s2.toPx(n2), u2 = u2.toPx(r2), l2 = l2.toPx(a2), "".concat(s2, " ").concat(u2, " ").concat(l2);
            } }]), t2;
          }();
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return u;
          }), n.d(e, "b", function() {
            return l;
          }), n.d(e, "e", function() {
            return d;
          }), n.d(e, "d", function() {
            return v;
          }), n.d(e, "c", function() {
            return y2;
          });
          var r = n(15), i = n.n(r), a = n(3), o = n.n(a), c = n(4), s = n.n(c), u = function() {
            function t2() {
              o()(this, t2);
            }
            return s()(t2, null, [{ key: "getAllDropItems", value: function(t3) {
              var e2 = [];
              t3.dataTransfer && (e2 = i()(t3.dataTransfer.types).map(function(e3, n3) {
                if (e3.includes("text"))
                  return { kind: "string", type: e3, data: t3.dataTransfer.getData(e3) };
              }).filter(function(t4) {
                return t4;
              }));
              var n2 = [];
              return t3.dataTransfer && (n2 = i()(t3.dataTransfer.files)), [].concat(i()(e2), i()(n2));
            } }]), t2;
          }(), l = ["blur", "grayscale", "hue-rotate", "invert", "brightness", "contrast", "drop-shadow", "opacity", "saturate", "sepia", "svg"], f = { text: true, points: true, textLength: true, startOffset: true, lengthAdjust: true }, h = { d: true }, p = { position: true, x: true, y: true, right: true, bottom: true, width: true, height: true, rootVariable: true, variable: true, transform: true, filter: true, "backdrop-filter": true, "background-color": true, "background-clip": true, "background-image": true, "border-radius": true, "box-shadow": true, "text-shadow": true, "text-clip": true, "clip-path": true, color: true, "font-size": true, "font-stretch": true, "line-height": true, "text-align": true, "text-transform": true, "text-decoration": true, "letter-spacing": true, "word-spacing": true, "text-indent": true, "perspective-origin": true, "transform-origin": true, "transform-style": true, perspective: true, "mix-blend-mode": true, opacity: true, rotate: true, "text-fill-color": true, "text-stroke-color": true, "text-stroke-width": true, "offset-path": true, "offset-distance": true, border: true, outline: true, borderRadius: true, animations: true, transitions: true, fill: true, "fill-opacity": true, stroke: true, "stroke-width": true, "stroke-dasharray": true, "stroke-dashoffset": true, "fill-rule": true, "stroke-linecap": true, "stroke-linejoin": true }, d = function(t2) {
            return f[t2] || false;
          }, v = function(t2) {
            return h[t2] || false;
          }, y2 = function(t2) {
            return p[t2] || false;
          };
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return j;
          });
          var r = n(7), i = n.n(r), a = n(3), o = n.n(a), c = n(4), s = n.n(c), u = n(10), l = n.n(u), f = n(5), h = n.n(f), p = n(6), d = n.n(p), v = n(1), y2 = n.n(v), g = n(2), m = n(30), b = n(25);
          function k(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function O(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? k(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : k(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function x2(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = y2()(t2);
              if (e2) {
                var i2 = y2()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return d()(this, n2);
            };
          }
          var j = function(t2) {
            h()(n2, t2);
            var e2 = x2(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "getDefaultObject", value: function() {
              return l()(y2()(n2.prototype), "getDefaultObject", this).call(this, { itemType: "text-shadow", offsetX: g.a.z(), offsetY: g.a.z(), blurRadius: g.a.z(), color: "rgba(0, 0, 0, 1)" });
            } }, { key: "toCloneObject", value: function() {
              return O(O({}, l()(y2()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("offsetX", "offsetY", "blurRadius", "color"));
            } }, { key: "convert", value: function(t3) {
              return (t3 = l()(y2()(n2.prototype), "convert", this).call(this, t3)).offsetX = g.a.parse(t3.offsetX), t3.offsetY = g.a.parse(t3.offsetY), t3.blurRadius = g.a.parse(t3.blurRadius), t3;
            } }, { key: "toCSS", value: function() {
              return { "text-shadow": this.toString() };
            } }, { key: "toString", value: function() {
              var t3 = this.json;
              return "".concat(t3.offsetX, " ").concat(t3.offsetY, " ").concat(t3.blurRadius, " ").concat(t3.color);
            } }], [{ key: "parse", value: function(t3) {
              return new n2(t3);
            } }, { key: "parseStyle", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", e3 = Object(b.convertMatches)(t3), r2 = e3.str.split(",").filter(function(t4) {
                return t4.trim();
              }).map(function(t4) {
                var r3 = t4.split(" "), i2 = r3.filter(function(t5) {
                  return t5.includes("@");
                }).map(function(t5) {
                  return Object(b.reverseMatches)(t5, e3.matches) || "black";
                }), a2 = r3.filter(function(t5) {
                  return !t5.includes("@");
                });
                return n2.parse({ color: i2[0] || "rgba(0, 0, 0, 1)", offsetX: g.a.parse(a2[0] || "0px"), offsetY: g.a.parse(a2[1] || "0px"), blurRadius: g.a.parse(a2[2] || "0px") });
              });
              return r2;
            } }, { key: "join", value: function(t3) {
              return t3.map(function(t4) {
                return n2.parse(t4);
              }).join(", ");
            } }]), n2;
          }(m.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return E;
          });
          var r, i = n(12), a = n.n(i), o = n(3), c = n.n(o), s = n(4), u = n.n(s), l = n(10), f = n.n(l), h = n(5), p = n.n(h), d = n(6), v = n.n(d), y2 = n(1), g = n.n(y2), m = n(7), b = n.n(m), k = n(37), O = n(2), x2 = n(8), j = n(25), S = n(24);
          function P(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function w(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? P(Object(n2), true).forEach(function(e3) {
                b()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : P(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function R(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = g()(t2);
              if (e2) {
                var i2 = g()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return v()(this, n2);
            };
          }
          var C = (r = {}, b()(r, "center", true), b()(r, "top", true), b()(r, "left", true), b()(r, "right", true), b()(r, "bottom", true), r), E = function(t2) {
            p()(n2, t2);
            var e2 = R(n2);
            function n2() {
              return c()(this, n2), e2.apply(this, arguments);
            }
            return u()(n2, [{ key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return f()(g()(n2.prototype), "getDefaultObject", this).call(this, w({ type: "radial-gradient", radialType: "ellipse", radialPosition: [O.b.CENTER, O.b.CENTER] }, t3));
            } }, { key: "toCloneObject", value: function() {
              return w(w({}, f()(g()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("radialType", "radialPosition"));
            } }, { key: "isRadial", value: function() {
              return true;
            } }, { key: "toString", value: function() {
              if (this.colorsteps.length === 0)
                return "";
              var t3, e3 = this.getColorString(), n3 = this.json, r2 = n3.radialType, i2 = n3.radialPosition || ["center", "center"];
              return t3 = (i2 = C[i2] ? i2 : i2.join(" ")) ? "".concat(r2, " at ").concat(i2) : r2, "".concat(n3.type || "radial-gradient", "(").concat(t3, ", ").concat(e3, ")");
            } }], [{ key: "parse", value: function(t3) {
              var e3 = Object(j.convertMatches)(t3), r2 = "ellipse", i2 = [O.b.CENTER, O.b.CENTER], o2 = [];
              return e3.str.split("(")[1].split(")")[0].split(",").map(function(t4) {
                return t4.trim();
              }).forEach(function(t4, n3) {
                if (t4.includes("@"))
                  t4 = Object(j.reverseMatches)(t4, e3.matches), o2.push.apply(o2, S.a.parse(t4));
                else {
                  if (t4.includes("at")) {
                    var c2 = t4.split("at").map(function(t5) {
                      return t5.trim();
                    }), s2 = a()(c2, 2);
                    r2 = s2[0], i2 = s2[1];
                  } else
                    r2 = t4;
                  if (Object(x2.isString)(i2)) {
                    var u2 = i2.split(" ");
                    if (u2.length === 1) {
                      var l2 = O.a.parse(u2[0]);
                      i2 = l2.isString() ? [l2.value, l2.value] : [l2.clone(), l2.clone()];
                    } else
                      u2.length === 2 && (i2 = u2.map(function(t5) {
                        var e4 = O.a.parse(t5);
                        return e4.isString() ? e4.value : e4.clone();
                      }));
                  }
                }
              }), new n2({ radialType: r2, radialPosition: i2, colorsteps: o2 });
            } }]), n2;
          }(k.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return $;
          });
          var r, i = n(12), a = n.n(i), o = n(3), c = n.n(o), s = n(4), u = n.n(s), l = n(10), f = n.n(l), h = n(5), p = n.n(h), d = n(6), v = n.n(d), y2 = n(1), g = n.n(y2), m = n(7), b = n.n(m), k = n(37), O = n(24), x2 = n(2), j = n(8), S = n(25);
          function P(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function w(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? P(Object(n2), true).forEach(function(e3) {
                b()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : P(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function R(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = g()(t2);
              if (e2) {
                var i2 = g()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return v()(this, n2);
            };
          }
          var C = (r = {}, b()(r, "center", true), b()(r, "top", true), b()(r, "left", true), b()(r, "right", true), b()(r, "bottom", true), r), E = { "to top": 0, "to top right": 45, "to right": 90, "to bottom right": 135, "to bottom": 180, "to bottom left": 225, "to left": 270, "to top left": 315 }, $ = function(t2) {
            p()(n2, t2);
            var e2 = R(n2);
            function n2() {
              return c()(this, n2), e2.apply(this, arguments);
            }
            return u()(n2, [{ key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return f()(g()(n2.prototype), "getDefaultObject", this).call(this, w({ type: "conic-gradient", angle: 0, radialPosition: [x2.b.CENTER, x2.b.CENTER] }, t3));
            } }, { key: "toCloneObject", value: function() {
              return w(w({}, f()(g()(n2.prototype), "toCloneObject", this).call(this)), {}, { angle: this.json.angle, radialPosition: Object(j.clone)(this.json.radialPosition) });
            } }, { key: "isConic", value: function() {
              return true;
            } }, { key: "hasAngle", value: function() {
              return true;
            } }, { key: "getColorString", value: function() {
              if (this.colorsteps.length === 0)
                return "";
              var t3 = this.colorsteps;
              return t3 ? (t3.sort(function(t4, e3) {
                return t4.percent == e3.percent ? 0 : t4.percent > e3.percent ? 1 : -1;
              }), t3.map(function(e3, n3) {
                return e3.prevColorStep = e3.cut && n3 > 0 ? t3[n3 - 1] : null, e3;
              }).map(function(t4) {
                var e3 = Math.floor(3.6 * t4.percent), n3 = "";
                if (t4.cut && t4.prevColorStep) {
                  var r2 = Math.floor(3.6 * t4.prevColorStep.percent);
                  n3 = "".concat(r2, "deg");
                }
                return "".concat(t4.color, " ").concat(n3, " ").concat(e3, "deg");
              }).join(",")) : "";
            } }, { key: "toString", value: function() {
              var t3 = this.getColorString(), e3 = [], n3 = this.json, r2 = n3.angle, i2 = n3.radialPosition || x2.b.CENTER;
              i2 = C[i2] ? i2 : i2.join(" "), Object(j.isNotUndefined)(r2) && (r2 = +(E[r2] || r2), e3.push("from ".concat(r2, "deg"))), i2 && e3.push("at ".concat(i2));
              var a2 = e3.length ? e3.join(" ") + "," : "";
              return "".concat(n3.type, "(").concat(a2, " ").concat(t3, ")");
            } }], [{ key: "parse", value: function(t3) {
              var e3 = Object(S.convertMatches)(t3), r2 = "0deg", i2 = [x2.b.CENTER, x2.b.CENTER], o2 = [];
              return e3.str.split("(")[1].split(")")[0].split(",").map(function(t4) {
                return t4.trim();
              }).forEach(function(t4, n3) {
                if (t4.includes("@"))
                  t4 = t4.split(" ").map(function(t5) {
                    return t5.trim();
                  }).map(function(t5) {
                    return t5.includes("deg") ? x2.a.parse(t5).toPercent() : t5;
                  }).join(" "), t4 = Object(S.reverseMatches)(t4, e3.matches), o2.push.apply(o2, O.a.parse(t4));
                else {
                  if (t4.includes("at")) {
                    var c2 = t4.split("at").map(function(t5) {
                      return t5.trim();
                    }), s2 = a()(c2, 2);
                    r2 = s2[0], i2 = s2[1];
                  } else
                    r2 = t4;
                  if (Object(j.isString)(i2)) {
                    var u2 = i2.split(" ");
                    if (u2.length === 1) {
                      var l2 = x2.a.parse(u2[0]);
                      i2 = l2.isString() ? [l2.value, l2.value] : [l2.clone(), l2.clone()];
                    } else
                      u2.length === 2 && (i2 = u2.map(function(t5) {
                        var e4 = x2.a.parse(t5);
                        return e4.isString() ? e4.value : e4;
                      }));
                  }
                  Object(j.isString)(r2) && r2.includes("from") && (r2 = r2.split("from")[1], r2 = Object(j.isUndefined)(E[r2]) ? x2.a.parse(r2) : x2.a.deg(+E[r2]));
                }
              }), new n2({ angle: r2.value, radialPosition: i2, colorsteps: o2 });
            } }]), n2;
          }(k.a);
        }, function(t, e) {
          t.exports = function(t2, e2) {
            return e2 || (e2 = t2.slice(0)), Object.freeze(Object.defineProperties(t2, { raw: { value: Object.freeze(e2) } }));
          }, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return O;
          });
          var r = n(7), i = n.n(r), a = n(3), o = n.n(a), c = n(4), s = n.n(c), u = n(10), l = n.n(u), f = n(5), h = n.n(f), p = n(6), d = n.n(p), v = n(1), y2 = n.n(v), g = n(24);
          function m(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function b(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? m(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : m(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function k(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = y2()(t2);
              if (e2) {
                var i2 = y2()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return d()(this, n2);
            };
          }
          var O = function(t2) {
            h()(n2, t2);
            var e2 = k(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "getDefaultObject", value: function() {
              return l()(y2()(n2.prototype), "getDefaultObject", this).call(this, { type: "static-gradient", static: true, colorsteps: [new g.a({ color: "red", percent: 0, index: 0 }), new g.a({ color: "red", percent: 100, index: 1 })] });
            } }, { key: "toCloneObject", value: function() {
              return b(b({}, l()(y2()(n2.prototype), "toCloneObject", this).call(this)), {}, { static: true });
            } }, { key: "setColor", value: function(t3) {
              this.colorsteps.forEach(function(e3) {
                e3.color = t3;
              });
            } }, { key: "toString", value: function() {
              return this.json.colorsteps[0].color;
            } }, { key: "toSVGString", value: function() {
              return "";
            } }, { key: "toFillValue", value: function() {
              return this.toString();
            } }, { key: "isStatic", value: function() {
              return true;
            } }], [{ key: "create", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "transparent";
              return new n2({ colorsteps: [new g.a({ color: t3, percent: 0, index: 0 }), new g.a({ color: t3, percent: 100, index: 0 })] });
            } }]), n2;
          }(n(66).a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return j;
          });
          var r = n(7), i = n.n(r), a = n(3), o = n.n(a), c = n(4), s = n.n(c), u = n(10), l = n.n(u), f = n(5), h = n.n(f), p = n(6), d = n.n(p), v = n(1), y2 = n.n(v), g = n(2), m = n(30), b = n(25);
          function k(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function O(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? k(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : k(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function x2(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = y2()(t2);
              if (e2) {
                var i2 = y2()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return d()(this, n2);
            };
          }
          var j = function(t2) {
            h()(n2, t2);
            var e2 = x2(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "getDefaultObject", value: function() {
              return l()(y2()(n2.prototype), "getDefaultObject", this).call(this, { itemType: "box-shadow", inset: false, offsetX: g.a.z(), offsetY: g.a.z(), blurRadius: g.a.z(), spreadRadius: g.a.z(), color: "rgba(0, 0, 0, 1)" });
            } }, { key: "toCloneObject", value: function() {
              this.json;
              return O(O({}, l()(y2()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("inset", "offsetX", "offsetY", "blurRadius", "spreadRadius", "color"));
            } }, { key: "convert", value: function(t3) {
              return (t3 = l()(y2()(n2.prototype), "convert", this).call(this, t3)).offsetX = g.a.parse(t3.offsetX), t3.offsetY = g.a.parse(t3.offsetY), t3.blurRadius = g.a.parse(t3.blurRadius), t3.spreadRadius = g.a.parse(t3.spreadRadius), t3;
            } }, { key: "toCSS", value: function() {
              return { "box-shadow": this.toString() };
            } }, { key: "toString", value: function() {
              var t3 = this.json;
              return "".concat(t3.inset ? "inset " : "").concat(t3.offsetX, " ").concat(t3.offsetY, " ").concat(t3.blurRadius, " ").concat(t3.spreadRadius, " ").concat(t3.color);
            } }], [{ key: "parse", value: function(t3) {
              return new n2(t3);
            } }, { key: "parseStyle", value: function(t3) {
              var e3 = [];
              if (!t3)
                return e3;
              var r2 = Object(b.convertMatches)(t3);
              return e3 = r2.str.split(",").filter(function(t4) {
                return t4.trim();
              }).map(function(t4) {
                var e4 = t4.split(" "), i2 = e4.filter(function(t5) {
                  return t5 === "inset";
                }), a2 = e4.filter(function(t5) {
                  return t5.includes("@");
                }).map(function(t5) {
                  return Object(b.reverseMatches)(t5, r2.matches);
                }), o2 = e4.filter(function(t5) {
                  return t5 !== "inset" && !t5.includes("@");
                });
                return n2.parse({ inset: !!i2.length, color: a2[0] || "rgba(0, 0, 0, 1)", offsetX: g.a.parse(o2[0] || "0px"), offsetY: g.a.parse(o2[1] || "0px"), blurRadius: g.a.parse(o2[2] || "0px"), spreadRadius: g.a.parse(o2[3] || "0px") });
              });
            } }, { key: "join", value: function(t3) {
              return t3.map(function(t4) {
                return n2.parse(t4);
              }).join(", ");
            } }]), n2;
          }(m.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return R;
          });
          var r = n(12), i = n.n(r), a = n(7), o = n.n(a), c = n(3), s = n.n(c), u = n(4), l = n.n(u), f = n(5), h = n.n(f), p = n(6), d = n.n(p), v = n(1), y2 = n.n(v), g = n(19), m = n(8), b = (n(32), n(34)), k = n(36), O = n(43);
          n(26);
          function x2(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function j(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? x2(Object(n2), true).forEach(function(e3) {
                o()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : x2(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function S(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = y2()(t2);
              if (e2) {
                var i2 = y2()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return d()(this, n2);
            };
          }
          var P = {}, w = ["text-fill-color", "text-stroke-color", "text-stroke-width", "background-clip"], R = function(t2) {
            h()(n2, t2);
            var e2 = S(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "toStringPropertyCSS", value: function(t3, e3) {
              return Object(m.STRING_TO_CSS)(t3[e3]);
            } }, { key: "toBackgroundImageCSS", value: function(t3) {
              if (t3["background-image"] === "" && t3.pattern === "")
                return P;
              var e3 = [];
              if (t3.pattern)
                for (var n3 = O.a.parseStyle(t3.pattern), r2 = 0, i2 = n3.length; r2 < i2; r2++)
                  e3.push.apply(e3, b.a.parseStyle(Object(m.STRING_TO_CSS)(n3[r2].toCSS())));
              return t3["background-image"] && e3.push.apply(e3, b.a.parseStyle(Object(m.STRING_TO_CSS)(t3["background-image"]))), e3.length ? b.a.joinCSS(e3) : {};
            } }, { key: "toLayoutCSS", value: function(t3) {
              var e3 = t3.layout;
              if (t3.hasLayout()) {
                if (e3 === "flex")
                  return this.toFlexLayoutCSS(t3);
                if (e3 === "grid")
                  return this.toGridLayoutCSS(t3);
              }
              return {};
            } }, { key: "toLayoutItemCSS", value: function(t3) {
              var e3 = t3.parent.layout, n3 = {};
              return e3 === "flex" ? n3 = { position: "relative", left: "auto !important", top: "auto !important" } : e3 === "grid" && (n3 = { position: "relative", left: "auto !important", top: "auto !important", width: "auto !important", height: "auto !important" }), e3 === "flex" ? n3 = j(j({}, n3), Object(m.STRING_TO_CSS)(t3["flex-layout-item"])) : e3 === "grid" && (n3 = j(j({}, n3), Object(m.STRING_TO_CSS)(t3["grid-layout-item"]))), n3;
            } }, { key: "toFlexLayoutCSS", value: function(t3) {
              return j({ display: "flex" }, this.toStringPropertyCSS(t3, "flex-layout"));
            } }, { key: "toGridLayoutCSS", value: function(t3) {
              return j({ display: "grid" }, this.toStringPropertyCSS(t3, "grid-layout"));
            } }, { key: "toBorderCSS", value: function(t3) {
              return t3.hasChildren() ? {} : this.toStringPropertyCSS(t3, "border");
            } }, { key: "toKeyCSS", value: function(t3) {
              return item[t3] ? o()({}, t3, item[t3]) : {};
            } }, { key: "toBoxModelCSS", value: function(t3) {
              var e3 = {};
              return t3["margin-top"] && (e3["margin-top"] = t3["margin-top"]), t3["margin-bottom"] && (e3["margin-bottom"] = t3["margin-bottom"]), t3["margin-left"] && (e3["margin-left"] = t3["margin-left"]), t3["margin-right"] && (e3["margin-right"] = t3["margin-right"]), t3.hasChildren() || (t3["padding-top"] && (e3["padding-top"] = t3["padding-top"]), t3["padding-bottom"] && (e3["padding-bottom"] = t3["padding-bottom"]), t3["padding-left"] && (e3["padding-left"] = t3["padding-left"]), t3["padding-right"] && (e3["padding-right"] = t3["padding-right"])), e3;
            } }, { key: "toKeyListCSS", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], n3 = {};
              return e3.filter(function(e4) {
                return Object(m.isNotUndefined)(t3[e4]);
              }).forEach(function(e4) {
                n3[e4] = t3[e4];
              }), n3;
            } }, { key: "toDefaultCSS", value: function(t3) {
              var e3 = {};
              return t3.isAbsolute && (t3.x && (e3.left = t3.x), t3.y && (e3.top = t3.y)), e3.visibility = t3.visible ? "visible" : "hidden", j(j(j({}, e3), { "will-change": "auto" }), this.toKeyListCSS(t3, ["position", "width", "height", "overflow", "z-index", "box-sizing", "background-color", "color", "opacity", "mix-blend-mode", "transform-origin", "transform-style", "perspective", "perspective-origin", "font-size", "font-stretch", "line-height", "font-weight", "font-family", "font-style", "text-align", "text-transform", "text-decoration", "letter-spacing", "word-spacing", "text-indent", "border-radius", "filter", "backdrop-filter", "box-shadow", "text-shadow", "offset-path", "animation", "transition"]));
            } }, { key: "toVariableCSS", value: function(t3) {
              var e3 = {};
              return t3.variable.split(";").filter(function(t4) {
                return t4.trim();
              }).forEach(function(t4) {
                var n3 = t4.split(":"), r2 = i()(n3, 2), a2 = r2[0], o2 = r2[1];
                e3["--".concat(a2)] = o2;
              }), e3;
            } }, { key: "toRootVariableCSS", value: function(t3) {
              var e3 = {};
              return t3.rootVariable.split(";").filter(function(t4) {
                return t4.trim();
              }).forEach(function(t4) {
                var n3 = t4.split(":"), r2 = i()(n3, 2), a2 = r2[0], o2 = r2[1];
                e3["--".concat(a2)] = o2;
              }), e3;
            } }, { key: "toRootVariableString", value: function(t3) {
              return Object(m.CSS_TO_STRING)(this.toRootVariableCSS(t3));
            } }, { key: "toWebkitCSS", value: function(t3) {
              var e3 = {};
              return w.forEach(function(n3) {
                e3["-webkit-".concat(n3)] = t3[n3];
              }), e3;
            } }, { key: "toTextClipCSS", value: function(t3) {
              var e3 = {};
              return t3["text-clip"] === "text" && (e3["-webkit-background-clip"] = "text", e3["-webkit-text-fill-color"] = "transparent", e3.color = "transparent"), e3;
            } }, { key: "toTransformCSS", value: function(t3) {
              if (t3.transform === "")
                return P;
              var e3 = { transform: t3.transform };
              return e3.transform === "rotateZ(0deg)" && delete e3.transform, { transform: e3.transform };
            } }, { key: "toDefInnerString", value: function(t3) {
              return "\n      ".concat(this.toClipPath(t3), "\n    ").trim();
            } }, { key: "toClipPath", value: function(t3) {
              if (t3["clip-path"] === "")
                return "";
              var e3 = k.a.parseStyle(t3["clip-path"]), n3 = e3.value;
              switch (e3.type) {
                case "path":
                  return '<clipPath id="'.concat(this.clipPathId(t3), '"><path d="').concat(t3.clipPathString, '" /></clipPath>');
                case "svg":
                  return '<clipPath id="'.concat(this.clipPathId(t3), '">').concat(n3, "</clipPath>");
              }
              return "";
            } }, { key: "toClipPathCSS", value: function(t3) {
              var e3 = t3["clip-path"];
              if (Boolean(e3) === false)
                return null;
              var n3 = k.a.parseStyle(e3);
              switch (n3.type) {
                case "path":
                  n3.value && (e3 = "url(#".concat(this.clipPathId(t3), ")"));
                  break;
                case "svg":
                  e3 = "url(#".concat(this.clipPathId(t3), ")");
              }
              return { "clip-path": e3 };
            } }, { key: "innerSVGId", value: function(t3) {
              return t3.id + "inner-svg";
            } }, { key: "clipPathId", value: function(t3) {
              return t3.id + "clip-path";
            } }, { key: "toDefString", value: function(t3) {
              var e3 = this.toDefInnerString(t3);
              return e3 ? `
    <svg class='inner-svg-element' data-id="`.concat(this.innerSVGId(t3), '" width="0" height="0">\n      <defs>\n        ').concat(e3, "\n      </defs>\n    </svg>\n    ") : "";
            } }, { key: "toSelectorString", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
              return t3.selectors.map(function(t4) {
                return t4.toString(e3);
              }).join("\n\n");
            } }, { key: "generateView", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "", r2 = "\n  ".concat(e3, " {  /* ").concat(t3.itemType, " */\n      ").concat(Object(m.CSS_TO_STRING)(this.toCSS(t3), "\n    "), "; \n      ").concat(n3, "\n  }\n  ").concat(this.toNestedCSS(t3).map(function(t4) {
                return "".concat(e3, " ").concat(t4.selector, " { \n        ").concat(t4.cssText ? t4.cssText : Object(m.CSS_TO_STRING)(t4.css || {}, "\n		"), "; \n    }");
              }).join("\n"), "\n  ").concat(this.toSelectorString(t3, e3), "\n    ");
              return r2;
            } }, { key: "toCSS", value: function(t3) {
              return Object.assign({}, this.toVariableCSS(t3), this.toDefaultCSS(t3), this.toClipPathCSS(t3), this.toWebkitCSS(t3), this.toTextClipCSS(t3), this.toBoxModelCSS(t3), this.toBorderCSS(t3), this.toBackgroundImageCSS(t3), this.toLayoutCSS(t3), this.toTransformCSS(t3), this.toLayoutItemCSS(t3));
            } }, { key: "toStyle", value: function(t3, e3) {
              var n3 = this.generateView(t3, ".element-item[data-id='".concat(t3.id, "']"));
              return `
<style type='text/css' data-renderer-type="html" data-id='`.concat(t3.id, "' data-timestamp='").concat(t3.timestamp, "'>\n").concat(n3, "\n</style>\n    ") + t3.layers.map(function(t4) {
                return e3.toStyle(t4, e3);
              }).join("");
            } }, { key: "render", value: function(t3, e3) {
              var n3 = t3.elementType, r2 = t3.id, i2 = t3.name, a2 = t3.itemType, o2 = n3 || "div";
              return "    \n<".concat(o2, ' class="element-item ').concat(a2, '" data-id="').concat(r2, '" data-title="').concat(i2, '">\n  ').concat(this.toDefString(t3), "\n  ").concat(t3.layers.map(function(t4) {
                return e3.render(t4, e3);
              }).join("\n	"), "\n</").concat(o2, ">\n    ");
            } }, { key: "renderSVG", value: function(t3, e3) {
            } }, { key: "toNestedCSS", value: function(t3) {
              return [];
            } }, { key: "update", value: function(t3, e3) {
              if (e3) {
                var n3 = e3.el.$svg;
                if (n3 || (e3.el.$svg = e3.$('[data-id="'.concat(this.innerSVGId(t3), '"]')), n3 = e3.el.$svg), n3) {
                  var r2 = this.toDefInnerString(t3);
                  if (r2)
                    n3.$("defs").html(r2);
                } else {
                  var i2 = this.toDefString(t3);
                  if (i2) {
                    var a2 = g.a.createByHTML(i2);
                    a2 && e3.prepend(a2);
                  }
                }
              }
            } }]), n2;
          }(function() {
            function t2() {
              s()(this, t2);
            }
            return l()(t2, [{ key: "getInnerId", value: function(t3) {
              var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
              return t3.id + e2;
            } }]), t2;
          }());
        }, function(t, e, n) {
          "use strict";
          n.r(e), n.d(e, "format", function() {
            return i;
          }), n.d(e, "hex", function() {
            return a;
          }), n.d(e, "rgb", function() {
            return o;
          }), n.d(e, "hsl", function() {
            return c;
          });
          var r = n(8);
          function i(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "rgba(0, 0, 0, 0)";
            return Array.isArray(t2) && (t2 = { r: t2[0], g: t2[1], b: t2[2], a: t2[3] }), e2 == "hex" ? a(t2) : e2 == "rgb" ? o(t2, n2) : e2 == "hsl" ? c(t2) : t2;
          }
          function a(t2) {
            Array.isArray(t2) && (t2 = { r: t2[0], g: t2[1], b: t2[2], a: t2[3] });
            var e2 = t2.r.toString(16);
            t2.r < 16 && (e2 = "0" + e2);
            var n2 = t2.g.toString(16);
            t2.g < 16 && (n2 = "0" + n2);
            var i2 = t2.b.toString(16);
            if (t2.b < 16 && (i2 = "0" + i2), t2.a == 1 || Object(r.isUndefined)(t2.a))
              return "#".concat(e2).concat(n2).concat(i2);
            var a2 = Math.ceil(255 * t2.a), o2 = a2.toString(16);
            return a2 < 16 && (o2 = "0" + o2), "#".concat(e2).concat(n2).concat(i2).concat(o2);
          }
          function o(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "rgba(0, 0, 0, 0)";
            if (Object(r.isArray)(t2) && (t2 = { r: t2[0], g: t2[1], b: t2[2], a: t2[3] }), !Object(r.isUndefined)(t2))
              return t2.a == 1 || Object(r.isUndefined)(t2.a) ? isNaN(t2.r) ? e2 : "rgb(".concat(t2.r, ",").concat(t2.g, ",").concat(t2.b, ")") : "rgba(".concat(t2.r, ",").concat(t2.g, ",").concat(t2.b, ",").concat(t2.a, ")");
          }
          function c(t2) {
            return Object(r.isArray)(t2) && (t2 = { r: t2[0], g: t2[1], b: t2[2], a: t2[3] }), t2.a == 1 || Object(r.isUndefined)(t2.a) ? "hsl(".concat(t2.h, ",").concat(t2.s, "%,").concat(t2.l, "%)") : "hsla(".concat(t2.h, ",").concat(t2.s, "%,").concat(t2.l, "%,").concat(t2.a, ")");
          }
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return s;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(2), s = function() {
            function t2() {
              i()(this, t2);
            }
            return o()(t2, null, [{ key: "parse", value: function(t3) {
              var e2 = t3.split(" ").filter(function(t4) {
                return t4.trim();
              }).map(function(t4) {
                return c.a.parse(t4);
              }), n2 = c.a.percent(0), r2 = c.a.percent(0), i2 = c.a.percent(0), a2 = c.a.percent(0);
              return e2.length === 1 ? (n2 = e2[0].clone(), r2 = e2[0].clone(), i2 = e2[0].clone(), a2 = e2[0].clone()) : e2.length === 2 ? (n2 = e2[0].clone(), r2 = e2[1].clone(), i2 = e2[0].clone(), a2 = e2[1].clone()) : e2.length === 3 ? (n2 = e2[0].clone(), r2 = e2[1].clone(), i2 = e2[2].clone(), a2 = e2[1].clone()) : e2.length === 4 && (n2 = e2[0].clone(), r2 = e2[1].clone(), i2 = e2[2].clone(), a2 = e2[3].clone()), [e2.length, n2, r2, i2, a2];
            } }]), t2;
          }();
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return le;
          });
          var r = n(7), i = n.n(r), a = n(12), o = n.n(a), c = n(3), s = n.n(c), u = n(4), l = n.n(u), f = n(10), h = n.n(f), p = n(5), d = n.n(p), v = n(6), g = n.n(v), m = n(1), b = n.n(m), k = n(9), O = n(2), j = n(14), S = n(21), P = n(8), w = n(31), R = n(15), C = n.n(R), E = n(27);
          function $(t2, e2, n2, r2) {
            var i2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : void 0;
            return function(t3, e3) {
              var a2 = 0;
              return a2 = e3 === 0 ? n2 : e3 === 1 ? r2 : n2 + (r2 - n2) * t3, i2 ? a2 + i2 : a2;
            };
          }
          function I(t2, e2, n2) {
            return function(t3, e3) {
              return n2;
            };
          }
          function T(t2, e2, n2) {
            var r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "width", i2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : "parent", a2 = null;
            return i2 === "parent" ? a2 = t2[i2][r2] : i2 === "self" && (a2 = t2[r2]), a2 ? n2.toPx(a2.value) : n2;
          }
          function B(t2, e2, n2, r2) {
            var i2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : "width", a2 = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : "parent", o2 = null;
            return a2 === "parent" ? o2 = t2[a2][i2] : a2 === "self" && (o2 = t2[i2]), o2 ? n2.to(r2, o2.value) : n2;
          }
          function M(t2, e2, n2, r2) {
            var i2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : "width", a2 = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : "parent", o2 = O.a.parse(n2), c2 = O.a.parse(r2);
            return o2.unit === c2.unit ? $(t2, e2, o2.value, c2.value, o2.unit) : o2.equals(c2) ? I(0, 0, o2) : function(n3, r3) {
              var s2 = T(t2, e2, o2, i2, a2), u2 = T(t2, e2, c2, i2, a2);
              return r3 === 0 ? s2 : r3 === 1 ? u2 : B(t2, e2, O.a.px(s2.value + (u2.value - s2.value) * n3), o2.unit, i2, a2);
            };
          }
          var V = n(72), D = function(t2) {
            return t2.isAll ? [t2["border-radius"] || "0px", t2["border-radius"] || "0px", t2["border-radius"] || "0px", t2["border-radius"] || "0px"] : [t2["border-top-left-radius"] || "0px", t2["border-top-right-radius"] || "0px", t2["border-bottom-right-radius"] || "0px", t2["border-bottom-left-radius"] || "0px"];
          };
          function L(t2, e2, n2, r2) {
            for (var i2 = D(V.a.parseStyle(n2)), a2 = D(V.a.parseStyle(r2)), o2 = Math.max(i2.length, a2.length), c2 = [], s2 = 0; s2 < o2; s2++)
              c2[s2] = M(t2, e2, i2[s2], a2[s2]);
            return function(t3, e3) {
              return c2.map(function(n3) {
                return n3(t3, e3);
              }).join(" ");
            };
          }
          var A = n(55);
          function F(t2, e2, n2, r2) {
            return function(t3, e3) {
              return e3 === 1 ? r2 : n2;
            };
          }
          var z = n(28), N = n(78);
          function _(t2, e2, n2, r2) {
            var i2 = z.a.parse(n2 || "rgba(0, 0, 0, 1)"), a2 = z.a.parse(r2 || "rgba(0, 0, 0, 1)");
            return function(t3, e3) {
              return e3 === 0 ? n2 : e3 === 1 ? r2 : Object(N.interpolateRGB)(i2, a2, t3, "rgb");
            };
          }
          function U(t2, e2, n2, r2) {
            for (var i2 = A.a.parseStyle(n2), a2 = A.a.parseStyle(r2), o2 = Math.max(i2.length, a2.length), c2 = [], s2 = 0, u2 = o2; s2 < u2; s2++) {
              var l2 = i2[s2] || A.a.parseStyle("0px 0px 0px 0px rgba(0, 0, 0, 0)")[0], f2 = a2[s2] || A.a.parseStyle("0px 0px 0px 0px rgba(0, 0, 0, 0)")[0];
              c2.push({ inset: F(0, 0, l2.inset, f2.inset), offsetX: M(t2, e2, l2.offsetX, f2.offsetX), offsetY: M(t2, e2, l2.offsetY, f2.offsetY), blurRadius: M(t2, e2, l2.blurRadius, f2.blurRadius), spreadRadius: M(t2, e2, l2.spreadRadius, f2.spreadRadius), color: _(0, 0, l2.color, f2.color) });
            }
            return function(t3, e3) {
              return A.a.join(c2.map(function(n3) {
                return { inset: n3.inset(t3, e3), offsetX: n3.offsetX(t3, e3), offsetY: n3.offsetY(t3, e3), blurRadius: n3.blurRadius(t3, e3), spreadRadius: n3.spreadRadius(t3, e3), color: n3.color(t3, e3) };
              }));
            };
          }
          function G(t2, e2, n2, r2) {
            return F(0, 0, n2, r2);
          }
          var H = function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "end";
            return t2 = +t2, function(n2) {
              var r2 = 1 / t2;
              return e2 == "start" ? r2 * Math.ceil(n2 / r2) : e2 == "end" ? r2 * Math.floor(n2 / r2) : void 0;
            };
          };
          function K() {
            return H(1, "start");
          }
          function Y() {
            return H(1, "end");
          }
          var X = function() {
            return function(t2) {
              return Math.pow(2, -10 * t2) * Math.sin(5 * (t2 - 0.1) * Math.PI) + 1;
            };
          }, W = { step: function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "end";
            return H(t2, e2);
          }, "step-start": K, "step-end": Y, stepStart: K, stepEnd: Y, "ease-out-elastic": X, easeOutElastic: X };
          function Z(t2, e2, n2, r2) {
            var i2 = O.a.parse(n2), a2 = O.a.parse(r2);
            return function(t3, e3) {
              var n3 = i2.value, r3 = a2.value;
              return e3 === 0 ? O.a.deg(n3) : e3 === 1 ? O.a.deg(r3) : O.a.deg(n3 + (r3 - n3) * t3).to(i2.unit);
            };
          }
          var q = n(50);
          function J(t2, e2, n2, r2) {
            for (var i2 = q.a.parseStyle(n2), a2 = q.a.parseStyle(r2), o2 = Math.max(i2.length, a2.length), c2 = [], s2 = 0, u2 = o2; s2 < u2; s2++) {
              var l2 = i2[s2] || q.a.parseStyle("0px 0px 0px rgba(0, 0, 0, 0)")[0], f2 = a2[s2] || q.a.parseStyle("0px 0px 0px rgba(0, 0, 0, 0)")[0];
              c2.push({ offsetX: M(t2, e2, l2.offsetX, f2.offsetX, "width", "self"), offsetY: M(t2, e2, l2.offsetY, f2.offsetY, "height", "self"), blurRadius: M(t2, e2, l2.blurRadius, f2.blurRadius, "radius"), color: _(0, 0, l2.color, f2.color) });
            }
            return function(t3, e3) {
              return q.a.join(c2.map(function(n3) {
                return { offsetX: n3.offsetX(t3, e3), offsetY: n3.offsetY(t3, e3), blurRadius: n3.blurRadius(t3, e3), color: n3.color(t3, e3) };
              }));
            };
          }
          var Q = n(34), tt = n(46), et = n(24);
          function nt(t2, e2, n2, r2) {
            var i2 = { cut: F(0, 0, n2.cut, r2.cut), percent: $(t2, e2, n2.percent, r2.percent), px: $(t2, e2, n2.px, r2.px), em: $(t2, e2, n2.em, r2.em), unit: G(0, 0, n2.unit, r2.unit), color: _(0, 0, n2.color, r2.color) };
            return function(t3, e3) {
              return new et.a({ cut: i2.cut(t3, e3), percent: i2.percent(t3, e3), px: i2.px(t3, e3), em: i2.em(t3, e3), unit: i2.unit(t3, e3), color: i2.color(t3, e3) });
            };
          }
          function rt(t2, e2) {
            for (var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [], i2 = Math.max(n2.length, r2.length), a2 = [], o2 = 0; o2 < i2; o2++) {
              var c2 = n2[o2], s2 = r2[o2];
              a2[o2] = c2 && s2 ? nt(t2, e2, c2, s2) : F(0, 0, c2, s2);
            }
            return function(t3, e3) {
              return a2.map(function(n3) {
                return n3(t3, e3);
              });
            };
          }
          function it(t2, e2, n2, r2) {
            var i2 = { angle: $(t2, e2, n2.angle, r2.angle), colorsteps: rt(t2, e2, n2.colorsteps, r2.colorsteps) };
            return function(t3, e3) {
              var n3 = i2.colorsteps(t3, e3);
              return new tt.a({ angle: i2.angle(t3, e3), colorsteps: n3 });
            };
          }
          var at = n(61);
          var ot, ct = n(51);
          ot = {}, i()(ot, "center", true), i()(ot, "top", true), i()(ot, "left", true), i()(ot, "right", true), i()(ot, "bottom", true);
          function st(t2, e2) {
            switch (e2) {
              case "width":
                if (t2 === "center")
                  return "50%";
                if (t2 === "left")
                  return "0%";
                if (t2 === "right")
                  return "100%";
                break;
              case "height":
                if (t2 === "center")
                  return "50%";
                if (t2 === "top")
                  return "0%";
                if (t2 === "bottom")
                  return "100%";
            }
            return t2;
          }
          function ut(t2, e2, n2, r2) {
            n2.radialPosition[0] = st(n2.radialPosition[0], "width"), n2.radialPosition[1] = st(n2.radialPosition[1], "height"), r2.radialPosition[0] = st(r2.radialPosition[0], "width"), r2.radialPosition[1] = st(r2.radialPosition[1], "height");
            var i2 = { radialType: G(0, 0, n2.radialType, r2.radialType), radialPositionX: M(t2, e2, n2.radialPosition[0], r2.radialPosition[0], "width", "self"), radialPositionY: M(t2, e2, n2.radialPosition[1], r2.radialPosition[1], "height", "self"), colorsteps: rt(t2, e2, n2.colorsteps, r2.colorsteps) };
            return function(t3, e3) {
              return new ct.a({ radialType: i2.radialType(t3, e3), radialPosition: [i2.radialPositionX(t3, e3), i2.radialPositionY(t3, e3)], colorsteps: i2.colorsteps(t3, e3) });
            };
          }
          var lt = n(62);
          var ft = n(52);
          function ht(t2, e2, n2, r2) {
            var i2 = { angle: $(t2, e2, n2.angle, r2.angle), radialPositionX: M(t2, e2, n2.radialPosition[0], r2.radialPosition[0], "width", "self"), radialPositionY: M(t2, e2, n2.radialPosition[1], r2.radialPosition[1], "height", "self"), colorsteps: rt(t2, e2, n2.colorsteps, r2.colorsteps) };
            return function(t3, e3) {
              return new ft.a({ angle: i2.angle(t3, e3), radialPosition: [i2.radialPositionX(t3, e3), i2.radialPositionY(t3, e3)], colorsteps: i2.colorsteps(t3, e3) });
            };
          }
          var pt = n(63);
          function dt(t2, e2, n2, r2) {
            var i2 = { image: function(t3, e3) {
              return e3;
            } };
            if (n2.type === "url" || r2.type === "url")
              i2.image = F(0, 0, n2, r2);
            else if (n2.type != r2.type)
              i2.image = F(0, 0, n2, r2);
            else
              switch (n2.type) {
                case "linear-gradient":
                  i2.image = it(t2, e2, n2, r2);
                  break;
                case "repeating-linear-gradient":
                  i2.image = function(t3, e3, n3, r3) {
                    var i3 = it(t3, e3, n3, r3);
                    return function(t4, e4) {
                      var n4 = i3(t4, e4);
                      return new at.a({ angle: n4.angle, colorsteps: n4.colorsteps });
                    };
                  }(t2, e2, n2, r2);
                  break;
                case "radial-gradient":
                  i2.image = ut(t2, e2, n2, r2);
                  break;
                case "repeating-radial-gradient":
                  i2.image = function(t3, e3, n3, r3) {
                    var i3 = ut(t3, e3, n3, r3);
                    return function(t4, e4) {
                      var n4 = i3(t4, e4);
                      return new lt.a({ radialType: n4.radialType, radialPosition: n4.radialPosition, colorsteps: n4.colorsteps });
                    };
                  }(t2, e2, n2, r2);
                  break;
                case "conic-gradient":
                  i2.image = ht(t2, e2, n2, r2);
                  break;
                case "repeating-conic-gradient":
                  i2.image = function(t3, e3, n3, r3) {
                    var i3 = ht(t3, e3, n3, r3);
                    return function(t4, e4) {
                      var n4 = i3(t4, e4);
                      return new pt.a({ angle: n4.angle, radialPosition: n4.radialPosition, colorsteps: n4.colorsteps });
                    };
                  }(t2, e2, n2, r2);
              }
            return function(t3, e3) {
              return i2.image(t3, e3);
            };
          }
          function vt(t2, e2, n2, r2) {
            for (var i2 = Q.a.parseStyle(Object(P.STRING_TO_CSS)(n2)), a2 = Q.a.parseStyle(Object(P.STRING_TO_CSS)(r2)), o2 = Math.max(i2.length, a2.length), c2 = [], s2 = 0, u2 = o2; s2 < u2; s2++) {
              var l2 = i2[s2] || null, f2 = a2[s2] || null;
              l2 && !f2 ? c2.push({ image: I(0, 0, l2.image), size: I(0, 0, l2.size), width: I(0, 0, l2.width), height: I(0, 0, l2.height), x: I(0, 0, l2.x), y: I(0, 0, l2.y), blendMode: I(0, 0, l2.blendMode), repeat: I(0, 0, l2.repeat) }) : !l2 && f2 ? c2.push({ image: I(0, 0, f2.image), size: I(0, 0, f2.size), width: I(0, 0, f2.width), height: I(0, 0, f2.height), x: I(0, 0, f2.x), y: I(0, 0, f2.y), blendMode: I(0, 0, f2.blendMode), repeat: I(0, 0, f2.repeat) }) : l2 && f2 && c2.push({ image: dt(t2, e2, l2.image, f2.image), size: G(0, 0, l2.size, f2.size), width: M(t2, e2, l2.width, f2.width, "width", "self"), height: M(t2, e2, l2.height, f2.height, "height", "self"), x: M(t2, e2, l2.x, f2.x, "width", "self"), y: M(t2, e2, l2.y, f2.y, "height", "self"), blendMode: G(0, 0, l2.blendMode, f2.blendMode), repeat: G(0, 0, l2.repeat, f2.repeat) });
            }
            return function(t3, e3) {
              return Q.a.join(c2.map(function(n3) {
                return { image: n3.image(t3, e3), size: n3.size(t3, e3), x: n3.x(t3, e3), y: n3.y(t3, e3), width: n3.width(t3, e3), height: n3.height(t3, e3), blendMode: n3.blendMode(t3, e3), repeat: n3.repeat(t3, e3) };
              }));
            };
          }
          var yt = n(41);
          function gt(t2, e2, n2, r2) {
            var i2 = { type: G(0, 0, n2.type, r2.type), value: F(0, 0, n2.value, r2.value) };
            switch (n2.type) {
              case "blur":
                i2.value = M(t2, e2, n2.value, r2.value);
                break;
              case "grayscale":
              case "invert":
              case "brightness":
              case "contrast":
              case "opacity":
              case "saturate":
              case "sepia":
              case "hue-rotate":
                i2.value = $(t2, e2, n2.value.value, r2.value.value, n2.value.unit);
                break;
              case "drop-shadow":
                i2.offsetX = M(t2, e2, n2.offsetX, r2.offsetX, "width", "self"), i2.offsetY = M(t2, e2, n2.offsetY, r2.offsetY, "height", "self"), i2.blurRadius = M(t2, e2, n2.blurRadius, r2.blurRadius, "width", "self"), i2.spreadRadius = M(t2, e2, n2.spreadRadius, r2.spreadRadius, "width", "self"), i2.color = _(0, 0, n2.color, r2.color);
            }
            return function(t3, e3) {
              return i2.type(t3, e3) === "drop-shadow" ? { type: i2.type(t3, e3), offsetX: i2.offsetX(t3, e3), offsetY: i2.offsetY(t3, e3), blurRadius: i2.blurRadius(t3, e3), spreadRadius: i2.spreadRadius(t3, e3), color: i2.color(t3, e3) } : { type: i2.type(t3, e3), value: i2.value(t3, e3) };
            };
          }
          function mt(t2, e2, n2, r2) {
            for (var i2 = yt.e.parseStyle(n2), a2 = yt.e.parseStyle(r2), o2 = Math.max(i2.length, a2.length), c2 = [], s2 = 0, u2 = o2; s2 < u2; s2++) {
              var l2 = i2[s2], f2 = a2[s2];
              l2 && !f2 ? c2.push(I(0, 0, l2)) : !l2 && f2 ? c2.push(I(0, 0, f2)) : l2.type != f2.type || l2.type === "svg" || f2.type === "svg" ? c2.push(F(0, 0, l2, f2)) : c2.push(gt(t2, e2, l2, f2));
            }
            return function(t3, e3) {
              return yt.e.join(c2.map(function(n3) {
                return n3(t3, e3);
              }));
            };
          }
          var bt = n(36);
          function kt(t2, e2, n2, r2) {
            var i2 = bt.a.parseStyle(n2), a2 = bt.a.parseStyle(r2), o2 = { type: F(0, 0, i2.type, i2.type), value: F(0, 0, n2, r2) };
            if (i2.type == a2.type && i2 != "none")
              switch (i2.type) {
                case "circle":
                  i2.value = bt.a.parseStyleForCircle(i2.value), a2.value = bt.a.parseStyleForCircle(a2.value), o2.value = function(t3, e3, n3, r3) {
                    var i3 = {};
                    return n3.radius === "closest-side" || n3.radius === "farthest-side" || r3.radius === "closest-side" || r3.radius === "farthest-side" ? i3.radius = F(0, 0, n3.radius, r3.radius) : n3.radius.unit === r3.radius.unit ? i3.radius = makeInterpolateNumber(t3, e3, n3.radius.value, r3.radius.value, n3.radius.unit) : i3.radius = M(t3, e3, n3.radius, r3.radius, "width", "self"), i3.x = M(t3, e3, n3.x, r3.x, "width", "self"), i3.y = M(t3, e3, n3.y, r3.y, "height", "self"), function(t4, e4) {
                      var n4 = i3.radius(t4, e4), r4 = i3.x(t4, e4), a3 = i3.y(t4, e4), o3 = "".concat(r4, " ").concat(a3), c2 = n4 + "";
                      return c2.includes("closest-side") ? c2 = "closest-side" : c2.includes("farthest-side") && (c2 = "farthest-side"), n4 ? "".concat(c2, " at ").concat(o3) : "".concat(o3);
                    };
                  }(t2, e2, i2.value, a2.value);
                  break;
                case "ellipse":
                  i2.value = bt.a.parseStyleForEllipse(i2.value), a2.value = bt.a.parseStyleForEllipse(a2.value), o2.value = function(t3, e3, n3, r3) {
                    var i3 = { radiusX: M(t3, e3, n3.radiusX, r3.radiusX, "width", "self"), radiusY: M(t3, e3, n3.radiusY, r3.radiusY, "height", "self"), x: M(t3, e3, n3.x, r3.x, "width", "self"), y: M(t3, e3, n3.y, r3.y, "height", "self") };
                    return function(t4, e4) {
                      var n4 = i3.radiusX(t4, e4), r4 = i3.radiusY(t4, e4), a3 = i3.x(t4, e4), o3 = i3.y(t4, e4);
                      return "".concat(n4, " ").concat(r4, " at ").concat(a3, " ").concat(o3);
                    };
                  }(t2, e2, i2.value, a2.value);
                  break;
                case "inset":
                  i2.value = bt.a.parseStyleForInset(i2.value), a2.value = bt.a.parseStyleForInset(a2.value), o2.value = function(t3, e3, n3, r3) {
                    var i3 = { top: $(t3, e3, n3.top.value, r3.top.value, n3.top.unit), left: $(t3, e3, n3.left.value, r3.left.value, n3.left.unit), right: $(t3, e3, n3.right.value, r3.right.value, n3.right.unit), bottom: $(t3, e3, n3.bottom.value, r3.bottom.value, n3.bottom.unit), round: F(0, 0, n3.round, r3.round), topRadius: $(t3, e3, n3.topRadius.value, r3.topRadius.value, n3.topRadius.unit), leftRadius: $(t3, e3, n3.leftRadius.value, r3.leftRadius.value, n3.leftRadius.unit), rightRadius: $(t3, e3, n3.rightRadius.value, r3.rightRadius.value, n3.rightRadius.unit), bottomRadius: $(t3, e3, n3.bottomRadius.value, r3.bottomRadius.value, n3.bottomRadius.unit) };
                    return function(t4, e4) {
                      var n4 = i3.top(t4, e4), r4 = i3.right(t4, e4), a3 = i3.bottom(t4, e4), o3 = i3.left(t4, e4), c2 = i3.round(t4, e4), s2 = i3.topRadius(t4, e4), u2 = i3.leftRadius(t4, e4), l2 = i3.bottomRadius(t4, e4), f2 = i3.rightRadius(t4, e4), h2 = [n4, r4, a3, o3].join(" "), p2 = [s2, f2, l2, u2].join(" ");
                      return "".concat(h2, " ").concat(c2 && p2.trim() ? "round ".concat(p2) : "");
                    };
                  }(t2, e2, i2.value, a2.value);
                  break;
                case "polygon":
                  i2.value = bt.a.parseStyleForPolygon(i2.value), a2.value = bt.a.parseStyleForPolygon(a2.value), o2.value = function(t3, e3, n3, r3) {
                    for (var i3 = Math.max(n3.length, r3.length), a3 = [], o3 = 0; o3 < i3; o3++) {
                      var c2 = n3[o3], s2 = r3[o3];
                      c2 && !s2 ? a3.push({ x: I(0, 0, c2.x), y: I(0, 0, c2.y) }) : !c2 && s2 ? a3.push({ x: I(0, 0, s2.x), y: I(0, 0, s2.y) }) : a3.push({ x: M(t3, e3, c2.x, s2.x, "width", "self"), y: M(t3, e3, c2.y, s2.y, "height", "self") });
                    }
                    return function(t4, e4) {
                      return a3.map(function(n4) {
                        return "".concat(n4.x(t4, e4), " ").concat(n4.y(t4, e4));
                      }).join(",");
                    };
                  }(t2, e2, i2.value, a2.value);
                  break;
                case "path":
                  i2.value = bt.a.parseStyleForPath(i2.value), a2.value = bt.a.parseStyleForPath(a2.value), o2.value = makeInterpolateClipPathPath(t2, e2, i2.value, a2.value);
              }
            return function(t3, e3) {
              var n3 = o2.type(t3, e3), r3 = o2.value(t3, e3);
              return n3 === "none" ? n3 : "".concat(n3, "(").concat(r3, ")");
            };
          }
          var Ot = n(26);
          function xt(t2, e2, n2, r2) {
            for (var i2 = { type: F(0, 0, n2.type, r2.type) }, a2 = [], o2 = Math.max(n2.value.length, r2.value.length), c2 = 0; c2 < o2; c2++) {
              var s2 = n2.value[c2], u2 = r2.value[c2];
              s2 && u2 ? a2.push(M(t2, e2, s2, u2, n2.type)) : a2.push(M(t2, e2, n2.value[c2] || n2.value[c2 - 1] || n2.value[c2 - 2], r2.value[c2] || r2.value[c2 - 1] || r2.value[c2 - 2], n2.type));
            }
            return i2.value = a2, function(t3, e3) {
              return { type: i2.type(t3, e3), value: i2.value.map(function(n3) {
                return n3(t3, e3);
              }) };
            };
          }
          function jt(t2, e2, n2, r2) {
            for (var i2 = { type: F(0, 0, n2.type, r2.type) }, a2 = [], o2 = Math.max(n2.value.length, r2.value.length), c2 = 0; c2 < o2; c2++) {
              var s2 = n2.value[c2], u2 = r2.value[c2];
              if (s2 && u2)
                a2.push($(t2, e2, s2.value, u2.value));
              else {
                var l2 = n2.value[c2].value || n2.value[c2 - 1].value || n2.value[c2 - 2].value, f2 = r2.value[c2].value || r2.value[c2 - 1].value || n2.value[c2 - 2].value;
                a2.push($(t2, e2, l2, f2));
              }
            }
            return i2.value = a2, function(t3, e3) {
              var n3 = i2.value.map(function(n4) {
                return n4(t3, e3);
              }), r3 = i2.type(t3, e3);
              return (r3.includes("matrix") || r3.includes("scale")) && (n3 = n3.map(function(t4) {
                return O.a.number(t4);
              })), { type: r3, value: n3 };
            };
          }
          function St(t2, e2, n2, r2) {
            for (var i2 = { type: F(0, 0, n2.type, r2.type) }, a2 = [], o2 = Math.max(n2.value.length, r2.value.length), c2 = 0; c2 < o2; c2++) {
              var s2 = n2.value[c2], u2 = r2.value[c2];
              s2 && u2 ? a2.push(Z(0, 0, s2, u2)) : a2.push(Z(0, 0, n2.value[c2] || n2.value[c2 - 1] || n2.value[c2 - 2], r2.value[c2] || r2.value[c2 - 1] || n2.value[c2 - 2]));
            }
            return i2.value = a2, function(t3, e3) {
              return { type: i2.type(t3, e3), value: i2.value.map(function(n3) {
                return n3(t3, e3);
              }) };
            };
          }
          function Pt(t2, e2, n2, r2) {
            for (var i2 = Ot.a.parseStyle(n2.trim()), a2 = Ot.a.parseStyle(r2.trim()), o2 = Math.max(i2.length, a2.length), c2 = [], s2 = 0; s2 < o2; s2++) {
              var u2 = i2[s2], l2 = a2[s2];
              if (u2 && !l2)
                c2.push(I(0, 0, u2));
              else if (!u2 && l2)
                c2.push(I(0, 0, l2));
              else if (u2.type != l2.type)
                c2.push(F(0, 0, u2, l2));
              else
                switch (u2.type) {
                  case "translate":
                  case "translateX":
                  case "translateY":
                  case "translateZ":
                  case "translate3d":
                  case "perspective":
                    c2.push(xt(t2, e2, u2, l2));
                    break;
                  case "rotate":
                  case "rotateX":
                  case "rotateY":
                  case "rotateZ":
                  case "rotate3d":
                    c2.push(St(0, 0, u2, l2));
                    break;
                  case "scale":
                  case "scaleX":
                  case "scaleY":
                  case "scaleZ":
                  case "scale3d":
                  case "matrix":
                  case "matrix3d":
                    c2.push(jt(t2, e2, u2, l2));
                }
            }
            return function(t3, e3) {
              return Ot.a.join(c2.map(function(n3) {
                return n3(t3, e3);
              }));
            };
          }
          function wt(t2, e2, n2, r2) {
            for (var i2 = n2.split(" ").map(function(t3) {
              return O.a.parse(t3);
            }), a2 = r2.split(" ").map(function(t3) {
              return O.a.parse(t3);
            }), o2 = Math.max(i2.length, a2.length), c2 = [], s2 = 0; s2 < o2; s2++) {
              var u2 = i2[s2], l2 = a2[s2];
              c2.push(M(t2, e2, u2, l2, "transform-origin"));
            }
            return function(t3, e3) {
              return c2.map(function(n3) {
                return n3(t3, e3);
              }).join(" ");
            };
          }
          function Rt(t2, e2, n2, r2) {
            for (var i2 = n2.split(" ").map(function(t3) {
              return O.a.parse(t3);
            }), a2 = r2.split(" ").map(function(t3) {
              return O.a.parse(t3);
            }), o2 = Math.max(i2.length, a2.length), c2 = [], s2 = 0; s2 < o2; s2++) {
              var u2 = i2[s2], l2 = a2[s2];
              c2.push(M(t2, e2, u2, l2, "perspective-origin"));
            }
            return function(t3, e3) {
              return c2.map(function(n3) {
                return n3(t3, e3);
              }).join(" ");
            };
          }
          function Ct(t2, e2, n2, r2) {
            for (var i2 = n2.split(" ").map(function(t3) {
              return +t3;
            }), a2 = r2.split(" ").map(function(t3) {
              return +t3;
            }), o2 = Math.max(i2.length, a2.length), c2 = [], s2 = 0; s2 < o2; s2++) {
              var u2 = i2[s2], l2 = a2[s2];
              c2.push($(t2, e2, u2, l2));
            }
            return function(t3, e3) {
              return c2.map(function(n3) {
                return n3(t3, e3);
              }).join(" ");
            };
          }
          var Et = n(29);
          function $t(t2, e2, n2, r2) {
            for (var i2 = Math.max(n2.length, r2.length), a2 = [], o2 = n2[n2.length - 1], c2 = r2[r2.length - 1], s2 = 0; s2 < i2; s2++) {
              var u2 = n2[s2], l2 = r2[s2];
              u2 && !l2 ? a2.push($(t2, e2, u2, c2)) : !u2 && l2 ? a2.push($(t2, e2, o2, l2)) : a2.push($(t2, e2, u2, l2));
            }
            return function(t3, e3) {
              return a2.map(function(n3) {
                return n3(t3, e3);
              });
            };
          }
          function It(t2, e2, n2, r2) {
            for (var i2 = new Et.a(), a2 = new Et.a(n2), o2 = new Et.a(r2), c2 = Math.max(a2.segments.length, o2.segments.length), s2 = [], u2 = 0; u2 < c2; u2++) {
              var l2 = a2.segments[u2], f2 = o2.segments[u2];
              l2.command === f2.command ? l2.values.length === f2.values.length ? s2.push({ command: I(0, 0, l2.command), values: $t(t2, e2, l2.values, f2.values) }) : s2.push({ command: I(0, 0, l2.command), values: I(0, 0, l2.values) }) : s2.push({ command: F(0, 0, l2.command, f2.command), values: F(0, 0, l2.values, f2.values) });
            }
            return function(t3, e3) {
              var n3 = s2.map(function(n4) {
                return { command: n4.command(t3, e3), values: n4.values(t3, e3) };
              });
              return i2.joinPath(n3);
            };
          }
          var Tt = n(64);
          function Bt(t2, e2, n2, r2) {
            for (var i2 = new Tt.a(), a2 = new Tt.a(n2), o2 = new Tt.a(r2), c2 = Math.max(a2.segments.length, o2.segments.length), s2 = [], u2 = a2.segments[a2.segments.length - 1].x, l2 = a2.segments[a2.segments.length - 1].y, f2 = o2.segments[o2.segments.length - 1].x, h2 = o2.segments[o2.segments.length - 1].y, p2 = 0; p2 < c2; p2++) {
              var d2 = a2.segments[p2], v2 = o2.segments[p2];
              d2 && !v2 ? s2.push({ x: $(t2, e2, d2.x, f2), y: $(t2, e2, d2.y, h2) }) : !d2 && v2 ? s2.push({ x: $(t2, e2, u2, v2.x), y: $(t2, e2, l2, v2.y) }) : s2.push({ x: $(t2, e2, d2.x, v2.x), y: $(t2, e2, d2.y, v2.y) });
            }
            return function(t3, e3) {
              return i2.joinPoints(s2.map(function(n3) {
                return { x: n3.x(t3, e3), y: n3.y(t3, e3) };
              }));
            };
          }
          var Mt = n(20);
          function Vt(t2, e2, n2, r2) {
            var i2 = { x: $("", "", t2, n2), y: $("", "", e2, r2) };
            return function(t3, e3) {
              return { x: i2.x(t3, e3), y: i2.y(t3, e3) };
            };
          }
          function Dt(t2, e2, n2, r2, i2, a2) {
            var o2 = [{ x: t2, y: e2 }, { x: n2, y: r2 }, { x: i2, y: a2 }];
            return function(t3, e3) {
              return Object(E.e)(o2, e3);
            };
          }
          function Lt(t2, e2, n2, r2, i2, a2, o2, c2) {
            var s2 = [{ x: t2, y: e2 }, { x: n2, y: r2 }, { x: i2, y: a2 }, { x: o2, y: c2 }];
            return function(t3, e3) {
              return Object(E.d)(s2, e3);
            };
          }
          function At(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Ft(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? At(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : At(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function zt(t2, e2, n2, r2, i2) {
            var a2 = n2.split(",").map(function(t3) {
              return t3.trim();
            }), c2 = o()(a2, 4), s2 = c2[0], u2 = c2[1], l2 = c2[2], f2 = c2[3], h2 = { id: s2, distance: O.a.parse(u2 || "0%"), rotateStatus: l2 || "auto", rotate: O.a.parse(f2 || "0deg") }, p2 = function(t3, e3) {
              return { x, y };
            }, d2 = 0, v2 = 0;
            if (i2) {
              var g2 = i2.searchById(h2.id);
              g2 && (d2 = g2.screenX.value, v2 = g2.screenY.value), p2 = function(t3, e3, n3) {
                var r3 = function(t4) {
                  var e4 = [], n4 = [];
                  t4.forEach(function(t5, r5) {
                    switch (t5.command) {
                      case "M":
                        var i5 = o()(t5.values, 2), a4 = i5[0], c4 = i5[1];
                        n4 = [a4, c4];
                        break;
                      case "m":
                        var s4 = n4, u4 = o()(s4, 2), l4 = u4[0], f4 = u4[1], h3 = o()(t5.values, 2);
                        a4 = h3[0], c4 = h3[1];
                        n4 = [a4 += l4, c4 += f4];
                        break;
                      case "L":
                        var p3 = n4, d3 = o()(p3, 2), v3 = (l4 = d3[0], f4 = d3[1], o()(t5.values, 2));
                        a4 = v3[0], c4 = v3[1];
                        e4.push({ command: t5.command, values: [l4, f4, a4, c4], length: Object(j.getDist)(l4, f4, a4, c4), interpolate: Vt(l4, f4, a4, c4) }), n4 = [a4, c4];
                        break;
                      case "l":
                        var y2 = n4, g3 = o()(y2, 2), m2 = (l4 = g3[0], f4 = g3[1], o()(t5.values, 2));
                        a4 = m2[0], c4 = m2[1];
                        a4 += l4, c4 += f4, e4.push({ command: t5.command, values: [l4, f4, a4, c4], length: Object(j.getDist)(l4, f4, a4, c4), interpolate: Vt(l4, f4, a4, c4) }), n4 = [a4, c4];
                        break;
                      case "C":
                        var b2 = n4, k2 = o()(b2, 2), O2 = (l4 = k2[0], f4 = k2[1], o()(t5.values, 6)), x2 = O2[0], S2 = O2[1], P2 = O2[2], w2 = O2[3];
                        a4 = O2[4], c4 = O2[5];
                        e4.push({ command: t5.command, values: [l4, f4, x2, S2, P2, w2, a4, c4], length: Object(E.j)(l4, f4, x2, S2, P2, w2, a4, c4), interpolate: Lt(l4, f4, x2, S2, P2, w2, a4, c4) }), n4 = [a4, c4];
                        break;
                      case "c":
                        var R2 = n4, C2 = o()(R2, 2), $2 = (l4 = C2[0], f4 = C2[1], o()(t5.values, 6));
                        x2 = $2[0], S2 = $2[1], P2 = $2[2], w2 = $2[3], a4 = $2[4], c4 = $2[5];
                        x2 += l4, P2 += l4, a4 += l4, S2 += f4, w2 += f4, c4 += f4, e4.push({ command: t5.command, values: [l4, f4, x2, S2, P2, w2, a4, c4], length: Object(E.j)(l4, f4, x2, S2, P2, w2, a4, c4), interpolate: Lt(l4, f4, x2, S2, P2, w2, a4, c4) }), n4 = [a4, c4];
                        break;
                      case "Q":
                        var I2 = n4, T2 = o()(I2, 2), B2 = (l4 = T2[0], f4 = T2[1], o()(t5.values, 4));
                        x2 = B2[0], S2 = B2[1], a4 = B2[2], c4 = B2[3];
                        e4.push({ command: t5.command, values: [l4, f4, x2, S2, a4, c4], length: Object(E.l)(l4, f4, x2, S2, a4, c4), interpolate: Dt(l4, f4, x2, S2, a4, c4) }), n4 = [a4, c4];
                        break;
                      case "q":
                        var M2 = n4, V2 = o()(M2, 2), D2 = (l4 = V2[0], f4 = V2[1], o()(t5.values, 4));
                        x2 = D2[0], S2 = D2[1], a4 = D2[2], c4 = D2[3];
                        x2 += l4, a4 += l4, S2 += f4, c4 += f4, e4.push({ command: t5.command, values: [l4, f4, x2, S2, a4, c4], length: Object(E.l)(l4, f4, x2, S2, a4, c4), interpolate: Dt(l4, f4, x2, S2, a4, c4) }), n4 = [a4, c4];
                        break;
                      case "S":
                        var L2 = n4, A2 = o()(L2, 2), F2 = (l4 = A2[0], f4 = A2[1], o()(t5.values, 4)), z2 = (P2 = F2[0], w2 = F2[1], a4 = F2[2], c4 = F2[3], e4[e4.length - 1]);
                        if (["C", "c", "S", "s"].includes(z2.command)) {
                          var N2 = o()(z2.values, 8), _2 = (N2[0], N2[1], N2[2], N2[3], N2[4]), U2 = N2[5], G2 = N2[6], H2 = N2[7], K2 = Mt.a.getReversePoint({ x: G2, y: H2 }, { x: _2, preC1y: U2 });
                          x2 = K2.x, S2 = K2.y;
                          e4.push({ command: t5.command, values: [l4, f4, x2, S2, P2, w2, a4, c4], length: getCubicDist(l4, f4, x2, S2, P2, w2, a4, c4), interpolate: Lt(l4, f4, x2, S2, P2, w2, a4, c4) }), n4 = [a4, c4];
                          break;
                        }
                      case "s":
                        var Y2 = n4, X2 = o()(Y2, 2), W2 = (l4 = X2[0], f4 = X2[1], o()(t5.values, 4));
                        P2 = W2[0], w2 = W2[1], a4 = W2[2], c4 = W2[3];
                        P2 += l4, a4 += l4, w2 += f4, c4 += f4;
                        z2 = e4[e4.length - 1];
                        if (["C", "c", "S", "s"].includes(z2.command)) {
                          var Z2 = o()(z2.values, 8), q2 = (Z2[0], Z2[1], Z2[2], Z2[3], _2 = Z2[4], U2 = Z2[5], G2 = Z2[6], H2 = Z2[7], Mt.a.getReversePoint({ x: G2, y: H2 }, { x: _2, preC1y: U2 }));
                          x2 = q2.x, S2 = q2.y;
                          e4.push({ command: t5.command, values: [l4, f4, x2, S2, P2, w2, a4, c4], length: getCubicDist(l4, f4, x2, S2, P2, w2, a4, c4), interpolate: Lt(l4, f4, x2, S2, P2, w2, a4, c4) }), n4 = [a4, c4];
                          break;
                        }
                      case "T":
                        var J2 = n4, Q2 = o()(J2, 2), tt2 = (l4 = Q2[0], f4 = Q2[1], o()(t5.values, 2));
                        a4 = tt2[0], c4 = tt2[1], z2 = e4[e4.length - 1];
                        if (["Q", "q", "T", "t"].includes(z2.command)) {
                          var et2 = o()(z2.values, 6), nt2 = (et2[0], et2[1], _2 = et2[2], U2 = et2[3], G2 = et2[4], H2 = et2[5], Mt.a.getReversePoint({ x: G2, y: H2 }, { x: _2, preC1y: U2 }));
                          x2 = nt2.x, S2 = nt2.y;
                          e4.push({ command: t5.command, values: [l4, f4, x2, S2, a4, c4], length: Object(E.l)(l4, f4, x2, S2, a4, c4), interpolate: Dt(l4, f4, x2, S2, a4, c4) }), n4 = [a4, c4];
                        }
                        break;
                      case "t":
                        var rt2 = n4, it2 = o()(rt2, 2), at2 = (l4 = it2[0], f4 = it2[1], o()(t5.values, 2));
                        a4 = at2[0], c4 = at2[1];
                        a4 += l4, c4 += f4;
                        z2 = e4[e4.length - 1];
                        if (["Q", "q", "T", "t"].includes(z2.command)) {
                          var ot2 = o()(z2.values, 6), ct2 = (ot2[0], ot2[1], _2 = ot2[2], U2 = ot2[3], G2 = ot2[4], H2 = ot2[5], Mt.a.getReversePoint({ x: G2, y: H2 }, { x: _2, preC1y: U2 }));
                          x2 = ct2.x, S2 = ct2.y;
                          e4.push({ command: t5.command, values: [l4, f4, x2, S2, a4, c4], length: Object(E.l)(l4, f4, x2, S2, a4, c4), interpolate: Dt(l4, f4, x2, S2, a4, c4) }), n4 = [a4, c4];
                        }
                    }
                  });
                  var r4 = 0;
                  e4.forEach(function(t5) {
                    r4 += t5.length;
                  });
                  var i4 = 0;
                  return e4.forEach(function(t5) {
                    t5.startT = i4 / r4, t5.endT = (i4 + t5.length) / r4, t5.totalLength = r4, i4 += t5.length;
                  }), { totalLength: r4, interpolateList: e4 };
                }(new Et.a(g2.d || "").segments), i3 = r3.totalLength, a3 = r3.interpolateList, c3 = h2.distance.toPx(i3);
                (e3 += c3 / i3) > 1 && (e3 -= 1);
                var s3 = a3[0];
                e3 === 0 ? s3 = a3[0] : e3 === 1 && (s3 = a3[a3.length - 1]);
                var u3 = a3.find(function(t4) {
                  return t4.startT <= e3 && e3 < t4.endT;
                });
                u3 && (s3 = u3);
                var l3 = (e3 - s3.startT) / (s3.endT - s3.startT), f3 = n3(l3);
                return Ft(Ft({}, s3.interpolate(f3, l3, n3)), {}, { totalLength: s3.totalLength });
              };
            }
            return function(e3, n3, r3) {
              var i3 = (t2["transform-origin"] || "50% 50%").split(" ").map(function(t3) {
                return O.a.parse(t3);
              }), a3 = i3[0].toPx(t2.width.value), o2 = i3[1].toPx(t2.height.value), c3 = p2(e3, n3, r3), s3 = { x: c3.x + d2 - a3.value, y: c3.y + v2 - o2.value };
              if (t2.setScreenX(s3.x), t2.setScreenY(s3.y), h2.rotateStatus === "element")
                ;
              else {
                var u3 = c3, l3 = 0;
                n3 < 1 && (l3 = 1 / c3.totalLength);
                var f3 = p2(e3 + l3, n3 + l3, r3), y2 = Object(j.calculateAngle)(f3.x - u3.x, f3.y - u3.y), g3 = O.a.deg(function(t3, e4) {
                  var n4 = 0;
                  switch (t3) {
                    case "angle":
                      n4 = h2.rotate.value;
                      break;
                    case "auto angle":
                      n4 = e4 + h2.rotate.value;
                      break;
                    case "reverse":
                      n4 = e4 + 180;
                      break;
                    case "auto":
                      n4 = e4;
                  }
                  return n4;
                }(h2.rotateStatus, y2));
                t2.reset({ transform: Ot.a.rotate(t2.transform, g3) });
              }
              return s3;
            };
          }
          function Nt(t2, e2, n2, r2) {
            var i2 = r2.length - 1, a2 = 0;
            return function(t3, e3) {
              return e3 === 0 ? "" : e3 === 1 ? r2 : r2.substring(a2, Math.floor((i2 - a2) * e3));
            };
          }
          function _t(t2, e2, n2, r2, i2, a2) {
            var c2 = a2.$("video").el, s2 = n2.split(":"), u2 = o()(s2, 3), l2 = u2[0], f2 = (u2[1], +(l2 || 0) * +(u2[2] || 1));
            return function(e3, n3) {
              n3 === 0 ? (c2.currentTime = f2, c2.paused && c2.play()) : n3 === 1 ? (t2.reset({ currentTime: c2.currentTime }), c2.pause()) : c2.paused && c2.play();
            };
          }
          var Ut = function() {
            return function(t2, e2) {
            };
          };
          function Gt(t2, e2, n2, r2, i2, a2, o2) {
            var c2 = i2 || e2;
            switch (c2) {
              case "width":
              case "x":
                return M(t2, e2, n2, r2, "width");
              case "height":
              case "y":
                return M(t2, e2, n2, r2, "height");
              case "perspective":
              case "font-size":
              case "font-stretch":
              case "font-weight":
              case "text-stroke-width":
              case "RangeEditor":
              case "textLength":
              case "startOffset":
                return M(t2, e2, n2, r2, e2);
              case "fill-opacity":
              case "opacity":
              case "stroke-dashoffset":
              case "currentTime":
              case "NumberRangeEditor":
                return $(t2, e2, +n2, +r2);
              case "background-color":
              case "color":
              case "text-fill-color":
              case "text-stroke-color":
              case "fill":
              case "stroke":
              case "ColorViewEditor":
                return _(0, 0, n2, r2);
              case "mix-blend-mode":
              case "fill-rule":
              case "stroke-linecap":
              case "stroke-linejoin":
              case "SelectEditor":
              case "lengthAdjust":
                return G(0, 0, n2, r2);
              case "rotate":
                return Z(0, 0, n2, r2);
            }
            var s2 = function(t3) {
              switch (t3) {
                case "border-radius":
                  return L;
                case "border":
                  return makeInterpolateBorder;
                case "box-shadow":
                  return U;
                case "text-shadow":
                  return J;
                case "background-image":
                case "BackgroundImageEditor":
                  return vt;
                case "filter":
                case "backdrop-filter":
                  return mt;
                case "clip-path":
                  return kt;
                case "transform":
                  return Pt;
                case "transform-origin":
                  return wt;
                case "perspective-origin":
                  return Rt;
                case "stroke-dasharray":
                  return Ct;
                case "d":
                  return It;
                case "points":
                  return Bt;
                case "offset-path":
                  return zt;
                case "text":
                  return Nt;
                case "playTime":
                  return _t;
              }
            }(c2);
            return s2 ? s2(t2, e2, n2, r2, a2, o2) : Ut;
          }
          function Ht(t2, e2, n2, r2, i2, a2, o2) {
            return Gt(t2, e2, n2, r2, i2, a2, o2);
          }
          function Kt() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "linear", e2 = t2.split("(").map(function(t3) {
              return t3.trim();
            }), n2 = o()(e2, 2), r2 = n2[0], i2 = n2[1];
            i2 = (i2 || "").split(")")[0].trim();
            var a2 = W[r2];
            if (a2) {
              var c2 = t2.split("(")[1].split(")")[0].split(",").map(function(t3) {
                return t3.trim();
              });
              return a2.apply(void 0, C()(c2));
            }
            return Yt(t2);
          }
          function Yt(t2) {
            var e2 = Object(E.b)(t2);
            return function(t3) {
              return e2(t3).y;
            };
          }
          var Xt = n(19), Wt = n(32), Zt = n(79);
          function qt(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Jt(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? qt(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : qt(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Qt(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = b()(t2);
              if (e2) {
                var i2 = b()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return g()(this, n2);
            };
          }
          function te(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function ee(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? te(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : te(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function ne(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = b()(t2);
              if (e2) {
                var i2 = b()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return g()(this, n2);
            };
          }
          var re = function(t2) {
            d()(n2, t2);
            var e2 = ne(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return h()(b()(n2.prototype), "getDefaultObject", this).call(this, ee({ timeline: [], compiledTimeline: {} }, t3));
            } }, { key: "expectJSON", value: function(t3) {
              return t3 !== "compiledTimeline" && h()(b()(n2.prototype), "expectJSON", this).call(this, t3);
            } }, { key: "setTimelineInfo", value: function(t3) {
              var e3 = this.getSelectedTimeline();
              e3 && ["speed", "iterationCount", "direction"].forEach(function(n3) {
                Object(P.isNotUndefined)(t3[n3]) && (e3[n3] = t3[n3]);
              });
            } }, { key: "compileAll", value: function() {
              var t3 = this, e3 = this.getSelectedTimeline();
              this.json.compiledTimeline = {}, e3 && e3.animations.forEach(function(e4) {
                e4.properties.forEach(function(n3) {
                  t3.compiledTimingFunction(e4.id, n3.property);
                });
              });
            } }, { key: "searchTimelineOffset", value: function(t3) {
              var e3 = this, n3 = this.getSelectedTimeline(), r2 = [];
              return n3 && n3.animations.forEach(function(n4) {
                n4.properties.forEach(function(i2) {
                  var a2 = e3.getCompiledTimingFunction(n4.id, i2.property);
                  r2.push(a2.find(function(e4) {
                    return !!(e4.isOnlyTime && e4.startTime <= t3) || e4.startTime <= t3 && t3 < e4.endTime;
                  }));
                });
              }), r2.filter(function(t4) {
                return t4;
              });
            } }, { key: "getCompiledTimingFunction", value: function(t3, e3) {
              return this.json.compiledTimeline["".concat(t3, ".").concat(e3)];
            } }, { key: "compiledTimingFunction", value: function(t3, e3) {
              var n3 = this, r2 = this, i2 = this.getTimelineProperty(t3, e3), a2 = this.searchById(t3), o2 = "".concat(t3, ".").concat(e3);
              if (i2.keyframes.length !== 1) {
                var c2 = Xt.a.body().$('[data-id="'.concat(t3, '"]')), s2 = i2.keyframes.map(function(t4) {
                  return t4.editor;
                })[0];
                this.json.compiledTimeline[o2] = i2.keyframes.map(function(t4, e4) {
                  var o3 = t4, u2 = i2.keyframes[e4 + 1];
                  t4.editor = s2, u2 || (u2 = { time: t4.time, value: t4.value });
                  var l2 = { layer: a2, layerElement: c2, property: i2.property, isOnlyTime: o3.time === u2.time, startTime: t4.time, endTime: u2.time, startValue: t4.value, endValue: u2.value, timing: t4.timing, interpolateFunction: Ht(a2, i2.property, t4.value, u2.value, t4.editor, r2, c2), timingFunction: Kt(t4.timing) };
                  return l2.func = n3.makeTimingFunction(l2), l2;
                }).filter(function(t4) {
                  return t4;
                });
              } else
                this.json.compiledTimeline[o2] = [];
            } }, { key: "makeTimingFunction", value: function(t3) {
              return function(e3) {
                var n3 = t3.endTime - t3.startTime, r2 = 1;
                return n3 !== 0 && (r2 = (e3 - t3.startTime) / n3), t3.interpolateFunction(t3.timingFunction(r2), r2, n3, t3.timingFunction);
              };
            } }, { key: "stop", value: function(t3) {
              var e3 = this.getSelectedTimeline();
              if (e3) {
                var n3 = e3.currentTime;
                this.searchTimelineOffset(n3).forEach(function(t4) {
                  if (t4.property === "playTime") {
                    var e4 = t4.layerElement.$("video");
                    e4 && e4.el.pause();
                  }
                });
              }
            } }, { key: "seek", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : function(t4) {
                return t4;
              }, n3 = this.getSelectedTimeline();
              if (n3) {
                Object(P.isNotUndefined)(t3) && this.setTimelineCurrentTime(t3);
                var r2 = n3.currentTime;
                this.searchTimelineOffset(r2).filter(e3).forEach(function(t4) {
                  t4.property === "offset-path" || t4.property === "playTime" ? t4.func(r2) : t4.layer && t4.layer.reset(i()({}, t4.property, t4.func(r2)));
                });
              }
            } }, { key: "getSelectedTimeline", value: function() {
              var t3 = this.json.timeline, e3 = t3.filter(function(t4) {
                return t4.selected;
              });
              return (e3.length ? e3[0] : t3[0]) || null;
            } }, { key: "getKeyframeListReturnArray", value: function() {
              var t3 = this.getSelectedTimeline(), e3 = [];
              return t3 && t3.animations.forEach(function(t4) {
                t4.properties.forEach(function(t5) {
                  e3.push.apply(e3, t5.keyframes);
                });
              }), e3;
            } }, { key: "getKeyframeList", value: function(t3) {
              var e3 = this.getSelectedTimeline();
              e3 && e3.animations.forEach(function(n3) {
                n3.properties.forEach(function(n4) {
                  n4.keyframes.forEach(function(n5) {
                    t3 && t3(e3, n5);
                  });
                });
              });
            } }, { key: "getSelectedTimelineLastTime", value: function() {
              var t3 = 0;
              return this.getKeyframeList(function(e3, n3) {
                t3 = Math.max(n3.time, t3);
              }), t3;
            } }, { key: "getSelectedTimelineFirstTime", value: function() {
              var t3 = Number.MAX_SAFE_INTEGER;
              return this.getKeyframeList(function(e3, n3) {
                t3 = Math.min(n3.time, t3);
              }), t3;
            } }, { key: "getSelectedTimelinePrevTime", value: function() {
              var t3 = this.getSelectedTimelineFirstTime();
              return this.getKeyframeList(function(e3, n3) {
                Object(w.d)(e3.fps, n3.time) < e3.currentTimecode && (t3 = Math.max(n3.time, t3));
              }), t3;
            } }, { key: "getSelectedTimelineNextTime", value: function() {
              var t3 = this.getSelectedTimelineLastTime();
              return this.getKeyframeList(function(e3, n3) {
                Object(w.d)(e3.fps, n3.time) > e3.currentTimecode && (t3 = Math.min(n3.time, t3));
              }), t3;
            } }, { key: "setTimelineTitle", value: function(t3, e3) {
              var n3 = this.json.timeline.find(function(e4) {
                return e4.id === t3;
              });
              n3 && (n3.title = e3);
            } }, { key: "selectTimeline", value: function(t3) {
              t3 ? this.json.timeline.forEach(function(e3) {
                e3.selected = e3.id === t3;
              }) : this.json.timeline.filter(function(t4) {
                return t4.selected;
              }).length || this.json.timeline.length && (this.json.timeline.selected = true);
              this.compileAll();
            } }, { key: "removeAnimation", value: function(t3) {
              this.json.timeline = this.json.timeline.filter(function(e3) {
                return e3.id !== t3;
              }), this.json.timeline.length && (this.json.timeline[0].selected = true), this.compileAll();
            } }, { key: "addTimeline", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 60, e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "00:00:10:00", n3 = Object(j.uuidShort)(), r2 = ee(ee({ id: n3, title: "sample" }, this.getTimelineLayerInfo(t3, e3)), {}, { animations: [] });
              return this.json.timeline.push(r2), this.selectTimeline(n3), r2;
            } }, { key: "addTimelineLayer", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 60, n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "00:00:10:00", r2 = this.getSelectedTimeline();
              if (r2 || (r2 = this.addTimeline(e3, n3)), r2.selected = true, t3) {
                var i2 = r2.animations.filter(function(e4) {
                  return e4.id === t3;
                });
                i2[0] || r2.animations.push({ id: t3, properties: [] });
              }
            } }, { key: "getTimelineLayerInfo", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 60, e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "00:00:10:00", n3 = Object(w.c)(t3, e3);
              return { fps: t3, speed: 1, direction: "normal", iterationCount: 1, currentTimecode: Object(w.d)(t3, 0), totalTimecode: Object(w.d)(t3, n3), currentTime: 0, totalTime: n3, displayStartTime: 0, displayEndTime: n3 };
            } }, { key: "setTimelineCurrentTime", value: function(t3) {
              var e3 = this.getSelectedTimeline(), n3 = e3.fps, r2 = e3.totalTimecode;
              if (e3) {
                var i2 = t3, a2 = t3;
                +i2 + "" === i2 && (i2 = +i2, a2 = Object(w.a)(n3, i2)), a2 > r2 && (a2 = r2);
                var o2 = Object(w.c)(n3, a2);
                e3.currentTime = o2, e3.currentTimecode = Object(w.d)(n3, o2);
              }
            } }, { key: "setDisplayTimeDxRate", value: function(t3, e3, n3) {
              var r2 = this.getSelectedTimeline();
              if (r2) {
                var i2 = t3 * r2.totalTime, a2 = e3 + i2, o2 = n3 + i2;
                a2 = Math.max(a2, 0), (a2 = Math.min(a2, o2)) === 0 && (o2 = n3 - e3), o2 = Math.max(o2, a2), (o2 = Math.min(o2, r2.totalTime)) === r2.totalTime && (a2 = r2.totalTime - (n3 - e3)), r2.displayStartTime = a2, r2.displayEndTime = o2;
              }
            } }, { key: "setDisplayStartTimeRate", value: function(t3) {
              var e3 = this.getSelectedTimeline();
              e3 && (e3.displayStartTime = t3 * e3.totalTime);
            } }, { key: "setDisplayEndTimeRate", value: function(t3) {
              var e3 = this.getSelectedTimeline();
              e3 && (e3.displayEndTime = t3 * e3.totalTime);
            } }, { key: "setTimelineCurrentTimeRate", value: function(t3) {
              var e3 = this.getSelectedTimeline();
              if (e3) {
                var n3 = e3.displayStartTime, r2 = e3.displayEndTime, i2 = e3.fps, a2 = n3 + (r2 - n3) * t3;
                this.setTimelineCurrentTime(Object(w.d)(i2, a2));
              }
            } }, { key: "setTimelineTotalTime", value: function(t3) {
              var e3 = this.getSelectedTimeline();
              if (e3) {
                var n3 = t3, r2 = t3;
                +n3 + "" === n3 && (n3 = +n3, r2 = Object(w.a)(e3.fps, n3)), Object(w.c)(e3.fps, r2) < e3.displayEndTime && (e3.displayEndTime = Object(w.c)(e3.fps, r2), e3.displayStartTime = 0), e3.totalTimecode = r2, e3.totalTime = Object(w.c)(e3.fps, r2);
              }
            } }, { key: "getTimelineObject", value: function(t3) {
              var e3 = this.getSelectedTimeline();
              if (e3)
                return e3.animations.find(function(e4) {
                  return e4.id === t3;
                });
            } }, { key: "addTimelineProperty", value: function(t3, e3) {
              this.addTimelineLayer(t3);
              var n3 = this.getTimelineObject(t3);
              n3 && (n3.properties.filter(function(t4) {
                return t4.property === e3;
              }).length || (n3.properties.push({ property: e3, keyframes: [] }), this.compiledTimingFunction(t3, e3)));
            } }, { key: "getTimelineProperty", value: function(t3, e3) {
              var n3 = this.getSelectedTimeline();
              if (n3) {
                t3 = t3 || n3.selectedLayerId, e3 = e3 || n3.selectedProperty;
                var r2 = this.getTimelineObject(t3);
                if (r2)
                  return r2.properties.find(function(t4) {
                    return t4.property === e3;
                  });
              }
            } }, { key: "setSelectedOffset", value: function(t3, e3, n3) {
              var r2 = this.getSelectedTimeline();
              r2 && (r2.selectedLayerId = t3, r2.selectedProperty = e3, r2.selectedOffsetTime = n3, this.getTimelineProperty().keyframes.forEach(function(t4) {
                t4.selected = t4.time === n3;
              }));
            } }, { key: "deleteTimelineKeyframe", value: function(t3, e3, n3) {
              var r2 = this.getTimelineProperty(t3, e3);
              r2 && (r2.keyframes = r2.keyframes.filter(function(t4) {
                return t4.id != n3;
              }));
            } }, { key: "removeTimelineProperty", value: function(t3, e3) {
              var n3 = this.getTimelineObject(t3);
              n3 && (n3.properties = n3.properties.filter(function(t4) {
                return t4.property != e3;
              }));
            } }, { key: "removeTimeline", value: function(t3) {
              var e3 = this.getSelectedTimeline();
              e3 && (e3.animations = e3.animations.filter(function(e4) {
                return e4.id != t3;
              }));
            } }, { key: "setTimelineKeyframeOffsetTime", value: function(t3, e3, n3, r2) {
              var i2 = this.getTimelineKeyframeById(t3, e3, n3);
              i2 && (i2.time = r2, this.compiledTimingFunction(t3, e3));
            } }, { key: "setTimelineKeyframeOffsetValue", value: function(t3, e3, n3) {
              var r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : void 0, i2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : void 0, a2 = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : void 0, o2 = this.getTimelineKeyframeById(t3, e3, n3);
              o2 && (Object(P.isNotUndefined)(a2) && (o2.time = a2), Object(P.isNotUndefined)(r2) && (o2.value = r2), Object(P.isNotUndefined)(i2) && (o2.timing = i2), this.compiledTimingFunction(t3, e3));
            } }, { key: "addTimelineKeyframe", value: function(t3) {
              var e3 = t3.layerId, n3 = t3.property, r2 = t3.value, i2 = t3.timing, a2 = t3.time, o2 = t3.editor;
              this.addTimelineProperty(e3, n3);
              var c2 = this.getSelectedTimeline(), s2 = this.getTimelineProperty(e3, n3);
              if (s2) {
                var u2 = a2 || c2.currentTime;
                if (!s2.keyframes.filter(function(t4) {
                  return t4.time === u2;
                }).length) {
                  r2 = Object(P.isUndefined)(r2) || r2 === "" ? this.getDefaultPropertyValue(n3) : r2;
                  var l2 = { id: Object(j.uuidShort)(), layerId: e3, property: n3, time: u2, value: r2, timing: i2 || "linear", editor: o2 };
                  return s2.keyframes.push(l2), s2.keyframes.sort(function(t4, e4) {
                    return t4.time > e4.time ? 1 : -1;
                  }), this.compiledTimingFunction(e3, n3), l2;
                }
              }
            } }, { key: "getDefaultPropertyValue", value: function(t3) {
              switch (t3) {
                case "mix-blend-mode":
                  return "normal";
                case "rotate":
                  return "0deg";
                case "box-shadow":
                  return "0px 0px 0px 0px rgba(0, 0, 0, 1)";
                case "text-shadow":
                  return "0px 0px 0px rgba(0, 0, 0, 1)";
                case "opacity":
                  return 1;
                default:
                  return "";
              }
            } }, { key: "copyTimelineKeyframe", value: function(t3, e3) {
              var n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, r2 = this.getTimelineProperty(t3, e3);
              if (r2) {
                var i2 = this.getSelectedTimeline(), a2 = n3 || i2.currentTime, o2 = r2.keyframes.filter(function(t4) {
                  return t4.time < a2;
                }), c2 = this.getDefaultPropertyValue(e3), s2 = "linear", u2 = "";
                o2.length && (o2.sort(function(t4, e4) {
                  return t4.time > e4.time ? -1 : 1;
                }), c2 = o2[0].value + "", s2 = o2[0].timing + "", u2 = o2[0].editor), this.addTimelineKeyframe({ layerId: t3, property: e3, value: c2, timing: s2, editor: u2 });
              }
            } }, { key: "getTimelineKeyframe", value: function(t3, e3, n3) {
              var r2 = this.getTimelineProperty(t3, e3);
              if (r2)
                return r2.keyframes.find(function(t4) {
                  return t4.time === n3;
                });
            } }, { key: "getTimelineKeyframeById", value: function(t3, e3, n3) {
              var r2 = this.getTimelineProperty(t3, e3);
              if (r2)
                return r2.keyframes.find(function(t4) {
                  return t4.id === n3;
                });
            } }, { key: "sortTimelineKeyframe", value: function(t3, e3) {
              var n3 = this.getTimelineProperty(t3, e3);
              n3 && (n3.keyframes.sort(function(t4, e4) {
                return t4.time > e4.time ? 1 : -1;
              }), this.compiledTimingFunction(t3, e3));
            } }, { key: "setFps", value: function(t3) {
              var e3 = this.getSelectedTimeline();
              e3 && (e3.fps = t3, e3.currentTimecode = Object(w.d)(t3, e3.currentTime), e3.totalTimecode = Object(w.d)(t3, e3.totalTime));
            } }, { key: "toCloneObject", value: function() {
              return ee(ee({}, h()(b()(n2.prototype), "toCloneObject", this).call(this)), {}, { timeline: Object(P.clone)(this.json.timeline) });
            } }]), n2;
          }(function(t2) {
            d()(n2, t2);
            var e2 = Qt(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return h()(b()(n2.prototype), "getDefaultObject", this).call(this, Jt({ comments: [], colors: [], gradients: [], svgfilters: [], svgimages: [], keyframes: [], images: [], imageKeys: [], videos: [], videoKeys: [], audios: [] }, t3));
            } }, { key: "addKeyframe", value: function(t3) {
              return this.json.keyframes.push(t3), t3;
            } }, { key: "createKeyframe", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return this.addKeyframe(new Zt.a(Jt({ checked: true }, t3)));
            } }, { key: "removeKeyframe", value: function(t3) {
              this.removePropertyList(this.json.keyframes, t3);
            } }, { key: "sortItem", value: function(t3, e3, n3) {
              t3.splice.apply(t3, [n3 + (e3 < n3 ? -1 : 0), 0].concat(C()(t3.splice(e3, 1))));
            } }, { key: "sortKeyframe", value: function(t3, e3) {
              this.sortItem(this.json.keyframes, t3, e3);
            } }, { key: "updateKeyframe", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              this.json.keyframes[+t3].reset(e3);
            } }, { key: "toKeyframeString", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 && arguments[0];
              return this.json.keyframes.map(function(e3) {
                return e3.toString(t3);
              }).join("\n\n");
            } }, { key: "copyPropertyList", value: function(t3, e3) {
              var n3 = Jt({}, t3[e3]);
              t3.splice(e3, 0, n3);
            } }, { key: "toCloneObject", value: function() {
              this.json;
              return Jt(Jt({}, h()(b()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("colors", "gradients", "svgfilters", "svgimages", "images", "keyframes"));
            } }, { key: "removePropertyList", value: function(t3, e3) {
              t3.splice(e3, 1);
            } }, { key: "removeColor", value: function(t3) {
              this.removePropertyList(this.json.colors, t3);
            } }, { key: "copyColor", value: function(t3) {
              this.copyPropertyList(this.json.colors, t3);
            } }, { key: "sortColor", value: function(t3, e3) {
              this.sortItem(this.json.colors, t3, e3);
            } }, { key: "setColorValue", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              this.json.colors[t3] = Jt(Jt({}, this.json.colors[t3]), e3);
            } }, { key: "getColorIndex", value: function(t3) {
              return this.json.colors[t3];
            } }, { key: "getColor", value: function(t3) {
              return this.json.colors.filter(function(e3) {
                return e3.name === t3;
              })[0];
            } }, { key: "addColor", value: function(t3) {
              return this.json.colors.push(t3), t3;
            } }, { key: "createColor", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return this.addColor(t3);
            } }, { key: "removeImage", value: function(t3) {
              this.removePropertyList(this.json.images, t3), this.refreshImageKeys();
            } }, { key: "copyImage", value: function(t3) {
              this.copyPropertyList(this.json.images, t3), this.refreshImageKeys();
            } }, { key: "sortImage", value: function(t3, e3) {
              this.sortItem(this.json.images, t3, e3);
            } }, { key: "setImageValue", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              this.json.images[t3] = Jt(Jt({}, this.json.images[t3]), e3), this.refreshImageKeys();
            } }, { key: "getImageValueById", value: function(t3) {
              var e3 = this.json.imageKeys[t3];
              if (e3)
                return e3.local;
            } }, { key: "refreshImageKeys", value: function() {
              var t3 = {};
              this.json.images.forEach(function(e3) {
                t3[e3.id] = e3;
              }), this.reset({ imageKeys: t3 });
            } }, { key: "addImage", value: function(t3) {
              return this.json.images.push(t3), this.refreshImageKeys(), t3;
            } }, { key: "createImage", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return this.addImage(t3);
            } }, { key: "removeVideo", value: function(t3) {
              this.removePropertyList(this.json.videos, t3), this.refreshVideoKeys();
            } }, { key: "copyVideo", value: function(t3) {
              this.copyPropertyList(this.json.videos, t3), this.refreshVideoKeys();
            } }, { key: "sortVideo", value: function(t3, e3) {
              this.sortItem(this.json.videos, t3, e3);
            } }, { key: "setVideoValue", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              this.json.videos[t3] = Jt(Jt({}, this.json.videos[t3]), e3);
            } }, { key: "getVideoValueById", value: function(t3) {
              var e3 = this.json.videoKeys[t3];
              if (e3)
                return e3.local;
            } }, { key: "refreshVideoKeys", value: function() {
              var t3 = {};
              this.json.videos.forEach(function(e3) {
                t3[e3.id] = e3;
              }), this.reset({ videoKeys: t3 });
            } }, { key: "addVideo", value: function(t3) {
              return this.json.videos.push(t3), this.refreshVideoKeys(), t3;
            } }, { key: "createVideo", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return this.addVideo(t3);
            } }, { key: "removeGradient", value: function(t3) {
              this.removePropertyList(this.json.gradients, t3);
            } }, { key: "copyGradient", value: function(t3) {
              this.copyPropertyList(this.json.gradients, t3);
            } }, { key: "sortGradient", value: function(t3, e3) {
              this.sortItem(this.json.gradients, t3, e3);
            } }, { key: "setGradientValue", value: function(t3, e3) {
              this.json.gradients[t3] = Jt(Jt({}, this.json.gradients[t3]), e3);
            } }, { key: "getGradientIndex", value: function(t3) {
              return this.json.gradients[t3];
            } }, { key: "getGradient", value: function(t3) {
              return this.json.gradients.filter(function(e3) {
                return e3.name === t3;
              })[0];
            } }, { key: "addGradient", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return this.json.gradients.push(t3), t3;
            } }, { key: "createGradient", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return this.addGradient(t3);
            } }, { key: "getSVGFilterIndex", value: function(t3) {
              var e3, n3 = this.json.svgfilters.map(function(t4, e4) {
                return { id: t4.id, index: e4 };
              }).filter(function(e4) {
                return e4.id === t3;
              });
              return n3.length ? n3 == null || (e3 = n3[0]) === null || e3 === void 0 ? void 0 : e3.index : -1;
            } }, { key: "removeSVGFilter", value: function(t3) {
              this.removePropertyList(this.json.svgfilters, t3);
            } }, { key: "copySVGFilter", value: function(t3) {
              this.copyPropertyList(this.json.svgfilters, t3);
            } }, { key: "sortSVGFilter", value: function(t3, e3) {
              this.sortItem(this.json.svgfilters, t3, e3);
            } }, { key: "setSVGFilterValue", value: function(t3, e3) {
              this.json.svgfilters[t3] = Jt(Jt({}, this.json.svgfilters[t3]), e3);
            } }, { key: "addSVGFilter", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.json.svgfilters.push(t3);
              var e3 = this.json.svgfilters.length - 1;
              return e3;
            } }, { key: "createSVGFilter", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return this.addSVGFilter(t3);
            } }, { key: "getSVGImageIndex", value: function(t3) {
              var e3 = this.json.svgimages.map(function(t4, e4) {
                return { id: t4.id, index: e4 };
              }).filter(function(e4) {
                return e4.id === t3;
              })[0];
              return e3 ? e3.index : -1;
            } }, { key: "removeSVGImage", value: function(t3) {
              this.removePropertyList(this.json.svgimages, t3);
            } }, { key: "copySVGImage", value: function(t3) {
              this.copyPropertyList(this.json.svgimages, t3);
            } }, { key: "sortSVGImage", value: function(t3, e3) {
              this.sortItem(this.json.svgimages, t3, e3);
            } }, { key: "setSVGImageValue", value: function(t3, e3) {
              this.json.svgimages[t3] = Jt(Jt({}, this.json.svgimages[t3]), e3);
            } }, { key: "addSVGImage", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.json.svgimages.push(t3);
              var e3 = this.json.svgimages.length - 1;
              return e3;
            } }, { key: "createSVGImage", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return this.addSVGImage(t3);
            } }]), n2;
          }(Wt.a));
          function ie(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function ae(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? ie(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : ie(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function oe(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = b()(t2);
              if (e2) {
                var i2 = b()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return g()(this, n2);
            };
          }
          var ce = O.a.z(), se = O.a.z(), ue = k.a.create(), le = function(t2) {
            d()(n2, t2);
            var e2 = oe(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "createIndexItemMap", value: function() {
              return this.indexedMap || (this.indexedMap = new Map()), this.indexedMap;
            } }, { key: "indexed", get: function() {
              return this.createIndexItemMap(), this.indexedMap;
            } }, { key: "removeIndexItem", value: function(t3) {
              this.indexed.delete(t3.id);
            } }, { key: "getIndexItem", value: function(t3) {
              return this.indexed.get(t3);
            } }, { key: "getSearchedIndexItem", value: function(t3) {
              return this.hasIndexItem(t3) ? this.getIndexItem(t3) : this.searchById(t3);
            } }, { key: "getSearchedIndexItemList", value: function() {
              for (var t3 = arguments.length, e3 = new Array(t3), n3 = 0; n3 < t3; n3++)
                e3[n3] = arguments[n3];
              return e3.map(function(t4) {
                return project.getSearchedIndexItem(t4);
              });
            } }, { key: "addIndexItem", value: function(t3) {
              this.hasIndexItem(t3.id) === false && this.indexed.set(t3.id, t3.ref);
            } }, { key: "hasIndexItem", value: function(t3) {
              return this.indexed.has(t3);
            } }, { key: "getDefaultTitle", value: function() {
              return "New Project";
            } }, { key: "isAbsolute", get: function() {
              return false;
            } }, { key: "parent", get: function() {
              return null;
            } }, { key: "toRootVariableCSS", value: function() {
              var t3 = {};
              return this.json.rootVariable.split(";").filter(function(t4) {
                return t4.trim();
              }).forEach(function(e3) {
                var n3 = e3.split(":"), r2 = o()(n3, 2), i2 = r2[0], a2 = r2[1];
                t3["--".concat(i2)] = a2;
              }), t3;
            } }, { key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return h()(b()(n2.prototype), "getDefaultObject", this).call(this, ae({ itemType: "project", name: "new Project", description: "", rootVariable: "" }, t3));
            } }, { key: "toCloneObject", value: function() {
              return ae(ae({}, h()(b()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("name", "description", "rootVariable"));
            } }, { key: "artboards", get: function() {
              return (this.json.layers || []).filter(function(t3) {
                return t3.is("artboard");
              });
            } }, { key: "offsetX", get: function() {
              return ce;
            } }, { key: "offsetY", get: function() {
              return se;
            } }, { key: "hasLayout", value: function() {
              return false;
            } }, { key: "getTransformMatrix", value: function() {
              return k.a.create();
            } }, { key: "resetMatrix", value: function(t3) {
              var e3 = k.a.getTranslation([], Object(j.calculateMatrix)(t3.accumulatedMatrix, t3.localMatrixInverse)), n3 = o()(e3, 2), r2 = n3[0], i2 = n3[1];
              t3.reset({ x: O.a.px(r2), y: O.a.px(i2) });
            } }, { key: "rectVerties", get: function() {
              var t3;
              return (t3 = this.layers) !== null && t3 !== void 0 && t3.length ? Object(S.b)(this.layers) : null;
            } }, { key: "accumulatedMatrix", get: function() {
              return ue;
            } }, { key: "accumulatedMatrixInverse", get: function() {
              return ue;
            } }, { key: "contentBox", get: function() {
              return { left: 0, top: 0, width: 0, height: 0 };
            } }]), n2;
          }(re);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return x2;
          });
          var r = n(7), i = n.n(r), a = n(3), o = n.n(a), c = n(4), s = n.n(c), u = n(10), l = n.n(u), f = n(5), h = n.n(f), p = n(6), d = n.n(p), v = n(1), y2 = n.n(v), g = n(65);
          function m(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function b(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? m(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : m(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function k(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = y2()(t2);
              if (e2) {
                var i2 = y2()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return d()(this, n2);
            };
          }
          var O = ["jpg", "jpeg", "png", "gif", "svg"];
          var x2 = function(t2) {
            h()(n2, t2);
            var e2 = k(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return l()(y2()(n2.prototype), "getDefaultObject", this).call(this, b({ type: "url", url: "", datauri: "" }, t3));
            } }, { key: "toCloneObject", value: function() {
              return b(b({}, l()(y2()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("url", "datauri"));
            } }, { key: "isUrl", value: function() {
              return true;
            } }, { key: "toString", value: function() {
              var t3 = this.json;
              return "url(".concat(t3.url, ")");
            } }], [{ key: "parse", value: function(t3) {
              return new n2({ url: t3.split("(")[1].split(")")[0] });
            } }, { key: "isImageFile", value: function(t3) {
              return O.includes(t3);
            } }]), n2;
          }(g.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return g;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(10), s = n.n(c), u = n(5), l = n.n(u), f = n(6), h = n.n(f), p = n(1), d = n.n(p), v = n(46);
          function y2(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var g = function(t2) {
            l()(n2, t2);
            var e2 = y2(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return s()(d()(n2.prototype), "getDefaultObject", this).call(this, { type: "repeating-linear-gradient", angle: 0 });
            } }], [{ key: "parse", value: function(t3) {
              var e3 = v.a.parse(t3);
              return new n2({ angle: e3.angle, colorsteps: e3.colorsteps });
            } }]), n2;
          }(v.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return g;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(10), s = n.n(c), u = n(5), l = n.n(u), f = n(6), h = n.n(f), p = n(1), d = n.n(p), v = n(51);
          function y2(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var g = function(t2) {
            l()(n2, t2);
            var e2 = y2(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return s()(d()(n2.prototype), "getDefaultObject", this).call(this, { type: "repeating-radial-gradient" });
            } }], [{ key: "parse", value: function(t3) {
              var e3 = v.a.parse(t3);
              return new n2({ radialType: e3.radialType, radialPosition: e3.radialPosition, colorsteps: e3.colorsteps });
            } }]), n2;
          }(v.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return m;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(10), s = n.n(c), u = n(5), l = n.n(u), f = n(6), h = n.n(f), p = n(1), d = n.n(p), v = n(2), y2 = n(52);
          function g(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var m = function(t2) {
            l()(n2, t2);
            var e2 = g(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return s()(d()(n2.prototype), "getDefaultObject", this).call(this, { type: "repeating-conic-gradient", angle: 0, radialPosition: [v.b.CENTER, v.b.CENTER] });
            } }], [{ key: "parse", value: function(t3) {
              var e3 = y2.a.parse(t3);
              return new n2({ angle: e3.angle, radialPosition: e3.radialPosition, colorsteps: e3.colorsteps });
            } }]), n2;
          }(y2.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return k;
          });
          var r = n(12), i = n.n(r), a = n(3), o = n.n(a), c = n(4), s = n.n(c), u = n(5), l = n.n(u), f = n(6), h = n.n(f), p = n(1), d = n.n(p), v = n(29), y2 = n(35), g = n(8);
          function m(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var b = /[\b\t \,]/g, k = function(t2) {
            l()(n2, t2);
            var e2 = m(n2);
            function n2() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
              return o()(this, n2), e2.call(this, t3);
            }
            return s()(n2, [{ key: "reset", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
              this.segments = [], this.points = t3, this.parse();
            } }, { key: "resetSegments", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
              this.segments = t3, this.points = this.joinPoints();
            } }, { key: "parse", value: function() {
              var t3 = this.points;
              Object(g.isArray)(t3) && (t3 = t3.join(" "));
              for (var e3 = t3.trim().split(b).filter(function(t4) {
                return t4;
              }), n3 = [], r2 = 0, i2 = e3.length; r2 < i2; r2 += 2)
                n3.push({ x: +e3[r2], y: +e3[r2 + 1] });
              this.segments = n3;
            } }, { key: "convertGenerator", value: function() {
              return this.segments;
            } }, { key: "length", value: function() {
              return this.segments.length;
            } }, { key: "toPathString", value: function() {
              for (var t3 = new y2.a(), e3 = 0, n3 = this.segments.length; e3 < n3; e3++) {
                var r2 = this.segments[e3];
                e3 === 0 ? t3.M(r2) : e3 === n3 - 1 ? t3.L(r2).L(this.segments[0]).Z() : t3.L(r2);
              }
              return t3.d;
            } }, { key: "joinPath", value: function(t3) {
              return this.joinPoints(t3);
            } }, { key: "joinPoints", value: function(t3) {
              return (t3 || this.segments).map(function(t4) {
                return "".concat(t4.x, ",").concat(t4.y);
              }).join(" ");
            } }, { key: "each", value: function(t3) {
              var e3 = this, n3 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1], r2 = this.segments.map(function(n4) {
                return t3.call(e3, n4);
              });
              if (n3)
                return r2;
              this.segments = r2;
            } }, { key: "_loop", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
              return this.each(function(e4) {
                var n3 = t3([e4.x, e4.y], 0), r2 = i()(n3, 2), a2 = r2[0], o2 = r2[1];
                return e4.x = a2, e4.y = o2, e4;
              }, e3);
            } }, { key: "clone", value: function() {
              return new n2(this.joinPoints());
            } }, { key: "toString", value: function() {
              return this.joinPoints();
            } }]), n2;
          }(v.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return m;
          });
          var r = n(7), i = n.n(r), a = n(3), o = n.n(a), c = n(4), s = n.n(c), u = n(5), l = n.n(u), f = n(6), h = n.n(f), p = n(1), d = n.n(p);
          function v(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function y2(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? v(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : v(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function g(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var m = function(t2) {
            l()(n2, t2);
            var e2 = g(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return y2({ itemType: "image-resource", type: "image" }, t3);
            } }, { key: "isGradient", value: function() {
              return false;
            } }, { key: "isLinear", value: function() {
              return false;
            } }, { key: "isRadial", value: function() {
              return false;
            } }, { key: "isConic", value: function() {
              return false;
            } }, { key: "isStatic", value: function() {
              return false;
            } }, { key: "isImage", value: function() {
              return false;
            } }, { key: "hasAngle", value: function() {
              return false;
            } }, { key: "isUrl", value: function() {
              return false;
            } }, { key: "isFile", value: function() {
              return false;
            } }, { key: "isAttribute", value: function() {
              return true;
            } }, { key: "toString", value: function() {
              return "none";
            } }]), n2;
          }(n(30).a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return d;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f);
          function p(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var d = function(t2) {
            s()(n2, t2);
            var e2 = p(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "toString", value: function() {
              return "";
            } }, { key: "toSVGString", value: function(t3) {
              return "";
            } }, { key: "toFillValue", value: function(t3) {
              return "";
            } }]), n2;
          }(n(37).a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return S;
          });
          var r = n(15), i = n.n(r), a = n(7), o = n.n(a), c = n(3), s = n.n(c), u = n(4), l = n.n(u), f = n(10), h = n.n(f), p = n(5), d = n.n(p), v = n(6), y2 = n.n(v), g = n(1), m = n.n(g), b = n(45), k = n(11);
          function O(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function x2(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? O(Object(n2), true).forEach(function(e3) {
                o()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : O(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function j(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = m()(t2);
              if (e2) {
                var i2 = m()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return y2()(this, n2);
            };
          }
          var S = function(t2) {
            d()(n2, t2);
            var e2 = j(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "is", value: function() {
              for (var t3, e3 = arguments.length, r2 = new Array(e3), i2 = 0; i2 < e3; i2++)
                r2[i2] = arguments[i2];
              return !!r2.includes("component") || (t3 = h()(m()(n2.prototype), "is", this)).call.apply(t3, [this].concat(r2));
            } }, { key: "getProps", value: function() {
              return [];
            } }], [{ key: "createComponent", value: function(t3) {
              var e3 = t3.iconString, r2 = t3.title, a2 = r2 === void 0 ? "Unknown Title" : r2, o2 = t3.attrs, c2 = o2 === void 0 ? {} : o2, u2 = t3.enableHasChildren, f2 = u2 !== void 0 && u2;
              return function(t4) {
                d()(r3, t4);
                var n3 = j(r3);
                function r3() {
                  return s()(this, r3), n3.apply(this, arguments);
                }
                return l()(r3, [{ key: "getIcon", value: function() {
                  return e3 || k.a.add;
                } }, { key: "getDefaultObject", value: function() {
                  return h()(m()(r3.prototype), "getDefaultObject", this).call(this, x2({ itemType: "NewComponent", name: "New Component" }, c2));
                } }, { key: "toCloneObject", value: function() {
                  return x2(x2({}, h()(m()(r3.prototype), "toCloneObject", this).call(this)), this.attrs.apply(this, i()(Object.keys(c2))));
                } }, { key: "enableHasChildren", value: function() {
                  return f2 || false;
                } }, { key: "getDefaultTitle", value: function() {
                  return a2;
                } }]), r3;
              }(n2);
            } }]), n2;
          }(b.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return Ot;
          });
          var r = function() {
            function t2(t3) {
              var e3 = this;
              this._insertTag = function(t4) {
                var n2;
                n2 = e3.tags.length === 0 ? e3.prepend ? e3.container.firstChild : e3.before : e3.tags[e3.tags.length - 1].nextSibling, e3.container.insertBefore(t4, n2), e3.tags.push(t4);
              }, this.isSpeedy = t3.speedy === void 0 || t3.speedy, this.tags = [], this.ctr = 0, this.nonce = t3.nonce, this.key = t3.key, this.container = t3.container, this.prepend = t3.prepend, this.before = null;
            }
            var e2 = t2.prototype;
            return e2.hydrate = function(t3) {
              t3.forEach(this._insertTag);
            }, e2.insert = function(t3) {
              this.ctr % (this.isSpeedy ? 65e3 : 1) == 0 && this._insertTag(function(t4) {
                var e4 = document.createElement("style");
                return e4.setAttribute("data-emotion", t4.key), t4.nonce !== void 0 && e4.setAttribute("nonce", t4.nonce), e4.appendChild(document.createTextNode("")), e4.setAttribute("data-s", ""), e4;
              }(this));
              var e3 = this.tags[this.tags.length - 1];
              if (this.isSpeedy) {
                var n2 = function(t4) {
                  if (t4.sheet)
                    return t4.sheet;
                  for (var e4 = 0; e4 < document.styleSheets.length; e4++)
                    if (document.styleSheets[e4].ownerNode === t4)
                      return document.styleSheets[e4];
                }(e3);
                try {
                  n2.insertRule(t3, n2.cssRules.length);
                } catch (t4) {
                  0;
                }
              } else
                e3.appendChild(document.createTextNode(t3));
              this.ctr++;
            }, e2.flush = function() {
              this.tags.forEach(function(t3) {
                return t3.parentNode.removeChild(t3);
              }), this.tags = [], this.ctr = 0;
            }, t2;
          }(), i = "-ms-", a = "-moz-", o = "-webkit-", c = "comm", s = "rule", u = "decl", l = Math.abs, f = String.fromCharCode;
          function h(t2) {
            return t2.trim();
          }
          function p(t2, e2, n2) {
            return t2.replace(e2, n2);
          }
          function d(t2, e2) {
            return t2.indexOf(e2);
          }
          function v(t2, e2) {
            return 0 | t2.charCodeAt(e2);
          }
          function y2(t2, e2, n2) {
            return t2.slice(e2, n2);
          }
          function g(t2) {
            return t2.length;
          }
          function m(t2) {
            return t2.length;
          }
          function b(t2, e2) {
            return e2.push(t2), t2;
          }
          function k(t2, e2) {
            return t2.map(e2).join("");
          }
          var O = 1, x2 = 1, j = 0, S = 0, P = 0, w = "";
          function R(t2, e2, n2, r2, i2, a2, o2) {
            return { value: t2, root: e2, parent: n2, type: r2, props: i2, children: a2, line: O, column: x2, length: o2, return: "" };
          }
          function C(t2, e2, n2) {
            return R(t2, e2.root, e2.parent, n2, e2.props, e2.children, 0);
          }
          function E() {
            return P = S > 0 ? v(w, --S) : 0, x2--, P === 10 && (x2 = 1, O--), P;
          }
          function $() {
            return P = S < j ? v(w, S++) : 0, x2++, P === 10 && (x2 = 1, O++), P;
          }
          function I() {
            return v(w, S);
          }
          function T() {
            return S;
          }
          function B(t2, e2) {
            return y2(w, t2, e2);
          }
          function M(t2) {
            switch (t2) {
              case 0:
              case 9:
              case 10:
              case 13:
              case 32:
                return 5;
              case 33:
              case 43:
              case 44:
              case 47:
              case 62:
              case 64:
              case 126:
              case 59:
              case 123:
              case 125:
                return 4;
              case 58:
                return 3;
              case 34:
              case 39:
              case 40:
              case 91:
                return 2;
              case 41:
              case 93:
                return 1;
            }
            return 0;
          }
          function V(t2) {
            return O = x2 = 1, j = g(w = t2), S = 0, [];
          }
          function D(t2) {
            return w = "", t2;
          }
          function L(t2) {
            return h(B(S - 1, function t3(e2) {
              for (; $(); )
                switch (P) {
                  case e2:
                    return S;
                  case 34:
                  case 39:
                    return t3(e2 === 34 || e2 === 39 ? e2 : P);
                  case 40:
                    e2 === 41 && t3(e2);
                    break;
                  case 92:
                    $();
                }
              return S;
            }(t2 === 91 ? t2 + 2 : t2 === 40 ? t2 + 1 : t2)));
          }
          function A(t2) {
            for (; (P = I()) && P < 33; )
              $();
            return M(t2) > 2 || M(P) > 3 ? "" : " ";
          }
          function F(t2, e2) {
            for (; --e2 && $() && !(P < 48 || P > 102 || P > 57 && P < 65 || P > 70 && P < 97); )
              ;
            return B(t2, T() + (e2 < 6 && I() == 32 && $() == 32));
          }
          function z(t2, e2) {
            for (; $() && t2 + P !== 57 && (t2 + P !== 84 || I() !== 47); )
              ;
            return "/*" + B(e2, S - 1) + "*" + f(t2 === 47 ? t2 : $());
          }
          function N(t2) {
            for (; !M(I()); )
              $();
            return B(t2, S);
          }
          function _(t2) {
            return D(function t3(e2, n2, r2, i2, a2, o2, c2, s2, u2) {
              var l2 = 0, h2 = 0, d2 = c2, v2 = 0, y3 = 0, m2 = 0, k2 = 1, O2 = 1, x3 = 1, j2 = 0, S2 = "", P2 = a2, w2 = o2, R2 = i2, C2 = S2;
              for (; O2; )
                switch (m2 = j2, j2 = $()) {
                  case 34:
                  case 39:
                  case 91:
                  case 40:
                    C2 += L(j2);
                    break;
                  case 9:
                  case 10:
                  case 13:
                  case 32:
                    C2 += A(m2);
                    break;
                  case 92:
                    C2 += F(T() - 1, 7);
                    continue;
                  case 47:
                    switch (I()) {
                      case 42:
                      case 47:
                        b(G(z($(), T()), n2, r2), u2);
                        break;
                      default:
                        C2 += "/";
                    }
                    break;
                  case 123 * k2:
                    s2[l2++] = g(C2) * x3;
                  case 125 * k2:
                  case 59:
                  case 0:
                    switch (j2) {
                      case 0:
                      case 125:
                        O2 = 0;
                      case 59 + h2:
                        y3 > 0 && g(C2) - d2 && b(y3 > 32 ? H(C2 + ";", i2, r2, d2 - 1) : H(p(C2, " ", "") + ";", i2, r2, d2 - 2), u2);
                        break;
                      case 59:
                        C2 += ";";
                      default:
                        if (b(R2 = U(C2, n2, r2, l2, h2, a2, s2, S2, P2 = [], w2 = [], d2), o2), j2 === 123)
                          if (h2 === 0)
                            t3(C2, n2, R2, R2, P2, o2, d2, s2, w2);
                          else
                            switch (v2) {
                              case 100:
                              case 109:
                              case 115:
                                t3(e2, R2, R2, i2 && b(U(e2, R2, R2, 0, 0, a2, s2, S2, a2, P2 = [], d2), w2), a2, w2, d2, s2, i2 ? P2 : w2);
                                break;
                              default:
                                t3(C2, R2, R2, R2, [""], w2, d2, s2, w2);
                            }
                    }
                    l2 = h2 = y3 = 0, k2 = x3 = 1, S2 = C2 = "", d2 = c2;
                    break;
                  case 58:
                    d2 = 1 + g(C2), y3 = m2;
                  default:
                    if (k2 < 1) {
                      if (j2 == 123)
                        --k2;
                      else if (j2 == 125 && k2++ == 0 && E() == 125)
                        continue;
                    }
                    switch (C2 += f(j2), j2 * k2) {
                      case 38:
                        x3 = h2 > 0 ? 1 : (C2 += "\f", -1);
                        break;
                      case 44:
                        s2[l2++] = (g(C2) - 1) * x3, x3 = 1;
                        break;
                      case 64:
                        I() === 45 && (C2 += L($())), v2 = I(), h2 = g(S2 = C2 += N(T())), j2++;
                        break;
                      case 45:
                        m2 === 45 && g(C2) == 2 && (k2 = 0);
                    }
                }
              return o2;
            }("", null, null, null, [""], t2 = V(t2), 0, [0], t2));
          }
          function U(t2, e2, n2, r2, i2, a2, o2, c2, u2, f2, d2) {
            for (var v2 = i2 - 1, g2 = i2 === 0 ? a2 : [""], b2 = m(g2), k2 = 0, O2 = 0, x3 = 0; k2 < r2; ++k2)
              for (var j2 = 0, S2 = y2(t2, v2 + 1, v2 = l(O2 = o2[k2])), P2 = t2; j2 < b2; ++j2)
                (P2 = h(O2 > 0 ? g2[j2] + " " + S2 : p(S2, /&\f/g, g2[j2]))) && (u2[x3++] = P2);
            return R(t2, e2, n2, i2 === 0 ? s : c2, u2, f2, d2);
          }
          function G(t2, e2, n2) {
            return R(t2, e2, n2, c, f(P), y2(t2, 2, -2), 0);
          }
          function H(t2, e2, n2, r2) {
            return R(t2, e2, n2, u, y2(t2, 0, r2), y2(t2, r2 + 1, -1), r2);
          }
          function K(t2, e2) {
            switch (function(t3, e3) {
              return (((e3 << 2 ^ v(t3, 0)) << 2 ^ v(t3, 1)) << 2 ^ v(t3, 2)) << 2 ^ v(t3, 3);
            }(t2, e2)) {
              case 5103:
                return o + "print-" + t2 + t2;
              case 5737:
              case 4201:
              case 3177:
              case 3433:
              case 1641:
              case 4457:
              case 2921:
              case 5572:
              case 6356:
              case 5844:
              case 3191:
              case 6645:
              case 3005:
              case 6391:
              case 5879:
              case 5623:
              case 6135:
              case 4599:
              case 4855:
              case 4215:
              case 6389:
              case 5109:
              case 5365:
              case 5621:
              case 3829:
                return o + t2 + t2;
              case 5349:
              case 4246:
              case 4810:
              case 6968:
              case 2756:
                return o + t2 + a + t2 + i + t2 + t2;
              case 6828:
              case 4268:
                return o + t2 + i + t2 + t2;
              case 6165:
                return o + t2 + i + "flex-" + t2 + t2;
              case 5187:
                return o + t2 + p(t2, /(\w+).+(:[^]+)/, o + "box-$1$2" + i + "flex-$1$2") + t2;
              case 5443:
                return o + t2 + i + "flex-item-" + p(t2, /flex-|-self/, "") + t2;
              case 4675:
                return o + t2 + i + "flex-line-pack" + p(t2, /align-content|flex-|-self/, "") + t2;
              case 5548:
                return o + t2 + i + p(t2, "shrink", "negative") + t2;
              case 5292:
                return o + t2 + i + p(t2, "basis", "preferred-size") + t2;
              case 6060:
                return o + "box-" + p(t2, "-grow", "") + o + t2 + i + p(t2, "grow", "positive") + t2;
              case 4554:
                return o + p(t2, /([^-])(transform)/g, "$1" + o + "$2") + t2;
              case 6187:
                return p(p(p(t2, /(zoom-|grab)/, o + "$1"), /(image-set)/, o + "$1"), t2, "") + t2;
              case 5495:
              case 3959:
                return p(t2, /(image-set\([^]*)/, o + "$1$`$1");
              case 4968:
                return p(p(t2, /(.+:)(flex-)?(.*)/, o + "box-pack:$3" + i + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + o + t2 + t2;
              case 4095:
              case 3583:
              case 4068:
              case 2532:
                return p(t2, /(.+)-inline(.+)/, o + "$1$2") + t2;
              case 8116:
              case 7059:
              case 5753:
              case 5535:
              case 5445:
              case 5701:
              case 4933:
              case 4677:
              case 5533:
              case 5789:
              case 5021:
              case 4765:
                if (g(t2) - 1 - e2 > 6)
                  switch (v(t2, e2 + 1)) {
                    case 109:
                      if (v(t2, e2 + 4) !== 45)
                        break;
                    case 102:
                      return p(t2, /(.+:)(.+)-([^]+)/, "$1" + o + "$2-$3$1" + a + (v(t2, e2 + 3) == 108 ? "$3" : "$2-$3")) + t2;
                    case 115:
                      return ~d(t2, "stretch") ? K(p(t2, "stretch", "fill-available"), e2) + t2 : t2;
                  }
                break;
              case 4949:
                if (v(t2, e2 + 1) !== 115)
                  break;
              case 6444:
                switch (v(t2, g(t2) - 3 - (~d(t2, "!important") && 10))) {
                  case 107:
                    return p(t2, ":", ":" + o) + t2;
                  case 101:
                    return p(t2, /(.+:)([^;!]+)(;|!.+)?/, "$1" + o + (v(t2, 14) === 45 ? "inline-" : "") + "box$3$1" + o + "$2$3$1" + i + "$2box$3") + t2;
                }
                break;
              case 5936:
                switch (v(t2, e2 + 11)) {
                  case 114:
                    return o + t2 + i + p(t2, /[svh]\w+-[tblr]{2}/, "tb") + t2;
                  case 108:
                    return o + t2 + i + p(t2, /[svh]\w+-[tblr]{2}/, "tb-rl") + t2;
                  case 45:
                    return o + t2 + i + p(t2, /[svh]\w+-[tblr]{2}/, "lr") + t2;
                }
                return o + t2 + i + t2 + t2;
            }
            return t2;
          }
          function Y(t2, e2) {
            for (var n2 = "", r2 = m(t2), i2 = 0; i2 < r2; i2++)
              n2 += e2(t2[i2], i2, t2, e2) || "";
            return n2;
          }
          function X(t2, e2, n2, r2) {
            switch (t2.type) {
              case "@import":
              case u:
                return t2.return = t2.return || t2.value;
              case c:
                return "";
              case s:
                t2.value = t2.props.join(",");
            }
            return g(n2 = Y(t2.children, r2)) ? t2.return = t2.value + "{" + n2 + "}" : "";
          }
          function W(t2) {
            return function(e2) {
              e2.root || (e2 = e2.return) && t2(e2);
            };
          }
          var Z = function(t2) {
            var e2 = Object.create(null);
            return function(n2) {
              return e2[n2] === void 0 && (e2[n2] = t2(n2)), e2[n2];
            };
          }, q = function(t2, e2) {
            return D(function(t3, e3) {
              var n2 = -1, r2 = 44;
              do {
                switch (M(r2)) {
                  case 0:
                    r2 === 38 && I() === 12 && (e3[n2] = 1), t3[n2] += N(S - 1);
                    break;
                  case 2:
                    t3[n2] += L(r2);
                    break;
                  case 4:
                    if (r2 === 44) {
                      t3[++n2] = I() === 58 ? "&\f" : "", e3[n2] = t3[n2].length;
                      break;
                    }
                  default:
                    t3[n2] += f(r2);
                }
              } while (r2 = $());
              return t3;
            }(V(t2), e2));
          }, J = new WeakMap(), Q = function(t2) {
            if (t2.type === "rule" && t2.parent && t2.length) {
              for (var e2 = t2.value, n2 = t2.parent, r2 = t2.column === n2.column && t2.line === n2.line; n2.type !== "rule"; )
                if (!(n2 = n2.parent))
                  return;
              if ((t2.props.length !== 1 || e2.charCodeAt(0) === 58 || J.get(n2)) && !r2) {
                J.set(t2, true);
                for (var i2 = [], a2 = q(e2, i2), o2 = n2.props, c2 = 0, s2 = 0; c2 < a2.length; c2++)
                  for (var u2 = 0; u2 < o2.length; u2++, s2++)
                    t2.props[s2] = i2[c2] ? a2[c2].replace(/&\f/g, o2[u2]) : o2[u2] + " " + a2[c2];
              }
            }
          }, tt = function(t2) {
            if (t2.type === "decl") {
              var e2 = t2.value;
              e2.charCodeAt(0) === 108 && e2.charCodeAt(2) === 98 && (t2.return = "", t2.value = "");
            }
          }, et = [function(t2, e2, n2, r2) {
            if (!t2.return)
              switch (t2.type) {
                case u:
                  t2.return = K(t2.value, t2.length);
                  break;
                case "@keyframes":
                  return Y([C(p(t2.value, "@", "@" + o), t2, "")], r2);
                case s:
                  if (t2.length)
                    return k(t2.props, function(e3) {
                      switch (function(t3, e4) {
                        return (t3 = e4.exec(t3)) ? t3[0] : t3;
                      }(e3, /(::plac\w+|:read-\w+)/)) {
                        case ":read-only":
                        case ":read-write":
                          return Y([C(p(e3, /:(read-\w+)/, ":-moz-$1"), t2, "")], r2);
                        case "::placeholder":
                          return Y([C(p(e3, /:(plac\w+)/, ":" + o + "input-$1"), t2, ""), C(p(e3, /:(plac\w+)/, ":-moz-$1"), t2, ""), C(p(e3, /:(plac\w+)/, i + "input-$1"), t2, "")], r2);
                      }
                      return "";
                    });
              }
          }], nt = function(t2) {
            var e2 = t2.key;
            if (e2 === "css") {
              var n2 = document.querySelectorAll("style[data-emotion]:not([data-s])");
              Array.prototype.forEach.call(n2, function(t3) {
                t3.getAttribute("data-emotion").indexOf(" ") !== -1 && (document.head.appendChild(t3), t3.setAttribute("data-s", ""));
              });
            }
            var i2 = t2.stylisPlugins || et;
            var a2, o2, c2 = {}, s2 = [];
            a2 = t2.container || document.head, Array.prototype.forEach.call(document.querySelectorAll('style[data-emotion^="' + e2 + ' "]'), function(t3) {
              for (var e3 = t3.getAttribute("data-emotion").split(" "), n3 = 1; n3 < e3.length; n3++)
                c2[e3[n3]] = true;
              s2.push(t3);
            });
            var u2 = [Q, tt];
            var l2, f2 = [X, W(function(t3) {
              l2.insert(t3);
            })], h2 = function(t3) {
              var e3 = m(t3);
              return function(n3, r2, i3, a3) {
                for (var o3 = "", c3 = 0; c3 < e3; c3++)
                  o3 += t3[c3](n3, r2, i3, a3) || "";
                return o3;
              };
            }(u2.concat(i2, f2));
            o2 = function(t3, e3, n3, r2) {
              l2 = n3, Y(_(t3 ? t3 + "{" + e3.styles + "}" : e3.styles), h2), r2 && (p2.inserted[e3.name] = true);
            };
            var p2 = { key: e2, sheet: new r({ key: e2, container: a2, nonce: t2.nonce, speedy: t2.speedy, prepend: t2.prepend }), nonce: t2.nonce, inserted: c2, registered: {}, insert: o2 };
            return p2.sheet.hydrate(s2), p2;
          };
          var rt = function(t2) {
            for (var e2, n2 = 0, r2 = 0, i2 = t2.length; i2 >= 4; ++r2, i2 -= 4)
              e2 = 1540483477 * (65535 & (e2 = 255 & t2.charCodeAt(r2) | (255 & t2.charCodeAt(++r2)) << 8 | (255 & t2.charCodeAt(++r2)) << 16 | (255 & t2.charCodeAt(++r2)) << 24)) + (59797 * (e2 >>> 16) << 16), n2 = 1540483477 * (65535 & (e2 ^= e2 >>> 24)) + (59797 * (e2 >>> 16) << 16) ^ 1540483477 * (65535 & n2) + (59797 * (n2 >>> 16) << 16);
            switch (i2) {
              case 3:
                n2 ^= (255 & t2.charCodeAt(r2 + 2)) << 16;
              case 2:
                n2 ^= (255 & t2.charCodeAt(r2 + 1)) << 8;
              case 1:
                n2 = 1540483477 * (65535 & (n2 ^= 255 & t2.charCodeAt(r2))) + (59797 * (n2 >>> 16) << 16);
            }
            return (((n2 = 1540483477 * (65535 & (n2 ^= n2 >>> 13)) + (59797 * (n2 >>> 16) << 16)) ^ n2 >>> 15) >>> 0).toString(36);
          }, it = { animationIterationCount: 1, borderImageOutset: 1, borderImageSlice: 1, borderImageWidth: 1, boxFlex: 1, boxFlexGroup: 1, boxOrdinalGroup: 1, columnCount: 1, columns: 1, flex: 1, flexGrow: 1, flexPositive: 1, flexShrink: 1, flexNegative: 1, flexOrder: 1, gridRow: 1, gridRowEnd: 1, gridRowSpan: 1, gridRowStart: 1, gridColumn: 1, gridColumnEnd: 1, gridColumnSpan: 1, gridColumnStart: 1, msGridRow: 1, msGridRowSpan: 1, msGridColumn: 1, msGridColumnSpan: 1, fontWeight: 1, lineHeight: 1, opacity: 1, order: 1, orphans: 1, tabSize: 1, widows: 1, zIndex: 1, zoom: 1, WebkitLineClamp: 1, fillOpacity: 1, floodOpacity: 1, stopOpacity: 1, strokeDasharray: 1, strokeDashoffset: 1, strokeMiterlimit: 1, strokeOpacity: 1, strokeWidth: 1 }, at = /[A-Z]|^ms/g, ot = /_EMO_([^_]+?)_([^]*?)_EMO_/g, ct = function(t2) {
            return t2.charCodeAt(1) === 45;
          }, st = function(t2) {
            return t2 != null && typeof t2 != "boolean";
          }, ut = Z(function(t2) {
            return ct(t2) ? t2 : t2.replace(at, "-$&").toLowerCase();
          }), lt = function(t2, e2) {
            switch (t2) {
              case "animation":
              case "animationName":
                if (typeof e2 == "string")
                  return e2.replace(ot, function(t3, e3, n2) {
                    return ht = { name: e3, styles: n2, next: ht }, e3;
                  });
            }
            return it[t2] === 1 || ct(t2) || typeof e2 != "number" || e2 === 0 ? e2 : e2 + "px";
          };
          function ft(t2, e2, n2) {
            if (n2 == null)
              return "";
            if (n2.__emotion_styles !== void 0)
              return n2;
            switch (typeof n2) {
              case "boolean":
                return "";
              case "object":
                if (n2.anim === 1)
                  return ht = { name: n2.name, styles: n2.styles, next: ht }, n2.name;
                if (n2.styles !== void 0) {
                  var r2 = n2.next;
                  if (r2 !== void 0)
                    for (; r2 !== void 0; )
                      ht = { name: r2.name, styles: r2.styles, next: ht }, r2 = r2.next;
                  return n2.styles + ";";
                }
                return function(t3, e3, n3) {
                  var r3 = "";
                  if (Array.isArray(n3))
                    for (var i3 = 0; i3 < n3.length; i3++)
                      r3 += ft(t3, e3, n3[i3]) + ";";
                  else
                    for (var a3 in n3) {
                      var o3 = n3[a3];
                      if (typeof o3 != "object")
                        e3 != null && e3[o3] !== void 0 ? r3 += a3 + "{" + e3[o3] + "}" : st(o3) && (r3 += ut(a3) + ":" + lt(a3, o3) + ";");
                      else if (!Array.isArray(o3) || typeof o3[0] != "string" || e3 != null && e3[o3[0]] !== void 0) {
                        var c2 = ft(t3, e3, o3);
                        switch (a3) {
                          case "animation":
                          case "animationName":
                            r3 += ut(a3) + ":" + c2 + ";";
                            break;
                          default:
                            r3 += a3 + "{" + c2 + "}";
                        }
                      } else
                        for (var s2 = 0; s2 < o3.length; s2++)
                          st(o3[s2]) && (r3 += ut(a3) + ":" + lt(a3, o3[s2]) + ";");
                    }
                  return r3;
                }(t2, e2, n2);
              case "function":
                if (t2 !== void 0) {
                  var i2 = ht, a2 = n2(t2);
                  return ht = i2, ft(t2, e2, a2);
                }
                break;
              case "string":
            }
            if (e2 == null)
              return n2;
            var o2 = e2[n2];
            return o2 !== void 0 ? o2 : n2;
          }
          var ht, pt = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
          var dt = function(t2, e2, n2) {
            if (t2.length === 1 && typeof t2[0] == "object" && t2[0] !== null && t2[0].styles !== void 0)
              return t2[0];
            var r2 = true, i2 = "";
            ht = void 0;
            var a2 = t2[0];
            a2 == null || a2.raw === void 0 ? (r2 = false, i2 += ft(n2, e2, a2)) : i2 += a2[0];
            for (var o2 = 1; o2 < t2.length; o2++)
              i2 += ft(n2, e2, t2[o2]), r2 && (i2 += a2[o2]);
            pt.lastIndex = 0;
            for (var c2, s2 = ""; (c2 = pt.exec(i2)) !== null; )
              s2 += "-" + c2[1];
            return { name: rt(i2) + s2, styles: i2, next: ht };
          };
          function vt(t2, e2, n2) {
            var r2 = "";
            return n2.split(" ").forEach(function(n3) {
              t2[n3] !== void 0 ? e2.push(t2[n3] + ";") : r2 += n3 + " ";
            }), r2;
          }
          var yt = function(t2, e2, n2) {
            var r2 = t2.key + "-" + e2.name;
            if (n2 === false && t2.registered[r2] === void 0 && (t2.registered[r2] = e2.styles), t2.inserted[e2.name] === void 0) {
              var i2 = e2;
              do {
                t2.insert(e2 === i2 ? "." + r2 : "", i2, t2.sheet, true);
                i2 = i2.next;
              } while (i2 !== void 0);
            }
          };
          function gt(t2, e2) {
            if (t2.inserted[e2.name] === void 0)
              return t2.insert("", e2, t2.sheet, true);
          }
          function mt(t2, e2, n2) {
            var r2 = [], i2 = vt(t2, r2, n2);
            return r2.length < 2 ? n2 : i2 + e2(r2);
          }
          var bt = function t2(e2) {
            for (var n2 = "", r2 = 0; r2 < e2.length; r2++) {
              var i2 = e2[r2];
              if (i2 != null) {
                var a2 = void 0;
                switch (typeof i2) {
                  case "boolean":
                    break;
                  case "object":
                    if (Array.isArray(i2))
                      a2 = t2(i2);
                    else
                      for (var o2 in a2 = "", i2)
                        i2[o2] && o2 && (a2 && (a2 += " "), a2 += o2);
                    break;
                  default:
                    a2 = i2;
                }
                a2 && (n2 && (n2 += " "), n2 += a2);
              }
            }
            return n2;
          }, kt = function(t2) {
            var e2 = nt(t2);
            e2.sheet.speedy = function(t3) {
              this.isSpeedy = t3;
            }, e2.compat = true;
            var n2 = function() {
              for (var t3 = arguments.length, n3 = new Array(t3), r2 = 0; r2 < t3; r2++)
                n3[r2] = arguments[r2];
              var i2 = dt(n3, e2.registered, void 0);
              return yt(e2, i2, false), e2.key + "-" + i2.name;
            };
            return { css: n2, cx: function() {
              for (var t3 = arguments.length, r2 = new Array(t3), i2 = 0; i2 < t3; i2++)
                r2[i2] = arguments[i2];
              return mt(e2.registered, n2, bt(r2));
            }, injectGlobal: function() {
              for (var t3 = arguments.length, n3 = new Array(t3), r2 = 0; r2 < t3; r2++)
                n3[r2] = arguments[r2];
              var i2 = dt(n3, e2.registered);
              gt(e2, i2);
            }, keyframes: function() {
              for (var t3 = arguments.length, n3 = new Array(t3), r2 = 0; r2 < t3; r2++)
                n3[r2] = arguments[r2];
              var i2 = dt(n3, e2.registered), a2 = "animation-" + i2.name;
              return gt(e2, { name: i2.name, styles: "@keyframes " + a2 + "{" + i2.styles + "}" }), a2;
            }, hydrate: function(t3) {
              t3.forEach(function(t4) {
                e2.inserted[t4] = true;
              });
            }, flush: function() {
              e2.registered = {}, e2.inserted = {}, e2.sheet.flush();
            }, sheet: e2.sheet, cache: e2, getRegisteredStyles: vt.bind(null, e2.registered), merge: mt.bind(null, e2.registered, n2) };
          }({ key: "css" }), Ot = (kt.flush, kt.hydrate, kt.cx, kt.merge, kt.getRegisteredStyles, kt.injectGlobal, kt.keyframes, kt.css);
          kt.sheet, kt.cache;
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return r;
          }), n.d(e, "b", function() {
            return i;
          });
          var r = "add/body/mousemove", i = "add/body/mouseup";
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return M;
          });
          var r = n(12), i = n.n(r), a = n(15), o = n.n(a), c = n(7), s = n.n(c), u = n(3), l = n.n(u), f = n(4), h = n.n(f), p = n(10), d = n.n(p), v = n(5), y2 = n.n(v), g = n(6), m = n.n(g), b = n(1), k = n.n(b), O = n(32), x2 = n(2), j = n(26), S = n(48), P = n(9), w = n(14), R = n(8), C = n(29), E = n(21);
          function $(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function I(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? $(Object(n2), true).forEach(function(e3) {
                s()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : $(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function T(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = k()(t2);
              if (e2) {
                var i2 = k()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return m()(this, n2);
            };
          }
          var B = x2.a.z(), M = function(t2) {
            y2()(n2, t2);
            var e2 = T(n2);
            function n2() {
              return l()(this, n2), e2.apply(this, arguments);
            }
            return h()(n2, [{ key: "isAbsolute", get: function() {
              return this.json.position === "absolute";
            } }, { key: "isRelative", get: function() {
              return this.json.position === "relative";
            } }, { key: "isChild", get: function() {
              if (this.json.parent && (this.json.parent.is("project") === false && this.isAbsolute))
                return true;
              return false;
            } }, { key: "toCloneObject", value: function() {
              var t3 = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0];
              return I(I({}, d()(k()(n2.prototype), "toCloneObject", this).call(this, t3)), this.attrs("x", "y", "width", "height", "transform", "rotate", "rotateZ"));
            } }, { key: "convert", value: function(t3) {
              return (t3 = d()(k()(n2.prototype), "convert", this).call(this, t3)).x = x2.a.parse(t3.x), t3.y = x2.a.parse(t3.y), t3.width = x2.a.parse(t3.width), t3.height = x2.a.parse(t3.height), t3;
            } }, { key: "reset", value: function(t3) {
              var e3 = d()(k()(n2.prototype), "reset", this).call(this, t3);
              return e3 && this.hasChangedField("x", "y", "width", "height", "transform", "rotateZ", "rotate", "transform-origin", "perspective", "perspective-origin") && this.refreshMatrixCache(), e3;
            } }, { key: "setParent", value: function(t3) {
              d()(k()(n2.prototype), "setParent", this).call(this, t3), this.refreshMatrixCache();
            } }, { key: "refreshMatrixCache", value: function() {
              this.setCacheItemTransformMatrix(), this.setCacheLocalTransformMatrix(), this.setCacheAccumulatedMatrix(), this.setCacheLocalVerties(), this.setCacheVerties(), this.setCacheGuideVerties(), this.setCacheAreaPosition(), this.layers.forEach(function(t3) {
                t3.refreshMatrixCache();
              });
            } }, { key: "setCacheItemTransformMatrix", value: function() {
              this._cachedItemTransform = this.getItemTransformMatrix(), this._cachedItemTransformInverse = P.a.invert([], this._cachedItemTransform);
            } }, { key: "setCacheLocalTransformMatrix", value: function() {
              this._cachedLocalTransform = this.getLocalTransformMatrix(), this._cachedLocalTransformInverse = P.a.invert([], this._cachedLocalTransform), this._cachedTransformWithTranslate = this.getTransformWithTranslate(this), this._cachedTransformWithTranslateInverse = P.a.invert([], this._cachedTransformWithTranslate), this._cachedTransformWithTranslateTranspose = P.a.transpose([], this._cachedTransformWithTranslate);
            } }, { key: "setCacheAccumulatedMatrix", value: function() {
              this._cachedAccumulatedMatrix = this.getAccumulatedMatrix(), this._cachedAccumulatedMatrixInverse = P.a.invert([], this._cachedAccumulatedMatrix);
            } }, { key: "setCacheVerties", value: function() {
              this._cachedVerties = this.getVerties(), this._cachedVertiesWithoutTransformOrigin = this.rectVerties();
            } }, { key: "setCacheLocalVerties", value: function() {
              this._cachedLocalVerties = this.getLocalVerties();
            } }, { key: "setCacheGuideVerties", value: function() {
              this._cachedGuideVerties = this.getGuideVerties();
            } }, { key: "setCacheAreaPosition", value: function() {
              this._cachedAreaPosition = this.getAreaPosition();
            } }, { key: "localMatrix", get: function() {
              return this._cachedLocalTransform || this.getLocalTransformMatrix();
            } }, { key: "localMatrixInverse", get: function() {
              return this._cachedLocalTransformInverse || this.getLocalTransformMatrixInverse();
            } }, { key: "transformWithTranslate", get: function() {
              return this._cachedTransformWithTranslate || this.getTransformWithTranslate(this);
            } }, { key: "transformWithTranslateToTranspose", get: function() {
              return this._cachedTransformWithTranslateTranspose || P.a.transpose([], this.getTransformWithTranslate(this));
            } }, { key: "transformWithTranslateInverse", get: function() {
              return this._cachedTransformWithTranslateInverse || P.a.invert([], this.getTransformWithTranslate(this));
            } }, { key: "itemMatrix", get: function() {
              return this._cachedItemTransform || this.getItemTransformMatrix();
            } }, { key: "itemMatrixInverse", get: function() {
              return this._cachedItemTransformInverse || this.getItemTransformMatrixInverse();
            } }, { key: "accumulatedMatrix", get: function() {
              return this._cachedAccumulatedMatrix || this.getAccumulatedMatrix();
            } }, { key: "accumulatedMatrixInverse", get: function() {
              return this._cachedAccumulatedMatrixInverse || this.getAccumulatedMatrixInverse();
            } }, { key: "verties", get: function() {
              return this._cachedVerties || this.getVerties();
            } }, { key: "originVerties", get: function() {
              return this._cachedVertiesWithoutTransformOrigin || this.rectVerties();
            } }, { key: "localVerties", get: function() {
              return this._cachedLocalVerties || this.getLocalVerties();
            } }, { key: "guideVerties", get: function() {
              return this._cachedGuideVerties || this.getGuideVerties();
            } }, { key: "areaPosition", get: function() {
              return this._cachedAreaPosition || this.getAreaPosition();
            } }, { key: "getAreaPosition", value: function() {
              var t3 = Object(E.g)(this.getVerties());
              return { column: [Math.ceil(t3[0][0] / 100), Math.ceil(t3[1][0] / 100)], row: [Math.ceil(t3[0][1] / 100), Math.ceil(t3[3][1] / 100)] };
            } }, { key: "setScreenX", value: function(t3) {
              var e3 = 0;
              this.isChild && (e3 = this.json.parent.screenX.value), this.json.x.set(t3 - e3), this.changed();
            } }, { key: "setScreenY", value: function(t3) {
              var e3 = 0;
              this.isChild && (e3 = this.json.parent.screenY.value), this.json.y.set(t3 - e3), this.changed();
            } }, { key: "screenX", get: function() {
              return this.isChild ? x2.a.px(this.json.parent.screenX.value + this.json.x.value) : this.json.x || x2.a.z();
            } }, { key: "screenY", get: function() {
              return this.isChild ? x2.a.px(this.json.parent.screenY.value + this.json.y.value) : this.json.y || x2.a.z();
            } }, { key: "offsetX", get: function() {
              return this.parent ? this.json.x.toPx(this.screenWidth.value) : this.json.x || B;
            } }, { key: "offsetY", get: function() {
              return this.parent ? this.json.y.toPx(this.screenHeight.value) : this.json.y || B;
            } }, { key: "screenWidth", get: function() {
              return this.is("project") || !this.parent ? B : this.parent.is("project") || this.is("artboard") ? this.json.width.toPx() : this.json.width.toPx(this.parent.screenWidth.value);
            } }, { key: "screenHeight", get: function() {
              return this.is("project") || !this.parent ? B : this.parent.is("project") || this.is("artboard") ? this.json.height.toPx() : this.json.height.toPx(this.parent.screenHeight.value);
            } }, { key: "move", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [0, 0, 0];
              this.reset({ x: x2.a.px(this.offsetX.value + t3[0]).round(), y: x2.a.px(this.offsetY.value + t3[1]).round() });
            } }, { key: "moveByCenter", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [0, 0, 0], e3 = this.matrix;
              this.reset({ x: x2.a.px(t3[0] - e3.width / 2), y: x2.a.px(t3[1] - e3.height / 2) });
            } }, { key: "setAngle", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
              this.reset({ transform: j.a.replaceAll(this.transform, "rotateZ(".concat(x2.a.deg(t3).round(1e3), ")")) });
            } }, { key: "addAngle", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
              this.reset({ transform: j.a.addTransform(this.transform, "rotateZ(".concat(x2.a.deg(t3).round(1e3), ")")) });
            } }, { key: "checkInArea", value: function(t3) {
              return Object(E.d)(t3, this.originVerties);
            } }, { key: "hasPoint", value: function(t3, e3) {
              return Object(E.c)(this.originVerties, t3, e3);
            } }, { key: "isIncludeByArea", value: function(t3) {
              return this.originVerties.map(function(e3) {
                return E.c.apply(void 0, [t3].concat(o()(e3)));
              }).filter(Boolean).length === 4;
            } }, { key: "getPerspectiveMatrix", value: function() {
              if (this.json.perspective || j.a.get(this.json.transform || "", "perspective")) {
                var t3 = S.a.parseStyle(this.json["perspective-origin"]), e3 = i()(t3, 2), n3 = e3[0], r2 = n3 === void 0 ? x2.a.percent(50) : n3, a2 = e3[1], o2 = a2 === void 0 ? x2.a.percent(50) : a2, c2 = this.screenWidth.value, s2 = this.screenHeight.value;
                r2 = r2.toPx(c2).value, o2 = o2.toPx(s2).value;
                var u2 = P.a.create();
                P.a.translate(u2, u2, [r2, o2, 0]);
                var l2 = j.a.get(this.json.transform, "perspective");
                if (l2.length)
                  P.a.multiply(u2, u2, P.a.fromValues(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, -1 / l2[0].value, 1));
                else {
                  if (!this.json.perspective || this.json.perspective == "none")
                    return;
                  P.a.multiply(u2, u2, P.a.fromValues(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, -1 / x2.a.parse(this.json.perspective).value, 1));
                }
                return P.a.translate(u2, u2, [-r2, -o2, 0]), u2;
              }
            } }, { key: "getItemTransformMatrix", value: function() {
              var t3, e3 = j.a.parseStyle((t3 = this.json) === null || t3 === void 0 ? void 0 : t3.transform), n3 = this.screenWidth.value, r2 = this.screenHeight.value;
              return j.a.createTransformMatrix(e3, n3, r2);
            } }, { key: "getItemTransformMatrixInverse", value: function() {
              return P.a.invert([], this.getItemTransformMatrix());
            } }, { key: "getLocalTransformMatrix", value: function() {
              var t3 = S.a.scale(this.json["transform-origin"] || "50% 50% 0px", this.screenWidth.value, this.screenHeight.value), e3 = P.a.create();
              return P.a.translate(e3, e3, t3), P.a.multiply(e3, e3, this.itemMatrix), P.a.translate(e3, e3, P.d.negate([], t3)), e3;
            } }, { key: "getLocalTransformMatrixInverse", value: function() {
              return P.a.invert([], this.getLocalTransformMatrix());
            } }, { key: "getDirectionTransformMatrix", value: function(t3, e3, n3) {
              var r2 = this.offsetX.value, i2 = this.offsetY.value, a2 = P.d.add([], S.a.scale(this.json["transform-origin"] || "50% 50% 0px", e3, n3), P.d.negate([], t3)), o2 = P.a.create();
              return P.a.translate(o2, o2, [r2, i2, 0]), P.a.translate(o2, o2, t3), P.a.translate(o2, o2, a2), P.a.multiply(o2, o2, this.itemMatrix), P.a.translate(o2, o2, P.d.negate([], a2)), o2;
            } }, { key: "getDirectionTopLeftMatrix", value: function(t3, e3) {
              return this.getDirectionTransformMatrix([0, 0, 0], t3, e3);
            } }, { key: "getDirectionLeftMatrix", value: function(t3, e3) {
              return this.getDirectionTransformMatrix([0, e3 / 2, 0], t3, e3);
            } }, { key: "getDirectionTopMatrix", value: function(t3, e3) {
              return this.getDirectionTransformMatrix([t3 / 2, 0, 0], t3, e3);
            } }, { key: "getDirectionBottomLeftMatrix", value: function(t3, e3) {
              return this.getDirectionTransformMatrix([0, e3, 0], t3, e3);
            } }, { key: "getDirectionTopRightMatrix", value: function(t3, e3) {
              return this.getDirectionTransformMatrix([t3, 0, 0], t3, e3);
            } }, { key: "getDirectionRightMatrix", value: function(t3, e3) {
              return this.getDirectionTransformMatrix([t3, e3 / 2, 0], t3, e3);
            } }, { key: "getDirectionBottomRightMatrix", value: function(t3, e3) {
              return this.getDirectionTransformMatrix([t3, e3, 0], t3, e3);
            } }, { key: "getDirectionBottomMatrix", value: function(t3, e3) {
              return this.getDirectionTransformMatrix([t3 / 2, e3, 0], t3, e3);
            } }, { key: "getAccumulatedMatrix", value: function() {
              for (var t3 = P.a.create(), e3 = this.path.filter(function(t4) {
                return t4.is("project") === false;
              }), n3 = 0, r2 = e3.length; n3 < r2; n3++) {
                var i2 = e3[n3];
                if (i2.parent && Object(R.isFunction)(i2.parent.getPerspectiveMatrix)) {
                  var a2 = i2.parent.getPerspectiveMatrix();
                  a2 && P.a.multiply(t3, t3, a2);
                }
                var o2 = i2.offsetX.value, c2 = i2.offsetY.value;
                P.a.translate(t3, t3, [o2, c2, 0]), P.a.multiply(t3, t3, i2.localMatrix);
              }
              return t3;
            } }, { key: "getTransformWithTranslate", value: function(t3) {
              t3 = t3 || this;
              var e3 = P.a.create(), n3 = t3.offsetX.value, r2 = t3.offsetY.value;
              return P.a.translate(e3, e3, [n3, r2, 0]), P.a.multiply(e3, e3, t3.localMatrix), e3;
            } }, { key: "getAccumulatedMatrixInverse", value: function() {
              return P.a.invert([], this.getAccumulatedMatrix());
            } }, { key: "getLocalVerties", value: function(t3, e3) {
              return Object(E.e)(0, 0, t3 || this.screenWidth.value, e3 || this.screenHeight.value, this.json["transform-origin"]);
            } }, { key: "getVerties", value: function(t3, e3) {
              var n3 = Object(E.e)(0, 0, t3 || this.screenWidth.value, e3 || this.screenHeight.value, this.json["transform-origin"]);
              return Object(w.vertiesMap)(n3, this.accumulatedMatrix);
            } }, { key: "selectionVerties", value: function() {
              var t3 = Object(E.e)(-6, -6, this.screenWidth.value + 12, this.screenHeight.value + 12, this.json["transform-origin"]);
              return Object(w.vertiesMap)(t3, this.accumulatedMatrix);
            } }, { key: "rectVerties", value: function() {
              return this.verties.filter(function(t3, e3) {
                return e3 < 4;
              });
            } }, { key: "getGuideVerties", value: function() {
              var t3 = this.originVerties;
              return [].concat(o()(t3), [P.d.lerp([], t3[0], t3[1], 0.5), P.d.lerp([], t3[1], t3[2], 0.5), P.d.lerp([], t3[2], t3[3], 0.5), P.d.lerp([], t3[3], t3[0], 0.5)]);
            } }, { key: "toRectVerties", get: function() {
              return Object(E.b)([this]);
            } }, { key: "matrix", get: function() {
              var t3 = this.id, e3 = this.offsetX.value, n3 = this.offsetY.value, r2 = this.screenWidth.value, i2 = this.screenHeight.value, a2 = this.json.transform, o2 = this.json["transform-origin"] || "50% 50% 0%", c2 = this.parent.accumulatedMatrix, s2 = this.parent.accumulatedMatrixInverse, u2 = this.localMatrix, l2 = this.localMatrixInverse, f2 = this.itemMatrix, h2 = this.itemMatrixInverse, p2 = this.accumulatedMatrix, d2 = this.accumulatedMatrixInverse, v2 = { "to top left": this.getDirectionTopLeftMatrix(r2, i2), "to top": this.getDirectionTopMatrix(r2, i2), "to top right": this.getDirectionTopRightMatrix(r2, i2), "to right": this.getDirectionRightMatrix(r2, i2), "to bottom left": this.getDirectionBottomLeftMatrix(r2, i2), "to bottom": this.getDirectionBottomMatrix(r2, i2), "to bottom right": this.getDirectionBottomRightMatrix(r2, i2), "to left": this.getDirectionLeftMatrix(r2, i2) }, y3 = this.verties, g2 = y3.map(function(t4) {
                return t4[0];
              }), m2 = y3.map(function(t4) {
                return t4[1];
              });
              return { id: t3, x: e3, y: n3, width: r2, height: i2, transform: a2, originalTransformOrigin: o2, verties: y3, originVerties: this.originVerties, xList: g2, yList: m2, directionMatrix: v2, parentMatrix: c2, parentMatrixInverse: s2, localMatrix: u2, localMatrixInverse: l2, itemMatrix: f2, itemMatrixInverse: h2, accumulatedMatrix: p2, accumulatedMatrixInverse: d2 };
            } }, { key: "pathVerties", value: function() {
              return this.accumulatedPath().verties;
            } }, { key: "accumulatedPath", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", e3 = t3 || this.d, n3 = new C.a(e3);
              return n3.transformMat4(this.accumulatedMatrix), n3;
            } }, { key: "invertPath", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", e3 = new C.a(t3);
              return e3.transformMat4(this.accumulatedMatrixInverse), e3;
            } }, { key: "invertPathString", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
              return this.invertPath(t3).d;
            } }, { key: "checkInAreaForAll", value: function(t3) {
              var e3 = o()(this.checkInAreaForLayers(t3));
              return this.is("artboard") || this.is("project") || this.checkInArea(t3) && e3.push(this.ref), e3;
            } }, { key: "checkInAreaForLayers", value: function(t3) {
              var e3 = [];
              return this.layers.forEach(function(n3) {
                e3.push.apply(e3, n3.checkInAreaForLayers(t3)), n3.checkInArea(t3) && e3.push(n3);
              }), e3;
            } }, { key: "getTransformOriginMatrix", value: function() {
              return P.a.fromTranslation([], S.a.scale(this.json["transform-origin"] || "50% 50% 0px", this.screenWidth.value, this.screenHeight.value));
            } }, { key: "getTransformOriginMatrixInverse", value: function() {
              return P.a.invert([], this.getTransformOriginMatrix());
            } }, { key: "resetMatrix", value: function(t3) {
              var e3 = Object(w.calculateMatrix)(this.accumulatedMatrixInverse, t3.accumulatedMatrix), n3 = j.a.fromScale(P.a.getScaling([], e3).map(function(t4) {
                return Object(w.round)(t4, 1e3);
              })), r2 = P.a.getRotation([], e3), a2 = [], o2 = P.b.getAxisAngle(a2, r2), c2 = [{ angle: a2[0] ? Object(w.radianToDegree)(o2 * a2[0]) : 0, type: "rotateX" }, { angle: a2[1] ? Object(w.radianToDegree)(o2 * a2[1]) : 0, type: "rotateY" }, { angle: a2[2] ? Object(w.radianToDegree)(o2 * a2[2]) : 0, type: "rotateZ" }].filter(function(t4) {
                return t4.angle !== 0;
              }).map(function(t4) {
                return "".concat(t4.type, "(").concat(x2.a.deg(t4.angle % 360).round(1e3), ")");
              }).join(" "), s2 = j.a.replaceAll(t3.transform, "".concat(n3, " ").concat(c2)), u2 = j.a.parseStyle(s2), l2 = t3.screenWidth.value, f2 = t3.screenHeight.value, h2 = j.a.createTransformMatrix(u2, l2, f2), p2 = P.a.getTranslation([], Object(w.calculateMatrix)(e3, Object(w.calculateMatrixInverse)(t3.getTransformOriginMatrix(), h2, t3.getTransformOriginMatrixInverse()))), d2 = i()(p2, 3), v2 = d2[0], y3 = d2[1];
              d2[2];
              t3.reset({ x: x2.a.px(v2), y: x2.a.px(y3), transform: s2 }), t3.refreshMatrixCache();
            } }, { key: "getIndex", value: function() {
              for (var t3 = this.json.parent.layers, e3 = -1, n3 = 0, r2 = t3.length; n3 < r2; n3++)
                if (t3[n3] === this.ref) {
                  e3 = n3;
                  break;
                }
              return e3;
            } }, { key: "setOrder", value: function(t3) {
              var e3 = this.json.parent, n3 = this.getIndex();
              n3 > -1 && (e3.layers[n3] = e3.layers[t3], e3.layers[t3] = this.ref);
            } }, { key: "next", value: function() {
              if (this.isLast())
                return this.ref;
              var t3 = this.getIndex();
              return this.json.parent.layers[t3 + 1];
            } }, { key: "prev", value: function() {
              if (this.isFirst())
                return this.ref;
              var t3 = this.getIndex();
              return this.json.parent.layers[t3 - 1];
            } }, { key: "orderNext", value: function() {
              if (this.isLast()) {
                if (this.json.parent.is("artboard"))
                  return;
                this.json.parent.next().add(this, "prepend");
              } else {
                var t3 = this.getIndex();
                t3 > -1 && this.setOrder(t3 + 1);
              }
            } }, { key: "isFirst", value: function() {
              return this.getIndex() === 0;
            } }, { key: "isLast", value: function() {
              return this.getIndex() === this.json.parent.layers.length - 1;
            } }, { key: "orderPrev", value: function() {
              if (this.isFirst()) {
                if (this.json.parent.is("artboard"))
                  return;
                this.json.parent.prev().add(this);
              } else {
                var t3 = this.getIndex();
                t3 > 0 && this.setOrder(t3 - 1);
              }
            } }, { key: "orderFirst", value: function() {
              this.setOrder(0);
            } }, { key: "orderLast", value: function() {
              this.setOrder(this.json.parent.layers.length - 1);
            } }, { key: "orderTop", value: function() {
            } }, { key: "orderBottom", value: function() {
            } }]), n2;
          }(O.a);
        }, function(t, e, n) {
          "use strict";
          var r = n(40), i = n.n(r), a = n(12), o = n.n(a), c = n(3), s = n.n(c), u = n(4), l = n.n(u), f = n(10), h = n.n(f), p = n(5), d = n.n(p), v = n(6), y2 = n.n(v), g = n(1), m = n.n(g), b = n(0), k = n(90), O = n(8), x2 = n(14);
          function j(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = m()(t2);
              if (e2) {
                var i2 = m()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return y2()(this, n2);
            };
          }
          var S = function(t2) {
            d()(n2, t2);
            var e2 = j(n2);
            function n2(t3) {
              var r2, i2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              return s()(this, n2), (r2 = e2.call(this, t3, i2)).__UID = new Set(), r2.created(), r2.initialize(), r2.initializeStoreEvent(), r2;
            }
            return l()(n2, [{ key: "created", value: function() {
            } }, { key: "getRealEventName", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : MULTI_PREFIX, n3 = t3.indexOf(e3);
              return t3.substr(n3 < 0 ? 0 : n3 + e3.length);
            } }, { key: "splitMethod", value: function(t3, e3) {
              var n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, r2 = Object(O.splitMethodByKeyword)(t3, e3), i2 = o()(r2, 2), a2 = i2[0], c2 = i2[1];
              return [a2.length ? +c2[0].target : n3, a2, c2];
            } }, { key: "createLocalCallback", value: function(t3, e3) {
              var n3 = e3.bind(this);
              return n3.displayName = "".concat(this.sourceName, ".").concat(t3), n3.source = this.source, n3;
            } }, { key: "initializeStoreEvent", value: function() {
              var t3 = this;
              this.filterProps(b.CHECK_SUBSCRIBE_PATTERN).forEach(function(e3) {
                var n3 = t3.getRealEventName(e3, b.SUBSCRIBE_SAPARATOR), r2 = n3.split(b.CHECK_SAPARATOR), a2 = i()(r2), c2 = (a2[0], a2.slice(1)), s2 = c2.map(function(t4) {
                  return t4.trim();
                }).filter(function(e4) {
                  return t3[e4];
                }).map(function(t4) {
                  return { target: t4 };
                }), u2 = t3.splitMethod(c2, "debounce"), l2 = o()(u2, 2), f2 = l2[0], h2 = l2[1], p2 = t3.splitMethod(c2, "throttle"), d2 = o()(p2, 2), v2 = d2[0], y3 = d2[1], g2 = t3.splitMethod(c2, "allTrigger"), m2 = o()(g2, 2), k2 = (m2[0], m2[1]), x3 = t3.splitMethod(c2, "selfTrigger"), j2 = o()(x3, 2), S2 = (j2[0], j2[1]);
                n3.split(b.CHECK_SAPARATOR).filter(function(t4) {
                  return s2.indexOf(t4) === -1 && h2.indexOf(t4) === -1 && k2.indexOf(t4) === -1 && S2.indexOf(t4) === -1 && y3.indexOf(t4) === -1;
                }).map(function(t4) {
                  return t4.trim();
                }).filter(Boolean).forEach(function(n4) {
                  if (Object(O.isFunction)(t3[e3])) {
                    var r3 = t3.createLocalCallback(n4, t3[e3]);
                    t3.$store.on(n4, r3, t3, f2, v2, k2.length, S2.length, s2);
                  }
                });
              });
            } }, { key: "destoryStoreSUBSCRIBE", value: function() {
              this.$store.offAll(this);
            } }, { key: "destroy", value: function() {
              h()(m()(n2.prototype), "destroy", this).call(this), this.destoryStoreSUBSCRIBE();
            } }, { key: "rerender", value: function() {
              h()(m()(n2.prototype), "rerender", this).call(this), this.initialize(), this.initializeStoreEvent();
            } }, { key: "emit", value: function(t3) {
              var e3;
              this.$store.source = this.source, this.$store.sourceContext = this;
              for (var n3 = arguments.length, r2 = new Array(n3 > 1 ? n3 - 1 : 0), i2 = 1; i2 < n3; i2++)
                r2[i2 - 1] = arguments[i2];
              (e3 = this.$store).emit.apply(e3, [t3].concat(r2));
            } }, { key: "nextTick", value: function(t3) {
              this.$store.nextTick(t3);
            } }, { key: "trigger", value: function(t3) {
              var e3;
              this.$store.source = this.source;
              for (var n3 = arguments.length, r2 = new Array(n3 > 1 ? n3 - 1 : 0), i2 = 1; i2 < n3; i2++)
                r2[i2 - 1] = arguments[i2];
              (e3 = this.$store).trigger.apply(e3, [t3].concat(r2));
            } }, { key: "broadcast", value: function(t3) {
              for (var e3 = this, n3 = arguments.length, r2 = new Array(n3 > 1 ? n3 - 1 : 0), i2 = 1; i2 < n3; i2++)
                r2[i2 - 1] = arguments[i2];
              Object.keys(this.children).forEach(function(n4) {
                var i3;
                (i3 = e3.children[n4]).trigger.apply(i3, [t3].concat(r2));
              });
            } }, { key: "on", value: function(t3, e3) {
              this.$store.on(t3, e3);
            } }, { key: "off", value: function(t3, e3) {
              this.$store.off(t3, e3);
            } }, { key: "subscribe", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, r2 = "subscribe.".concat(Object(x2.uuidShort)()), i2 = this.createLocalCallback(r2, t3);
              return this.$store.on(r2, i2, this, e3, n3, false, true), r2;
            } }]), n2;
          }(k.a);
          e.a = S;
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return s;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(2), s = function() {
            function t2() {
              i()(this, t2);
            }
            return o()(t2, null, [{ key: "parseStyle", value: function(t3) {
              var e2 = { isAll: true, "border-radius": c.a.z(), "border-top-left-radius": c.a.z(), "border-top-right-radius": c.a.z(), "border-bottom-right-radius": c.a.z(), "border-bottom-left-radius": c.a.z() }, n2 = t3.split(" ").filter(function(t4) {
                return c.a.parse(t4);
              });
              return n2.length === 1 ? (e2.isAll = true, e2["border-radius"] = n2[0]) : (e2.isAll = false, e2["border-top-left-radius"] = n2[0], e2["border-top-right-radius"] = n2[1], e2["border-bottom-right-radius"] = n2[2], e2["border-bottom-left-radius"] = n2[3]), e2;
            } }]), t2;
          }();
        }, function(t, e, n) {
          "use strict";
          n.r(e), n.d(e, "HUEtoRGB", function() {
            return a;
          }), n.d(e, "HSLtoHSV", function() {
            return o;
          }), n.d(e, "HSLtoRGB", function() {
            return c;
          });
          var r = n(42), i = n(14);
          function a(t2, e2, n2) {
            return n2 < 0 && (n2 += 1), n2 > 1 && (n2 -= 1), n2 < 1 / 6 ? t2 + 6 * (e2 - t2) * n2 : n2 < 0.5 ? e2 : n2 < 2 / 3 ? t2 + (e2 - t2) * (2 / 3 - n2) * 6 : t2;
          }
          function o(t2, e2, n2) {
            if (arguments.length == 1) {
              var i2 = arguments[0];
              t2 = i2.h, e2 = i2.s, n2 = i2.l;
            }
            var a2 = c(t2, e2, n2);
            return Object(r.RGBtoHSV)(a2.r, a2.g, a2.b);
          }
          function c(t2, e2, n2) {
            if (arguments.length == 1) {
              var r2 = arguments[0];
              t2 = r2.h, e2 = r2.s, n2 = r2.l;
            }
            var o2, c2, s;
            if (t2 /= 360, n2 /= 100, (e2 /= 100) == 0)
              o2 = c2 = s = n2;
            else {
              var u = n2 < 0.5 ? n2 * (1 + e2) : n2 + e2 - n2 * e2, l = 2 * n2 - u;
              o2 = a(l, u, t2 + 1 / 3), c2 = a(l, u, t2), s = a(l, u, t2 - 1 / 3);
            }
            return { r: Object(i.round)(255 * o2), g: Object(i.round)(255 * c2), b: Object(i.round)(255 * s) };
          }
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return P;
          });
          var r = n(15), i = n.n(r), a = n(7), o = n.n(a), c = n(3), s = n.n(c), u = n(4), l = n.n(u), f = n(10), h = n.n(f), p = n(5), d = n.n(p), v = n(6), y2 = n.n(v), g = n(1), m = n.n(g), b = n(30), k = n(8), O = n(2);
          function x2(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function j(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? x2(Object(n2), true).forEach(function(e3) {
                o()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : x2(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function S(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = m()(t2);
              if (e2) {
                var i2 = m()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return y2()(this, n2);
            };
          }
          var P = function(t2) {
            d()(n2, t2);
            var e2 = S(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, { itemType: "offset", offset: O.a.percent(0), color: "rgba(255, 255, 255, 1)", properties: [] });
            } }, { key: "toCloneObject", value: function() {
              return j(j({}, h()(m()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("offset", "color", "properties"));
            } }, { key: "convert", value: function(t3) {
              return (t3 = h()(m()(n2.prototype), "convert", this).call(this, t3)).offset = O.a.parse(t3.offset), t3;
            } }, { key: "toCSSText", value: function() {
              return "".concat(this.json.offset, " ").concat(Object(k.CSS_TO_STRING)(this.toCSS()));
            } }, { key: "createProperty", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return this.addProperty(j({ checked: true, value: O.a.z() }, t3));
            } }, { key: "addProperty", value: function(t3) {
              this.json.properties.push(t3);
            } }, { key: "removeProperty", value: function(t3) {
              this.json.properties.splice(t3, 1);
            } }, { key: "sortItem", value: function(t3, e3, n3) {
              t3.splice.apply(t3, [n3 + (e3 < n3 ? -1 : 0), 0].concat(i()(t3.splice(e3, 1))));
            } }, { key: "sortProperty", value: function(t3, e3) {
              this.sortItem(this.json.properties, t3, e3);
            } }, { key: "updateProperty", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              Object.assign(this.json.properties[+t3], j({}, e3));
            } }, { key: "updatePropertyByKey", value: function(t3) {
              for (var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n3 = this.json.properties, r2 = -1, i2 = 0, a2 = n3.length; i2 < a2; i2++)
                if (this.json.properties[i2].key === t3) {
                  r2 = i2;
                  break;
                }
              Object.assign(this.json.properties[+r2], j({}, e3));
            } }, { key: "toCSS", value: function() {
              var t3 = {};
              return this.json.properties.forEach(function(e3) {
                t3 = j(j({}, t3), e3.toCSS());
              }), t3;
            } }, { key: "toString", value: function() {
              return this.toCSSText();
            } }], [{ key: "parse", value: function(t3) {
              return new n2(t3);
            } }]), n2;
          }(b.a);
        }, function(t, e, n) {
          "use strict";
          e.a = [{ category: "History", key: "cmd+z", win: "ctrl+z", command: "history.undo", description: "undoing in history", when: "CanvasView" }, { category: "History", key: "cmd+shift+z", win: "ctrl+shift+z", command: "history.redo", description: "redoing in history", when: "CanvasView" }, { category: "Tools", key: "h", command: "toggleToolHand", description: "set hand tool on", when: "CanvasView" }, { category: "Layer", key: "Meta+ArrowLeft", command: "rotateLayer", description: "rotate to left", args: [-5], when: "CanvasView" }, { category: "Layer", key: "Meta+ArrowRight", command: "rotateLayer", description: "rotate to right", args: [5], when: "CanvasView" }, { category: "Tool", key: "v", command: "addLayerView", args: "select", description: "Selection" }, { category: "Tool", key: "a", command: "addLayerView", args: ["artboard"], description: "Add ArtBoard", when: "CanvasView" }, { category: "Tool", key: "r", command: "addLayerView", args: ["rect"], description: "Add rect layer" }, { category: "Tool", key: "m", command: "addLayerView", args: ["rect"], description: "Add rect layer" }, { category: "Tool", key: "o", command: "addLayerView", args: ["circle"], description: "Add circle layer" }, { category: "Tool", key: "l", command: "addLayerView", args: ["circle"], description: "Add circle layer" }, { category: "Tool", key: "t", command: "addLayerView", args: ["text"], description: "Add text layer" }, { category: "Tool", key: "p", command: "addLayerView", args: ["path"], description: "Add SVG Path layer" }, { category: "Tool", key: "b", command: "addLayerView", args: ["brush"], description: "Draw SVG Path" }, { category: "Group", key: "cmd+g", win: "ctrl+g", command: "group.item", description: "Grouping selected items", when: "CanvasView" }, { category: "Group", key: "shift+cmd+g", win: "shift+ctrl+g", command: "ungroup.item", description: "Ungrouping selected group layer", when: "CanvasView" }, { category: "Path", key: "ArrowDown", command: "segment.move.down", description: "move 1px to down", args: [{ dy: 1 }], when: "PathEditorView" }, { category: "Path", key: "ArrowUp", command: "segment.move.up", description: "move 1px to up", args: [{ dy: 1 }], when: "PathEditorView" }, { category: "Path", key: "ArrowRight", command: "segment.move.right", description: "move 1px to right", args: [{ dx: 1 }], when: "PathEditorView" }, { category: "Path", key: "ArrowLeft", command: "segment.move.left", description: "move 1px to left", args: [{ dx: 1 }], when: "PathEditorView" }, { category: "Path", key: "Shift+ArrowDown", command: "segment.move.down", description: "move 10px to down", args: [{ dy: 10 }], when: "PathEditorView" }, { category: "Path", key: "Shift+ArrowUp", command: "segment.move.up", description: "move 10px to up", args: [{ dy: 10 }], when: "PathEditorView" }, { category: "Path", key: "Shift+ArrowLeft", command: "segment.move.left", description: "move 10px to left", args: [{ dx: 10 }], when: "PathEditorView" }, { category: "Path", key: "Shift+ArrowRight", command: "segment.move.right", description: "move 10px to right", args: [{ dx: 10 }], when: "PathEditorView" }, { category: "Path", key: "Alt+ArrowDown", command: "segment.move.down", description: "move 5px to down", args: [{ dy: 5 }], when: "PathEditorView" }, { category: "Path", key: "Alt+ArrowUp", command: "segment.move.up", description: "move 5px to up ", args: [{ dy: 5 }], when: "PathEditorView" }, { category: "Path", key: "Alt+ArrowLeft", command: "segment.move.left", description: "move 5px to left", args: [{ dx: 5 }], when: "PathEditorView" }, { category: "Path", key: "Alt+ArrowRight", command: "segment.move.right", description: "move 5px to right", args: [{ dx: 5 }], when: "PathEditorView" }, { category: "Path", key: "Backspace", command: "segment.delete", description: "Delete selected segment", when: "PathEditorView" }, { category: "Layer", key: "ArrowLeft", command: "moveLayer", description: "move 1px to left", args: [-1, 0], when: "CanvasView" }, { category: "Layer", key: "ArrowRight", command: "moveLayer", description: "move 1px to right", args: [1, 0], when: "CanvasView" }, { category: "Layer", key: "ArrowDown", command: "moveLayer", description: "move 1px to down", args: [0, 1], when: "CanvasView" }, { category: "Layer", key: "ArrowUp", command: "moveLayer", description: "move 1px to up", args: [0, -1], when: "CanvasView" }, { category: "Layer", key: "Shift+ArrowDown", command: "moveLayer", description: "move 10px to down", args: [0, 10], when: "CanvasView" }, { category: "Layer", key: "Shift+ArrowRight", command: "moveLayer", description: "move 10px to right", args: [10, 0], when: "CanvasView" }, { category: "Layer", key: "Shift+ArrowUp", command: "moveLayer", description: "move 10px to up", args: [0, -10], when: "CanvasView" }, { category: "Layer", key: "Shift+ArrowLeft", command: "moveLayer", description: "move 10px to left", args: [-10, 0], when: "CanvasView" }, { category: "Layer", key: "Alt+ArrowLeft", command: "moveLayer", description: "move 5px to left", args: [-5, 0], when: "CanvasView" }, { category: "Layer", key: "Alt+ArrowDown", command: "moveLayer", description: "move 5px to down", args: [0, 5], when: "CanvasView" }, { category: "Layer", key: "Alt+ArrowRight", command: "moveLayer", description: "move 5px to right", args: [5, 0], when: "CanvasView" }, { category: "Layer", key: "Alt+ArrowUp", command: "moveLayer", description: "move 5px to up", args: [0, -5], when: "CanvasView" }, { category: "Layer", key: "ctrl+]", command: "item.move.depth.up", description: "move layer to above", when: "CanvasView" }, { category: "Layer", key: "ctrl+[", command: "item.move.depth.down", description: "move layer to below", when: "CanvasView" }, { category: "Layer", key: "Backspace", command: "history.removeLayer", description: "Delete selected items", args: ["Delete selected items"], when: "CanvasView" }, { category: "Layer", key: "Delete", command: "history.removeLayer", description: "Delete selected items", args: ["Delete selected items"], when: "CanvasView" }, { category: "Tool", key: "Minus", command: "scale.minus", description: "Minus scale", when: "CanvasView" }, { category: "Tool", key: "Equal", command: "scale.plus", description: "Plus scale", when: "CanvasView" }, { category: "Edit", key: "cmd+c", command: "clipboard.copy", description: "Copy objects", when: "CanvasView" }, { category: "Edit", key: "cmd+v", win: "ctrl+v", command: "clipboard.paste", description: "Paste selected objects", when: "CanvasView" }];
        }, function(t, e, n) {
          "use strict";
          n.r(e), n.d(e, "ReverseXyz", function() {
            return i;
          }), n.d(e, "ReverseRGB", function() {
            return a;
          }), n.d(e, "XYZtoRGB", function() {
            return o;
          }), n.d(e, "LABtoXYZ", function() {
            return c;
          }), n.d(e, "PivotXyz", function() {
            return s;
          }), n.d(e, "XYZtoLAB", function() {
            return u;
          }), n.d(e, "LABtoRGB", function() {
            return l;
          });
          var r = n(14);
          function i(t2) {
            return Math.pow(t2, 3) > 8856e-6 ? Math.pow(t2, 3) : (t2 - 16 / 116) / 7.787;
          }
          function a(t2) {
            return t2 > 31308e-7 ? 1.055 * Math.pow(t2, 1 / 2.4) - 0.055 : 12.92 * t2;
          }
          function o(t2, e2, n2) {
            if (arguments.length == 1) {
              var i2 = arguments[0];
              t2 = i2.x, e2 = i2.y, n2 = i2.z;
            }
            var o2 = t2 / 100, c2 = e2 / 100, s2 = n2 / 100, u2 = 3.2406 * o2 + -1.5372 * c2 + -0.4986 * s2, l2 = -0.9689 * o2 + 1.8758 * c2 + 0.0415 * s2, f = 0.0557 * o2 + -0.204 * c2 + 1.057 * s2;
            u2 = a(u2), l2 = a(l2), f = a(f);
            var h = Object(r.round)(255 * u2), p = Object(r.round)(255 * l2), d = Object(r.round)(255 * f);
            return { r: h, g: p, b: d };
          }
          function c(t2, e2, n2) {
            if (arguments.length == 1) {
              var r2 = arguments[0];
              t2 = r2.l, e2 = r2.a, n2 = r2.b;
            }
            var a2 = (t2 + 16) / 116, o2 = e2 / 500 + a2, c2 = a2 - n2 / 200;
            a2 = i(a2);
            var s2 = 95.047 * (o2 = i(o2)), u2 = 100 * a2, l2 = 108.883 * (c2 = i(c2));
            return { x: s2, y: u2, z: l2 };
          }
          function s(t2) {
            return t2 > 8856e-6 ? Math.pow(t2, 1 / 3) : (7.787 * t2 + 16) / 116;
          }
          function u(t2, e2, n2) {
            if (arguments.length == 1) {
              var r2 = arguments[0];
              t2 = r2.x, e2 = r2.y, n2 = r2.z;
            }
            var i2 = t2 / 95.047, a2 = e2 / 100, o2 = n2 / 108.883;
            i2 = s(i2);
            var c2 = 116 * (a2 = s(a2)) - 16, u2 = 500 * (i2 - a2), l2 = 200 * (a2 - (o2 = s(o2)));
            return { l: c2, a: u2, b: l2 };
          }
          function l(t2, e2, n2) {
            if (arguments.length == 1) {
              var r2 = arguments[0];
              t2 = r2.l, e2 = r2.a, n2 = r2.b;
            }
            return o(c(t2, e2, n2));
          }
        }, function(t, e, n) {
          "use strict";
          n.r(e), n.d(e, "HSVtoRGB", function() {
            return a;
          }), n.d(e, "HSVtoHSL", function() {
            return o;
          });
          var r = n(14), i = n(42);
          function a(t2, e2, n2) {
            if (arguments.length == 1) {
              var i2 = arguments[0];
              t2 = i2.h, e2 = i2.s, n2 = i2.v;
            }
            var a2 = t2, o2 = e2, c = n2;
            a2 >= 360 && (a2 = 0);
            var s = o2 * c, u = s * (1 - Math.abs(a2 / 60 % 2 - 1)), l = c - s, f = [];
            return 0 <= a2 && a2 < 60 ? f = [s, u, 0] : 60 <= a2 && a2 < 120 ? f = [u, s, 0] : 120 <= a2 && a2 < 180 ? f = [0, s, u] : 180 <= a2 && a2 < 240 ? f = [0, u, s] : 240 <= a2 && a2 < 300 ? f = [u, 0, s] : 300 <= a2 && a2 < 360 && (f = [s, 0, u]), { r: Object(r.round)(255 * (f[0] + l)), g: Object(r.round)(255 * (f[1] + l)), b: Object(r.round)(255 * (f[2] + l)) };
          }
          function o(t2, e2, n2) {
            if (arguments.length == 1) {
              var r2 = arguments[0];
              t2 = r2.h, e2 = r2.s, n2 = r2.v;
            }
            var o2 = a(t2, e2, n2);
            return Object(i.RGBtoHSL)(o2.r, o2.g, o2.b);
          }
        }, function(t, e, n) {
          "use strict";
          n.r(e), n.d(e, "interpolateRGB", function() {
            return u;
          }), n.d(e, "interpolateRGBObject", function() {
            return l;
          }), n.d(e, "scale", function() {
            return f;
          }), n.d(e, "blend", function() {
            return h;
          }), n.d(e, "mix", function() {
            return p;
          }), n.d(e, "contrast", function() {
            return d;
          }), n.d(e, "contrastColor", function() {
            return v;
          }), n.d(e, "gradient", function() {
            return y2;
          }), n.d(e, "scaleHSV", function() {
            return g;
          }), n.d(e, "scaleH", function() {
            return m;
          }), n.d(e, "scaleS", function() {
            return b;
          }), n.d(e, "scaleV", function() {
            return k;
          });
          var r = n(25), i = n(14), a = n(57), o = n(42), c = n(77), s = n(8);
          function u(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0.5, r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "hex", i2 = l(t2, e2, n2);
            return Object(a.format)(i2, r2);
          }
          function l(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0.5, r2 = Object(s.isUndefined)(t2.a) ? 1 : t2.a, a2 = Object(s.isUndefined)(e2.a) ? 1 : e2.a;
            return { r: Object(i.round)(t2.r + (e2.r - t2.r) * n2), g: Object(i.round)(t2.g + (e2.g - t2.g) * n2), b: Object(i.round)(t2.b + (e2.b - t2.b) * n2), a: Object(i.round)(r2 + (a2 - r2) * n2, 100) };
          }
          function f(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 5;
            if (!t2)
              return [];
            Object(s.isString)(t2) && (t2 = Object(r.convertMatchesArray)(t2));
            for (var n2 = (t2 = t2 || []).length, i2 = [], a2 = 0; a2 < n2 - 1; a2++)
              for (var o2 = 0; o2 < e2; o2++)
                i2.push(h(t2[a2], t2[a2 + 1], o2 / e2));
            return i2;
          }
          function h(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0.5, i2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "hex", a2 = Object(r.parse)(t2), o2 = Object(r.parse)(e2);
            return u(a2, o2, n2, i2);
          }
          function p(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0.5, r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "hex";
            return h(t2, e2, n2, r2);
          }
          function d(t2) {
            return t2 = Object(r.parse)(t2), (Math.round(299 * t2.r) + Math.round(587 * t2.g) + Math.round(114 * t2.b)) / 1e3;
          }
          function v(t2) {
            return d(t2) >= 128 ? "black" : "white";
          }
          function y2(t2) {
            for (var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10, n2 = [], i2 = e2 - ((t2 = Object(r.parseGradient)(t2)).length - 1), a2 = i2, o2 = 1, c2 = t2.length; o2 < c2; o2++) {
              var s2 = t2[o2 - 1][0], u2 = t2[o2][0], l2 = o2 == 1 ? t2[o2][1] : t2[o2][1] - t2[o2 - 1][1], h2 = o2 == t2.length - 1 ? a2 : Math.floor(l2 * i2);
              n2 = n2.concat(f([s2, u2], h2), [u2]), a2 -= h2;
            }
            return n2;
          }
          function g(t2) {
            for (var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "h", n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 9, i2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "rgb", s2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0, u2 = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : 1, l2 = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : 100, f2 = Object(r.parse)(t2), h2 = Object(o.RGBtoHSV)(f2), p2 = (u2 - s2) * l2 / n2, d2 = [], v2 = 1; v2 <= n2; v2++)
              h2[e2] = Math.abs((l2 - p2 * v2) / l2), d2.push(Object(a.format)(Object(c.HSVtoRGB)(h2), i2));
            return d2;
          }
          function m(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 9, n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "rgb", r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, i2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 360;
            return g(t2, "h", e2, n2, r2, i2, 1);
          }
          function b(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 9, n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "rgb", r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, i2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 1;
            return g(t2, "s", e2, n2, r2, i2, 100);
          }
          function k(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 9, n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "rgb", r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, i2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 1;
            return g(t2, "v", e2, n2, r2, i2, 100);
          }
          f.parula = function(t2) {
            return f(["#352a87", "#0f5cdd", "#00b5a6", "#ffc337", "#fdff00"], t2);
          }, f.jet = function(t2) {
            return f(["#00008f", "#0020ff", "#00ffff", "#51ff77", "#fdff00", "#ff0000", "#800000"], t2);
          }, f.hsv = function(t2) {
            return f(["#ff0000", "#ffff00", "#00ff00", "#00ffff", "#0000ff", "#ff00ff", "#ff0000"], t2);
          }, f.hot = function(t2) {
            return f(["#0b0000", "#ff0000", "#ffff00", "#ffffff"], t2);
          }, f.pink = function(t2) {
            return f(["#1e0000", "#bd7b7b", "#e7e5b2", "#ffffff"], t2);
          }, f.bone = function(t2) {
            return f(["#000000", "#4a4a68", "#a6c6c6", "#ffffff"], t2);
          }, f.copper = function(t2) {
            return f(["#000000", "#3d2618", "#9d623e", "#ffa167", "#ffc77f"], t2);
          };
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return C;
          });
          var r = n(40), i = n.n(r), a = n(15), o = n.n(a), c = n(7), s = n.n(c), u = n(3), l = n.n(u), f = n(4), h = n.n(f), p = n(10), d = n.n(p), v = n(5), y2 = n.n(v), g = n(6), m = n.n(g), b = n(1), k = n.n(b), O = n(30), x2 = n(74), j = n(25), S = n(2);
          function P(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function w(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? P(Object(n2), true).forEach(function(e3) {
                s()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : P(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function R(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = k()(t2);
              if (e2) {
                var i2 = k()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return m()(this, n2);
            };
          }
          var C = function(t2) {
            y2()(n2, t2);
            var e2 = R(n2);
            function n2() {
              return l()(this, n2), e2.apply(this, arguments);
            }
            return h()(n2, [{ key: "getDefaultObject", value: function() {
              return d()(k()(n2.prototype), "getDefaultObject", this).call(this, { itemType: "keyframe", name: "sample", selectedType: "list", offsets: [] });
            } }, { key: "toCloneObject", value: function() {
              var t3 = this.json, e3 = (t3.name, t3.selectedType, t3.offsets);
              return w(w(w({}, d()(k()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("name", "selectedType")), {}, { offsets: e3.map(function(t4) {
                return t4.clone();
              }) });
            } }, { key: "isMultiStyle", value: function(t3) {
              switch (t3) {
                case "background-image":
                case "var":
                  return true;
              }
              return false;
            } }, { key: "getMultiStyleString", value: function(t3) {
              switch (t3.key) {
                case "background-image":
                  return t3.value.toString() + ";";
                case "var":
                  return (t3.value + "").split(";").map(function(t4) {
                    return "--" + t4;
                  }).join(";") + ";";
              }
              return t3.value.toString() + ";";
            } }, { key: "toOffsetString", value: function(t3) {
              var e3 = this;
              return "".concat(t3.offset.toString(), " {\n").concat("      ").concat(t3.properties.map(function(t4) {
                if (e3.isMultiStyle(t4.key))
                  return e3.getMultiStyleString(t4);
                var n3 = (t4.value || "").toString();
                if (n3) {
                  var r2 = t4.key;
                  return r2 === "x" ? r2 = "left" : r2 === "y" && (r2 = "top"), "".concat(r2, ": ").concat(n3, ";");
                }
                return "";
              }).join("").replace(/\;/g, ";\n      ").trim(), "\n  }");
            } }, { key: "toOffsetText", value: function() {
              var t3 = this, e3 = this.json.offsets.map(function(t4) {
                return t4;
              });
              return e3.sort(function(t4, e4) {
                return t4.offset.value > e4.offset.value ? 1 : -1;
              }), e3.map(function(e4) {
                return e4.properties.length === 0 ? "" : t3.toOffsetString(e4);
              }).join("\n");
            } }, { key: "toCSSText", value: function() {
              return this.json.offsets.map(function(t3) {
                return t3;
              }).sort(function(t3, e3) {
                return t3.offset.value > e3.offset.value ? 1 : -1;
              }), "\n@keyframes ".concat(this.json.name, " {\n\n  ").concat(this.toOffsetText(), "\n\n}\n");
            } }, { key: "createOffset", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return this.addOffset(new x2.a(w({ checked: true }, t3)));
            } }, { key: "addOffset", value: function(t3) {
              this.json.offsets.push(t3);
            } }, { key: "removeOffset", value: function(t3) {
              this.json.offsets.splice(t3, 1);
            } }, { key: "sortItem", value: function(t3, e3, n3) {
              t3.splice.apply(t3, [n3 + (e3 < n3 ? -1 : 0), 0].concat(o()(t3.splice(e3, 1))));
            } }, { key: "sortOffset", value: function(t3, e3) {
              this.sortItem(this.json.offsets, t3, e3);
            } }, { key: "updateOffset", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              this.json.offsets[+t3].reset(e3);
            } }, { key: "toCSS", value: function() {
              return {};
            } }, { key: "toString", value: function() {
              return this.toCSSText();
            } }], [{ key: "parse", value: function(t3) {
              return new n2(t3);
            } }, { key: "parseStyle", value: function(t3) {
              var e3 = [], r2 = {};
              if (t3.keyframe) {
                var a2 = Object(j.convertMatches)(t3.keyframe);
                a2.str.split("|").map(function(t4) {
                  return t4.trim();
                }).forEach(function(t4, o2) {
                  var c2 = t4.split(" "), s2 = i()(c2), u2 = s2[0], l2 = s2[1], f2 = s2[2], h2 = s2.slice(3).join(" ");
                  r2[u2] || (r2[u2] = new n2({ name: u2 }), e3[o2] = u2);
                  var p2 = r2[u2].offsets.filter(function(t5) {
                    return t5.offset.equals(S.a.parse(l2));
                  }), d2 = null;
                  p2.length ? d2 = p2[0] : (d2 = new x2.a({ offset: S.a.parse(l2) }), r2[u2].offsets.push(d2)), d2.addProperty({ key: f2, value: Object(j.reverseMatches)(h2, a2.matches) });
                });
              }
              return e3.map(function(t4) {
                return r2[t4].offsets.forEach(function(t5) {
                  var e4 = [], n3 = [];
                  t5.properties.forEach(function(t6) {
                    t6.key.includes("--") ? e4.push(t6) : n3.push(t6);
                  });
                  var r3 = e4.map(function(t6) {
                    return "".concat(t6.key, ":").concat(t6.value);
                  }).join(";");
                  e4.length && n3.push({ key: "var", value: r3 }), t5.properties = n3;
                }), r2[t4];
              });
            } }]), n2;
          }(O.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return i;
          });
          var r = { name: void 0 };
          function i() {
            return r.name === void 0 && (navigator.appVersion.indexOf("Win") != -1 ? r.name = "win" : navigator.appVersion.indexOf("Mac") != -1 ? r.name = "mac" : navigator.appVersion.indexOf("X11") != -1 ? r.name = "linux" : r.name = ""), r.name;
          }
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return x2;
          });
          var r = n(7), i = n.n(r), a = n(3), o = n.n(a), c = n(4), s = n.n(c), u = n(10), l = n.n(u), f = n(5), h = n.n(f), p = n(6), d = n.n(p), v = n(1), y2 = n.n(v), g = n(2), m = n(11);
          function b(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function k(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? b(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : b(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function O(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = y2()(t2);
              if (e2) {
                var i2 = y2()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return d()(this, n2);
            };
          }
          var x2 = function(t2) {
            h()(n2, t2);
            var e2 = O(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return l()(y2()(n2.prototype), "getDefaultObject", this).call(this, k({ itemType: "artboard", name: "New ArtBoard", width: g.a.px(1e3), height: g.a.px(1e3), "background-color": "white", "transform-style": "flat" }, t3));
            } }, { key: "toCloneObject", value: function() {
              return k(k({}, l()(y2()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("name"));
            } }, { key: "getDefaultTitle", value: function() {
              return "ArtBoard";
            } }, { key: "getIcon", value: function() {
              return m.a.artboard;
            } }, { key: "editable", value: function(t3) {
              switch (t3) {
                case "border":
                case "border-radius":
                case "backdrop-filter":
                case "box-shadow":
                case "clip-path":
                  return false;
                case "artboard-size":
                case "layout":
                  return true;
              }
              return l()(y2()(n2.prototype), "editable", this).call(this, t3);
            } }]), n2;
          }(n(83).a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return O;
          });
          var r = n(7), i = n.n(r), a = n(3), o = n.n(a), c = n(4), s = n.n(c), u = n(10), l = n.n(u), f = n(5), h = n.n(f), p = n(6), d = n.n(p), v = n(1), y2 = n.n(v), g = n(30);
          n(8);
          function m(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function b(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? m(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : m(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function k(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = y2()(t2);
              if (e2) {
                var i2 = y2()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return d()(this, n2);
            };
          }
          var O = function(t2) {
            h()(n2, t2);
            var e2 = k(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "getDefaultObject", value: function(t3) {
              return l()(y2()(n2.prototype), "getDefaultObject", this).call(this, b({ itemType: "selector", selector: "", properties: [] }, t3));
            } }, { key: "toCloneObject", value: function() {
              return b(b({}, l()(y2()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("selector", "properties"));
            } }, { key: "isMultiStyle", value: function(t3) {
              switch (t3) {
                case "background-image":
                case "var":
                  return true;
              }
              return false;
            } }, { key: "getMultiStyleString", value: function(t3) {
              switch (t3.key) {
                case "background-image":
                  return t3.value.toString() + ";";
              }
              return t3.value.toString() + " !important;";
            } }, { key: "toPropertyString", value: function() {
              var t3 = this;
              return this.json.properties.map(function(e3) {
                if (t3.isMultiStyle(e3.key))
                  return t3.getMultiStyleString(e3);
                var n3 = e3.value.toString();
                if (n3) {
                  var r2 = e3.key;
                  return r2 === "x" ? r2 = "left" : r2 === "y" && (r2 = "top"), "".concat(r2, ": ").concat(n3, " !important;");
                }
                return "";
              }).join("\n");
            } }, { key: "toCSSText", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
              return "".concat(t3).concat(this.json.selector, " {\n    ").concat(this.toPropertyString(), "\n}");
            } }, { key: "toCSS", value: function() {
              return {};
            } }, { key: "toString", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
              return this.toCSSText(t3);
            } }], [{ key: "parse", value: function(t3) {
              return new n2(t3);
            } }]), n2;
          }(g.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return E;
          });
          var r = n(15), i = n.n(r), a = n(7), o = n.n(a), c = n(3), s = n.n(c), u = n(4), l = n.n(u), f = n(10), h = n.n(f), p = n(5), d = n.n(p), v = n(6), y2 = n.n(v), g = n(1), m = n.n(g), b = n(2);
          function k(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = m()(t2);
              if (e2) {
                var i2 = m()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return y2()(this, n2);
            };
          }
          var O = function(t2) {
            d()(n2, t2);
            var e2 = k(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "isGroup", get: function() {
              return Boolean(this.layers.length);
            } }, { key: "isLayoutItem", value: function() {
              return this.parent.hasLayout();
            } }, { key: "hasLayout", value: function() {
              return this.json.layout !== "default";
            } }, { key: "isInGrid", value: function() {
              return !!this.isLayoutItem() && this.parent.layout === "grid";
            } }, { key: "isInFlex", value: function() {
              return !!this.isLayoutItem() && this.parent.layout === "flex";
            } }]), n2;
          }(n(70).a), x2 = n(82), j = n(36), S = n(29);
          function P(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function w(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? P(Object(n2), true).forEach(function(e3) {
                o()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : P(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function R(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = m()(t2);
              if (e2) {
                var i2 = m()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return y2()(this, n2);
            };
          }
          var C = {};
          ["appearance", "position", "right", "bottom", "rootVariable", "variable", "transform", "filter", "backdrop-filter", "background-color", "background-image", "border-radius", "border", "box-shadow", "clip-path", "color", "perspective-origin", "transform-origin", "transform-style", "perspective", "mix-blend-mode", "overflow", "opacity", "flex-layout", "grid-layout", "animation", "transition", "pattern"].forEach(function(t2) {
            C[t2] = true;
          });
          var E = function(t2) {
            d()(n2, t2);
            var e2 = R(n2);
            function n2() {
              return s()(this, n2), e2.apply(this, arguments);
            }
            return l()(n2, [{ key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return h()(m()(n2.prototype), "getDefaultObject", this).call(this, w({ position: "absolute", x: b.a.z(), y: b.a.z(), right: "", bottom: "", rootVariable: "", variable: "", width: b.a.px(300), height: b.a.px(300), color: "black", overflow: "visible", opacity: 1, "z-index": b.a.auto, "transform-style": "preserve-3d", layout: "default", "flex-layout": "display:flex;", "grid-layout": "display:grid;", selectors: [], svg: [] }, t3));
            } }, { key: "toCloneObject", value: function() {
              var t3 = this.json;
              return w(w(w({}, h()(m()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("position", "right", "bottom", "rootVariable", "variable", "transform", "filter", "backdrop-filter", "background-color", "background-image", "text-clip", "border-radius", "border", "box-shadow", "text-shadow", "clip-path", "color", "font-size", "font-stretch", "line-height", "text-align", "text-transform", "text-decoration", "letter-spacing", "word-spacing", "text-indent", "perspective-origin", "transform-origin", "transform-style", "perspective", "mix-blend-mode", "overflow", "opacity", "flex-layout", "grid-layout", "animation", "transition")), {}, { selectors: t3.selectors.map(function(t4) {
                return t4.clone();
              }), svg: t3.svg.map(function(t4) {
                return t4.clone();
              }) });
            } }, { key: "editable", value: function(t3) {
              if (t3 == "border" && this.hasChildren())
                return false;
              switch (t3) {
                case "svg-item":
                case "box-model":
                case "transform":
                case "transform-origin":
                case "perspective":
                case "perspective-origin":
                  return false;
              }
              return Boolean(C[t3]);
            } }, { key: "addSelector", value: function(t3) {
              return this.json.selectors.push(t3), t3;
            } }, { key: "createSelector", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return this.addSelector(new x2.a(w({ checked: true }, t3)));
            } }, { key: "removePropertyList", value: function(t3, e3) {
              t3.splice(e3, 1);
            } }, { key: "removeSelector", value: function(t3) {
              this.removePropertyList(this.json.selectors, t3);
            } }, { key: "enableHasChildren", value: function() {
              return true;
            } }, { key: "sortItem", value: function(t3, e3, n3) {
              t3.splice.apply(t3, [n3 + (e3 < n3 ? -1 : 0), 0].concat(i()(t3.splice(e3, 1))));
            } }, { key: "updateSelector", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              this.json.selectors[+t3].reset(e3);
            } }, { key: "traverse", value: function(t3, e3, n3) {
              var r2 = this;
              t3.isAttribute() || (n3 || !t3.isLayoutItem() || t3.isRootItem()) && (e3.push(t3), t3.children.forEach(function(t4) {
                r2.traverse(t4, e3);
              }));
            } }, { key: "tree", value: function(t3) {
              var e3 = this, n3 = [];
              return this.children.forEach(function(r2) {
                e3.traverse(r2, n3, t3);
              }), n3;
            } }, { key: "toAnimationKeyframes", value: function(t3) {
              return [{ selector: '[data-id="'.concat(this.json.id, '"]'), properties: t3 }];
            } }, { key: "toBound", value: function() {
              var t3 = { x: this.json.x ? this.json.x.clone() : b.a.z(), y: this.json.y ? this.json.y.clone() : b.a.z(), width: this.json.width.clone(), height: this.json.height.clone() };
              return t3.x2 = b.a.px(t3.x.value + t3.width.value), t3.y2 = b.a.px(t3.y.value + t3.height.value), t3;
            } }, { key: "reset", value: function(t3) {
              var e3 = h()(m()(n2.prototype), "reset", this).call(this, t3);
              return e3 && this.hasChangedField("clip-path") && this.setClipPathCache(), e3;
            } }, { key: "setClipPathCache", value: function() {
              var t3 = j.a.parseStyle(this.json["clip-path"]);
              t3.type === "path" && (this.cacheClipPath = new S.a(t3.value.trim()));
            } }, { key: "setCache", value: function() {
              h()(m()(n2.prototype), "setCache", this).call(this), this.setClipPathCache();
            } }, { key: "clipPathString", get: function() {
              if (this.cacheClipPath || this.setClipPathCache(), this.cacheClipPath)
                return this.cacheClipPath.clone().scaleTo(this.json.width.value, this.json.height.value);
            } }]), n2;
          }(O);
        }, function(t, e, n) {
          var r = n(93);
          t.exports = function(t2, e2) {
            if (t2) {
              if (typeof t2 == "string")
                return r(t2, e2);
              var n2 = Object.prototype.toString.call(t2).slice(8, -1);
              return n2 === "Object" && t2.constructor && (n2 = t2.constructor.name), n2 === "Map" || n2 === "Set" ? Array.from(t2) : n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2) ? r(t2, e2) : void 0;
            }
          }, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e) {
          function n(e2) {
            return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? (t.exports = n = function(t2) {
              return typeof t2;
            }, t.exports.default = t.exports, t.exports.__esModule = true) : (t.exports = n = function(t2) {
              return t2 && typeof Symbol == "function" && t2.constructor === Symbol && t2 !== Symbol.prototype ? "symbol" : typeof t2;
            }, t.exports.default = t.exports, t.exports.__esModule = true), n(e2);
          }
          t.exports = n, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return g;
          });
          var r = n(12), i = n.n(r), a = n(15), o = n.n(a), c = n(3), s = n.n(c), u = n(4), l = n.n(u), f = n(21), h = n(8), p = (n(32), n(70)), d = (n(59), n(2)), v = n(9);
          function y2(t2, e2) {
            var n2 = [];
            return t2.layers.length && t2.layers.forEach(function(t3) {
              n2.push.apply(n2, y2(t3, e2));
            }), (e2.id || e2.includes(t2.id)) && n2.push(t2), n2;
          }
          var g = function() {
            function t2(e2) {
              var n2 = this;
              s()(this, t2), this.$editor = e2, this.project = null, this.items = [], this.itemKeys = {}, this.hoverId = "", this.hoverItems = [], this.ids = [], this.idsString = "", this.colorsteps = [], this.cachedItemVerties = [], this.cachedArtBoardVerties = [], this.cachedVerties = Object(f.e)(0, 0, 0, 0, "50% 50% 0px"), this.selectionCamera = new p.a({ parent: this.currentProject, x: d.a.px(0), y: d.a.px(0), width: d.a.px(0), height: d.a.px(0) }), this.$editor.on("config:bodyEvent", function() {
                n2.refreshMousePosition();
              });
            }
            return l()(t2, [{ key: "refreshMousePosition", value: function() {
              var t3 = this.$editor.config, e2 = this.$editor.viewport.getWorldPosition();
              this.pos = e2, this.column = Math.ceil(e2[0] / t3.get("area.width")), this.row = Math.ceil(e2[1] / t3.get("area.width"));
            } }, { key: "initialize", value: function() {
              this.items = [], this.itemKeys = {}, this.ids = [], this.idsString = "", this.cachedItemVerties = {};
            } }, { key: "current", get: function() {
              return this.items[0];
            } }, { key: "currentProject", get: function() {
              return this.project;
            } }, { key: "isEmpty", get: function() {
              return !this.length;
            } }, { key: "isOne", get: function() {
              return this.length === 1;
            } }, { key: "isMany", get: function() {
              return this.length > 1;
            } }, { key: "length", get: function() {
              return this.items.length;
            } }, { key: "isLayoutItem", get: function() {
              var t3;
              return (t3 = this.current) === null || t3 === void 0 ? void 0 : t3.isLayoutItem();
            } }, { key: "allLayers", get: function() {
              return this.currentProject.allLayers || [];
            } }, { key: "filteredLayers", get: function() {
              var t3 = this;
              return this.currentProject.filteredAllLayers(function(e2) {
                var n2 = e2.areaPosition;
                if (!n2)
                  return false;
                var r2 = n2.column, i2 = n2.row;
                return r2[0] <= t3.column && t3.column <= r2[1] && i2[0] <= t3.row && t3.row <= i2[1];
              }).filter(function(e2) {
                return e2.hasPoint(t3.pos[0], t3.pos[1]);
              });
            } }, { key: "snapTargetLayers", get: function() {
              var t3 = this;
              return this.currentProject ? this.currentProject.allLayers.filter(function(e2) {
                return !e2.is("project") && (!t3.check(e2) && e2.verties.some(function(e3) {
                  return t3.$editor.viewport.checkInViewport(e3);
                }));
              }) : [];
            } }, { key: "snapTargetLayersWithSelection", get: function() {
              var t3 = this;
              return this.currentProject ? this.currentProject.allLayers.filter(function(e2) {
                return !e2.is("project") && e2.verties.some(function(e3) {
                  return t3.$editor.viewport.checkInViewport(e3);
                });
              }) : [];
            } }, { key: "selectedArtboards", get: function() {
              return o()(new Set(this.items.map(function(t3) {
                return t3.artboard;
              })));
            } }, { key: "hasChangedField", value: function() {
              var t3;
              return !!this.current && (t3 = this.current).hasChangedField.apply(t3, arguments);
            } }, { key: "getRootItem", value: function(t3) {
              var e2 = t3;
              return t3 && t3.parent && (e2 = t3.parent), e2;
            } }, { key: "selectColorStep", value: function() {
              for (var t3 = arguments.length, e2 = new Array(t3), n2 = 0; n2 < t3; n2++)
                e2[n2] = arguments[n2];
              this.colorsteps = e2;
            } }, { key: "isSelectedColorStep", value: function(t3) {
              return this.colorsteps.includes(t3);
            } }, { key: "selectProject", value: function(t3) {
              this.project = t3;
            } }, { key: "isRelative", get: function() {
              return (this.items[0] || {}).position === "relative";
            } }, { key: "isSameIds", value: function(t3) {
              return this.ids.length == t3.length && this.ids.filter(function(e2) {
                return t3.includes(e2);
              }).length === this.ids.length;
            } }, { key: "select", value: function() {
              for (var t3 = this, e2 = arguments.length, n2 = new Array(e2), r2 = 0; r2 < e2; r2++)
                n2[r2] = arguments[r2];
              var i2 = (n2 || []).filter(function(t4) {
                return !t4.lock && t4.isAbsolute;
              }), a2 = i2.filter(function(t4) {
                return t4.path.filter(function(t5) {
                  return i2.includes(t5);
                }).length < 2;
              }), o2 = a2.map(function(t4) {
                return t4.id;
              });
              return !this.isSameIds(o2) && (this.items = a2, this.itemKeys = {}, this.items.forEach(function(e3) {
                t3.itemKeys[e3.id] = e3;
              }), this.ids = Object.keys(this.itemKeys), this.ids.sort(), this.idsString = this.ids.join(","), this.setRectCache(), true);
            } }, { key: "reload", value: function() {
              return this.select.apply(this, o()(this.itemsByIds(this.ids)));
            } }, { key: "reselect", value: function() {
              this.setRectCache();
            } }, { key: "check", value: function(t3) {
              return !!this.itemKeys[t3.id];
            } }, { key: "get", value: function(t3) {
              return this.itemKeys[t3];
            } }, { key: "empty", value: function() {
              this.select();
            } }, { key: "itemsByIds", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, e2 = [];
              if (Object(h.isArray)(t3) ? e2 = t3 : (Object(h.isString)(t3) || Object(h.isObject)(t3)) && (e2 = [t3]), e2.length) {
                var n2 = this.project, r2 = [], i2 = [];
                e2.forEach(function(t4) {
                  n2.hasIndexItem(t4) ? r2.push(n2.getIndexItem(t4)) : i2.push(t4);
                });
                var a2 = y2(this.project, i2);
                return a2.forEach(function(t4) {
                  n2.addIndexItem(t4);
                }), r2.push.apply(r2, a2), r2;
              }
              return this.items;
            } }, { key: "makeItemMap", value: function(t3) {
              var e2 = {};
              return this.ids.forEach(function(n2) {
                e2[n2] = Object(h.clone)(t3);
              }), e2;
            } }, { key: "selectById", value: function(t3) {
              t3 && this.select.apply(this, o()(y2(this.project, t3)));
            } }, { key: "selectAfterCopy", value: function() {
              this.select.apply(this, o()(this.items.map(function(t3) {
                return t3.copy();
              })));
            } }, { key: "addById", value: function(t3) {
              this.itemKeys[t3] || this.select.apply(this, o()(this.items).concat(o()(y2(this.project, t3))));
            } }, { key: "removeById", value: function(t3) {
              var e2 = t3;
              Object(h.isString)(t3) && (e2 = [t3]);
              var n2 = this.items.filter(function(t4) {
                return e2.includes(t4.id) === false;
              });
              this.select.apply(this, o()(n2));
            } }, { key: "toggleById", value: function(t3) {
              this.itemKeys[t3] ? this.removeById(t3) : this.addById(t3);
            } }, { key: "getArtboardByPoint", value: function(t3) {
              return this.currentProject.artboards.find(function(e2) {
                var n2 = e2.matrix.verties.filter(function(t4, e3) {
                  return e3 < 4;
                });
                return Object(f.c)(n2, t3[0], t3[1]);
              });
            } }, { key: "changeArtBoard", value: function() {
              var t3 = this, e2 = false;
              return this.each(function(n2) {
                if (n2.is("artboard") === false) {
                  var r2 = n2.originVerties;
                  if (n2.artboard) {
                    var i2 = n2.artboard.originVerties;
                    if (Object(f.c)(i2, r2[0][0], r2[0][1]) || Object(f.d)(r2, i2))
                      return false;
                  }
                  var a2 = t3.cachedArtBoardVerties.find(function(t4) {
                    var e3 = t4.matrix.verties.filter(function(t5, e4) {
                      return e4 < 4;
                    });
                    return Object(f.c)(e3, r2[0][0], r2[0][1]) || Object(f.d)(r2, e3);
                  });
                  a2 ? a2.item !== n2.artboard && (a2.item.appendChildItem(n2), e2 = true) : n2.artboard && (t3.currentProject.appendChildItem(n2), e2 = true);
                }
              }), e2;
            } }, { key: "setRectCache", value: function() {
              if (this.isEmpty)
                return this.cachedVerties = [], this.cachedRectVerties = [], this.cachedItemVerties = [], void (this.cachedArtBoardVerties = this.currentProject.artboards.map(function(t3) {
                  return { item: t3, matrix: t3.matrix };
                }));
              this.cachedVerties = this.verties, this.cachedRectVerties = Object(f.g)(this.verties), this.cachedItemVerties = this.items.map(function(t3) {
                return t3.fakeParent = void 0, t3.matrix;
              }), this.cachedArtBoardVerties = this.currentProject.artboards.map(function(t3) {
                return { item: t3, matrix: t3.matrix };
              });
            } }, { key: "verties", get: function() {
              return this.isOne ? this.current.verties : this.rectVerties;
            } }, { key: "selectionVerties", get: function() {
              return this.isOne ? this.current.selectionVerties() : this.rectVerties;
            } }, { key: "rectVerties", get: function() {
              return this.isEmpty ? [] : Object(f.b)(this.items);
            } }, { key: "itemRect", get: function() {
              var t3 = this.verties;
              return { x: d.a.px(t3[0][0]), y: d.a.px(t3[0][1]), width: d.a.px(v.d.distance(t3[0], t3[1])), height: d.a.px(v.d.distance(t3[0], t3[3])) };
            } }, { key: "toCloneObject", value: function() {
              var t3 = {};
              return this.each(function(e2) {
                t3[e2.id] = e2.toCloneObject(false);
              }), t3;
            } }, { key: "pack", value: function() {
              for (var t3 = arguments.length, e2 = new Array(t3), n2 = 0; n2 < t3; n2++)
                e2[n2] = arguments[n2];
              var r2 = {};
              return this.each(function(t4) {
                r2[t4.id] = {}, e2.forEach(function(e3) {
                  r2[t4.id][e3] = t4[e3];
                });
              }), r2;
            } }, { key: "packByValue", value: function(t3) {
              var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, n2 = {}, r2 = [];
              return e2 === null ? r2 = this.items : (Object(h.isString)(e2) || Object(h.isArray)(e2)) && (r2 = this.itemsByIds(e2)), r2.forEach(function(e3) {
                n2[e3.id] = {}, Object.keys(t3).forEach(function(r3) {
                  n2[e3.id][r3] = Object(h.isFunction)(t3[r3]) ? t3[r3].call(t3, e3) : t3[r3];
                });
              }), n2;
            } }, { key: "each", value: function(t3) {
              Object(h.isFunction)(t3) && this.items.forEach(function(e2, n2) {
                t3(e2);
              });
            } }, { key: "map", value: function(t3) {
              return Object(h.isFunction)(t3) ? this.items.map(function(e2, n2) {
                return t3(e2, n2);
              }) : this.items;
            } }, { key: "reset", value: function(t3) {
              var e2 = this;
              Object.entries(t3).forEach(function(t4) {
                var n2, r2 = i()(t4, 2), a2 = r2[0], o2 = r2[1];
                (n2 = e2.get(a2)) === null || n2 === void 0 || n2.reset(o2);
              });
            } }, { key: "resetCallback", value: function(t3) {
              this.each(function(e2) {
                return e2.reset(t3(e2));
              });
            } }, { key: "resize", value: function() {
              this.each(function(t3) {
                return t3.resize();
              });
            } }, { key: "remove", value: function() {
              this.each(function(t3) {
                return t3.remove();
              }), this.empty();
            } }, { key: "copy", value: function() {
              this.copyItems = this.items.map(function(t3) {
                return t3;
              });
            } }, { key: "paste", value: function() {
              this.select.apply(this, o()(this.copyItems.map(function(t3) {
                return t3.copy(10);
              }))), this.copy();
            } }, { key: "isInParent", value: function(t3) {
              for (var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], n2 = t3, r2 = n2.parent, i2 = e2.includes(r2); !i2 && !Object(h.isUndefined)(r2); )
                n2 = r2, r2 = r2.parent, i2 = e2.includes(r2);
              return i2;
            } }, { key: "hasPoint", value: function(t3) {
              return this.isMany ? Object(f.c)(this.rectVerties, t3[0], t3[1]) : this.cachedItemVerties.some(function(e2) {
                return Object(f.c)(e2.verties, t3[0], t3[1]);
              });
            } }, { key: "checkHover", value: function(t3) {
              return Object(h.isString)(t3) ? this.hoverId === t3 : this.hoverItems.findIndex(function(e2) {
                return e2.id === t3.id;
              }) > -1;
            } }, { key: "setHoverId", value: function(t3) {
              var e2 = false;
              return !t3 || this.itemKeys[t3] || this.cachedArtBoardVerties.find(function(e3) {
                return e3.item.id === t3;
              }) ? (this.hoverId != "" && (e2 = true), this.hoverId = "", this.hoverItems = []) : (this.hoverId != t3 && (e2 = true), this.hoverId = t3, this.hoverItems = this.itemsByIds([t3]).filter(function(t4) {
                return t4.is("artboard") === false;
              }), this.hoverItems.length === 0 && (this.hoverId = "", e2 = true)), e2 && this.$editor.emit("changeHoverItem"), e2;
            } }]), t2;
          }();
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return c;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = function() {
            function t2(e2) {
              i()(this, t2), this.editor = e2, this.configList = [], this.config = new Map();
            }
            return o()(t2, [{ key: "get", value: function(t3) {
              var e2;
              this.config.has(t3) === false && this.config.set(t3, (e2 = this.configList.find(function(e3) {
                return e3.key == t3;
              })) === null || e2 === void 0 ? void 0 : e2.defaultValue);
              return this.config.get(t3);
            } }, { key: "set", value: function(t3, e2) {
              var n2 = this.config.get(t3);
              n2 !== e2 && (this.config.set(t3, e2), this.editor.emit("config:" + t3, e2, n2));
            } }, { key: "setAll", value: function(t3) {
              var e2 = this;
              Object.keys(t3).forEach(function(n2) {
                e2.set(n2, t3[n2]);
              });
            } }, { key: "getType", value: function(t3) {
              var e2;
              return (e2 = this.configList.find(function(e3) {
                return e3.key == t3;
              })) === null || e2 === void 0 ? void 0 : e2.type;
            } }, { key: "isType", value: function(t3, e2) {
              return this.getType(t3) === e2;
            } }, { key: "isBoolean", value: function(t3) {
              return this.isType(t3, "boolean");
            } }, { key: "toggle", value: function(t3) {
              this.isBoolean(t3) && this.set(t3, !this.get(t3));
            } }, { key: "true", value: function(t3) {
              return this.get(t3) === true;
            } }, { key: "false", value: function(t3) {
              return this.get(t3) === false;
            } }, { key: "remove", value: function(t3) {
              this.config.delete(t3), this.editor.emit("config:" + t3);
            } }, { key: "registerConfig", value: function(t3) {
              this.config.set(t3.key, t3.defaultValue), this.configList.push(t3);
            } }]), t2;
          }();
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return h;
          });
          var r = n(12), i = n.n(r), a = n(3), o = n.n(a), c = n(4), s = n.n(c), u = n(21), l = n(14), f = n(9), h = function() {
            function t2(e2) {
              o()(this, t2), this.editor = e2, this.canvasSize = null, this.cachedViewport = Object(u.e)(0, 0, 0, 0), this.mouse = f.d.create(), this.scale = 1, this.translate = f.d.create(), this.transformOrigin = f.d.create(), this.maxScale = 250, this.minScale = 0.2, this.zoomFactor = 1, this.resetWorldMatrix();
            }
            return s()(t2, [{ key: "setTransformOrigin", value: function(t3) {
              this.transformOrigin = t3, this.resetWorldMatrix();
            } }, { key: "setTransformOriginWithTranslate", value: function(t3) {
              var e2 = f.d.clone(this.transformOrigin);
              this.setTransformOrigin(t3), this.setTranslate(f.d.add([], this.translate, f.d.subtract([], e2, t3)));
            } }, { key: "setScale", value: function(t3) {
              this.scale = Math.min(Math.max(this.minScale, t3), this.maxScale), this.resetWorldMatrix();
            } }, { key: "setTranslate", value: function(t3) {
              this.translate = t3, this.resetWorldMatrix();
            } }, { key: "resetWorldMatrix", value: function() {
              this.matrix = Object(l.calculateMatrix)(f.a.fromTranslation([], this.translate), f.a.fromTranslation([], this.transformOrigin), f.a.fromScaling([], [this.scale, this.scale, 1]), f.a.fromTranslation([], f.d.negate([], this.transformOrigin))), this.matrixInverse = f.a.invert([], this.matrix), this.scaleMatrix = Object(l.calculateMatrix)(f.a.fromScaling([], [this.scale, this.scale, 1])), this.scaleMatrixInverse = f.a.invert([], this.scaleMatrix), this.refresh();
            } }, { key: "refreshCanvasSize", value: function(t3) {
              if (this.canvasSize) {
                this.canvasSize = { x: t3.x, y: t3.y, width: t3.width, height: t3.height }, this.cachedViewport = Object(u.e)(0, 0, this.canvasSize.width, this.canvasSize.height);
                var e2 = f.d.transformMat4([], [this.canvasSize.width, this.canvasSize.height, 0], this.scaleMatrixInverse), n2 = f.d.add([], this.verties[0], [e2[0] / 2, e2[1] / 2, 0]), r2 = f.a.getTranslation([], Object(l.calculateMatrix)(this.matrix, Object(l.calculateMatrixInverse)(f.a.fromTranslation([], n2), this.scaleMatrix, f.a.invert([], f.a.fromTranslation([], n2)))));
                this.setTranslate(r2), this.setTransformOrigin(n2);
              } else
                this.canvasSize = { x: t3.x, y: t3.y, width: t3.width, height: t3.height }, this.cachedViewport = Object(u.e)(0, 0, this.canvasSize.width, this.canvasSize.height), this.setTransformOrigin([this.canvasSize.width / 2, this.canvasSize.height / 2, 0]);
              this.editor.emit("updateViewport");
            } }, { key: "refresh", value: function() {
              this.cachedViewport && (this.verties = Object(l.vertiesMap)(this.cachedViewport, this.matrixInverse));
            } }, { key: "getWorldPosition", value: function(t3) {
              return t3 = t3 || this.editor.config.get("bodyEvent"), this.createWorldPosition(t3.clientX, t3.clientY);
            } }, { key: "createWorldPosition", value: function(t3, e2) {
              var n2 = t3 - this.canvasSize.x, r2 = e2 - this.canvasSize.y;
              return [this.verties[0][0] + (this.verties[2][0] - this.verties[0][0]) * (n2 / this.canvasSize.width), this.verties[0][1] + (this.verties[2][1] - this.verties[0][1]) * (r2 / this.canvasSize.height), 0];
            } }, { key: "setMousePoint", value: function(t3, e2) {
              this.mouse = this.createWorldPosition(t3, e2), this.setTransformOriginWithTranslate(f.d.lerp([], this.verties[0], this.verties[2], 0.5)), this.editor.emit("updateViewport");
            } }, { key: "zoom", value: function(t3) {
              var e2 = this.scale, n2 = e2 * t3;
              this.setScale(n2);
              var r2 = this.scale / e2;
              this.zoomFactor = r2, r2 !== 1 && (this.setTransformOriginWithTranslate(f.d.lerp([], this.mouse, this.transformOrigin, 1 / t3)), this.editor.emit("updateViewport"));
            } }, { key: "pan", value: function(t3, e2) {
              this.setTransformOriginWithTranslate(f.d.add([], this.transformOrigin, [t3, e2, 0])), this.editor.emit("updateViewport");
            } }, { key: "moveLayerToCenter", value: function(t3) {
              var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -0.2, n2 = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2], r2 = f.d.lerp([], t3[0], t3[2], 0.5), i2 = f.d.dist(t3[0], t3[1]), a2 = f.d.dist(t3[0], t3[3]), o2 = f.d.lerp([], this.verties[0], this.verties[2], 0.5), c2 = f.d.dist(this.verties[0], this.verties[1]), s2 = f.d.dist(this.verties[0], this.verties[3]), u2 = n2 ? Math.min(c2 / i2, s2 / a2) + e2 : 1;
              this.setTranslate(f.d.add([], this.translate, f.d.subtract([], o2, r2))), this.setTransformOrigin(r2), this.setScale(this.scale * u2), this.editor.emit("updateViewport");
            } }, { key: "pos", get: function() {
              return [(this.mouse[0] - this.verties[0][0]) / (this.verties[2][0] - this.verties[0][0]) * 100, (this.mouse[1] - this.verties[0][1]) / (this.verties[2][1] - this.verties[0][1]) * 100, 0];
            } }, { key: "minX", get: function() {
              return this.verties[0][0];
            } }, { key: "maxX", get: function() {
              return this.verties[2][0];
            } }, { key: "minY", get: function() {
              return this.verties[0][1];
            } }, { key: "maxY", get: function() {
              return this.verties[2][1];
            } }, { key: "center", get: function() {
              return this.verties[4];
            } }, { key: "height", get: function() {
              return this.maxY - this.minY;
            } }, { key: "width", get: function() {
              return this.maxX - this.minX;
            } }, { key: "checkInViewport", value: function(t3) {
              var e2 = i()(t3, 3), n2 = e2[0], r2 = e2[1], a2 = (e2[2], this.minX < n2 && n2 < this.maxX), o2 = this.minY < r2 && r2 < this.maxY;
              return a2 && o2;
            } }, { key: "applyVertex", value: function(t3) {
              return f.d.transformMat4([], t3, this.matrix);
            } }, { key: "applyVertexInverse", value: function(t3) {
              return f.d.transformMat4([], t3, this.matrixInverse);
            } }, { key: "applyVerties", value: function(t3) {
              return Object(l.vertiesMap)(t3, this.matrix);
            } }, { key: "applyScaleVerties", value: function(t3) {
              return Object(l.vertiesMap)(t3, this.scaleMatrix);
            } }, { key: "applyVertiesInverse", value: function(t3) {
              return Object(l.vertiesMap)(t3, this.matrixInverse);
            } }, { key: "applyScaleVertiesInverse", value: function(t3) {
              return Object(l.vertiesMap)(t3, this.scaleMatrixInverse);
            } }, { key: "createAreaVerties", value: function(t3, e2, n2, r2) {
              return this.applyVertiesInverse(Object(u.f)(t3, e2, n2, r2));
            } }]), t2;
          }();
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return c;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = function() {
            function t2(e2) {
              i()(this, t2), this.editor = e2, this.menuItems = {};
            }
            return o()(t2, [{ key: "registerMenuItem", value: function(t3, e2) {
              var n2 = this;
              this.menuItems[t3] || (this.menuItems[t3] = []), Object.keys(e2).forEach(function(r2) {
                n2.menuItems[t3].push({ refClass: r2, class: e2[r2] });
              });
            } }, { key: "getTargetMenuItems", value: function(t3) {
              return this.menuItems[t3] || [];
            } }, { key: "generate", value: function(t3) {
              var e2 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
              return this.getTargetMenuItems(t3).map(function(t4) {
                var n2 = e2 ? 'ref="$'.concat(t4.refClass, '"') : "";
                return '<object refClass="'.concat(t4.refClass, '" ').concat(n2, " />");
              }).join("\n");
            } }]), t2;
          }();
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return Q;
          });
          var r = n(40), i = n.n(r), a = n(18), o = n.n(a), c = n(15), s = n.n(c), u = n(12), l = n.n(u), f = n(53), h = n.n(f), p = n(3), d = n.n(p), v = n(4), y2 = n.n(v), g = n(7), m = n.n(g), b = n(16), k = n.n(b), O = n(0), x2 = n(19), j = n(8), S = n(69), P = n(14), w = n(5), R = n.n(w), C = n(6), E = n.n(C), $ = n(1), I = n.n($), T = function() {
            function t2(e2) {
              var n2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              d()(this, t2), this.context = e2, this.options = n2;
            }
            return y2()(t2, [{ key: "initialize", value: function() {
            } }, { key: "load", value: function() {
            } }, { key: "refresh", value: function() {
            } }, { key: "render", value: function() {
            } }, { key: "getRef", value: function(t3) {
              return this.context.getRef(t3);
            } }, { key: "run", value: function() {
            } }, { key: "destroy", value: function() {
            } }]), t2;
          }();
          function B(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = I()(t2);
              if (e2) {
                var i2 = I()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return E()(this, n2);
            };
          }
          var M = { touchstart: true, touchmove: true, mousedown: true, mouseup: true, mousemove: true }, V = { doubletab: "touchend" }, D = { doubletab: true }, L = function(t2) {
            R()(n2, t2);
            var e2 = B(n2);
            function n2() {
              return d()(this, n2), e2.apply(this, arguments);
            }
            return y2()(n2, [{ key: "initialize", value: function() {
              var t3 = this;
              this.destroy(), this._domEvents || (this._domEvents = this.context.filterProps(O.CHECK_DOM_EVENT_PATTERN)), this._domEvents.forEach(function(e3) {
                return t3.parseDomEvent(e3);
              });
            } }, { key: "destroy", value: function() {
              this.removeEventAll();
            } }, { key: "removeEventAll", value: function() {
              var t3 = this;
              this.getBindings().forEach(function(e3) {
                t3.removeDomEvent(e3);
              }), this.initBindings();
            } }, { key: "removeDomEvent", value: function(t3) {
              var e3 = t3.eventName, n3 = t3.dom, r2 = t3.callback;
              O.default.removeDomEvent(n3, e3, r2);
            } }, { key: "getBindings", value: function() {
              return this._bindings || this.initBindings(), this._bindings;
            } }, { key: "addBinding", value: function(t3) {
              this.getBindings().push(t3);
            } }, { key: "initBindings", value: function() {
              this._bindings = [];
            } }, { key: "matchPath", value: function(t3, e3) {
              return t3 ? t3.matches(e3) ? t3 : this.matchPath(t3.parentElement, e3) : null;
            } }, { key: "hasDelegate", value: function(t3, e3) {
              return this.matchPath(t3.target || t3.srcElement, e3.delegate);
            } }, { key: "makeCallback", value: function(t3, e3) {
              return t3.delegate ? this.makeDelegateCallback(t3, e3) : this.makeDefaultCallback(t3, e3);
            } }, { key: "makeDefaultCallback", value: function(t3, e3) {
              var n3 = this;
              return function(r2) {
                var i2 = n3.runEventCallback(r2, t3, e3);
                if (Object(j.isNotUndefined)(i2))
                  return i2;
              };
            } }, { key: "makeDelegateCallback", value: function(t3, e3) {
              var n3 = this;
              return function(r2) {
                var i2 = n3.hasDelegate(r2, t3);
                if (i2) {
                  r2.$dt = x2.a.create(i2);
                  var a2 = n3.runEventCallback(r2, t3, e3);
                  if (Object(j.isNotUndefined)(a2))
                    return a2;
                }
              };
            } }, { key: "runEventCallback", value: function(t3, e3, n3) {
              var r2 = this.context;
              if (t3.xy = O.default.posXY(t3), e3.beforeMethods.length && e3.beforeMethods.every(function(e4) {
                return r2[e4.target].call(r2, t3, e4.param);
              }), this.checkEventType(t3, e3)) {
                var i2 = n3(t3, t3.$dt, t3.xy);
                return i2 !== false && e3.afterMethods.length && e3.afterMethods.forEach(function(e4) {
                  return r2[e4.target].call(r2, t3, e4.param);
                }), i2;
              }
            } }, { key: "checkEventType", value: function(t3, e3) {
              var n3 = this.context, r2 = true;
              e3.codes.length && (r2 = !!t3.code && e3.codes.indexOf(t3.code.toLowerCase()) > -1 || !!t3.key && e3.codes.indexOf(t3.key.toLowerCase()) > -1);
              var i2 = true;
              return e3.checkMethodList.length && (i2 = e3.checkMethodList.every(function(e4) {
                var r3 = n3[e4];
                return Object(j.isFunction)(r3) && r3 ? r3.call(n3, t3) : !Object(j.isNotUndefined)(r3) || !!r3;
              })), r2 && i2;
            } }, { key: "getDefaultDomElement", value: function(t3) {
              var e3, n3 = this.context;
              return (e3 = t3 ? n3.refs[t3] || n3[t3] || window[t3] : n3.el || n3.$el || n3.$root) instanceof x2.a ? e3.getElement() : e3;
            } }, { key: "getRealEventName", value: function(t3) {
              return V[t3] || t3;
            } }, { key: "getCustomEventName", value: function(t3) {
              return D[t3] ? t3 : "";
            } }, { key: "getDefaultEventObject", value: function(t3, e3) {
              var n3 = this.context, r2 = e3, i2 = r2.filter(function(t4) {
                return !!n3[t4];
              }), a2 = Object(j.splitMethodByKeyword)(r2, "after"), o2 = l()(a2, 2), c2 = o2[0], u2 = o2[1], f2 = Object(j.splitMethodByKeyword)(r2, "before"), h2 = l()(f2, 2), p2 = h2[0], d2 = h2[1], v2 = Object(j.splitMethodByKeyword)(r2, "debounce"), y3 = l()(v2, 2), g2 = y3[0], m2 = y3[1], b2 = Object(j.splitMethodByKeyword)(r2, "delay"), k2 = l()(b2, 2), O2 = k2[0], x3 = k2[1], S2 = Object(j.splitMethodByKeyword)(r2, "throttle"), P2 = l()(S2, 2), w2 = P2[0], R2 = P2[1], C2 = Object(j.splitMethodByKeyword)(r2, "capture"), E2 = l()(C2, 1)[0], $2 = [].concat(s()(i2), s()(c2), s()(p2), s()(O2), s()(g2), s()(w2), s()(E2)), I2 = r2.filter(function(t4) {
                return $2.indexOf(t4) === -1;
              }).map(function(t4) {
                return t4.toLowerCase();
              });
              return { eventName: this.getRealEventName(t3), customEventName: this.getCustomEventName(t3), codes: I2, captures: E2, afterMethods: u2, beforeMethods: d2, delayMethods: x3, debounceMethods: m2, throttleMethods: R2, checkMethodList: i2 };
            } }, { key: "addDomEvent", value: function(t3, e3) {
              t3.callback = this.makeCallback(t3, e3), this.addBinding(t3);
              var n3 = !!t3.captures.length;
              M[t3.eventName] && (n3 = { passive: true, capture: n3 }), O.default.addDomEvent(t3.dom, t3.eventName, t3.callback, n3);
            } }, { key: "makeCustomEventCallback", value: function(t3, e3) {
              var n3 = this;
              if (t3.customEventName === "doubletab") {
                var r2 = 300;
                return t3.delayMethods.length && (r2 = +t3.delayMethods[0].target), function() {
                  n3.doubleTab ? (performance.now() - n3.doubleTab.time < r2 && e3.apply(void 0, arguments), n3.doubleTab = null) : n3.doubleTab = { time: performance.now() };
                };
              }
              return e3;
            } }, { key: "bindingDomEvent", value: function(t3, e3, n3) {
              var r2 = i()(t3), a2 = r2[0], o2 = r2[1], c2 = r2.slice(2), s2 = this.getDefaultEventObject(a2, e3);
              if (s2.dom = this.getDefaultDomElement(o2), s2.delegate = c2.join(O.SAPARATOR), s2.debounceMethods.length) {
                var u2 = +s2.debounceMethods[0].target;
                n3 = Object(j.debounce)(n3, u2);
              } else if (s2.throttleMethods.length) {
                var l2 = +s2.throttleMethods[0].target;
                n3 = Object(j.throttle)(n3, l2);
              }
              n3 = this.makeCustomEventCallback(s2, n3), this.addDomEvent(s2, n3);
            } }, { key: "getEventNames", value: function(t3) {
              var e3 = [];
              return t3.split(O.NAME_SAPARATOR).forEach(function(t4) {
                var n3 = t4.split(O.NAME_SAPARATOR);
                e3.push.apply(e3, n3);
              }), e3;
            } }, { key: "parseDomEvent", value: function(t3) {
              for (var e3 = this.context, n3 = t3.split(O.CHECK_SAPARATOR).map(function(t4) {
                return t4.trim();
              }).filter(Boolean), r2 = n3.shift().split(O.DOM_EVENT_SAPARATOR)[1].split(O.SAPARATOR), i2 = this.getEventNames(r2[0]), a2 = e3[t3].bind(e3), o2 = 0, c2 = i2.length; o2 < c2; o2++)
                r2[0] = i2[o2], this.bindingDomEvent(r2, n3, a2);
            } }]), n2;
          }(T);
          function A(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = I()(t2);
              if (e2) {
                var i2 = I()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return E()(this, n2);
            };
          }
          var F, z, N, _ = function(t2, e2, n2) {
            if (e2 !== "cssText")
              if (e2 !== "style")
                if (e2 !== "class")
                  e2 === "callback" && Object(j.isFunction)(n2) ? n2() : Object(j.isUndefined)(n2) ? t2.removeAttr(e2) : t2.el.nodeName === "TEXTAREA" && e2 === "value" || e2 === "text" || e2 === "textContent" ? t2.text(n2) : e2 === "innerHTML" || e2 === "html" ? t2.html(n2) : e2 === "htmlDiff" ? t2.updateDiff(n2) : e2 === "svgDiff" ? t2.updateSVGDiff(n2) : e2 === "value" ? t2.val(n2) : t2.attr(e2, n2);
                else if (Object(j.isArray)(n2))
                  t2.addClass.apply(t2, s()(n2.filter(Boolean)));
                else if (Object(j.isObject)(n2))
                  for (var r2 = Object.keys(n2), i2 = 0, a2 = r2.length; i2 < a2; i2++) {
                    var o2 = r2[i2], c2 = n2[o2];
                    t2.toggleClass(o2, c2);
                  }
                else
                  t2.el.className = n2;
              else
                Object(j.isNotString)(n2) && t2.css(n2);
            else
              t2.cssText(n2);
          }, U = function(t2) {
            R()(n2, t2);
            var e2 = A(n2);
            function n2() {
              return d()(this, n2), e2.apply(this, arguments);
            }
            return y2()(n2, [{ key: "load", value: function() {
              this.bindData.apply(this, arguments);
            } }, { key: "bindData", value: function() {
              for (var t3 = this, e3 = arguments.length, n3 = new Array(e3), r2 = 0; r2 < e3; r2++)
                n3[r2] = arguments[r2];
              this._bindMethods || (this._bindMethods = this.context.filterProps(O.CHECK_BIND_PATTERN));
              var i2 = this._bindMethods.filter(function(t4) {
                if (!n3.length)
                  return true;
                var e4 = t4.split(O.CHECK_SAPARATOR), r3 = l()(e4, 2), i3 = r3[0], a2 = (r3[1], i3.split(" ")), o2 = l()(a2, 2), c2 = (o2[0], o2[1]);
                return n3.indexOf(c2) > -1;
              });
              i2.forEach(function() {
                var e4 = o()(k.a.mark(function e5(r3) {
                  var i3, a2, o2, c2, s2, u2, f2, h2, p2, d2, v2, y3, g2, m2, b2;
                  return k.a.wrap(function(e6) {
                    for (; ; )
                      switch (e6.prev = e6.next) {
                        case 0:
                          if (i3 = t3.context[r3], a2 = r3.split(O.CHECK_SAPARATOR), o2 = l()(a2, 2), r3 = o2[0], c2 = o2[1], s2 = t3.getRef(c2), u2 = O.BIND_CHECK_DEFAULT_FUNCTION, s2 != "" && Object(j.isString)(s2) ? u2 = Object(O.BIND_CHECK_FUNCTION)(s2) : Object(j.isFunction)(s2) && (u2 = s2), f2 = r3.split(O.BIND_SAPARATOR)[1], h2 = t3.context.refs[f2], p2 = Object(j.isFunction)(u2) && u2.call(t3.context), !h2 || !p2) {
                            e6.next = 16;
                            break;
                          }
                          return e6.next = 11, i3.call.apply(i3, [t3.context].concat(n3));
                        case 11:
                          if (d2 = e6.sent) {
                            e6.next = 14;
                            break;
                          }
                          return e6.abrupt("return");
                        case 14:
                          for (v2 = Object.keys(d2), y3 = 0, g2 = v2.length; y3 < g2; y3++)
                            m2 = v2[y3], b2 = d2[m2], _(h2, m2, b2);
                        case 16:
                        case "end":
                          return e6.stop();
                      }
                  }, e5);
                }));
                return function(t4) {
                  return e4.apply(this, arguments);
                };
              }());
            } }, { key: "destroy", value: function() {
              this._bindMethods = void 0;
            } }]), n2;
          }(T), G = n(33);
          function H(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function K(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? H(Object(n2), true).forEach(function(e3) {
                m()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : H(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Y(t2, e2) {
            var n2 = typeof Symbol != "undefined" && t2[Symbol.iterator] || t2["@@iterator"];
            if (!n2) {
              if (Array.isArray(t2) || (n2 = function(t3, e3) {
                if (!t3)
                  return;
                if (typeof t3 == "string")
                  return X(t3, e3);
                var n3 = Object.prototype.toString.call(t3).slice(8, -1);
                n3 === "Object" && t3.constructor && (n3 = t3.constructor.name);
                if (n3 === "Map" || n3 === "Set")
                  return Array.from(t3);
                if (n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3))
                  return X(t3, e3);
              }(t2)) || e2 && t2 && typeof t2.length == "number") {
                n2 && (t2 = n2);
                var r2 = 0, i2 = function() {
                };
                return { s: i2, n: function() {
                  return r2 >= t2.length ? { done: true } : { done: false, value: t2[r2++] };
                }, e: function(t3) {
                  throw t3;
                }, f: i2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var a2, o2 = true, c2 = false;
            return { s: function() {
              n2 = n2.call(t2);
            }, n: function() {
              var t3 = n2.next();
              return o2 = t3.done, t3;
            }, e: function(t3) {
              c2 = true, a2 = t3;
            }, f: function() {
              try {
                o2 || n2.return == null || n2.return();
              } finally {
                if (c2)
                  throw a2;
              }
            } };
          }
          function X(t2, e2) {
            (e2 == null || e2 > t2.length) && (e2 = t2.length);
            for (var n2 = 0, r2 = new Array(e2); n2 < e2; n2++)
              r2[n2] = t2[n2];
            return r2;
          }
          var W = x2.a.create("div"), Z = "[".concat("ref", "]"), q = "[".concat("refclass", "]"), J = (F = { constructor: true, initState: true, updateData: true }, m()(F, "constructor", true), m()(F, "initializeProperty", true), m()(F, "created", true), m()(F, "getRealEventName", true), m()(F, "initializeStoreEvent", true), m()(F, "destoryStoreEvent", true), m()(F, "destroy", true), m()(F, "emit", true), m()(F, "trigger", true), m()(F, "on", true), m()(F, "off", true), m()(F, "setState", true), m()(F, "_reload", true), m()(F, "render", true), m()(F, "initialize", true), m()(F, "afterRender", true), m()(F, "components", true), m()(F, "getRef", true), m()(F, "parseTemplate", true), m()(F, "parseProperty", true), m()(F, "parseSourceName", true), m()(F, "parseComponent", true), m()(F, "clean", true), m()(F, "refresh", true), m()(F, "load", true), m()(F, "bindData", true), m()(F, "template", true), m()(F, "eachChildren", true), m()(F, "destroy", true), m()(F, "collectProps", true), m()(F, "filterProps", true), m()(F, "self", true), m()(F, "isAltKey", true), m()(F, "isCtrlKey", true), m()(F, "isShiftKey", true), m()(F, "isMetaKey", true), m()(F, "preventDefault", true), m()(F, "stopPropagation", true), m()(F, "bodyMouseMove", true), m()(F, "bodyMouseUp", true), F), Q = function() {
            function t2(e3, n2) {
              d()(this, t2), this.state = {}, this.prevState = {}, this.refs = {}, this.children = {}, this._bindings = [], this.id = Object(P.uuid)(), this.__tempVariables = new Map(), this.handlers = this.initializeHandler(), this.initializeProperty(e3, n2), this.initComponents();
            }
            var e2;
            return y2()(t2, [{ key: "initializeProperty", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              this.opt = t3 || {}, this.parent = this.opt, this.props = e3, this.source = Object(P.uuid)(), this.sourceName = this.constructor.name;
            } }, { key: "initComponents", value: function() {
              this.childComponents = this.components();
            } }, { key: "initializeHandler", value: function() {
              return [new U(this), new L(this)];
            } }, { key: "initState", value: function() {
              return {};
            } }, { key: "setState", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1];
              this.prevState = this.state, this.state = Object.assign({}, this.state, t3), e3 && this.load();
            } }, { key: "toggleState", value: function(t3) {
              var e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1];
              this.setState(m()({}, t3, !this.state[t3]), e3);
            } }, { key: "variable", value: function(t3) {
              var e3 = "".concat("__ref__variable:").concat(Object(P.uuidShort)());
              return this.__tempVariables.set(e3, t3), e3;
            } }, { key: "recoverVariable", value: function(t3) {
              if (Object(j.isString)(t3) === false)
                return t3;
              var e3 = t3;
              return this.__tempVariables.has(t3) && (e3 = this.__tempVariables.get(t3), this.__tempVariables.delete(t3)), e3;
            } }, { key: "_reload", value: function(t3) {
              this.props = t3, this.state = {}, this.setState(this.initState(), false), this.refresh(true);
            } }, { key: "render", value: function(t3) {
              this.$el = this.parseTemplate(Object(j.html)(z || (z = h()(["\n        ", "\n      "])), this.template())), this.refs.$el = this.$el, t3 && t3.append(this.$el), this.load(), this.afterRender();
            } }, { key: "initialize", value: function() {
              this.state = this.initState();
            } }, { key: "afterRender", value: function() {
            } }, { key: "components", value: function() {
              return {};
            } }, { key: "getRef", value: function() {
              for (var t3 = arguments.length, e3 = new Array(t3), n2 = 0; n2 < t3; n2++)
                e3[n2] = arguments[n2];
              var r2 = e3.join("");
              return this.refs[r2];
            } }, { key: "parseTemplate", value: function(t3, e3) {
              Object(j.isArray)(t3) && (t3 = t3.join("")), t3 = t3.trim();
              for (var n2 = W.html(t3).children(), r2 = 0, i2 = n2.length; r2 < i2; r2++) {
                var a2 = n2[r2], o2 = a2.attr("ref");
                o2 && (this.refs[o2] = a2);
                for (var c2 = a2.$$(Z), s2 = {}, u2 = 0, l2 = c2.length; u2 < l2; u2++) {
                  var f2 = c2[u2], h2 = f2.attr("ref");
                  s2[h2] ? console.warn("".concat(o2, " is duplicated. - ").concat(this.sourceName), this) : s2[h2] = true, this.refs[h2] = f2;
                }
              }
              return e3 ? W.createChildrenFragment() : n2[0];
            } }, { key: "parseProperty", value: function(t3) {
              var e3, n2 = {}, r2 = Y(t3.el.attributes);
              try {
                for (r2.s(); !(e3 = r2.n()).done; ) {
                  var i2 = e3.value;
                  n2[i2.nodeName] = this.recoverVariable(i2.nodeValue);
                }
              } catch (t4) {
                r2.e(t4);
              } finally {
                r2.f();
              }
              return n2.props && (n2 = K(K({}, n2), Object(O.getRef)(n2.props))), t3.$$("property").forEach(function(t4) {
                var e4 = t4.attrs("name", "value", "valueType"), r3 = l()(e4, 3), i3 = r3[0], a2 = r3[1], o2 = r3[2], c2 = a2 || t4.text();
                o2 === "json" && (c2 = JSON.parse(c2)), n2[i3] = c2;
              }), n2;
            } }, { key: "parseSourceName", value: function(t3) {
              return t3.parent ? [t3.sourceName].concat(s()(this.parseSourceName(t3.parent))) : [t3.sourceName];
            } }, { key: "getEventMachineComponent", value: function(t3) {
              return Object(G.b)(t3) || this.childComponents[t3];
            } }, { key: "parseComponent", value: function() {
              var t3 = this;
              this.$el.$$(q).forEach(function(e3) {
                var n2 = t3.getEventMachineComponent(e3.attr("refclass"));
                if (n2) {
                  var r2, i2 = t3.parseProperty(e3), a2 = e3.attr("ref"), o2 = null;
                  if (t3.children[a2] ? (o2 = t3.children[a2])._reload(i2) : (o2 = new n2(t3, i2), t3.children[a2 || o2.id] = o2, o2.render()), o2.renderTarget)
                    (r2 = o2.$el) === null || r2 === void 0 || r2.appendTo(o2.renderTarget), e3.remove();
                  else
                    e3.replace(o2.$el);
                } else
                  e3.remove();
              }), Object(j.keyEach)(this.children, function(e3, n2) {
                n2 && n2.clean() && delete t3.children[e3];
              });
            } }, { key: "clean", value: function() {
              if (this.$el && !this.$el.hasParent())
                return Object(j.keyEach)(this.children, function(t3, e3) {
                  e3.clean();
                }), this.destroy(), this.$el = null, true;
            } }, { key: "refresh", value: function() {
              this.load();
            } }, { key: "_afterLoad", value: function() {
              this.runHandlers("initialize"), this.bindData(), this.parseComponent();
            } }, { key: "load", value: (e2 = o()(k.a.mark(function t3() {
              var e3, n2, r2, a2, c2 = this, s2 = arguments;
              return k.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      for (e3 = s2.length, n2 = new Array(e3), r2 = 0; r2 < e3; r2++)
                        n2[r2] = s2[r2];
                      return this._loadMethods || (this._loadMethods = this.filterProps(O.CHECK_LOAD_PATTERN)), a2 = this._loadMethods.filter(function(t5) {
                        var e4 = t5.split(O.LOAD_SAPARATOR)[1].split(O.CHECK_SAPARATOR).map(function(t6) {
                          return t6.trim();
                        })[0];
                        return !n2.length || n2.indexOf(e4) > -1;
                      }), t4.next = 5, a2.forEach(function() {
                        var t5 = o()(k.a.mark(function t6(e4) {
                          var r3, a3, o2, s3, u2, l2, f2, p2, d2;
                          return k.a.wrap(function(t7) {
                            for (; ; )
                              switch (t7.prev = t7.next) {
                                case 0:
                                  if (r3 = e4.split(O.LOAD_SAPARATOR)[1], a3 = r3.split(O.CHECK_SAPARATOR).map(function(t8) {
                                    return t8.trim();
                                  }), o2 = i()(a3), s3 = o2[0], u2 = (u2 = o2.slice(1)).map(function(t8) {
                                    return t8.trim();
                                  }), l2 = Boolean(u2.filter(function(t8) {
                                    return O.DOMDIFF.includes(t8);
                                  }).length), !c2.refs[s3]) {
                                    t7.next = 11;
                                    break;
                                  }
                                  return t7.next = 7, (f2 = c2[e4]).call.apply(f2, [c2].concat(n2));
                                case 7:
                                  p2 = t7.sent, Object(j.isArray)(p2) && (p2 = p2.join("")), d2 = c2.parseTemplate(Object(j.html)(N || (N = h()(["", ""])), p2), true), l2 ? c2.refs[s3].htmlDiff(d2) : c2.refs[s3].html(d2);
                                case 11:
                                case "end":
                                  return t7.stop();
                              }
                          }, t6);
                        }));
                        return function(e4) {
                          return t5.apply(this, arguments);
                        };
                      }());
                    case 5:
                      this._afterLoad();
                    case 6:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function() {
              return e2.apply(this, arguments);
            }) }, { key: "runHandlers", value: function() {
              for (var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "run", e3 = arguments.length, n2 = new Array(e3 > 1 ? e3 - 1 : 0), r2 = 1; r2 < e3; r2++)
                n2[r2 - 1] = arguments[r2];
              this.handlers.forEach(function(e4) {
                return e4[t3].apply(e4, n2);
              });
            } }, { key: "bindData", value: function() {
              for (var t3 = arguments.length, e3 = new Array(t3), n2 = 0; n2 < t3; n2++)
                e3[n2] = arguments[n2];
              this.runHandlers.apply(this, ["load"].concat(e3));
            } }, { key: "template", value: function() {
              return "<div></div>";
            } }, { key: "eachChildren", value: function(t3) {
              Object(j.isFunction)(t3) && Object(j.keyEach)(this.children, function(e3, n2) {
                t3(n2);
              });
            } }, { key: "rerender", value: function() {
              var t3 = this.$el.parent();
              this.destroy(), this.render(t3);
            } }, { key: "destroy", value: function() {
              this.eachChildren(function(t3) {
                t3.destroy();
              }), this.runHandlers("destroy"), this.$el && this.$el.remove(), this.$el = null, this.refs = {}, this.children = {};
            } }, { key: "collectProps", value: function() {
              return Object(j.collectProps)(this, J, this.constructor.name);
            } }, { key: "filterProps", value: function(t3) {
              return this.collectProps().filter(function(e3) {
                return e3.match(t3);
              });
            } }, { key: "self", value: function(t3) {
              return t3 && t3.$dt && t3.$dt.is(t3.target);
            } }, { key: "isAltKey", value: function(t3) {
              return t3.altKey;
            } }, { key: "isCtrlKey", value: function(t3) {
              return t3.ctrlKey;
            } }, { key: "isShiftKey", value: function(t3) {
              return t3.shiftKey;
            } }, { key: "isMetaKey", value: function(t3) {
              return t3.metaKey || t3.key == "Meta" || t3.code.indexOf("Meta") > -1;
            } }, { key: "isMouseLeftButton", value: function(t3) {
              return t3.buttons === 1;
            } }, { key: "isMouseRightButton", value: function(t3) {
              return t3.buttons === 2;
            } }, { key: "hasMouse", value: function(t3) {
              return t3.pointerType === "mouse";
            } }, { key: "hasTouch", value: function(t3) {
              return t3.pointerType === "touch";
            } }, { key: "hasPen", value: function(t3) {
              return t3.pointerType === "pen";
            } }, { key: "preventDefault", value: function(t3) {
              return t3.preventDefault(), true;
            } }, { key: "stopPropagation", value: function(t3) {
              return t3.stopPropagation(), true;
            } }, { key: "bodyMouseMove", value: function(t3, e3) {
              this[e3] && this.emit(S.a, this[e3], this, t3.xy);
            } }, { key: "bodyMouseUp", value: function(t3, e3) {
              this[e3] && this.emit(S.b, this[e3], this, t3.xy);
            } }]), t2;
          }();
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return P;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f), p = n(13), d = n(7), v = n.n(d), y2 = n(2), g = n(0);
          n(150);
          function m(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var b = function(t2) {
            s()(n2, t2);
            var e2 = m(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { tolerance: 1, stroke: "black", "stroke-width": 2, "stroke-linecap": "round", "stroke-linejoin": "round", msg: this.$i18n("path.manager.msg") };
            } }, { key: Object(g.SUBSCRIBE)("refreshSelection"), value: function() {
              var t3 = this.$selection.current;
              t3 && (this.children.$stroke.setValue(t3.stroke || "rgba(0, 0, 0, 1)"), this.children.$strokeWidth.setValue(t3["stroke-width"] || y2.a.number(1)));
            } }, { key: Object(g.SUBSCRIBE)("setColorAsset"), value: function(t3) {
              var e3 = t3.color;
              this.$el.isShow() && (this.setState({ stroke: e3 }, false), this.children.$stroke.setValue(e3), this.updateData({ stroke: e3 }));
            } }, { key: "template", value: function() {
              return "\n      <div class='elf--draw-manager'>\n        <div class='tools'>   \n          <div >        \n            <label>".concat(this.$i18n("draw.manager.tolerance"), `</label>            
            <object refClass="NumberInputEditor"  
              ref='$tolerance' 
              key='tolerance' 
              value="1" 
              min="0"
              max="100"
              step="0.01"
              unit="number" 
              onchange="changeValue" 
            />
          </div>              
          <div >
            <label>`).concat(this.$i18n("svg.item.property.stroke"), `</label>          
            <object refClass="FillSingleEditor" ref='$stroke' simple="true" value="`).concat(this.state.stroke, `" key='stroke' onchange="changeValue" />
          </div>

          <div >
            <label>`).concat(this.$i18n("svg.item.property.strokeWidth"), `</label>          
            <object refClass="NumberInputEditor"  
              ref='$strokeWidth' 
              key="stroke-width" 
              value="`).concat(this.state["stroke-width"], '"              \n              onchange="changeValue" />\n          </div>      \n          \n\n          <div>\n            <label>').concat(this.$i18n("svg.item.property.lineCap"), `</label>          
            <object refClass="SelectEditor" 
              ref='$strokeLineCap' 
              key="stroke-linecap" 
              value="`).concat(this.state["stroke-linecap"], '"                   \n              options=').concat(this.variable(["butt", "round", "square"]), ' \n              onchange="changeValue" \n            />\n          </div> \n          <div>\n            <label>').concat(this.$i18n("svg.item.property.lineJoin"), `</label>          
            <object refClass="SelectEditor"  
              ref='$strokeLineJoin' 
              key="stroke-linejoin" 
              value="`).concat(this.state["stroke-linejoin"], '"                                 \n              options=').concat(this.variable(["miter", "bevel", "round"]), '\n              onchange="changeValue" \n            />\n          </div>\n        </div>\n      </div>    \n    ');
            } }, { key: Object(g.SUBSCRIBE_SELF)("changeValue"), value: function(t3, e3, n3) {
              this.updateData(v()({}, t3, e3));
            } }, { key: "updateData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.setState(t3, false), this.state.instance.trigger(this.state.changeEvent, t3);
            } }, { key: Object(g.SUBSCRIBE)("changePathManager"), value: function(t3) {
              this.setState({ mode: t3 });
            } }, { key: Object(g.SUBSCRIBE)("showDrawManager"), value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              t3.changeEvent = t3.changeEvent || "changeDrawManager", this.setState(t3), this.$el.show(), this.emit("addStatusBarMessage", this.state.msg), this.emit("hidePathManager");
            } }, { key: Object(g.SUBSCRIBE)("hideDrawManager"), value: function() {
              this.$el.hide();
            } }]), n2;
          }(p.a), k = n(11);
          n(151);
          function O(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var x2 = { "segment-move": "modify", modify: "modify", path: "path" }, j = function(t2) {
            s()(n2, t2);
            var e2 = O(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { mode: "move", fill: null, stroke: null, "fill-opacity": null, "stroke-width": null, msg: this.$i18n("path.manager.msg") };
            } }, { key: Object(g.SUBSCRIBE)("refreshSelection"), value: function() {
              var t3 = this.$selection.current;
              t3 && (this.children.$fill.setValue(t3.fill || "rgba(0, 0, 0, 0)"), this.children.$stroke.setValue(t3.stroke || "rgba(0, 0, 0, 1)"), this.children.$fillOpacity.setValue(t3["fill-opacity"] || y2.a.number(1)), this.children.$strokeWidth.setValue(t3["stroke-width"] || y2.a.number(1)));
            } }, { key: "template", value: function() {
              return "\n      <div class='elf--path-manager'>\n        <div class='tools' ref='$mode' data-selected-value='".concat(this.state.mode, `'>
            <button type="button" data-value='modify' title='`).concat(this.$i18n("path.manager.mode.modify"), "' > ").concat(k.a.device_hub, `</button>
            <button type="button" data-value='path' title='`).concat(this.$i18n("path.manager.mode.path"), "' > ").concat(k.a.control_point, `</button>
        </div>
        <div class='tools' ref='$flip'>
            <button type="button" data-value='flipX' title='`).concat(this.$i18n("path.manager.mode.flipX"), "'>").concat(k.a.flip, `</button>
            <button type="button" data-value='flipY' title='`).concat(this.$i18n("path.manager.mode.flipY"), "'>").concat(k.a.flip, `</button>
            <button type="button" data-value='flip' title='`).concat(this.$i18n("path.manager.mode.flipOrigin"), "'>").concat(k.a.flip, `</button>
        </div>

        <div class='tools' ref='$util'>
            <button type="button" data-value='reverse' title='`).concat(this.$i18n("path.manager.mode.transform"), "' >").concat(k.a.swap_horiz, `</button>
        </div>        
        <div class='tools'>      
          <div>
            <object refClass="FillSingleEditor" ref="$fill" simple="true" label="`).concat(this.$i18n("svg.item.property.fill"), '" key="fill" onchange="changeValue" />\n          </div>\n          <div>\n            <object refClass="FillSingleEditor" ref="$stroke" simple="true" label="').concat(this.$i18n("svg.item.property.stroke"), '" key="stroke" onchange="changeValue" />\n          </div>      \n          <div >\n            <span \n              refClass="NumberInputEditor" \n              ref="$fillOpacity" \n              label="').concat(this.$i18n("svg.item.property.fillOpacity"), '" \n              key="fill-opacity" \n              value="1"\n              min="0"\n              max="1"\n              step="0.01"\n              calc="false"\n              unit="number"\n              onchange="changeValue"\n            />\n          </div>   \n\n          <div>\n            <span \n              refClass="NumberInputEditor" \n              ref="$strokeWidth" \n              label="').concat(this.$i18n("svg.item.property.strokeWidth"), '" \n              key="stroke-width" \n              onchange="changeValue"\n            />\n          </div>\n        </div>\n      </div>    \n    ');
            } }, { key: Object(g.SUBSCRIBE)("setColorAsset"), value: function(t3) {
              var e3 = t3.color;
              this.$el.isShow() && (this.setState({ stroke: e3 }, false), this.children.$stroke.setValue(e3), this.updateData({ stroke: e3 }), this.command("setAttributeForMulti", "change color assets", this.$selection.packByValue({ stroke: e3 })));
            } }, { key: Object(g.SUBSCRIBE_SELF)("changeValue"), value: function(t3, e3, n3) {
              this.command("setAttributeForMulti", "change path", this.$selection.packByValue(v()({}, t3, e3))), this.updateData(v()({}, t3, e3));
            } }, { key: Object(g.BIND)("$mode"), value: function() {
              return { "data-selected-value": x2[this.state.mode] };
            } }, { key: "refresh", value: function() {
              this.bindData("$mode");
            } }, { key: Object(g.CLICK)("$flip button"), value: function(t3) {
              var e3 = t3.$dt.attr("data-value");
              this.emit("changePathTransform", e3);
            } }, { key: Object(g.CLICK)("$util button"), value: function(t3) {
              var e3 = t3.$dt.attr("data-value");
              this.emit("changePathUtil", e3);
            } }, { key: Object(g.CLICK)("$mode button"), value: function(t3) {
              var e3 = t3.$dt.attr("data-value");
              this.updateData({ mode: e3 }), this.refresh();
            } }, { key: "updateData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.setState(t3, false), this.emit(this.state.changeEvent, t3);
            } }, { key: Object(g.SUBSCRIBE)("changePathManager"), value: function(t3) {
              this.setState({ mode: t3 });
            } }, { key: Object(g.SUBSCRIBE)("showPathManager"), value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              t3.changeEvent = t3.changeEvent || "changePathManager", this.setState(t3), this.$el.show(), this.emit("addStatusBarMessage", this.state.msg), this.emit("change.mode.view", "PathEditorView");
            } }, { key: Object(g.SUBSCRIBE)("hidePathManager"), value: function() {
              this.$el.hide();
            } }]), n2;
          }(p.a);
          n(152);
          function S(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var P = function(t2) {
            s()(n2, t2);
            var e2 = S(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "components", value: function() {
              return { PathManager: j, DrawManager: b };
            } }, { key: "template", value: function() {
              return "\n      <div class='elf--page-subeditor'>\n        <object refClass='PathManager' />\n        <object refClass='DrawManager' />\n      </div>\n    ";
            } }]), n2;
          }(p.a);
        }, function(t, e, n) {
          t.exports = function() {
            "use strict";
            function t2(e3) {
              return (t2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t3) {
                return typeof t3;
              } : function(t3) {
                return t3 && typeof Symbol == "function" && t3.constructor === Symbol && t3 !== Symbol.prototype ? "symbol" : typeof t3;
              })(e3);
            }
            var e2 = function(t3) {
              if (typeof t3 != "string")
                return {};
              var e3, n3 = {}, r2 = (t3 = t3.split("+").join(" ")).match(/(?:[?](?:[^=]+)=(?:[^&#]*)(?:[&](?:[^=]+)=(?:[^&#]*))*(?:[#].*)?)|(?:[#].*)/);
              if (r2 === null)
                return {};
              e3 = r2[0].substr(1).split(/[&#=]/);
              for (var i2 = 0; i2 < e3.length; i2 += 2)
                n3[decodeURIComponent(e3[i2])] = decodeURIComponent(e3[i2 + 1] || "");
              return n3;
            }, n2 = function(e3, n3) {
              if (t2(e3) !== "object")
                return "";
              var r2 = "", i2 = 0, a2 = Object.keys(e3);
              if (a2.length === 0)
                return "";
              for (a2.sort(), n3 || (r2 += "?" + a2[0] + "=" + e3[a2[0]], i2 += 1); i2 < a2.length; i2 += 1)
                r2 += "&" + a2[i2] + "=" + e3[a2[i2]];
              return r2;
            }, r = function(t3) {
              return t3 === void 0 ? 0 : t3.match(/^(\d+[smhdw]?)+$/) ? function(t4) {
                var e3, n3 = 0, r2 = { s: 1, m: 60, h: 3600, d: 86400, w: 604800 };
                e3 = (t4 = t4.replace(/([smhdw])/g, " $1 ").trim()).split(" ");
                for (var i2 = 0; i2 < e3.length; i2 += 2)
                  n3 += parseInt(e3[i2], 10) * r2[e3[i2 + 1] || "s"];
                return n3;
              }(t3) : t3.match(/^(\d+:?)+$/) ? function(t4) {
                for (var e3 = 0, n3 = [1, 60, 3600, 86400, 604800], r2 = t4.split(":"), i2 = 0; i2 < r2.length; i2++)
                  e3 += parseInt(r2[i2], 10) * n3[r2.length - i2 - 1];
                return e3;
              }(t3) : 0;
            }, i = e2;
            function a() {
              for (var t3 = 0, e3 = ["parseProvider", "parse", "bind", "create"]; t3 < e3.length; t3++) {
                var n3 = e3[t3];
                this[n3] = this[n3].bind(this);
              }
              this.plugins = {};
            }
            var o = a;
            a.prototype.parseProvider = function(t3) {
              var e3 = t3.match(/(?:(?:https?:)?\/\/)?(?:[^.]+\.)?(\w+)\./i);
              return e3 ? e3[1] : void 0;
            }, a.prototype.parse = function(t3) {
              if (t3 !== void 0) {
                var e3, n3 = this.parseProvider(t3), r2 = this.plugins[n3];
                if (n3 && r2 && r2.parse)
                  return (e3 = r2.parse.call(r2, t3, i(t3))) && ((e3 = function(t4) {
                    return t4.params && Object.keys(t4.params).length === 0 && delete t4.params, t4;
                  }(e3)).provider = r2.provider), e3;
              }
            }, a.prototype.bind = function(t3) {
              if (this.plugins[t3.provider] = t3, t3.alternatives)
                for (var e3 = 0; e3 < t3.alternatives.length; e3 += 1)
                  this.plugins[t3.alternatives[e3]] = t3;
            }, a.prototype.create = function(e3) {
              if (t2(e3) === "object" && t2(e3.videoInfo) === "object") {
                var n3 = e3.videoInfo, r2 = e3.params, i2 = this.plugins[n3.provider];
                return r2 = r2 === "internal" ? n3.params : r2 || {}, i2 && (e3.format = e3.format || i2.defaultFormat, i2.formats.hasOwnProperty(e3.format)) ? i2.formats[e3.format].apply(i2, [n3, Object.assign({}, r2)]) : void 0;
              }
            };
            var c = new o(), s = n2;
            function u() {
              this.provider = "canalplus", this.defaultFormat = "embed", this.formats = { embed: this.createEmbedUrl }, this.mediaTypes = { VIDEO: "video" };
            }
            u.prototype.parseParameters = function(t3) {
              return delete t3.vid, t3;
            }, u.prototype.parse = function(t3, e3) {
              var n3 = { mediaType: this.mediaTypes.VIDEO, id: e3.vid };
              if (n3.params = this.parseParameters(e3), n3.id)
                return n3;
            }, u.prototype.createEmbedUrl = function(t3, e3) {
              if (t3.id && t3.mediaType === this.mediaTypes.VIDEO) {
                var n3 = "http://player.canalplus.fr/embed/";
                return e3.vid = t3.id, n3 += s(e3);
              }
            }, c.bind(new u());
            var l = n2;
            function f() {
              this.provider = "coub", this.defaultFormat = "long", this.formats = { long: this.createLongUrl, embed: this.createEmbedUrl }, this.mediaTypes = { VIDEO: "video" };
            }
            f.prototype.parseUrl = function(t3) {
              var e3 = t3.match(/(?:embed|view)\/([a-zA-Z\d]+)/i);
              return e3 ? e3[1] : void 0;
            }, f.prototype.parse = function(t3, e3) {
              var n3 = { mediaType: this.mediaTypes.VIDEO, params: e3, id: this.parseUrl(t3) };
              if (n3.id)
                return n3;
            }, f.prototype.createUrl = function(t3, e3, n3) {
              if (e3.id && e3.mediaType === this.mediaTypes.VIDEO) {
                var r2 = t3 + e3.id;
                return r2 += l(n3);
              }
            }, f.prototype.createLongUrl = function(t3, e3) {
              return this.createUrl("https://coub.com/view/", t3, e3);
            }, f.prototype.createEmbedUrl = function(t3, e3) {
              return this.createUrl("//coub.com/embed/", t3, e3);
            }, c.bind(new f());
            var h = n2, p = r;
            function d() {
              this.provider = "dailymotion", this.alternatives = ["dai"], this.defaultFormat = "long", this.formats = { short: this.createShortUrl, long: this.createLongUrl, embed: this.createEmbedUrl, image: this.createImageUrl }, this.mediaTypes = { VIDEO: "video" };
            }
            d.prototype.parseParameters = function(t3) {
              return this.parseTime(t3);
            }, d.prototype.parseTime = function(t3) {
              return t3.start && (t3.start = p(t3.start)), t3;
            }, d.prototype.parseUrl = function(t3) {
              var e3 = t3.match(/(?:\/video|ly)\/([A-Za-z0-9]+)/i);
              return e3 ? e3[1] : void 0;
            }, d.prototype.parse = function(t3, e3) {
              var n3 = { mediaType: this.mediaTypes.VIDEO, params: this.parseParameters(e3), id: this.parseUrl(t3) };
              return n3.id ? n3 : void 0;
            }, d.prototype.createUrl = function(t3, e3, n3) {
              if (e3.id && e3.mediaType === this.mediaTypes.VIDEO)
                return t3 + e3.id + h(n3);
            }, d.prototype.createShortUrl = function(t3, e3) {
              return this.createUrl("https://dai.ly/", t3, e3);
            }, d.prototype.createLongUrl = function(t3, e3) {
              return this.createUrl("https://dailymotion.com/video/", t3, e3);
            }, d.prototype.createEmbedUrl = function(t3, e3) {
              return this.createUrl("https://www.dailymotion.com/embed/video/", t3, e3);
            }, d.prototype.createImageUrl = function(t3, e3) {
              return delete e3.start, this.createUrl("https://www.dailymotion.com/thumbnail/video/", t3, e3);
            }, c.bind(new d());
            var v = n2, y2 = r;
            function g() {
              this.provider = "twitch", this.defaultFormat = "long", this.formats = { long: this.createLongUrl, embed: this.createEmbedUrl }, this.mediaTypes = { VIDEO: "video", STREAM: "stream", CLIP: "clip" };
            }
            g.prototype.seperateId = function(t3) {
              return { pre: t3[0], id: t3.substr(1) };
            }, g.prototype.parseChannel = function(t3, e3) {
              var n3 = e3.channel || e3.utm_content || t3.channel;
              return delete e3.utm_content, delete e3.channel, n3;
            }, g.prototype.parseUrl = function(t3, e3, n3) {
              var r2;
              return (r2 = t3.match(/(clips\.)?twitch\.tv\/(?:(?:videos\/(\d+))|(\w+)(?:\/clip\/(\w+))?)/i)) && r2[2] ? e3.id = "v" + r2[2] : n3.video ? (e3.id = n3.video, delete n3.video) : n3.clip ? (e3.id = n3.clip, e3.isClip = true, delete n3.clip) : r2 && r2[1] && r2[3] ? (e3.id = r2[3], e3.isClip = true) : r2 && r2[3] && r2[4] ? (e3.channel = r2[3], e3.id = r2[4], e3.isClip = true) : r2 && r2[3] && (e3.channel = r2[3]), e3;
            }, g.prototype.parseMediaType = function(t3) {
              var e3;
              return t3.id ? t3.isClip ? (e3 = this.mediaTypes.CLIP, delete t3.isClip) : e3 = this.mediaTypes.VIDEO : t3.channel && (e3 = this.mediaTypes.STREAM), e3;
            }, g.prototype.parseParameters = function(t3) {
              return t3.t && (t3.start = y2(t3.t), delete t3.t), t3;
            }, g.prototype.parse = function(t3, e3) {
              var n3 = {};
              return (n3 = this.parseUrl(t3, n3, e3)).channel = this.parseChannel(n3, e3), n3.mediaType = this.parseMediaType(n3), n3.params = this.parseParameters(e3), n3.channel || n3.id ? n3 : void 0;
            }, g.prototype.createLongUrl = function(t3, e3) {
              var n3 = "";
              if (t3.mediaType === this.mediaTypes.STREAM && t3.channel)
                n3 = "https://twitch.tv/" + t3.channel;
              else if (t3.mediaType === this.mediaTypes.VIDEO && t3.id)
                n3 = "https://twitch.tv/videos/" + this.seperateId(t3.id).id, e3.start && (e3.t = e3.start + "s", delete e3.start);
              else {
                if (t3.mediaType !== this.mediaTypes.CLIP || !t3.id)
                  return;
                n3 = t3.channel ? "https://www.twitch.tv/" + t3.channel + "/clip/" + t3.id : "https://clips.twitch.tv/" + t3.id;
              }
              return n3 += v(e3);
            }, g.prototype.createEmbedUrl = function(t3, e3) {
              var n3 = "https://player.twitch.tv/";
              if (t3.mediaType === this.mediaTypes.STREAM && t3.channel)
                e3.channel = t3.channel;
              else if (t3.mediaType === this.mediaTypes.VIDEO && t3.id)
                e3.video = t3.id, e3.start && (e3.t = e3.start + "s", delete e3.start);
              else {
                if (t3.mediaType !== this.mediaTypes.CLIP || !t3.id)
                  return;
                n3 = "https://clips.twitch.tv/embed", e3.clip = t3.id;
              }
              return n3 += v(e3);
            }, c.bind(new g());
            var m = n2, b = r;
            function k() {
              this.provider = "vimeo", this.alternatives = ["vimeopro"], this.defaultFormat = "long", this.formats = { long: this.createLongUrl, embed: this.createEmbedUrl }, this.mediaTypes = { VIDEO: "video" };
            }
            k.prototype.parseUrl = function(t3) {
              var e3 = t3.match(/(?:\/(?:channels\/[\w]+|(?:(?:album\/\d+|groups\/[\w]+)\/)?videos?))?\/(\d+)/i);
              return e3 ? e3[1] : void 0;
            }, k.prototype.parseParameters = function(t3) {
              return this.parseTime(t3);
            }, k.prototype.parseTime = function(t3) {
              return t3.t && (t3.start = b(t3.t), delete t3.t), t3;
            }, k.prototype.parse = function(t3, e3) {
              var n3 = { mediaType: this.mediaTypes.VIDEO, params: this.parseParameters(e3), id: this.parseUrl(t3) };
              return n3.id ? n3 : void 0;
            }, k.prototype.createUrl = function(t3, e3, n3) {
              if (e3.id && e3.mediaType === this.mediaTypes.VIDEO) {
                var r2 = t3 + e3.id, i2 = n3.start;
                return delete n3.start, r2 += m(n3), i2 && (r2 += "#t=" + i2), r2;
              }
            }, k.prototype.createLongUrl = function(t3, e3) {
              return this.createUrl("https://vimeo.com/", t3, e3);
            }, k.prototype.createEmbedUrl = function(t3, e3) {
              return this.createUrl("//player.vimeo.com/video/", t3, e3);
            }, c.bind(new k());
            var O = n2, x2 = r;
            function j() {
              this.provider = "wistia", this.alternatives = [], this.defaultFormat = "long", this.formats = { long: this.createLongUrl, embed: this.createEmbedUrl, embedjsonp: this.createEmbedJsonpUrl }, this.mediaTypes = { VIDEO: "video", EMBEDVIDEO: "embedvideo" };
            }
            j.prototype.parseUrl = function(t3) {
              var e3 = t3.match(/(?:(?:medias|iframe)\/|wvideo=)([\w-]+)/);
              return e3 ? e3[1] : void 0;
            }, j.prototype.parseChannel = function(t3) {
              var e3 = t3.match(/(?:(?:https?:)?\/\/)?([^.]*)\.wistia\./), n3 = e3 ? e3[1] : void 0;
              if (n3 !== "fast" && n3 !== "content")
                return n3;
            }, j.prototype.parseParameters = function(t3, e3) {
              return t3.wtime && (t3.start = x2(t3.wtime), delete t3.wtime), t3.wvideo === e3.id && delete t3.wvideo, t3;
            }, j.prototype.parseMediaType = function(t3) {
              return t3.id && t3.channel ? this.mediaTypes.VIDEO : t3.id ? (delete t3.channel, this.mediaTypes.EMBEDVIDEO) : void 0;
            }, j.prototype.parse = function(t3, e3) {
              var n3 = { id: this.parseUrl(t3), channel: this.parseChannel(t3) };
              if (n3.params = this.parseParameters(e3, n3), n3.mediaType = this.parseMediaType(n3), n3.id)
                return n3;
            }, j.prototype.createUrl = function(t3, e3, n3) {
              return e3.start && (e3.wtime = e3.start, delete e3.start), n3 += O(e3);
            }, j.prototype.createLongUrl = function(t3, e3) {
              if (t3.id && t3.mediaType === this.mediaTypes.VIDEO) {
                var n3 = "https://" + t3.channel + ".wistia.com/medias/" + t3.id;
                return this.createUrl(t3, e3, n3);
              }
            }, j.prototype.createEmbedUrl = function(t3, e3) {
              if (t3.id && (t3.mediaType === this.mediaTypes.VIDEO || t3.mediaType === this.mediaTypes.EMBEDVIDEO)) {
                var n3 = "https://fast.wistia.com/embed/iframe/" + t3.id;
                return this.createUrl(t3, e3, n3);
              }
            }, j.prototype.createEmbedJsonpUrl = function(t3) {
              if (t3.id && (t3.mediaType === this.mediaTypes.VIDEO || t3.mediaType === this.mediaTypes.EMBEDVIDEO))
                return "https://fast.wistia.com/embed/medias/" + t3.id + ".jsonp";
            }, c.bind(new j());
            var S = n2;
            function P() {
              this.provider = "youku", this.defaultFormat = "long", this.formats = { embed: this.createEmbedUrl, long: this.createLongUrl, flash: this.createFlashUrl, static: this.createStaticUrl }, this.mediaTypes = { VIDEO: "video" };
            }
            P.prototype.parseUrl = function(t3) {
              var e3 = t3.match(/(?:(?:embed|sid)\/|v_show\/id_|VideoIDS=)([a-zA-Z0-9]+)/);
              return e3 ? e3[1] : void 0;
            }, P.prototype.parseParameters = function(t3) {
              return t3.VideoIDS && delete t3.VideoIDS, t3;
            }, P.prototype.parse = function(t3, e3) {
              var n3 = { mediaType: this.mediaTypes.VIDEO, id: this.parseUrl(t3), params: this.parseParameters(e3) };
              if (n3.id)
                return n3;
            }, P.prototype.createUrl = function(t3, e3, n3) {
              if (e3.id && e3.mediaType === this.mediaTypes.VIDEO) {
                var r2 = t3 + e3.id;
                return r2 += S(n3);
              }
            }, P.prototype.createEmbedUrl = function(t3, e3) {
              return this.createUrl("http://player.youku.com/embed/", t3, e3);
            }, P.prototype.createLongUrl = function(t3, e3) {
              return this.createUrl("http://v.youku.com/v_show/id_", t3, e3);
            }, P.prototype.createStaticUrl = function(t3, e3) {
              return this.createUrl("http://static.youku.com/v1.0.0638/v/swf/loader.swf?VideoIDS=", t3, e3);
            }, P.prototype.createFlashUrl = function(t3, e3) {
              if (t3.id && t3.mediaType === this.mediaTypes.VIDEO) {
                var n3 = "http://player.youku.com/player.php/sid/" + t3.id + "/v.swf";
                return n3 += S(e3);
              }
            }, c.bind(new P());
            var w = n2, R = r;
            function C() {
              this.provider = "youtube", this.alternatives = ["youtu", "ytimg"], this.defaultFormat = "long", this.formats = { short: this.createShortUrl, long: this.createLongUrl, embed: this.createEmbedUrl, shortImage: this.createShortImageUrl, longImage: this.createLongImageUrl }, this.imageQualities = { 0: "0", 1: "1", 2: "2", 3: "3", DEFAULT: "default", HQDEFAULT: "hqdefault", SDDEFAULT: "sddefault", MQDEFAULT: "mqdefault", MAXRESDEFAULT: "maxresdefault" }, this.defaultImageQuality = this.imageQualities.HQDEFAULT, this.mediaTypes = { VIDEO: "video", PLAYLIST: "playlist", SHARE: "share", CHANNEL: "channel" };
            }
            C.prototype.parseVideoUrl = function(t3) {
              var e3 = t3.match(/(?:(?:v|vi|be|videos|embed)\/(?!videoseries)|(?:v|ci)=)([\w-]{11})/i);
              return e3 ? e3[1] : void 0;
            }, C.prototype.parseChannelUrl = function(t3) {
              var e3 = t3.match(/\/channel\/([\w-]+)/);
              return e3 ? { id: e3[1], mediaType: this.mediaTypes.CHANNEL } : (e3 = t3.match(/\/(?:c|user)\/([\w-]+)/)) ? { name: e3[1], mediaType: this.mediaTypes.CHANNEL } : void 0;
            }, C.prototype.parseParameters = function(t3, e3) {
              return (t3.start || t3.t) && (t3.start = R(t3.start || t3.t), delete t3.t), t3.v === e3.id && delete t3.v, t3.list === e3.id && delete t3.list, t3;
            }, C.prototype.parseMediaType = function(t3) {
              if (t3.params.list && (t3.list = t3.params.list, delete t3.params.list), t3.id && !t3.params.ci)
                t3.mediaType = this.mediaTypes.VIDEO;
              else if (t3.list)
                delete t3.id, t3.mediaType = this.mediaTypes.PLAYLIST;
              else {
                if (!t3.params.ci)
                  return;
                delete t3.params.ci, t3.mediaType = this.mediaTypes.SHARE;
              }
              return t3;
            }, C.prototype.parse = function(t3, e3) {
              var n3 = this.parseChannelUrl(t3);
              if (n3)
                return n3;
              var r2 = { params: e3, id: this.parseVideoUrl(t3) };
              return r2.params = this.parseParameters(e3, r2), r2 = this.parseMediaType(r2);
            }, C.prototype.createShortUrl = function(t3, e3) {
              if (t3.id && t3.mediaType === this.mediaTypes.VIDEO) {
                var n3 = "https://youtu.be/" + t3.id;
                return e3.start && (n3 += "#t=" + e3.start), n3;
              }
            }, C.prototype.createLongUrl = function(t3, e3) {
              var n3 = "", r2 = e3.start;
              if (delete e3.start, t3.mediaType === this.mediaTypes.CHANNEL)
                if (t3.id)
                  n3 += "https://www.youtube.com/channel/" + t3.id;
                else {
                  if (!t3.name)
                    return;
                  n3 += "https://www.youtube.com/c/" + t3.name;
                }
              else if (t3.mediaType === this.mediaTypes.PLAYLIST && t3.list)
                e3.feature = "share", n3 += "https://www.youtube.com/playlist";
              else if (t3.mediaType === this.mediaTypes.VIDEO && t3.id)
                e3.v = t3.id, n3 += "https://www.youtube.com/watch";
              else {
                if (t3.mediaType !== this.mediaTypes.SHARE || !t3.id)
                  return;
                e3.ci = t3.id, n3 += "https://www.youtube.com/shared";
              }
              return t3.list && (e3.list = t3.list), n3 += w(e3), t3.mediaType !== this.mediaTypes.PLAYLIST && r2 && (n3 += "#t=" + r2), n3;
            }, C.prototype.createEmbedUrl = function(t3, e3) {
              var n3 = "https://www.youtube.com/embed";
              if (t3.mediaType === this.mediaTypes.PLAYLIST && t3.list)
                e3.listType = "playlist";
              else {
                if (t3.mediaType !== this.mediaTypes.VIDEO || !t3.id)
                  return;
                n3 += "/" + t3.id, e3.loop === "1" && (e3.playlist = t3.id);
              }
              return t3.list && (e3.list = t3.list), n3 += w(e3);
            }, C.prototype.createImageUrl = function(t3, e3, n3) {
              if (e3.id && e3.mediaType === this.mediaTypes.VIDEO)
                return t3 + e3.id + "/" + (n3.imageQuality || this.defaultImageQuality) + ".jpg";
            }, C.prototype.createShortImageUrl = function(t3, e3) {
              return this.createImageUrl("https://i.ytimg.com/vi/", t3, e3);
            }, C.prototype.createLongImageUrl = function(t3, e3) {
              return this.createImageUrl("https://img.youtube.com/vi/", t3, e3);
            }, c.bind(new C());
            var E = n2, $ = r;
            function I() {
              this.provider = "soundcloud", this.defaultFormat = "long", this.formats = { long: this.createLongUrl, embed: this.createEmbedUrl }, this.mediaTypes = { TRACK: "track", PLAYLIST: "playlist", APITRACK: "apitrack", APIPLAYLIST: "apiplaylist" };
            }
            I.prototype.parseUrl = function(t3, e3) {
              var n3 = t3.match(/(?:m\.)?soundcloud\.com\/(?:([\w-]+)\/(sets\/)?)([\w-]+)/i);
              return n3 ? (e3.channel = n3[1], n3[1] === "playlists" || n3[2] ? e3.list = n3[3] : e3.id = n3[3], e3) : e3;
            }, I.prototype.parseParameters = function(t3) {
              return t3.t && (t3.start = $(t3.t), delete t3.t), t3;
            }, I.prototype.parseMediaType = function(t3) {
              return t3.id && (t3.channel === "tracks" ? (delete t3.channel, delete t3.params.url, t3.mediaType = this.mediaTypes.APITRACK) : t3.mediaType = this.mediaTypes.TRACK), t3.list && (t3.channel === "playlists" ? (delete t3.channel, delete t3.params.url, t3.mediaType = this.mediaTypes.APIPLAYLIST) : t3.mediaType = this.mediaTypes.PLAYLIST), t3;
            }, I.prototype.parse = function(t3, e3) {
              var n3 = {};
              if ((n3 = this.parseUrl(t3, n3)).params = this.parseParameters(e3), (n3 = this.parseMediaType(n3)).id || n3.list)
                return n3;
            }, I.prototype.createLongUrl = function(t3, e3) {
              var n3 = "", r2 = e3.start;
              if (delete e3.start, t3.mediaType === this.mediaTypes.TRACK && t3.id && t3.channel)
                n3 = "https://soundcloud.com/" + t3.channel + "/" + t3.id;
              else if (t3.mediaType === this.mediaTypes.PLAYLIST && t3.list && t3.channel)
                n3 = "https://soundcloud.com/" + t3.channel + "/sets/" + t3.list;
              else if (t3.mediaType === this.mediaTypes.APITRACK && t3.id)
                n3 = "https://api.soundcloud.com/tracks/" + t3.id;
              else {
                if (t3.mediaType !== this.mediaTypes.APIPLAYLIST || !t3.list)
                  return;
                n3 = "https://api.soundcloud.com/playlists/" + t3.list;
              }
              return n3 += E(e3), r2 && (n3 += "#t=" + r2), n3;
            }, I.prototype.createEmbedUrl = function(t3, e3) {
              var n3 = "https://w.soundcloud.com/player/";
              if (delete e3.start, t3.mediaType === this.mediaTypes.APITRACK && t3.id)
                e3.url = "https%3A//api.soundcloud.com/tracks/" + t3.id;
              else {
                if (t3.mediaType !== this.mediaTypes.APIPLAYLIST || !t3.list)
                  return;
                e3.url = "https%3A//api.soundcloud.com/playlists/" + t3.list;
              }
              return n3 += E(e3);
            }, c.bind(new I());
            var T = n2;
            function B() {
              this.provider = "teachertube", this.alternatives = [], this.defaultFormat = "long", this.formats = { long: this.createLongUrl, embed: this.createEmbedUrl }, this.mediaTypes = { VIDEO: "video", AUDIO: "audio", DOCUMENT: "document", CHANNEL: "channel", COLLECTION: "collection", GROUP: "group" };
            }
            B.prototype.parse = function(t3, e3) {
              var n3 = {};
              n3.list = this.parsePlaylist(e3), n3.params = e3;
              var r2 = t3.match(/\/(audio|video|document|user\/channel|collection|group)\/(?:[\w-]+-)?(\w+)/);
              if (r2)
                return n3.mediaType = this.parseMediaType(r2[1]), n3.id = r2[2], n3;
            }, B.prototype.parsePlaylist = function(t3) {
              if (t3["playlist-id"]) {
                var e3 = t3["playlist-id"];
                return delete t3["playlist-id"], e3;
              }
            }, B.prototype.parseMediaType = function(t3) {
              switch (t3) {
                case "audio":
                  return this.mediaTypes.AUDIO;
                case "video":
                  return this.mediaTypes.VIDEO;
                case "document":
                  return this.mediaTypes.DOCUMENT;
                case "user/channel":
                  return this.mediaTypes.CHANNEL;
                case "collection":
                  return this.mediaTypes.COLLECTION;
                case "group":
                  return this.mediaTypes.GROUP;
              }
            }, B.prototype.createLongUrl = function(t3, e3) {
              if (t3.id) {
                var n3 = "https://www.teachertube.com/";
                return t3.list && (e3["playlist-id"] = t3.list), t3.mediaType === this.mediaTypes.CHANNEL ? n3 += "user/channel/" : n3 += t3.mediaType + "/", n3 += t3.id, n3 += T(e3);
              }
            }, B.prototype.createEmbedUrl = function(t3, e3) {
              if (t3.id) {
                var n3 = "https://www.teachertube.com/embed/";
                if (t3.mediaType === this.mediaTypes.VIDEO || t3.mediaType === this.mediaTypes.AUDIO)
                  return n3 += t3.mediaType + "/" + t3.id, n3 += T(e3);
              }
            }, c.bind(new B());
            var M = n2;
            function V() {
              this.provider = "tiktok", this.defaultFormat = "long", this.formats = { long: this.createLongUrl }, this.mediaTypes = { VIDEO: "video" };
            }
            V.prototype.parse = function(t3, e3) {
              var n3 = { params: e3, mediaType: this.mediaTypes.VIDEO }, r2 = t3.match(/@([^/]+)\/video\/(\d{19})/);
              if (r2)
                return n3.channel = r2[1], n3.id = r2[2], n3;
            }, V.prototype.createLongUrl = function(t3, e3) {
              var n3 = "";
              if (t3.mediaType === this.mediaTypes.VIDEO && t3.id && t3.channel)
                return n3 += "https://www.tiktok.com/@".concat(t3.channel, "/video/").concat(t3.id), n3 += M(e3);
            }, c.bind(new V());
            var D = n2;
            function L() {
              this.provider = "ted", this.formats = { long: this.createLongUrl, embed: this.createEmbedUrl }, this.mediaTypes = { VIDEO: "video", PLAYLIST: "playlist" };
            }
            return L.prototype.parseUrl = function(t3, e3) {
              var n3 = t3.match(/\/(talks|playlists\/(\d+))\/([\w-]+)/), r2 = n3 ? n3[1] : void 0;
              return r2 ? (e3.channel = r2.split("/")[0], e3.id = n3[3], e3.channel === "playlists" && (e3.list = n3[2]), e3) : e3;
            }, L.prototype.parseMediaType = function(t3) {
              return t3.id && t3.channel === "playlists" && (delete t3.channel, t3.mediaType = this.mediaTypes.PLAYLIST), t3.id && t3.channel === "talks" && (delete t3.channel, t3.mediaType = this.mediaTypes.VIDEO), t3;
            }, L.prototype.parse = function(t3, e3) {
              var n3 = { params: e3 };
              if (n3 = this.parseUrl(t3, n3), (n3 = this.parseMediaType(n3)).id)
                return n3;
            }, L.prototype.createLongUrl = function(t3, e3) {
              var n3 = "";
              if (t3.mediaType === this.mediaTypes.VIDEO && t3.id)
                n3 += "https://ted.com/talks/" + t3.id;
              else {
                if (t3.mediaType !== this.mediaTypes.PLAYLIST || !t3.id)
                  return;
                n3 += "https://ted.com/playlists/" + t3.list + "/" + t3.id;
              }
              return n3 += D(e3);
            }, L.prototype.createEmbedUrl = function(t3, e3) {
              var n3 = "https://embed.ted.com/";
              if (t3.mediaType === this.mediaTypes.PLAYLIST && t3.id)
                n3 += "playlists/" + t3.list + "/" + t3.id;
              else {
                if (t3.mediaType !== this.mediaTypes.VIDEO || !t3.id)
                  return;
                n3 += "talks/" + t3.id;
              }
              return n3 += D(e3);
            }, c.bind(new L()), c;
          }();
        }, function(t, e) {
          t.exports = function(t2, e2) {
            (e2 == null || e2 > t2.length) && (e2 = t2.length);
            for (var n = 0, r = new Array(e2); n < e2; n++)
              r[n] = t2[n];
            return r;
          }, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e) {
          t.exports = function(t2) {
            if (typeof Symbol != "undefined" && t2[Symbol.iterator] != null || t2["@@iterator"] != null)
              return Array.from(t2);
          }, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e) {
          t.exports = function(t2) {
            if (Array.isArray(t2))
              return t2;
          }, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e) {
          t.exports = function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return S;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(10), s = n.n(c), u = n(5), l = n.n(u), f = n(6), h = n.n(f), p = n(1), d = n.n(p), v = n(0), y2 = n(8), g = n(14), m = n(22), b = n(69), k = n(13);
          function O(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var x2 = { x: 0, y: 0 }, j = { x: Number.MAX_SAFE_INTEGER, y: Number.MAX_SAFE_INTEGER }, S = function(t2) {
            l()(n2, t2);
            var e2 = O(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "created", value: function() {
              this.$editor.registerPluginList(this.getPlugins()), Object(y2.isArray)(this.opt.plugins) && this.$editor.registerPluginList(this.opt.plugins), this.$editor.initPlugins(), Object(y2.isObject)(this.opt.config) && this.$config.setAll(this.opt.config || {});
            } }, { key: "$editor", get: function() {
              return this.__editorInstance || (this.__editorInstance = new m.b()), this.__editorInstance;
            } }, { key: "afterRender", value: function() {
              s()(d()(n2.prototype), "afterRender", this).call(this), this.$el.attr("data-theme", this.$editor.theme), this.$el.addClass(navigator.userAgent.includes("Windows") ? "ua-window" : "ua-default");
            } }, { key: "initialize", value: function() {
              var t3;
              s()(d()(n2.prototype), "initialize", this).call(this), this.__initBodyMoves(), this.emit("load.json", (t3 = this.opt.data) === null || t3 === void 0 ? void 0 : t3.projects);
            } }, { key: "getPlugins", value: function() {
              return [];
            } }, { key: "__initBodyMoves", value: function() {
              this.__moves = new Set(), this.__ends = new Set(), this.__modifyBodyMoveSecond(0);
            } }, { key: "__modifyBodyMoveSecond", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
              this.$config.set("body.move.ms", t3);
              var e3 = t3 === 0 ? this.__loopBodyMoves.bind(this) : Object(y2.debounce)(this.__loopBodyMoves.bind(this), this.$config.get("body.move.ms"));
              this.__funcBodyMoves = e3;
            } }, { key: "__loopBodyMoves", value: function() {
              var t3 = this.$config.get("pos"), e3 = this.$config.get("bodyEvent"), n3 = this.$config.get("lastPos") || j;
              !(n3.x === t3.x && n3.y === t3.y) && this.__moves.size && (this.__moves.forEach(function(n4) {
                var r2 = Object(g.getDist)(t3.x, t3.y, n4.xy.x, n4.xy.y);
                if (Math.abs(r2) > 0.5) {
                  var i2 = Math.floor(t3.x - n4.xy.x), a2 = Math.floor(t3.y - n4.xy.y);
                  n4.func.call(n4.context, i2, a2, "move", e3.pressure);
                }
              }), this.$config.set("lastPos", t3)), requestAnimationFrame(this.__funcBodyMoves);
            } }, { key: "__removeBodyMoves", value: function() {
              var t3 = this.$config.get("pos"), e3 = this.$config.get("bodyEvent");
              t3 && this.__ends.forEach(function(n3) {
                n3.func.call(n3.context, t3.x - n3.xy.x, t3.y - n3.xy.y, "end", e3.pressure);
              }), this.__moves.clear(), this.__ends.clear();
            } }, { key: Object(v.SUBSCRIBE_ALL)(b.a), value: function(t3, e3, n3) {
              this.__moves.add({ func: t3, context: e3, xy: n3 });
            } }, { key: Object(v.SUBSCRIBE_ALL)(b.b), value: function(t3, e3, n3) {
              this.__ends.add({ func: t3, context: e3, xy: n3 });
            } }, { key: Object(v.POINTERSTART)("document"), value: function(t3) {
              var e3 = t3.xy || x2;
              this.$config.set("bodyEvent", t3), this.$config.set("pos", e3);
            } }, { key: Object(v.POINTERMOVE)("document"), value: function(t3) {
              var e3 = t3.xy || x2;
              this.$config.set("bodyEvent", t3), this.$config.set("pos", e3), this.__requestId || (this.__requestId = requestAnimationFrame(this.__funcBodyMoves));
            } }, { key: Object(v.POINTEREND)("document"), value: function(t3) {
              this.$config.set("bodyEvent", t3), this.__removeBodyMoves(), cancelAnimationFrame(this.__requestId), this.__requestId = null;
            } }, { key: Object(v.RESIZE)("window") + Object(v.DEBOUNCE)(100), value: function() {
              this.emit("resize.window");
            } }, { key: Object(v.SUBSCRIBE)("refreshAll"), value: function() {
              this.emit("refreshProjectList"), this.trigger("refreshAllSelectProject");
            } }, { key: Object(v.SUBSCRIBE)("refreshAllSelectProject"), value: function() {
              this.emit("refreshArtboard");
            } }, { key: Object(v.SUBSCRIBE)("changeTheme"), value: function() {
              this.$el.attr("data-theme", this.$editor.theme);
            } }, { key: Object(v.SUBSCRIBE)("changed.locale"), value: function() {
              this.rerender();
            } }]), n2;
          }(k.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return m;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f), p = n(19), d = n(0), v = n(13);
          function y2(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var g = ["TEXTAREA", "INPUT", "SELECT"], m = function(t2) {
            s()(n2, t2);
            var e2 = y2(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              return '\n      <div class="keyboard-manager"></div>\n    ';
            } }, { key: "isNotFormElement", value: function(t3) {
              var e3 = t3.target.tagName;
              return !g.includes(e3) && p.a.create(t3.target).attr("contenteditable") !== "true";
            } }, { key: Object(d.KEYDOWN)("document") + Object(d.IF)("isNotFormElement") + d.PREVENT, value: function(t3) {
              this.emit("keymap.keydown", t3);
            } }, { key: Object(d.KEYUP)("document") + Object(d.IF)("isNotFormElement"), value: function(t3) {
              this.emit("keymap.keyup", t3);
            } }]), n2;
          }(v.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return y2;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f), p = n(0), d = n(11);
          function v(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var y2 = function(t2) {
            s()(n2, t2);
            var e2 = v(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { selectedIndexValue: "style" };
            } }, { key: "template", value: function() {
              var t3 = this;
              return `
      <div class="feature-control inspector">
        <div>
          <div class="tab number-tab" ref="$tab">
            <div class="tab-header" ref="$header">
              <div class="tab-item selected" data-value="style" title='`.concat(this.$i18n("inspector.tab.title.style"), "'>\n                <label class='icon'>").concat(d.a.palette, '</label>\n              </div>         \n              <div class="tab-item" data-value="transition" title="').concat(this.$i18n("inspector.tab.title.transition"), '">\n                <label>').concat(d.a.flash_on, `</label>
              </div>
              <div class="tab-item" data-value="code" title='`).concat(this.$i18n("inspector.tab.title.code"), "'>\n                <label class='icon'>").concat(d.a.code, "</label>\n              </div>          \n\n              ").concat(this.$menuManager.getTargetMenuItems("inspector.tab").map(function(t4) {
                var e3 = t4.class, n3 = e3.value, r2 = e3.title;
                return "\n                  <div class='tab-item' data-value='".concat(n3, `' data-direction="right"  data-tooltip="`).concat(r2, '">\n                    <label>').concat(d.a[t4.class.icon] || t4.class.icon, "</label>\n                  </div>\n                ");
              }), '\n            </div>\n            <div class="tab-body" ref="$body">\n\n              <div class="tab-content selected scrollbar" data-value="style">\n                <object refClass="AlignmentProperty" />\n\n                <!-- Default Property --> \n                <object refClass="PositionProperty" />\n                <object refClass="AppearanceProperty" />                                   \n\n                ').concat(this.$menuManager.generate("inspector.tab.style"), "                             \n                <div class='empty'></div>\n              </div>     \n              <div class='tab-content scrollbar' data-value='transition'>\n                ").concat(this.$menuManager.generate("inspector.tab.transition"), `              
                <div class='empty'></div>                
              </div>                        
              <div class="tab-content" data-value="code">
                `).concat(this.$menuManager.generate("inspector.tab.code"), "                            \n                <div class='empty'></div>                           \n              </div>       \n            \n              \n              ").concat(this.$menuManager.getTargetMenuItems("inspector.tab").map(function(e3) {
                var n3 = e3.class, r2 = n3.value, i2 = (n3.title, n3.loadElements);
                return "\n                  <div class='tab-content' data-value='".concat(r2, "'>\n                    ").concat(i2.map(function(t4) {
                  return '<object refClass="'.concat(t4, '" />');
                }).join("\n"), "\n                    ").concat(t3.$menuManager.generate("inspector.tab.".concat(r2)), "\n                  </div>\n                ");
              }), "              \n            </div>\n          </div>\n        </div>\n      </div>\n    ");
            } }, { key: Object(p.CLICK)("$header .tab-item:not(.empty-item)"), value: function(t3) {
              var e3 = t3.$dt.attr("data-value");
              this.state.selectedIndexValue !== e3 && (this.$el.$$('[data-value="'.concat(this.state.selectedIndexValue, '"]')).forEach(function(t4) {
                return t4.removeClass("selected");
              }), this.$el.$$('[data-value="'.concat(e3, '"]')).forEach(function(t4) {
                return t4.addClass("selected");
              }), this.setState({ selectedIndexValue: e3 }, false));
            } }]), n2;
          }(n(13).a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return y2;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f), p = n(23), d = n(0);
          function v(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var y2 = function(t2) {
            s()(n2, t2);
            var e2 = v(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "afterRender", value: function() {
              this.$el.$(".icon").css("transform", "rotate(-30deg)");
            } }, { key: "getIconString", value: function() {
              return "navigation";
            } }, { key: "getTitle", value: function() {
              return this.props.title || "Select";
            } }, { key: "clickButton", value: function(t3) {
              this.emit("addLayerView", "select");
            } }, { key: Object(d.SUBSCRIBE)("addLayerView"), value: function(t3) {
              this.setSelected(t3 === "select");
            } }, { key: Object(d.SUBSCRIBE)("refreshSelection"), value: function() {
              this.setSelected(this.$selection.isEmpty);
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }]), n2;
          }(p.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return g;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f), p = n(23), d = n(33), v = n(0);
          function y2(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var g = function(t2) {
            s()(n2, t2);
            var e2 = y2(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "artboard";
            } }, { key: "getTitle", value: function() {
              return this.props.title || "ArtBoard";
            } }, { key: "clickButton", value: function(t3) {
              this.emit("addLayerView", "artboard");
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }, { key: Object(v.SUBSCRIBE)("addLayerView"), value: function(t3) {
              this.setSelected(t3 === "artboard");
            } }]), n2;
          }(p.a);
          Object(d.a)({ AddArtboard: g });
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return g;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f), p = n(23), d = n(33), v = n(0);
          function y2(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var g = function(t2) {
            s()(n2, t2);
            var e2 = y2(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "rect";
            } }, { key: "getTitle", value: function() {
              return this.props.title || "Rect";
            } }, { key: "clickButton", value: function(t3) {
              this.emit("addLayerView", "rect");
            } }, { key: Object(v.SUBSCRIBE)("addLayerView"), value: function(t3) {
              this.setSelected(t3 === "rect");
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }]), n2;
          }(p.a);
          Object(d.a)({ AddRect: g });
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return g;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f), p = n(23), d = n(33), v = n(0);
          function y2(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var g = function(t2) {
            s()(n2, t2);
            var e2 = y2(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "lens";
            } }, { key: "getTitle", value: function() {
              return this.props.title || "Circle";
            } }, { key: "clickButton", value: function(t3) {
              this.emit("addLayerView", "circle");
            } }, { key: Object(v.SUBSCRIBE)("addLayerView"), value: function(t3) {
              this.setSelected(t3 === "circle");
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }]), n2;
          }(p.a);
          Object(d.a)({ AddCircle: g });
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return g;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f), p = n(23), d = n(33), v = n(0);
          function y2(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var g = function(t2) {
            s()(n2, t2);
            var e2 = y2(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "title";
            } }, { key: "getTitle", value: function() {
              return this.props.title || "Text";
            } }, { key: "getClassName", value: function() {
              return "text";
            } }, { key: "clickButton", value: function(t3) {
              this.emit("addLayerView", "text");
            } }, { key: Object(v.SUBSCRIBE)("addLayerView"), value: function(t3) {
              this.setSelected(t3 === "text");
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }]), n2;
          }(p.a);
          Object(d.a)({ AddText: g });
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return v;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f), p = n(33);
          function d(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var v = function(t2) {
            s()(n2, t2);
            var e2 = d(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "photo";
            } }, { key: "getTitle", value: function() {
              return this.props.title || "Image";
            } }, { key: "clickButton", value: function() {
              this.emit("addLayerView", "image");
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }]), n2;
          }(n(23).a);
          Object(p.a)({ AddImage: v });
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return v;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f), p = n(33);
          function d(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var v = function(t2) {
            s()(n2, t2);
            var e2 = d(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "draw";
            } }, { key: "getTitle", value: function() {
              return this.props.title || "Draw";
            } }, { key: "clickButton", value: function(t3) {
              this.emit("addLayerView", "brush");
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }]), n2;
          }(n(23).a);
          Object(p.a)({ AddDrawPath: v });
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return g;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f), p = n(23), d = n(33), v = n(0);
          function y2(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var g = function(t2) {
            s()(n2, t2);
            var e2 = y2(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "pentool";
            } }, { key: "getTitle", value: function() {
              return this.props.title || "Path";
            } }, { key: "clickButton", value: function(t3) {
              this.emit("addLayerView", "path");
            } }, { key: Object(v.SUBSCRIBE)("addLayerView"), value: function(t3) {
              this.setSelected(t3 === "path");
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }]), n2;
          }(p.a);
          Object(d.a)({ AddPath: g });
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return v;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f), p = n(33);
          function d(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var v = function(t2) {
            s()(n2, t2);
            var e2 = d(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "outline_rect";
            } }, { key: "getTitle", value: function() {
              return this.props.title || "RectPath";
            } }, { key: "clickButton", value: function(t3) {
              this.emit("addLayerView", "svg-rect");
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }]), n2;
          }(n(23).a);
          Object(p.a)({ AddSVGRect: v });
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return v;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f), p = n(33);
          function d(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var v = function(t2) {
            s()(n2, t2);
            var e2 = d(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "outline_circle";
            } }, { key: "getTitle", value: function() {
              return this.props.title || "CirclePath";
            } }, { key: "clickButton", value: function(t3) {
              this.emit("addLayerView", "svg-circle");
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }]), n2;
          }(n(23).a);
          Object(p.a)({ AddSVGCircle: v });
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return d;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f);
          function p(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var d = function(t2) {
            s()(n2, t2);
            var e2 = p(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "text_rotate";
            } }, { key: "getTitle", value: function() {
              return this.props.title || "TextPath";
            } }, { key: "clickButton", value: function(t3) {
              this.emit("addLayerView", "svg-textpath");
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }]), n2;
          }(n(23).a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return d;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f);
          function p(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var d = function(t2) {
            s()(n2, t2);
            var e2 = p(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "keyboard";
            } }, { key: "getTitle", value: function() {
              return this.$i18n("menu.item.shortcuts.title");
            } }, { key: "clickButton", value: function(t3) {
              this.emit("showShortcutWindow");
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }]), n2;
          }(n(23).a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return d;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f);
          function p(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var d = function(t2) {
            s()(n2, t2);
            var e2 = p(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "launch";
            } }, { key: "getTitle", value: function() {
              return this.$i18n("menu.item.export.title");
            } }, { key: "clickButton", value: function(t3) {
              this.emit("showExportView");
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }]), n2;
          }(n(23).a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return d;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f);
          function p(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var d = function(t2) {
            s()(n2, t2);
            var e2 = p(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "archive";
            } }, { key: "getTitle", value: function() {
              return this.$i18n("menu.item.download.title");
            } }, { key: "clickButton", value: function(t3) {
              this.emit("downloadJSON");
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }]), n2;
          }(n(23).a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return d;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f);
          function p(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var d = function(t2) {
            s()(n2, t2);
            var e2 = p(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "storage";
            } }, { key: "getTitle", value: function() {
              return this.$i18n("menu.item.save.title");
            } }, { key: "clickButton", value: function(t3) {
              var e3 = this;
              this.emit("saveJSON"), this.nextTick(function() {
                e3.emit("notify", "alert", "Save", "Save the content on localStorage", 2e3);
              });
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }]), n2;
          }(n(23).a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return i;
          });
          var r = n(19), i = function(t2, e2) {
            var n2 = r.a.create(e2.container || document.body), i2 = new t2(e2, e2);
            return i2.render(n2), i2;
          };
        }, function(t, e, n) {
          "use strict";
          var r = n(7), i = n.n(r), a = n(67), o = n(23), c = n(39), s = n(0), u = n(13), l = n(22), f = n(2), h = n(17), p = n(11);
          function d(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          e.a = function(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? d(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : d(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }({ EditorInstance: l.b, Length: f.a, EditorElement: u.a, HTMLLayerRender: c.a, Component: a.a, MenuItem: o.a, BaseProperty: h.a, icon: p.a }, s);
        }, function(t, e, n) {
          "use strict";
          n(22);
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f), p = n(23);
          function d(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var v = function(t2) {
            s()(n2, t2);
            var e2 = d(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "align_vertical_bottom";
            } }, { key: "getTitle", value: function() {
              return "Bottom";
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }, { key: "clickButton", value: function(t3) {
              this.emit("sort.bottom");
            } }]), n2;
          }(p.a);
          function y2(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var g = function(t2) {
            s()(n2, t2);
            var e2 = y2(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "align_horizontal_center";
            } }, { key: "getTitle", value: function() {
              return "Center";
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }, { key: "clickButton", value: function(t3) {
              this.emit("sort.center");
            } }]), n2;
          }(p.a);
          function m(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var b = function(t2) {
            s()(n2, t2);
            var e2 = m(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "align_horizontal_left";
            } }, { key: "getTitle", value: function() {
              return "Left";
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }, { key: "clickButton", value: function(t3) {
              this.emit("sort.left");
            } }]), n2;
          }(p.a);
          function k(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var O = function(t2) {
            s()(n2, t2);
            var e2 = k(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "align_vertical_center";
            } }, { key: "getTitle", value: function() {
              return "middle";
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }, { key: "clickButton", value: function(t3) {
              this.emit("sort.middle");
            } }]), n2;
          }(p.a);
          function x2(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var j = function(t2) {
            s()(n2, t2);
            var e2 = x2(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "align_horizontal_right";
            } }, { key: "getTitle", value: function() {
              return "Right";
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }, { key: "clickButton", value: function(t3) {
              this.emit("sort.right");
            } }]), n2;
          }(p.a);
          function S(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var P = function(t2) {
            s()(n2, t2);
            var e2 = S(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "vertical_distribute";
            } }, { key: "getTitle", value: function() {
              return "height";
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }, { key: "clickButton", value: function(t3) {
              this.emit("same.height");
            } }]), n2;
          }(p.a);
          function w(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var R = function(t2) {
            s()(n2, t2);
            var e2 = w(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "horizontal_distribute";
            } }, { key: "getTitle", value: function() {
              return "width";
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }, { key: "clickButton", value: function(t3) {
              console.log(t3), this.emit("same.width");
            } }]), n2;
          }(p.a);
          function C(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var E = function(t2) {
            s()(n2, t2);
            var e2 = C(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIconString", value: function() {
              return "align_vertical_top";
            } }, { key: "getTitle", value: function() {
              return "Top";
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }, { key: "clickButton", value: function(t3) {
              this.emit("sort.top");
            } }]), n2;
          }(p.a), $ = n(17);
          n(154);
          function I(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var T = function(t2) {
            s()(n2, t2);
            var e2 = I(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "components", value: function() {
              return { LeftAlign: b, CenterAlign: g, RightAlign: j, TopAlign: E, MiddleAlign: O, BottomAlign: v, SameWidth: R, SameHeight: P };
            } }, { key: "getTitle", value: function() {
              return this.$i18n("alignment.property.title");
            } }, { key: "isHideHeader", value: function() {
              return true;
            } }, { key: "getBody", value: function() {
              return '\n      <div class="elf--alignment-item">\n        <object refClass="LeftAlign" />\n        <object refClass="CenterAlign" />\n        <object refClass="RightAlign" />\n\n        <object refClass="TopAlign" />\n        <object refClass="MiddleAlign" />\n        <object refClass="BottomAlign" />  \n\n        <object refClass="SameWidth" direction="bottom" />\n        <object refClass="SameHeight" />\n      </div>\n    ';
            } }]), n2;
          }($.a), B = n(7), M = n.n(B), V = n(0), D = n(11), L = n(10), A = n.n(L), F = n(2), z = n(30);
          function N(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "@";
            return "".concat(e2).concat(t2.startIndex).padEnd(10, "0");
          }
          function _(t2, e2) {
            var n2 = function(t3, e3) {
              var n3 = t3.match(e3), r2 = [];
              if (!n3)
                return r2;
              for (var i2 = 0, a2 = n3.length; i2 < a2; i2++)
                r2.push({ parsedString: n3[i2] });
              var o2 = { next: 0 };
              return r2.forEach(function(e4) {
                var n4 = t3.indexOf(e4.parsedString, o2.next);
                e4.startIndex = n4, e4.endIndex = n4 + e4.parsedString.length, o2.next = e4.endIndex;
              }), r2;
            }(t2, e2);
            return n2.forEach(function(e3) {
              t2 = t2.replace(e3.parsedString, N(e3));
            }), { str: t2, matches: n2 };
          }
          function U(t2, e2) {
            return e2.forEach(function(e3) {
              t2 = t2.replace(N(e3), e3.parsedString);
            }), t2;
          }
          function G(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function H(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var K = /((cubic-bezier|steps)\(([^\)]*)\))/gi, Y = function(t2) {
            s()(n2, t2);
            var e2 = H(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return { itemType: "animation", checked: true, name: "none", direction: "normal", duration: F.a.second(0), timingFunction: "linear", delay: F.a.second(0), iterationCount: F.a.string("infinite"), playState: "running", fillMode: "none" };
            } }, { key: "convert", value: function(t3) {
              return (t3 = A()(h()(n2.prototype), "convert", this).call(this, t3)).duration = F.a.parse(t3.duration), t3.iterationCount = F.a.parse(t3.iterationCount), t3;
            } }, { key: "toCloneObject", value: function() {
              return function(t3) {
                for (var e3 = 1; e3 < arguments.length; e3++) {
                  var n3 = arguments[e3] != null ? arguments[e3] : {};
                  e3 % 2 ? G(Object(n3), true).forEach(function(e4) {
                    M()(t3, e4, n3[e4]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(n3)) : G(Object(n3)).forEach(function(e4) {
                    Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(n3, e4));
                  });
                }
                return t3;
              }({}, this.attrs("name", "direction", "duration", "timingFunction", "delay", "iterationCount", "playState", "fillMode"));
            } }, { key: "togglePlayState", value: function(t3) {
              t3 ? this.reset({ playState: t3 === "running" ? "running" : "paused" }) : this.json.playState === "paused" ? this.reset({ playState: "running" }) : this.reset({ playState: "paused" });
            } }, { key: "toCSS", value: function() {
              return this.json.name ? { animation: this.toString() } : {};
            } }, { key: "toString", value: function() {
              var t3 = this.json;
              return [t3.duration, t3.timingFunction, t3.delay, t3.iterationCount, t3.direction, t3.fillMode, t3.playState, t3.name].join(" ");
            } }], [{ key: "parse", value: function(t3) {
              return new n2(t3);
            } }, { key: "join", value: function(t3) {
              return t3.map(function(t4) {
                return new n2(t4).toString();
              }).join(",");
            } }, { key: "add", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r2 = n2.parseStyle(t3);
              return r2.push(n2.parse(e3)), n2.join(r2);
            } }, { key: "remove", value: function(t3, e3) {
              return n2.filter(t3, function(t4, n3) {
                return e3 != n3;
              });
            } }, { key: "filter", value: function(t3, e3) {
              return n2.join(n2.parseStyle(t3).filter(function(t4) {
                return e3(t4);
              }));
            } }, { key: "replace", value: function(t3, e3, r2) {
              var i2 = n2.parseStyle(t3);
              return i2[e3] ? i2[e3] = r2 : i2.push(r2), n2.join(i2);
            } }, { key: "get", value: function(t3, e3) {
              return n2.parseStyle(t3)[e3];
            } }, { key: "parseStyle", value: function(t3) {
              var e3 = [];
              if (!t3)
                return e3;
              var r2 = _(t3, K);
              return (e3 = r2.str.split(",").map(function(t4) {
                var e4 = t4.split(" ").filter(Boolean);
                return e4.length >= 7 ? { duration: F.a.parse(e4[0]), timingFunction: U(e4[1], r2.matches), delay: F.a.parse(e4[2]), iterationCount: e4[3] === "infinite" ? F.a.string("infinite") : F.a.parse(e4[3]), direction: e4[4], fillMode: e4[5], playState: e4[6], name: e4[7] } : e4.length >= 3 ? { duration: F.a.parse(e4[0]), timingFunction: U(e4[1], r2.matches), delay: F.a.parse(e4[2]), name: e4[3] } : e4.length >= 1 ? { duration: F.a.parse(e4[0]), name: e4[1] } : {};
              })).map(function(t4) {
                return n2.parse(t4);
              });
            } }]), n2;
          }(z.a), X = n(8);
          n(155);
          function W(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Z(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var q = function(t2) {
            s()(n2, t2);
            var e2 = Z(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("animation.property.title");
            } }, { key: "getBody", value: function() {
              return "<div class='animation-list' ref='$animationList'></div>";
            } }, { key: "getTools", value: function() {
              return '\n        <button type="button" ref="$add" title="add Fill">'.concat(D.a.add, "</button>\n    ");
            } }, { key: "isFirstShow", value: function() {
              return true;
            } }, { key: Object(V.LOAD)("$animationList") + V.DOMDIFF, value: function() {
              var t3 = this, e3 = this.$selection.current;
              return e3 ? Y.parseStyle(e3.animation).map(function(e4, n3) {
                var r2 = t3.state.selectedIndex === n3 ? "selected" : "", i2 = Object(X.curveToPath)(e4.timingFunction, 30, 30);
                return "\n      <div class='animation-group-item'>\n        <div class='animation-item ".concat(r2, "' \n             data-index='").concat(n3, `' 
             ref="animationIndex`).concat(n3, `" 
          >
            <div class='timing preview' data-index='`).concat(n3, "' ref='$preview").concat(n3, `'>
              <svg class='item-canvas' width="30" height="30" viewBox="0 0 30 30">
                <path d="`).concat(i2, `" stroke="white" stroke-width="1" fill='none' />
              </svg>
            </div>
            <div class='name'>
              <div class='title' ref="animationName`).concat(n3, '">\n                ').concat(e4.name ? e4.name : "&lt; ".concat(t3.$i18n("animation.property.select a keyframe"), " &gt;"), "\n              </div>\n              <div class='labels'>\n                <label class='count' title='").concat(t3.$i18n("animation.property.iteration.count"), "'><small>").concat(e4.iterationCount, "</small></label>\n                <label class='delay' title='").concat(t3.$i18n("animation.property.delay"), "'><small>").concat(e4.delay, "</small></label>\n                <label class='duration' title='").concat(t3.$i18n("animation.property.duration"), "'><small>").concat(e4.duration, "</small></label>\n                <label class='direction' title='").concat(t3.$i18n("animation.property.direction"), "'><small>").concat(e4.direction, "</small></label>\n                <label class='fill-mode' title='").concat(t3.$i18n("animation.property.fill.mode"), "'><small>").concat(e4.fillMode, "</small></label>\n                <label class='play-state' title='").concat(t3.$i18n("animation.property.play.state"), "' data-index='").concat(n3, `' data-play-state-selected-value="`).concat(e4.playState, `">
                  <small data-play-state-value='running'>`).concat(D.a.play, "</small>\n                  <small data-play-state-value='paused'>").concat(D.a.pause, `</small>
                </label>
              </div>
            </div>
            <div class='tools'>
                <button type="button" class="del" data-index="`).concat(n3, '">\n                  ').concat(D.a.remove2, "\n                </button>\n            </div>\n        </div>\n      </div>        \n      ");
              }) : "";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.DEBOUNCE)(100), value: function() {
              this.refreshShowIsNot("project"), this.emit("hideAnimationPropertyPopup");
            } }, { key: Object(V.CLICK)("$add"), value: function(t3) {
              var e3 = this;
              this.$selection.current ? (this.command("setAttributeForMulti", "add animation property", this.$selection.packByValue({ animation: function(t4) {
                return Y.add(t4.animation, { name: null });
              } })), this.nextTick(function() {
                setTimeout(function() {
                  e3.refresh();
                }, 100);
              })) : alert("Select a layer");
            } }, { key: Object(V.CLICK)("$animationList .tools .del"), value: function(t3) {
              var e3 = t3.$dt.attr("data-index"), n3 = this.$selection.current;
              n3 && (n3.reset({ animation: Y.remove(n3.animation, e3) }), this.emit("refreshElement", n3), this.refresh());
            } }, { key: Object(V.CLICK)("$animationList .play-state"), value: function(t3) {
              var e3 = +t3.$dt.attr("data-index"), n3 = this.$selection.current;
              if (n3) {
                var r2 = Y.parseStyle(n3.animation), i2 = r2[e3];
                i2 && (i2.togglePlayState(), t3.$dt.attr("data-play-state-selected-value", i2.playState), n3.reset({ animation: Y.join(r2) }), this.emit("refreshElement", n3));
              }
            } }, { key: "selectItem", value: function(t3) {
              var e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1];
              e3 ? this.refs["animationIndex".concat(t3)].addClass("selected") : this.refs["animationIndex".concat(t3)].removeClass("selected");
            } }, { key: "viewAnimationPicker", value: function(t3) {
              typeof this.selectedIndex == "number" && this.selectItem(this.selectedIndex, false), this.selectedIndex = +t3.attr("data-index"), this.current = this.$selection.current, this.current && (this.currentAnimation = Y.get(this.current.animation, this.selectedIndex), this.viewAnimationPropertyPopup());
            } }, { key: "viewAnimationPropertyPopup", value: function() {
              if (this.currentAnimation) {
                var t3 = this.currentAnimation;
                this.emit("showAnimationPropertyPopup", { changeEvent: "changeAnimationPropertyPopup", data: t3.toCloneObject(), instance: this });
              }
            } }, { key: Object(V.CLICK)("$animationList .preview"), value: function(t3) {
              this.viewAnimationPicker(t3.$dt);
            } }, { key: "getRef", value: function() {
              for (var t3 = arguments.length, e3 = new Array(t3), n3 = 0; n3 < t3; n3++)
                e3[n3] = arguments[n3];
              return this.refs[e3.join("")];
            } }, { key: Object(V.SUBSCRIBE)("changeAnimationPropertyPopup"), value: function(t3) {
              var e3 = this;
              this.currentAnimation && (this.currentAnimation.reset(function(t4) {
                for (var e4 = 1; e4 < arguments.length; e4++) {
                  var n3 = arguments[e4] != null ? arguments[e4] : {};
                  e4 % 2 ? W(Object(n3), true).forEach(function(e5) {
                    M()(t4, e5, n3[e5]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(n3)) : W(Object(n3)).forEach(function(e5) {
                    Object.defineProperty(t4, e5, Object.getOwnPropertyDescriptor(n3, e5));
                  });
                }
                return t4;
              }({}, t3)), this.current && (this.command("setAttributeForMulti", "change animation property", this.$selection.packByValue({ animation: function(t4) {
                return Y.replace(t4.animation, e3.selectedIndex, e3.currentAnimation);
              } })), this.refresh()));
            } }]), n2;
          }($.a), J = n(13);
          n(156);
          function Q(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var tt = function(t2) {
            s()(n2, t2);
            var e2 = Q(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              return "\n        <div class='elf--popup ".concat(this.getClassName(), `'>
            <div class='popup-title' ref="$title">
                <label>`).concat(this.getTitle(), '</label>\n                <span class="tools">\n                  ').concat(this.getTools(), "\n                  <button type='button' class='close' ref='$close'>").concat(D.a.close, "</button>\n                </span>\n            </div>\n            <div class='popup-body'>").concat(this.getBody(), "</div>\n            <!--<div class='popup-resizer' ref='$resizer'></div> -->\n        </div>\n        ");
            } }, { key: "getClassName", value: function() {
              return "";
            } }, { key: "getTitle", value: function() {
              return "";
            } }, { key: "getTools", value: function() {
              return "";
            } }, { key: "getBody", value: function() {
              return "";
            } }, { key: Object(V.CLICK)("$close"), value: function() {
              this.$el.hide();
            } }, { key: Object(V.POINTERSTART)("$title") + Object(V.MOVE)("movePopupTitle") + Object(V.END)("endPopupTitle"), value: function() {
              this.x = F.a.parse(this.$el.css("left")), this.y = F.a.parse(this.$el.css("top"));
            } }, { key: "movePopupTitle", value: function(t3, e3) {
              var n3 = F.a.px(this.x.value + t3), r2 = F.a.px(this.y.value + e3);
              this.$el.css({ left: n3, top: r2, right: "auto", bottom: "auto" });
            } }, { key: "show", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 200, e3 = 28, n3 = 320, r2 = this.$el.css("top"), i2 = this.$el.css("left"), a2 = r2 !== "auto" ? F.a.parse(r2) : F.a.px(110), o2 = i2 !== "auto" ? F.a.parse(i2) : F.a.px(document.body.clientWidth - n3 - e3 - t3);
              this.$el.css({ top: a2, left: o2, "z-index": this.$editor.zIndex }).show("inline-block");
            } }, { key: "hide", value: function() {
              this.$el.hide();
            } }, { key: Object(V.SUBSCRIBE)("hidePropertyPopup"), value: function() {
              this.hide();
            } }, { key: Object(V.POINTERSTART)("$resizer") + Object(V.MOVE)("moveResizer"), value: function(t3) {
              this.width = F.a.parse(this.$el.css("width")), this.height = F.a.parse(this.$el.css("height"));
            } }, { key: "moveResizer", value: function(t3, e3) {
              this.$el.css({ width: F.a.px(Math.min(this.width.value + t3, 1e3)), height: F.a.px(Math.min(this.height.value + e3, 700)) });
            } }]), n2;
          }(J.a);
          n(157);
          function et(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function nt(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? et(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : et(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function rt(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var it = function(t2) {
            s()(n2, t2);
            var e2 = rt(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("animation.property.popup.title");
            } }, { key: "initState", value: function() {
              return { changeEvent: "", instance: {}, data: {} };
            } }, { key: "updateData", value: function(t3) {
              this.state.data = nt(nt({}, this.state.data), t3), this.state.instance && this.state.instance.trigger(this.state.changeEvent, this.state.data);
            } }, { key: "getBody", value: function() {
              return "<div class='elf--animation-property-popup' ref='$popup'></div>";
            } }, { key: Object(V.LOAD)("$popup"), value: function() {
              return '\n      <div class="box">\n        '.concat(this.templateForKeyframe(), "\n        ").concat(this.templateForTimingFunction(), "\n        ").concat(this.templateForIterationCount(), "\n        ").concat(this.templateForDelay(), "\n        ").concat(this.templateForDuration(), "\n        ").concat(this.templateForDirection(), "\n        ").concat(this.templateForFillMode(), "\n        ").concat(this.templateForPlayState(), "\n      </div>\n    ");
            } }, { key: "templateForTimingFunction", value: function() {
              return "\n    <div class='timing-function'>\n      <label>".concat(this.$i18n("animation.property.popup.timing.function"), `</label>
      <object refClass="CubicBezierEditor" ref='$cubicBezierEditor' key="timingFunction" value="`).concat(this.state.data.timingFunction || "linear", `" onChange='changeCubicBezier' />
    </div>
    `);
            } }, { key: "templateForKeyframe", value: function() {
              return "\n      <div class='name'>\n        <label>".concat(this.$i18n("animation.property.popup.keyframe"), "</label>\n        <div class='input grid-1'>\n          <select ref='$name'></select>\n        </div>\n      </div>\n    ");
            } }, { key: Object(V.LOAD)("$name"), value: function() {
              var t3 = this, e3 = this.$selection.currentProject, n3 = [];
              return e3 && e3.keyframes && (n3 = e3.keyframes.map(function(t4) {
                return { key: t4.name, value: t4.name };
              })), n3.unshift({ key: "Select a keyframe", value: "" }), n3.map(function(e4) {
                var n4 = e4.value === t3.name ? "selected" : "", r2 = t3.$i18n(e4.key);
                return "<option value='".concat(e4.value, "' ").concat(n4, ">").concat(r2, "</option>");
              });
            } }, { key: Object(V.CHANGE)("$name"), value: function() {
              this.updateData({ name: this.refs.$name.value });
            } }, { key: "templateForDirection", value: function() {
              var t3 = this, e3 = "normal,reverse,alternate,alternate-reverse".split(",").map(function(e4) {
                return "".concat(e4, ":").concat(t3.$i18n(e4));
              }).join(",");
              return `
      <div class='direction'>
        <object refClass="SelectEditor"  
            label='`.concat(this.$i18n("animation.property.popup.direction"), `'
            ref='$direction' 
            key='direction' 
            value="`).concat(this.state.data.direction, `"
            options='`).concat(e3, "'\n            onChange='changeSelect'\n        /> \n      </div>\n    ");
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeSelect"), value: function(t3, e3) {
              this.updateData(M()({}, t3, e3));
            } }, { key: "templateForPlayState", value: function() {
              return `
    <div class='play-state'>
      <object refClass="SelectEditor"  
          label='`.concat(this.$i18n("animation.property.popup.play.state"), `'
          ref='$playState' 
          key='playState' 
          value="`).concat(this.state.data.playState, `"
          options='`).concat(["paused", "running"], "'\n          onChange='changeSelect'\n      /> \n    </div>\n  ");
            } }, { key: "templateForFillMode", value: function() {
              var t3 = this, e3 = "none,forwards,backwards,both".split(",").map(function(e4) {
                return "".concat(e4, ":").concat(t3.$i18n(e4));
              }).join(",");
              return `
    <div class='fill-mode'>
      <object refClass="SelectEditor"  
          label='`.concat(this.$i18n("animation.property.popup.fill.mode"), `'
          ref='$fillMode' 
          key='fillMode' 
          value="`).concat(this.state.data.fillMode, `"
          options='`).concat(e3, "'\n          onChange='changeSelect'\n      /> \n    </div>\n  ");
            } }, { key: "templateForDelay", value: function() {
              return `
    <div class='delay'>
      <object refClass="RangeEditor"  
        ref='$delay' 
        label='`.concat(this.$i18n("animation.property.popup.delay"), "' \n        calc='false' \n        key='delay' \n        value='").concat(this.state.data.delay, `' 
        units='s,ms' 
        onChange="changeRangeEditor" />
    </div>
    `);
            } }, { key: "templateForDuration", value: function() {
              return `
    <div class='duration'>
      <object refClass="RangeEditor"  
        ref='$duration' 
        label='`.concat(this.$i18n("animation.property.popup.duration"), "'  \n        key='duration' \n        value='").concat(this.state.data.duration, `' 
        units='s,ms' 
        onChange="changeRangeEditor" />
    </div>
    `);
            } }, { key: "templateForIterationCount", value: function() {
              return `
      <div class='iteration-count'>
        <object refClass="IterationCountEditor"
          ref='$iterationCount' 
          label='`.concat(this.$i18n("animation.property.popup.iteration"), "' \n          key='iterationCount' \n          value='").concat(this.state.iterationCount || "0", `' 
          units='normal,infinite' 
          onChange="changeRangeEditor" 
        />
      </div>
    `);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeRangeEditor"), value: function(t3, e3) {
              t3 === "iterationCount" && (e3 = e3.unit === "normal" ? F.a.number(e3.value) : F.a.string(e3.unit)), this.updateData(M()({}, t3, e3));
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeCubicBezier"), value: function(t3, e3) {
              this.updateData(M()({}, t3, e3));
            } }, { key: Object(V.SUBSCRIBE)("showAnimationPropertyPopup"), value: function(t3) {
              this.setState(t3), this.show(250), this.children.$cubicBezierEditor.trigger("showCubicBezierEditor", t3.data.timingFunction);
            } }, { key: Object(V.SUBSCRIBE)("hideAnimationPropertyPopup"), value: function() {
              this.$el.hide();
            } }]), n2;
          }(tt);
          function at(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var ot = ["visible", "hidden", "scroll", "auto"], ct = function(t2) {
            s()(n2, t2);
            var e2 = at(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("background.color.property.title");
            } }, { key: "getOverflowList", value: function() {
              var t3 = this;
              return this.variable(ot.map(function(e3) {
                return { value: e3, text: t3.$i18n("background.color.property.overflow.".concat(e3)) };
              }));
            } }, { key: "getBody", value: function() {
              return `
      <div class='property-item animation-property-item'>
        <div class='group'>
          <span class='add-timeline-property' data-property='background-color'></span>
        </div>
        <object refClass="ColorViewEditor" 
          ref='$color' 
          label="`.concat(this.$i18n("background.color.property.color"), `" 
          key='background-color' 
          onchange="changeColor" 
        />
      </div>   
        <div class='property-item animation-property-item' style='display:none;'>
          <div class='group'>
            <span class='add-timeline-property' data-property='z-index'></span>
          </div>
          <object refClass="NumberRangeEditor"  
            ref='$zIndex' 
            key='z-index' 
            label='`).concat(this.$i18n("background.color.property.zindex"), `'
            min="-1000"
            max="1000"
            step="1"
            onchange="changeSelect" />
        </div>
        
        <div class='property-item animation-property-item'>
          <div class='group'>
            <span class='add-timeline-property' data-property='mix-blend-mode'></span>
          </div>
          <object refClass="BlendSelectEditor" 
            label='`).concat(this.$i18n("background.color.property.blend"), `'
            ref='$mixBlend' 
            removable='true'
            key='mix-blend-mode' 
            icon="true" 
            tabIndex="1"
            onchange="changeSelect" />
        </div>        

        <div class='property-item animation-property-item'>
          <div class='group'>
            <span class='add-timeline-property' data-property='overflow'></span>
          </div>
          <object refClass="SelectEditor"  
            label='`).concat(this.$i18n("background.color.property.overflow"), `'
            ref='$overflow' 
            removable='true'
            key='overflow' 
            icon="true" 
            tabIndex="1"
            options=`).concat(this.getOverflowList(), '\n            onchange="changeSelect" />\n        </div>                \n      ');
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeColor"), value: function(t3, e3) {
              this.command("setAttributeForMulti", "change background color", this.$selection.packByValue(M()({}, t3, e3)));
            } }, { key: "refresh", value: function() {
              var t3 = this.$selection.current;
              t3 && (this.children.$zIndex.setValue(t3["z-index"] || 0), this.children.$mixBlend.setValue(t3["mix-blend-mode"]), this.children.$overflow.setValue(t3.overflow), this.children.$color.setValue(t3["background-color"] || "rgba(0, 0, 0, 1)"));
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeSelect"), value: function(t3, e3) {
              this.command("setAttributeForMulti", "change attribute : ".concat(t3), this.$selection.packByValue(M()({}, t3, e3)));
            } }, { key: "editableProperty", get: function() {
              return "appearance";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }]), n2;
          }($.a), st = [{ category: "Web", groups: [{ group: "Landscape", devices: [{ device: "Web Small", size: "1024x600" }, { device: "Web Medium", size: "1280x800" }, { device: "Web Large", size: "1440x900" }, { device: "Web X Large", size: "1920x1200" }] }, { group: "Portrait", devices: [{ device: "Web Small", size: "600x1024" }, { device: "Web Medium", size: "800x1280" }, { device: "Web Large", size: "900x1440" }, { device: "Web X Large", size: "1200x1920" }] }] }, { category: "Apple Devices", groups: [{ group: "iphone", devices: [{ device: "iPhone 8", size: "375x667" }, { device: "iPhone 8 Plus", size: "414x736" }, { device: "iPhone SE", size: "320x568" }, { device: "iPhone XS", size: "375x812" }, { device: "iPhone XR", size: "414x896" }, { device: "iPhone XS Max", size: "414x896" }] }, { group: "ipad", devices: [{ device: "iPad", size: "768x1024" }, { device: "iPad Pro", size: "1024x1366" }] }, { group: "apple watch", devices: [{ device: "Apple Watch 38nm", size: "272x340" }, { device: "Apple Watch 40nm", size: "326x394" }, { device: "Apple Watch 42nm", size: "313x390" }, { device: "Apple Watch 44nm", size: "368x448" }] }, { group: "apple tv", devices: [{ device: "Apple TV", size: "1920x1080" }] }, { group: "MAC", devices: [{ device: "Touch Bar", size: "1085x30" }] }] }, { category: "Android Devices", groups: [{ group: "android mobile", devices: [{ device: "Android Mobile", size: "360x640" }] }, { group: "android tablet", devices: [{ device: "Android Tablet", size: "768x1024" }] }] }];
          n(158);
          function ut(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var lt = function(t2) {
            s()(n2, t2);
            var e2 = ut(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getClassName", value: function() {
              return "elf--artboard-size-list";
            } }, { key: "editableProperty", get: function() {
              return "artboard-size";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }, { key: "initState", value: function() {
              return { selectedIndex: 0 };
            } }, { key: "getTitle", value: function() {
              return "ArtBoard Preset";
            } }, { key: "getTools", value: function() {
              var t3 = st.map(function(t4, e3) {
                return { category: t4.category, index: e3 };
              });
              return `
      <object refClass="SelectEditor"  
        ref='$select' 
        value="`.concat(t3[0].category, '" \n        options=').concat(this.variable(t3.map(function(t4) {
                return t4.category;
              })), " \n        onchange='changeSizeIndex'\n      />\n    ");
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeSizeIndex"), value: function(t3, e3) {
              var n3 = this.state.selectedIndex;
              st.forEach(function(t4, r2) {
                t4.category === e3 && (n3 = r2);
              }), this.state.selectedIndex = n3, this.refresh();
            } }, { key: "getBody", value: function() {
              return "\n      <div class='artboard-size-item' ref='$list'></div>\n    ";
            } }, { key: "makeDevice", value: function(t3) {
              return "\n      <div class='device-item' data-size='".concat(t3.size, "'>\n        <div class='title'>").concat(t3.device, "</div>\n        <div class='size'>").concat(t3.size, "</div>\n      </div>\n    ");
            } }, { key: Object(V.CLICK)("$list .device-item"), value: function(t3) {
              var e3 = t3.$dt.attr("data-size");
              this.emit("resizeArtBoard", e3);
            } }, { key: "makeGroup", value: function(t3) {
              var e3 = this;
              return "\n      <div class='group-item'>\n        <div class='title'>".concat(t3.group, "</div>\n      </div>\n      <div class='devices'>\n        ").concat(t3.devices.map(function(t4) {
                return e3.makeDevice(t4);
              }).join(""), "\n      </div>\n    ");
            } }, { key: "makeCategory", value: function(t3) {
              var e3 = this;
              return "\n      <div class='category'>\n        <div class='title'>".concat(t3.category, "</div>\n      </div>\n      <div class='groups'>\n        ").concat(t3.groups.map(function(t4) {
                return e3.makeGroup(t4);
              }).join(""), "\n      </div>\n    ");
            } }, { key: Object(V.LOAD)("$list") + V.DOMDIFF, value: function() {
              var t3 = this;
              return st[this.state.selectedIndex].groups.map(function(e3) {
                return t3.makeGroup(e3);
              });
            } }]), n2;
          }($.a), ft = n(15), ht = n.n(ft), pt = ["blur", "grayscale", "hue-rotate", "invert", "brightness", "contrast", "drop-shadow", "opacity", "saturate", "sepia", "svg"];
          function dt(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var vt = function(t2) {
            s()(n2, t2);
            var e2 = dt(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("backdrop.filter.property.title");
            } }, { key: "hasKeyframe", value: function() {
              return true;
            } }, { key: "getTitleClassName", value: function() {
              return "filter";
            } }, { key: "getKeyframeProperty", value: function() {
              return "backdrop-filter";
            } }, { key: "getBodyClassName", value: function() {
              return "no-padding";
            } }, { key: "getBody", value: function() {
              return "<div class='full filter-property' ref='$body'></div>";
            } }, { key: "getTools", value: function() {
              return '\n      <select ref="$filterSelect"></select>\n      <button type="button" ref="$add" title="add Filter">'.concat(D.a.add, "</button>\n    ");
            } }, { key: Object(V.CLICK)("$add"), value: function() {
              var t3 = this.refs.$filterSelect.value;
              this.children.$filterEditor.trigger("add", t3);
            } }, { key: Object(V.LOAD)("$filterSelect"), value: function() {
              var t3 = this, e3 = pt.map(function(e4) {
                return { title: t3.$i18n("filter.property.".concat(e4)), value: e4 };
              }), n3 = this.getSVGFilterList();
              return (n3.length ? [].concat(ht()(e3), [{ title: "-------", value: "" }], ht()(n3)) : ht()(e3)).map(function(t4) {
                var e4 = t4.title, n4 = t4.value;
                return "<option value='".concat(n4, "'>").concat(e4, "</option>");
              });
            } }, { key: "getSVGFilterList", value: function() {
              var t3 = this.$selection.currentProject, e3 = [];
              return t3 && (e3 = t3.svgfilters.map(function(t4) {
                return { title: "svg - #".concat(t4.id), value: t4.id };
              })), e3;
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = (this.$selection.current || {})["backdrop-filter"];
              return `
      <div>
        <object refClass="FilterEditor" ref='$filterEditor' key="backdrop-filter" value='`.concat(t3, `' hide-label="true" onchange='changeFilterEditor' />
      </div>
    `);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeFilterEditor"), value: function(t3, e3) {
              this.command("setAttributeForMulti", "change backdrop filter", this.$selection.packByValue(M()({}, t3, e3)));
            } }, { key: "editableProperty", get: function() {
              return "backdrop-filter";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }]), n2;
          }($.a);
          function yt(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var gt = function(t2) {
            s()(n2, t2);
            var e2 = yt(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return "Background Clip";
            } }, { key: "isFirstShow", value: function() {
              return false;
            } }, { key: "getTools", value: function() {
              return "<div ref='$backgroundClip' style='padding-top: 3px;'></div>";
            } }, { key: Object(V.LOAD)("$backgroundClip"), value: function() {
              var t3 = (this.$selection.current || {})["background-clip"] || "";
              return `
      <object refClass="SelectEditor"  
          ref='$1' 
          key='background-clip' 
          icon="true" 
          value="`.concat(t3, '" \n          options=').concat(this.variable(["", "paddinb-box", "border-box", "content-box", "text"]), ' \n          onchange="changeSelect" \n      />');
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeSelect"), value: function(t3, e3) {
              this.command("setAttributeForMulti", "change background clip", this.$selection.packByValue(M()({}, t3, e3)));
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.DEBOUNCE)(100), value: function() {
              this.refreshShow(["rect", "circle", "text"]);
            } }]), n2;
          }($.a), mt = n(34), bt = n(46), kt = n(24);
          n(159);
          function Ot(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var xt = { "image-resource": "Image", url: "Image", image: "Image", "static-gradient": "Static", "linear-gradient": "Linear", "repeating-linear-gradient": "".concat(D.a.repeat, " Linear"), "radial-gradient": "Radial", "repeating-radial-gradient": "".concat(D.a.repeat, " Radial"), "conic-gradient": "Conic", "repeating-conic-gradient": "".concat(D.a.repeat, " Conic") }, jt = { image: "image", "image-resource": "image", url: "image", "static-gradient": "gradient", "linear-gradient": "gradient", "repeating-linear-gradient": "gradient", "radial-gradient": "gradient", "repeating-radial-gradient": "gradient", "conic-gradient": "gradient", "repeating-conic-gradient": "gradient" }, St = function(t2) {
            s()(n2, t2);
            var e2 = Ot(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { hideLabel: this.props["hide-label"] === "true", value: this.props.value, images: this.parseBackgroundImage(this.props.value) };
            } }, { key: "parseBackgroundImage", value: function(t3) {
              return t3 === "" ? [] : mt.a.parseStyle(Object(X.STRING_TO_CSS)(t3));
            } }, { key: "setValue", value: function(t3) {
              console.log("aaaa", t3), this.setState({ value: t3, images: this.parseBackgroundImage(t3) });
            } }, { key: "template", value: function() {
              var t3 = this.state.hideLabel ? "hide" : "";
              return "\n            <div class='elf--background-image-editor' >\n                <div class='label ".concat(t3, "'>\n                    <label>").concat(this.props.title || "", `</label>
                    <div class='tools'>
                        <button type="button" ref='$add'>`).concat(D.a.add, " ").concat(this.props.title ? "" : "Add", "</button>\n                    </div>\n                </div>\n                <div class='fill-list' ref='$fillList'></div>\n            </div>\n        ");
            } }, { key: "templateForBlendMode", value: function(t3, e3) {
              return `
        <div class='popup-item'>
          <object refClass="BlendSelectEditor" 
                ref='$blend_`.concat(t3, `' 
                key='blendMode' 
                value="`).concat(e3, '" \n                params="').concat(t3, '" \n                onchange="changeRangeEditor" \n            />\n        </div>\n        ');
            } }, { key: Object(V.LOAD)("$fillList") + V.DOMDIFF, value: function() {
              var t3 = this, e3 = this.$selection.current || { color: "black" };
              return this.state.images.map(function(n3, r2) {
                var i2 = n3.image, a2 = jt[i2.type], o2 = xt[i2.type], c2 = n3.selected ? "selected" : "";
                return n3.selected && (t3.selectedIndex = r2), "\n            <div class='fill-item ".concat(c2, "' data-index='").concat(r2, `' ref="fillIndex`).concat(r2, `"  draggable='true' data-fill-type="`).concat(a2, '" >\n                <object refClass="BackgroundPositionEditor" \n                    key="background-position"\n                    index="').concat(r2, '"\n                    ref="$bp').concat(r2, '"\n                    x="').concat(n3.x, '"\n                    y="').concat(n3.y, '"\n                    width="').concat(n3.width, '"\n                    height="').concat(n3.height, '"\n                    repeat="').concat(n3.repeat, '"\n                    size="').concat(n3.size, '"\n                    blendMode="').concat(n3.blendMode, `"     
                    onchange='changePattern' />
                <object refClass="GradientSingleEditor" 
                    index="`).concat(r2, '"\n                    ref="$gse').concat(r2, '"\n                    image="').concat(n3.image, '"\n                    color="').concat(e3.color, `"
                    key="background-image"
                    onchange='changePattern'

                />
                <div class='fill-info'>
                  <div class='gradient-info'>
                    <div class='fill-title' ref="fillTitle`).concat(r2, '">').concat(o2, "</div>\n                    <div class='blend'>\n                      ").concat(t3.templateForBlendMode(r2, n3.blendMode), `
                    </div>
                    <div class='tools'>
                      <button type="button" class='remove' data-index='`).concat(r2, "'>").concat(D.a.remove2, "</button>\n                    </div>\n                  </div>\n                </div>\n            </div>\n            ");
              });
            } }, { key: "modifyBackgroundImage", value: function() {
              var t3 = Object(X.CSS_TO_STRING)(mt.a.toPropertyCSS(this.state.images));
              this.parent.trigger(this.props.onchange, this.props.key, t3);
            } }, { key: Object(V.SUBSCRIBE)("add"), value: function() {
              this.state.images.push(new mt.a({ image: new bt.a({ angle: 90, colorsteps: [new kt.a({ percent: 0, color: "white", index: 0 }), new kt.a({ percent: 100, color: "black", index: 1 })] }) })), this.refresh(), this.modifyBackgroundImage();
            } }, { key: Object(V.CLICK)("$add"), value: function() {
              this.trigger("add");
            } }, { key: Object(V.DRAGSTART)("$fillList .fill-item"), value: function(t3) {
              this.startIndex = +t3.$dt.attr("data-index");
            } }, { key: Object(V.DRAGOVER)("$fillList .fill-item") + V.PREVENT, value: function(t3) {
            } }, { key: "sortItem", value: function(t3, e3, n3) {
              t3.splice.apply(t3, [n3 + (e3 < n3 ? -1 : 0), 0].concat(ht()(t3.splice(e3, 1))));
            } }, { key: "sortBackgroundImage", value: function(t3, e3) {
              this.sortItem(this.state.images, t3, e3);
            } }, { key: Object(V.DROP)("$fillList .fill-item") + V.PREVENT, value: function(t3) {
              var e3 = +t3.$dt.attr("data-index");
              this.selectItem(this.startIndex, true), this.sortBackgroundImage(this.startIndex, e3), this.refresh(), this.modifyBackgroundImage();
            } }, { key: "getCurrentBackgroundImage", value: function() {
              return this.state.images[this.selectedIndex];
            } }, { key: Object(V.CLICK)("$fillList .tools .remove"), value: function(t3) {
              var e3 = +t3.$dt.attr("data-index");
              this.state.images.splice(e3, 1), this.refresh(), this.modifyBackgroundImage();
            } }, { key: "selectItem", value: function(t3) {
              var e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1];
              e3 ? this.refs["fillIndex".concat(t3)].addClass("selected") : this.refs["fillIndex".concat(t3)].removeClass("selected"), this.state.images.forEach(function(e4, n3) {
                e4.selected = n3 === t3;
              });
            } }, { key: Object(V.SUBSCRIBE)("selectFillPopupTab"), value: function(t3, e3) {
              var n3 = jt[t3];
              this.refs["fillIndex".concat(this.selectedIndex)].attr("data-fill-type", n3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeRangeEditor"), value: function(t3, e3, n3) {
              this.trigger("changePattern", t3, M()({}, t3, e3), n3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changePattern"), value: function(t3, e3, n3) {
              var r2 = +n3;
              this.state.images[r2].reset(e3), this.modifyBackgroundImage(), this.refresh();
            } }]), n2;
          }(J.a);
          n(160);
          function Pt(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var wt = function(t2) {
            s()(n2, t2);
            var e2 = Pt(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("background.image.position.popup.title");
            } }, { key: "initState", value: function() {
              return { size: this.props.size || "auto", repeat: this.props.repeat || "repeat", x: this.props.x || F.a.z(), y: this.props.y || F.a.z(), width: this.props.width || F.a.z(), height: this.props.height || F.a.z(), blendMode: this.props.blendMode };
            } }, { key: "updateData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.setState(t3, false), this.emit(this.state.changeEvent, t3, this.state.params);
            } }, { key: "templateForSize", value: function() {
              return `
      <div class='popup-item'>
        <object refClass="SelectEditor"  
          label="`.concat(this.$i18n("background.image.position.popup.size"), `" 
          ref='$size' 
          key='size' 
          value="`).concat(this.state.size, '" \n          options=').concat(this.variable(["contain", "cover", "auto"]), '\n          onchange="changeRangeEditor" />      \n      </div>\n    ');
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeRangeEditor"), value: function(t3, e3) {
              this.updateData(M()({}, t3, e3));
            } }, { key: "templateForX", value: function() {
              return `
      <div class='popup-item'>
        <object refClass="RangeEditor"  
            label="X"
            calc="false"            
            ref="$x" 
            key="x"
            value="`.concat(this.state.x, '"\n            min="-1000" max="1000" step="1"\n            onchange="changeRangeEditor"\n        />\n      </div>\n    ');
            } }, { key: "templateForY", value: function() {
              return `
      <div class='popup-item'>
        <object refClass="RangeEditor"  
            label="Y" 
            calc="false"       
            ref="$y" 
            key="y"
            value="`.concat(this.state.y, '"            \n            min="-1000" max="1000" step="1"\n            onchange="changeRangeEditor"\n        />\n      </div>\n    ');
            } }, { key: "templateForWidth", value: function() {
              return `
    <div class='popup-item'>
      <object refClass="RangeEditor"  
          label="`.concat(this.$i18n("background.image.position.popup.width"), '"   \n          calc="false"             \n          ref="$width" \n          key="width"\n          value="').concat(this.state.width, '"          \n          min="0" max="500" step="1" \n          onchange="changeRangeEditor"\n      />\n    </div>\n    ');
            } }, { key: "templateForHeight", value: function() {
              return `
    <div class='popup-item'>
      <object refClass="RangeEditor"  
          label="`.concat(this.$i18n("background.image.position.popup.height"), '"\n          calc="false"          \n          ref="$height" \n          key="height"\n          value="').concat(this.state.height, '"          \n          min="0" max="500" step="1" onchange="changeRangeEditor"\n      />\n    </div>\n    ');
            } }, { key: "templateForRepeat", value: function() {
              return "\n    <div class='popup-item grid-2'>\n      <label>".concat(this.$i18n("background.image.position.popup.repeat"), `</label>
      <div class='repeat-list' ref="$repeat" data-value='`).concat(this.state.repeat, `'>
          <button type="button" value='no-repeat' title="`).concat(this.$i18n("background.image.position.popup.type.no-repeat"), `"></button>
          <button type="button" value='repeat' title="`).concat(this.$i18n("background.image.position.popup.type.repeat"), `"></button>
          <button type="button" value='repeat-x' title="`).concat(this.$i18n("background.image.position.popup.type.repeat-x"), `"></button>
          <button type="button" value='repeat-y' title="`).concat(this.$i18n("background.image.position.popup.type.repeat-y"), `"></button>
          <button type="button" value='space' title="`).concat(this.$i18n("background.image.position.popup.type.space"), `"></button>
          <button type="button" value='round' title="`).concat(this.$i18n("background.image.position.popup.type.round"), '"></button>\n      </div>\n    </div>\n    ');
            } }, { key: Object(V.CLICK)("$repeat button"), value: function(t3) {
              var e3 = t3.$dt;
              this.refs.$repeat.attr("data-value", e3.value), this.updateData({ repeat: e3.value });
            } }, { key: "getBody", value: function() {
              return `
      <div class="elf--background-image-position-picker" ref='$picker'></div>
    `;
            } }, { key: Object(V.LOAD)("$picker"), value: function() {
              return "\n      \n      <div class='box'>\n\n        <div class='background-property'>\n          ".concat(this.templateForSize(), "        \n          ").concat(this.templateForX(), "\n          ").concat(this.templateForY(), "\n          ").concat(this.templateForWidth(), "\n          ").concat(this.templateForHeight(), "\n          ").concat(this.templateForRepeat(), "\n        </div>\n      </div>\n    ");
            } }, { key: Object(V.SUBSCRIBE)("showBackgroundImagePositionPopup"), value: function(t3, e3) {
              this.state.changeEvent = t3.changeEvent || "changeFillPopup", this.state.params = e3, this.setState(t3.data), this.show(460);
            } }]), n2;
          }(tt);
          function Rt(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Ct = function(t2) {
            s()(n2, t2);
            var e2 = Rt(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("background.image.property.title");
            } }, { key: "hasKeyframe", value: function() {
              return true;
            } }, { key: "afterRender", value: function() {
              this.show();
            } }, { key: "getKeyframeProperty", value: function() {
              return "background-image";
            } }, { key: "getClassName", value: function() {
              return "background-image";
            } }, { key: "getBodyClassName", value: function() {
              return "no-padding";
            } }, { key: "getBody", value: function() {
              return "\n      <div class='full' ref='$property'></div>               \n    ";
            } }, { key: "getTools", value: function() {
              return `<button type="button" ref='$add'>`.concat(D.a.add, "</button>");
            } }, { key: Object(V.CLICK)("$add"), value: function() {
              this.children.$backgroundImageEditor.trigger("add");
            } }, { key: Object(V.LOAD)("$property"), value: function() {
              var t3 = (this.$selection.current || {})["background-image"] || "";
              return `<object refClass="BackgroundImageEditor" 
              ref='$backgroundImageEditor' 
              key='background-image'
              value='`.concat(t3, `' 
              hide-label="true"
              onchange='changeBackgroundImage' 
            />`);
            } }, { key: "editableProperty", get: function() {
              return "background-image";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeBackgroundImage"), value: function(t3, e3) {
              this.command("setAttributeForMulti", "change background image", this.$selection.packByValue(M()({}, t3, e3)));
            } }]), n2;
          }($.a);
          n(161);
          function Et(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function $t(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Et(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Et(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function It(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Tt = function(t2) {
            s()(n2, t2);
            var e2 = It(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { index: this.props.index, x: this.props.x, y: this.props.y, width: this.props.width, height: this.props.height, repeat: this.props.repeat, size: this.props.size, blendMode: this.props.blendMode, color: "rgba(0, 0, 0, 1)" };
            } }, { key: "updateData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.setState(t3, false), this.modifyValue(t3);
            } }, { key: "modifyValue", value: function(t3) {
              this.parent.trigger(this.props.onchange, this.props.key, t3, this.state.index);
            } }, { key: "setValue", value: function(t3) {
              this.setState($t({}, t3));
            } }, { key: Object(V.BIND)("$miniView"), value: function() {
              return { style: { "background-image": "linear-gradient(to top right, black, white)", "background-repeat": this.state.repeat, "background-size": "7px 7px" } };
            } }, { key: "template", value: function() {
              return `
            <div class='elf--background-position-editor'>
                <div class='preview' ref='$preview'>
                    <div class='mini-view'>
                        <div class='color-view' style="background-color: `.concat(this.state.color, `" ref='$miniView'></div>
                    </div>
                </div>
            </div>
        `);
            } }, { key: Object(V.CLICK)("$preview"), value: function(t3) {
              this.viewBackgroundPositionPopup();
            } }, { key: "viewBackgroundPositionPopup", value: function() {
              this.emit("showBackgroundImagePositionPopup", { changeEvent: "changeBackgroundPositionPattern", data: this.state }, { id: this.id });
            } }, { key: Object(V.SUBSCRIBE)("changeBackgroundPositionPattern"), value: function(t3, e3) {
              e3.id === this.id && this.updateData($t({}, t3));
            } }]), n2;
          }(J.a), Bt = n(28), Mt = { none: true, hidden: true, dotted: true, dashed: true, solid: true, double: true, groove: true, ridge: true, inset: true, outset: true }, Vt = function() {
            function t2() {
              i()(this, t2);
            }
            return o()(t2, null, [{ key: "parseStyle", value: function(t3) {
              return Object(X.STRING_TO_CSS)(t3);
            } }, { key: "parseValue", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", e2 = "", n2 = "", r2 = "";
              return t3.split(" ").filter(function(t4) {
                return t4.trim();
              }).forEach(function(t4) {
                Mt[t4] ? e2 = t4 : Bt.a.isColor(t4) ? r2 = t4 : n2 = t4;
              }), { style: e2, color: r2, width: n2 };
            } }, { key: "joinValue", value: function(t3) {
              return "".concat(t3.width, " ").concat(t3.style || "solid", " ").concat(t3.color);
            } }, { key: "join", value: function(t3) {
              return [t3.border ? "border: ".concat(t3.border) : "", t3["border-top"] ? "border-top: ".concat(t3["border-top"]) : "", t3["border-left"] ? "border-left: ".concat(t3["border-left"]) : "", t3["border-right"] ? "border-right: ".concat(t3["border-right"]) : "", t3["border-bottom"] ? "border-bottom: ".concat(t3["border-bottom"]) : ""].filter(function(t4) {
                return t4;
              }).join(";");
            } }]), t2;
          }();
          n(162);
          function Dt(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Lt = ["border"], At = { border: "all", "border-top": "top", "border-right": "right", "border-bottom": "bottom", "border-left": "left" }, Ft = function(t2) {
            s()(n2, t2);
            var e2 = Dt(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              var t3 = Vt.parseStyle(this.props.value);
              return { direction: Object.keys(t3)[0] || "border", borders: t3 };
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.parent.trigger(this.props.onchange, this.props.key, this.getValue(), this.props.params);
            } }, { key: "getValue", value: function() {
              return Vt.join(this.state.borders);
            } }, { key: "setValue", value: function(t3) {
              this.state.borders = Vt.parseStyle(t3), this.refresh();
            } }, { key: "refresh", value: function() {
              this.load();
            } }, { key: Object(V.LOAD)("$editorArea"), value: function() {
              var t3 = this;
              return Lt.map(function(e3) {
                var n3 = At[e3] || e3;
                return n3 = t3.$i18n("border.editor." + n3), "\n      <div>\n        <object refClass='BorderValueEditor' ref='$".concat(e3, "' label='").concat(n3, `' key="`).concat(e3, '" value="').concat(t3.state.borders[e3], '" onchange="changeKeyValue" />\n      </div>\n      ');
              });
            } }, { key: "template", value: function() {
              return `
      <div class="elf--border-editor">
        <div class='header'>
          <div></div>
          <label>`.concat(this.$i18n("border.editor.width"), "</label>\n          <label>").concat(this.$i18n("border.editor.style"), "</label>\n          <label>").concat(this.$i18n("border.editor.color"), "</label>\n        </div>\n        <div class='editor-area' ref='$editorArea'>\n\n        </div>\n      </div>\n    ");
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeKeyValue"), value: function(t3, e3) {
              var n3 = this.state.borders;
              n3[t3] = e3, this.updateData({ borders: n3 });
            } }]), n2;
          }(J.a);
          n(163);
          function zt(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Nt = function(t2) {
            s()(n2, t2);
            var e2 = zt(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("border.property.title");
            } }, { key: "hasKeyframe", value: function() {
              return true;
            } }, { key: "getKeyframeProperty", value: function() {
              return "border";
            } }, { key: "getBody", value: function() {
              return `<div class="property-item full border-item" ref='$body'></div>`;
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = (this.$selection.current || {}).border || "";
              return "\n      <object refClass='BorderEditor' ref='$1' key='border' value='".concat(t3, "' onchange='changeKeyValue' />\n    ");
            } }, { key: "editableProperty", get: function() {
              return "border";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.DEBOUNCE)(100) + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeKeyValue"), value: function(t3, e3) {
              this.command("setAttributeForMulti", "change border", this.$selection.packByValue(M()({}, t3, e3)));
            } }]), n2;
          }($.a);
          n(164);
          function _t(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Ut = ["none", "hidden", "dotted", "dashed", "solid", "double", "groove", "ridge", "inset", "outset"].join(","), Gt = function(t2) {
            s()(n2, t2);
            var e2 = _t(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { value: Vt.parseValue(this.props.value) };
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.parent.trigger(this.props.onchange, this.props.key, this.getValue(), this.props.params);
            } }, { key: "getValue", value: function() {
              return Vt.joinValue(this.state.value);
            } }, { key: "setValue", value: function(t3) {
              this.state.value = Vt.parseValue(t3), this.refresh();
            } }, { key: "refresh", value: function() {
              this.children.$width.setValue(this.state.value.width || F.a.z()), this.children.$style.setValue(this.state.value.style || "solid"), this.children.$color.setValue(this.state.value.color || "rgba(0, 0, 0, 1)");
            } }, { key: "template", value: function() {
              var t3 = this.state.value, e3 = t3.width, n3 = t3.style, r2 = t3.color;
              return `
      <div class="elf--border-value-editor">
        <div class='editor-area'>
          <object refClass="RangeEditor"  ref='$width' min="0" max="100" step="1" key='width' value="`.concat(e3, `" onchange='changeKeyValue' />
        </div>
        <div class='editor-area'>
          <object refClass="SelectEditor"  ref='$style' key='style' options='`).concat(Ut, `' value="`).concat(n3 || "solid", `" onchange="changeKeyValue" />
        </div>
        <div class='editor-area'>
          <object refClass="ColorSingleEditor" ref='$color' key='color' value="`).concat(r2 || "rgba(0, 0, 0, 1)", '"  onchange="changeKeyValue" />\n        </div>\n\n      </div>\n    ');
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeKeyValue"), value: function(t3, e3) {
              var n3 = this.state.value;
              n3[t3] = e3, this.updateData({ value: n3 });
            } }]), n2;
          }(J.a);
          function Ht(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Kt(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Ht(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Ht(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Yt(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Xt = [{ key: "top", title: "Top" }, { key: "bottom", title: "Bottom" }, { key: "left", title: "Left" }, { key: "right", title: "Right" }], Wt = Xt.map(function(t2) {
            return t2.key;
          }), Zt = { image: "Image", "static-gradient": "Static", "linear-gradient": "Linear", "repeating-linear-gradient": "".concat(D.a.repeat, " Linear"), "radial-gradient": "Radial", "repeating-radial-gradient": "".concat(D.a.repeat, " Radial"), "conic-gradient": "Conic", "repeating-conic-gradient": "".concat(D.a.repeat, " Conic") }, qt = function(t2) {
            s()(n2, t2);
            var e2 = Yt(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return "Border Image";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection"), value: function() {
              this.refresh();
            } }, { key: "getTools", value: function() {
              var t3 = (this.$selection.current || {}).appliedBorderImage || false;
              return "\n      <label><input type='checkbox' ".concat(t3 ? "checked" : "", " ref='$apply' /> Apply</label>\n    ");
            } }, { key: Object(V.CLICK)("$apply"), value: function() {
              var t3 = this.$selection.current;
              if (t3) {
                var e3 = this.refs.$apply.checked();
                t3.reset({ applyBorderImage: e3 }), this.emit("refreshElement", t3);
              }
            } }, { key: "getColorStepList", value: function(t3) {
              switch (t3.type) {
                case "static-gradient":
                case "linear-gradient":
                case "repeating-linear-gradient":
                case "radial-gradient":
                case "repeating-radial-gradient":
                case "conic-gradient":
                case "repeating-conic-gradient":
                  return this.getColorStepString(t3.colorsteps);
              }
              return "";
            } }, { key: "getColorStepString", value: function(t3) {
              return t3.map(function(t4) {
                return `<div class='step' data-colorstep-id="`.concat(t4.id, `" data-selected='`).concat(t4.selected, "' style='background-color:").concat(t4.color, ";'></div>");
              }).join("");
            } }, { key: Object(V.LOAD)("$borderImageView"), value: function() {
              var t3 = (this.$selection.current || { borderImage: { image: {} } }).borderImage, e3 = t3.type ? Zt[t3.type] : "", n3 = "background-image: ".concat(t3.image.toString(), "; background-size: cover;");
              return ` 
      <div class='preview' ref="$preview">
        <div class='mini-view'>
          <div class='color-view'  style="`.concat(n3, `" ref="$miniView"></div>
        </div>
      </div> 
      <div class='fill-info'>
        <div class='gradient-info'>
          <div class='fill-title' ref="$fillTitle">`).concat(e3, `</div>
          <div class='colorsteps' ref="$colorsteps">
            `).concat(this.getColorStepList(t3.image), "\n          </div>\n        </div>\n      </div>\n    ");
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeBorderImage"), value: function(t3, e3) {
              var n3 = this;
              t3 === "border-image-slice" && Wt.forEach(function(t4) {
                n3.children["$".concat(t4, "Slice")].setValue(e3);
              }), this.setBorderImageProperty();
            } }, { key: "getBody", value: function() {
              return `
      <div class="property-item border-image-item" ref='$borderImageView'></div>    
      <div class="property-item border-slice-item">
        <div class="slice-selector" data-selected-value="all" ref="$selector">
          <button type="button" data-value="all">`.concat(D.a.border_all, '</button>\n          <button type="button" data-value="partitial">\n            ').concat(D.a.border_inner, `
          </button>
        </div>
        <div class="slice-value">
          <object refClass="RangeEditor"  ref='$allSlice' key='border-image-slice' onchange='changeBorderImage' />
        </div>
      </div>
      <div
        class="property-item border-slice-item full has-list"
        ref="$partitialSetting"
        style="display: none;"
      >
        <div class="slice-setting-box" ref="$sliceSettingBox">
          `).concat(Xt.map(function(t3) {
                return "\n              <div>\n                <label class='title'>".concat(t3.title, `</label>
              </div>
              <div>
                <object refClass="RangeEditor"  ref='$`).concat(t3.key, "Slice' label='Slice' key='border-image-slice-").concat(t3.key, `' onchange='changeBorderImage' /> 
              </div>  
              <div>
                <object refClass="RangeEditor"  ref='$`).concat(t3.key, "Width' label='Width' key='border-image-width-").concat(t3.key, "' onchange='changeBorderImage' /> \n              </div>                \n            ");
              }).join(""), "\n        </div>\n      </div>\n    ");
            } }, { key: Object(V.CHANGE)("$sliceSettingBox select"), value: function(t3) {
              this.setBorderImageProperty();
            } }, { key: Object(V.CLICK)("$borderImageView .preview"), value: function() {
              this.viewFillPopup(this.refs.$preview, "");
            } }, { key: Object(V.CLICK)("$borderImageView .colorsteps .step"), value: function(t3) {
              this.refs.$colorsteps.$('[data-selected="true"]').removeAttr("data-selected");
              var e3 = t3.$dt.attr("data-colorstep-id");
              t3.$dt.attr("data-selected", true);
              var n3 = t3.$dt.closest("border-image-item").$(".preview");
              this.viewFillPopup(n3, e3);
            } }, { key: "getFillData", value: function(t3) {
              var e3 = { type: t3.type };
              switch (e3.type) {
                case "image":
                  e3.url = t3.image ? t3.image.url : "";
                  break;
                default:
                  if (t3.image) {
                    var n3 = t3.image;
                    e3.type = n3.type, e3.colorsteps = ht()(n3.colorsteps), e3.angle = n3.angle, e3.radialType = n3.radialType || "ellipse", e3.radialPosition = n3.radialPosition || F.b.CENTER;
                  } else
                    e3.colorsteps = [], e3.angle = 0, e3.radialType = "ellipse", e3.radialPosition = F.b.CENTER;
              }
              return e3;
            } }, { key: "viewFillPopup", value: function(t3, e3) {
              var n3 = this.$selection.current;
              n3 && this.emit("showFillPopup", Kt(Kt({ changeEvent: "changeBorderImageFillPopup" }, this.getFillData(n3.borderImage)), {}, { selectColorStepId: e3, refresh: true }));
            } }, { key: "viewChangeImage", value: function(t3) {
              var e3 = this.$selection.current;
              if (e3) {
                var n3, r2 = e3.borderImage;
                if (r2)
                  (n3 = this.getRef("$miniView")) && r2.image && n3.css({ "background-image": r2.image.toString(), "background-size": "cover" }), (n3 = this.getRef("$fillTitle")) && n3.html(Zt.image), (n3 = this.getRef("$colorsteps", this.selectedIndex)) && n3.empty();
              }
            } }, { key: "setImage", value: function(t3) {
              var e3 = this.$selection.current;
              e3 && (e3.borderImage.setImageUrl(t3), this.viewChangeImage(t3), this.emit("refreshElement", e3));
            } }, { key: "viewChangeGradient", value: function(t3) {
              var e3 = this.$selection.current;
              if (e3) {
                var n3, r2 = e3.borderImage;
                if (r2)
                  (n3 = this.getRef("$miniView")) && n3.css({ "background-image": r2.image.toString(), "background-size": "cover" }), (n3 = this.getRef("$fillTitle")) && n3.html(Zt[t3.type]), (n3 = this.getRef("$colorsteps", this.selectedIndex)) && n3.html(this.getColorStepString(t3.colorsteps));
              }
            } }, { key: "setGradient", value: function(t3) {
              var e3 = this.$selection.current;
              e3 && (e3.borderImage.setGradient(t3), this.viewChangeGradient(t3), this.emit("refreshElement", e3));
            } }, { key: Object(V.SUBSCRIBE)("changeBorderImageFillPopup"), value: function(t3) {
              switch (t3.type) {
                case "image":
                  this.setImage(t3);
                  break;
                default:
                  this.setGradient(t3);
              }
            } }, { key: "setBorderImageProperty", value: function() {
              var t3 = this, e3 = this.$selection.current;
              if (e3) {
                var n3 = e3.borderImage;
                if (this.refs.$selector.attr("data-selected-value") === "all") {
                  var r2 = this.children.$allSlice.getValue();
                  n3.reset({ slice: { top: r2.clone(), right: r2.clone(), bottom: r2.clone(), left: r2.clone() } });
                } else
                  Wt.forEach(function(e4) {
                    n3.slice[e4] = t3.children["$".concat(e4, "Slice")].getValue(), n3.width[e4] = t3.children["$".concat(e4, "Width")].getValue();
                  });
                this.emit("refreshElement", e3);
              }
            } }, { key: Object(V.CLICK)("$selector button"), value: function(t3) {
              var e3 = t3.$dt.attr("data-value");
              this.refs.$selector.attr("data-selected-value", e3), e3 === "all" ? this.refs.$partitialSetting.hide() : this.refs.$partitialSetting.show("grid"), this.setBorderImageProperty();
            } }]), n2;
          }($.a), Jt = n(72);
          n(165);
          function Qt(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var te = [{ key: "border-top-left-radius", title: "topLeft" }, { key: "border-top-right-radius", title: "topRight" }, { key: "border-bottom-right-radius", title: "bottomRight" }, { key: "border-bottom-left-radius", title: "bottomLeft" }], ee = te.map(function(t2) {
            return t2.key;
          }), ne = function(t2) {
            s()(n2, t2);
            var e2 = Qt(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return Jt.a.parseStyle(this.props.value);
            } }, { key: "template", value: function() {
              return "<div class='elf--border-radius-editor' ref='$body'></div>";
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeBorderRadius"), value: function(t3, e3) {
              var n3 = this;
              t3 === "border-radius" && ee.forEach(function(t4) {
                n3.children["$".concat(t4)].setValue(e3.clone());
              }), this.setBorderRadius();
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = this, e3 = this.state.isAll ? "all" : "partitial", n3 = this.state["border-radius"];
              return '\n      <div class="property-item border-radius-item">\n        <div class="radius-selector" data-selected-value="'.concat(e3, '" ref="$selector">\n          <button type="button" data-value="all">').concat(D.a.border_all, '</button>\n          <button type="button" data-value="partitial">\n            ').concat(D.a.border_inner, `
          </button>
        </div>
        <div class="radius-value">
          <object refClass="RangeEditor"  ref='$all' key='border-radius' value="`).concat(n3, `" onchange='changeBorderRadius' />
        </div>
      </div>
      <div
        class="property-item full border-radius-item"
        ref="$partitialSetting"
        style="display: none;"
      >
        <div class="radius-setting-box" ref="$radiusSettingBox">
          `).concat(te.map(function(e4) {
                var n4 = t3.state[e4.key], r2 = t3.$i18n("border.radius.editor." + e4.title);
                return `
              <div>
                  <object refClass="RangeEditor"  ref='$`.concat(e4.key, "' label='").concat(r2, "' key='").concat(e4.key, "' value='").concat(n4, "' onchange='changeBorderRadius' />\n              </div>  \n            ");
              }).join(""), "\n        </div>\n      </div>\n    ");
            } }, { key: Object(V.INPUT)("$radiusSettingBox input"), value: function(t3) {
              this.setBorderRadius();
            } }, { key: Object(V.CHANGE)("$radiusSettingBox select"), value: function(t3) {
              this.setBorderRadius();
            } }, { key: "setBorderRadius", value: function() {
              var t3 = this;
              this.refs.$selector.attr("data-selected-value") === "all" ? (this.state.isAll = true, this.state["border-radius"] = this.children.$all.getValue()) : (this.state.isAll = false, ee.forEach(function(e3) {
                t3.state[e3] = t3.children["$".concat(e3)].getValue();
              })), this.modifyBorderRadius();
            } }, { key: "modifyBorderRadius", value: function() {
              var t3 = this, e3 = "";
              e3 = this.state.isAll ? this.state["border-radius"] + "" : ee.map(function(e4) {
                return "".concat(t3.state[e4]);
              }).join(" "), this.parent.trigger(this.props.onchange, e3);
            } }, { key: Object(V.CLICK)("$selector button"), value: function(t3) {
              var e3 = t3.$dt.attr("data-value");
              this.refs.$selector.attr("data-selected-value", e3), e3 === "all" ? this.refs.$partitialSetting.hide() : this.refs.$partitialSetting.show("grid"), this.setBorderRadius();
            } }]), n2;
          }(J.a);
          function re(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var ie = function(t2) {
            s()(n2, t2);
            var e2 = re(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("border.radius.property.title");
            } }, { key: "hasKeyframe", value: function() {
              return true;
            } }, { key: "getKeyframeProperty", value: function() {
              return "border-radius";
            } }, { key: "getBody", value: function() {
              return `<div class="property-item full border-radius-item" ref='$body'></div>`;
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = (this.$selection.current || {})["border-radius"] || "";
              return `
      <object refClass="BorderRadiusEditor" ref='$1' value='`.concat(t3, "' onchange='changeBorderRadius' />\n    ");
            } }, { key: "editableProperty", get: function() {
              return "border-radius";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.DEBOUNCE)(100) + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeBorderRadius"), value: function(t3) {
              this.command("setAttributeForMulti", "change border radius", this.$selection.packByValue({ "border-radius": t3 }));
            } }]), n2;
          }($.a);
          n(166);
          function ae(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var oe = [];
          ["margin", "padding"].forEach(function(t2) {
            oe.push.apply(oe, ["-top", "-bottom", "-left", "-right"].map(function(e2) {
              return t2 + e2;
            }));
          });
          var ce = function(t2) {
            s()(n2, t2);
            var e2 = ae(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("box.model.property.title");
            } }, { key: "editableProperty", get: function() {
              return "box-model";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.DEBOUNCE)(100) + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }, { key: "getBody", value: function() {
              return '<div class="property-item elf--box-model-item" ref="$boxModelItem"></div>';
            } }, { key: "templateInput", value: function(t3, e3) {
              var n3 = e3[t3] || F.a.z();
              return '<input type="number" ref="$'.concat(t3, '" value="').concat(n3.value, '" tabIndex="1" />');
            } }, { key: Object(V.LOAD)("$boxModelItem"), value: function() {
              var t3 = this.$selection.current;
              return t3 ? '\n      <div>\n        <div class="margin" data-title="'.concat(this.$i18n("box.model.property.margin"), '">\n          <div data-value="top">\n            ').concat(this.templateInput("margin-top", t3), '\n          </div>\n          <div data-value="bottom">\n            ').concat(this.templateInput("margin-bottom", t3), '\n          </div>\n          <div data-value="left">\n            ').concat(this.templateInput("margin-left", t3), '\n          </div>\n          <div data-value="right">\n            ').concat(this.templateInput("margin-right", t3), '\n          </div>\n        </div>\n        <div class="padding" data-title="').concat(this.$i18n("box.model.property.padding"), '">\n          <div data-value="top">\n            ').concat(this.templateInput("padding-top", t3), '\n          </div>\n          <div data-value="bottom">\n            ').concat(this.templateInput("padding-bottom", t3), '\n          </div>\n          <div data-value="left">\n            ').concat(this.templateInput("padding-left", t3), '\n          </div>\n          <div data-value="right">\n            ').concat(this.templateInput("padding-right", t3), "\n          </div>\n        </div>\n        <div class='content' title='Content'>\n        \n        </div>\n      </div>\n    ") : "";
            } }, { key: Object(V.INPUT)("$boxModelItem input"), value: function(t3) {
              this.resetBoxModel();
            } }, { key: "resetBoxModel", value: function() {
              var t3 = this, e3 = {};
              oe.forEach(function(n3) {
                e3[n3] = F.a.px(t3.getRef("$", n3).value);
              }), this.command("setAttributeForMulti", "change padding or margin", this.$selection.packByValue(e3));
            } }]), n2;
          }($.a), se = n(55);
          n(167);
          function ue(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var le = function(t2) {
            s()(n2, t2);
            var e2 = ue(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { hideLabel: this.props["hide-label"] === "true", boxShadows: se.a.parseStyle(this.props.value || "") };
            } }, { key: "template", value: function() {
              var t3 = this.state.hideLabel ? "hide" : "";
              return `
      <div class="elf--box-shadow-editor" >
        <div class='label `.concat(t3, "' >\n            <label>").concat(this.props.title || "", `</label>
            <div class='tools'>
              <button type="button" ref="$add" title="add Box Shadow">`).concat(D.a.add, "</button> ").concat(this.props.title ? "" : "Add", "\n            </div>\n        </div>\n        <div class='box-shadow-list' ref='$shadowList'></div>\n      </div>\n    ");
            } }, { key: Object(V.LOAD)("$shadowList"), value: function() {
              var t3 = this.state.boxShadows.map(function(t4, e3) {
                return '\n        <div class="shadow-item real" data-index="'.concat(e3, `">
          <div class="color">
            <div class='color-view' style="background-color: `).concat(t4.color, '">\n            </div>\n          </div>\n          <div class="inset" data-value="').concat(t4.inset, '">').concat(D.a.check, '</div>\n          <div class="offset-x">').concat(t4.offsetX, '</div>\n          <div class="offset-y">').concat(t4.offsetY, '</div>\n          <div class="blur-radius">').concat(t4.blurRadius, '</div>\n          <div class="spread-radius">').concat(t4.spreadRadius, '</div>\n          <div class="tools">\n            <button type="button" class="remove" data-index="').concat(e3, '">\n              ').concat(D.a.remove2, "\n            </button>\n          </div>\n        </div>\n      ");
              });
              return t3.length && t3.push('\n      <div class="shadow-item desc">\n        <div class="color"></div>      \n        <div class="inset" >Inset</div>\n\n        <div class="offset-x">X</div>\n        <div class="offset-y">Y</div>\n        <div class="blur-radius">'.concat(this.$i18n("boxshadow.editor.blur"), '</div>\n        <div class="spread-radius">').concat(this.$i18n("boxshadow.editor.spread"), '</div>\n        <div class="tools">\n        </div>\n      </div>\n      ')), t3.join("");
            } }, { key: "modifyBoxShadow", value: function() {
              var t3 = this.state.boxShadows.join(", ");
              this.parent.trigger(this.props.onchange, t3);
            } }, { key: Object(V.SUBSCRIBE)("add"), value: function() {
              this.state.boxShadows.push(new se.a({ offsetX: F.a.px(2), offsetY: F.a.px(2), blurRadius: F.a.px(3), spreadRadius: F.a.px(1) })), this.refresh(), this.modifyBoxShadow();
            } }, { key: Object(V.CLICK)("$add"), value: function() {
              this.trigger("add");
            } }, { key: Object(V.CLICK)("$shadowList .remove"), value: function(t3) {
              var e3 = +t3.$dt.attr("data-index");
              this.state.boxShadows.splice(e3, 1), this.refresh(), this.modifyBoxShadow(), this.emit("hideBoxShadowPropertyPopup");
            } }, { key: Object(V.CLICK)("$shadowList .shadow-item.real > div:not(.tools)"), value: function(t3) {
              var e3 = +t3.$dt.closest("shadow-item").attr("data-index"), n3 = this.state.boxShadows[e3];
              this.viewShadowPopup(n3, e3);
            } }, { key: "viewShadowPopup", value: function(t3, e3) {
              this.selectedIndex = e3, this.viewBoxShadowPropertyPopup(t3);
            } }, { key: "viewBoxShadowPropertyPopup", value: function(t3) {
              var e3 = this;
              this.emit("showBoxShadowPropertyPopup", { changeEvent: function(t4, n3) {
                var r2 = e3.state.boxShadows[e3.selectedIndex];
                r2 && (r2.reset(t4), e3.refresh(), e3.modifyBoxShadow());
              }, color: t3.color, inset: t3.inset, offsetX: t3.offsetX, offsetY: t3.offsetY, blurRadius: t3.blurRadius, spreadRadius: t3.spreadRadius }, { id: this.id });
            } }]), n2;
          }(J.a);
          function fe(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var he = function(t2) {
            s()(n2, t2);
            var e2 = fe(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("boxshadow.property.title");
            } }, { key: "getBody", value: function() {
              return '\n      <div class="full box-shadow-item" ref="$shadowList"></div>\n    ';
            } }, { key: "hasKeyframe", value: function() {
              return true;
            } }, { key: Object(V.LOAD)("$shadowList"), value: function() {
              var t3 = this.$selection.current || {};
              return `
      <object refClass="BoxShadowEditor" ref='$boxshadow' value="`.concat(t3["box-shadow"] || "", '" hide-label="true" onChange="changeBoxShadow" />\n    ');
            } }, { key: "getTools", value: function() {
              return `<button type="button" ref='$add'>`.concat(D.a.add, "</button>");
            } }, { key: Object(V.CLICK)("$add"), value: function() {
              this.children.$boxshadow.trigger("add");
            } }, { key: "editableProperty", get: function() {
              return "box-shadow";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.DEBOUNCE)(100) + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeBoxShadow"), value: function(t3) {
              this.command("setAttributeForMulti", "change box shadow", this.$selection.packByValue({ "box-shadow": t3 }));
            } }]), n2;
          }($.a);
          n(168);
          function pe(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function de(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? pe(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : pe(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function ve(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var ye = function(t2) {
            s()(n2, t2);
            var e2 = ve(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return "Box Shadow Editor";
            } }, { key: "initState", value: function() {
              return { color: "rgba(0, 0, 0, 1)", inset: false, offsetX: F.a.z(), offsetY: F.a.z(), blurRadius: F.a.z(), spreadRadius: F.a.z() };
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.emit(this.changeEvent, t3, this.state.params);
            } }, { key: "getBody", value: function() {
              return "<div class='elf--box-shadow-property-popup' ref='$popup'></div>";
            } }, { key: Object(V.LOAD)("$popup"), value: function() {
              return '\n      <div class="box">\n        <div class="type">\n          <label>Type</label>\n          <div\n            class="select"\n            data-selected-value="'.concat(this.state.inset ? "inset" : "outset", '"\n            ref="$type"\n          >\n            <button type="button" data-value="outset">Outset</button>\n            <button type="button" data-value="inset">Inset</button>\n          </div>\n        </div>\n        <div class="drag-board" ref="$dragBoard">\n          <div\n            class="pointer"\n            ref="$pointer"\n            style="left: ').concat(this.state.offsetX, ";top: ").concat(this.state.offsetY, `"
          ></div>
        </div>        
        <div class="popup-item offset-x">
          <object refClass="RangeEditor" ref='$offsetX' label='X' key='offsetX' value="`).concat(this.state.offsetX, `" onchange='changeRangeEditor' />
        </div>
        <div class="popup-item offset-y">
          <object refClass="RangeEditor" ref='$offsetY' label='Y' key='offsetY' value="`).concat(this.state.offsetY, `" onchange='changeRangeEditor' />        
        </div>
        <div class="popup-item blur-radius">
          <object refClass="RangeEditor" ref='$blurRadius' label='Blur' key='blurRadius' value="`).concat(this.state.blurRadius, `" onchange='changeRangeEditor' />        
        </div>
        <div class="popup-item spread-radius">
          <object refClass="RangeEditor" 
              ref='$spreadRadius' 
              label='Spread' 
              key='spreadRadius' 
              value="`).concat(this.state.spreadRadius, `" 
              onchange='changeRangeEditor' 
            />        
        </div>
        <div class='popup-item'>
          <object refClass="ColorViewEditor" 
              ref='$foreColor' 
              label="color" 
              key='color' 
              value="`).concat(this.state.color, '"\n              onchange="changeRangeEditor" />\n        </div>        \n      </div>\n    ');
            } }, { key: Object(V.CLICK)("$popup .select button"), value: function(t3) {
              var e3 = t3.$dt.attr("data-value");
              this.getRef("$type").attr("data-selected-value", e3), this.updateData({ inset: e3 === "inset" });
            } }, { key: Object(V.POINTERSTART)("$popup .drag-board") + Object(V.MOVE)("movePointer"), value: function(t3) {
              this.offsetX = t3.offsetX, this.offsetY = t3.offsetY;
              var e3 = this.getRef("$dragBoard").rect();
              this.boardWidth = e3.width, this.boardHeight = e3.height;
            } }, { key: "refreshPointer", value: function() {
              this.getRef("$pointer").css({ left: this.state.offsetX, top: this.state.offsetY });
            } }, { key: "movePointer", value: function(t3, e3) {
              var n3 = this.offsetX + t3, r2 = this.offsetY + e3, i2 = this.boardWidth / 2, a2 = this.boardHeight / 2, o2 = n3 - i2, c2 = r2 - a2;
              o2 < -i2 ? o2 = -i2 : o2 > i2 && (o2 = i2), c2 < -a2 ? c2 = -a2 : c2 > a2 && (c2 = a2), o2 = Math.floor(o2), c2 = Math.floor(c2), this.getRef("$offsetX").val(o2), this.getRef("$offsetY").val(c2), this.updateData({ offsetX: F.a.px(o2), offsetY: F.a.px(c2) }), this.refreshPointer(), this.children.$offsetX.setValue(this.state.offsetX), this.children.$offsetY.setValue(this.state.offsetY);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeRangeEditor"), value: function(t3, e3) {
              this.updateData(M()({}, t3, e3)), t3 !== "offsetX" && t3 !== "offsetY" || this.refreshPointer();
            } }, { key: Object(V.SUBSCRIBE)("showBoxShadowPropertyPopup"), value: function(t3, e3) {
              this.changeEvent = t3.changeEvent || "changeBoxShadowPropertyPopup", this.setState(de(de({}, t3), {}, { params: e3 })), this.refresh(), this.show(432);
            } }, { key: Object(V.SUBSCRIBE)("hideBoxShadowPropertyPopup"), value: function() {
              this.hide();
            } }]), n2;
          }(tt), ge = n(36), me = n(12), be = n.n(me);
          function ke(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Oe = function(t2) {
            s()(n2, t2);
            var e2 = ke(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "parseValue", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "50%", e3 = new F.a("", "closest-side"), n3 = "";
              if ((t3 = t3 || "50%").includes("at")) {
                var r2 = t3.split("at").map(function(t4) {
                  return t4.trim();
                }), i2 = be()(r2, 2);
                e3 = i2[0], n3 = i2[1];
              } else
                n3 = t3.trim();
              var a2 = n3.split(" "), o2 = be()(a2, 2), c2 = o2[0], s2 = o2[1];
              return Object(X.isUndefined)(s2) && (s2 = c2), { radius: e3, x: c2 = F.a.parse(c2), y: s2 = F.a.parse(s2) };
            } }, { key: "initState", value: function() {
              return this.parseValue(this.props.value);
            } }, { key: "template", value: function() {
              return `
        <div class='clip-path-editor circle-editor'>
            <object refClass="RangeEditor"  
                ref='$range' 
                label='Radius' 
                key='radius' 
                value='`.concat(this.state.radius, `' 
                min="0" 
                max="100" 
                step="0.1" 
                units="%,closest-side,farthest-side" 
                onchange='changeRangeEditor' 
            />
            <div class='drag-area' ref='$area'>
                <div class='drag-pointer' ref='$pointer' style='left: `).concat(this.state.x, ";top: ").concat(this.state.y, ";'></div>\n                <div class='clip-area circle' ref='$clipArea'></div>\n            </div>\n        </div>\n    ");
            } }, { key: Object(V.BIND)("$clipArea"), value: function() {
              return { style: { "clip-path": "".concat(this.props.key, "(").concat(this.toClipPathValueString(), ")") } };
            } }, { key: Object(V.POINTERSTART)("$area") + Object(V.MOVE)() + Object(V.END)(), value: function(t3) {
              this.areaRect = this.refs.$area.rect(), this.startXY = t3.xy;
            } }, { key: "move", value: function(t3, e3) {
              var n3 = this.startXY.x + t3, r2 = this.startXY.y + e3;
              this.areaRect.x > n3 ? n3 = this.areaRect.x : this.areaRect.right < n3 && (n3 = this.areaRect.right), this.areaRect.y > r2 ? r2 = this.areaRect.y : this.areaRect.bottom < r2 && (r2 = this.areaRect.bottom);
              var i2 = F.a.percent((n3 - this.areaRect.x) / this.areaRect.width * 100).round(1), a2 = F.a.percent((r2 - this.areaRect.y) / this.areaRect.height * 100).round(1);
              this.refs.$pointer.css({ left: i2, top: a2 }), this.updateData({ x: i2, y: a2 }), this.bindData("$clipArea");
            } }, { key: "toClipPathValueString", value: function() {
              var t3 = this.state, e3 = t3.x, n3 = t3.y, r2 = t3.radius, i2 = "".concat(e3, " ").concat(n3), a2 = r2 + "";
              return a2.includes("closest-side") ? a2 = "closest-side" : a2.includes("farthest-side") && (a2 = "farthest-side"), r2 ? "".concat(a2, " at ").concat(i2) : "".concat(i2);
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3), this.parent.trigger(this.props.onchange, this.props.key, this.toClipPathValueString(), this.props.params);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeRangeEditor"), value: function(t3, e3) {
              if (t3 === "radius") {
                var n3 = e3, r2 = e3.unit + "";
                r2.includes("closest-side") ? n3 = new F.a("", "closest-side") : r2.includes("farthest-side") && (n3 = new F.a("", "farthest-side")), this.updateData({ radius: n3 });
              }
            } }]), n2;
          }(J.a), xe = n(58);
          function je(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Se = function(t2) {
            s()(n2, t2);
            var e2 = je(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "parseValue", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", e3 = t3.split("round"), n3 = be()(e3, 2), r2 = n3[0], i2 = n3[1], a2 = xe.a.parse(r2), o2 = be()(a2, 5), c2 = o2[0], s2 = o2[1], u2 = o2[2], l2 = o2[3], f2 = o2[4];
              if (i2)
                var h2 = xe.a.parse(i2), p2 = be()(h2, 5), d2 = p2[0], v2 = p2[1], y3 = p2[2], g2 = p2[3], m2 = p2[4];
              return { isAll: c2 === 1, top: s2, right: u2, bottom: l2, left: f2, round: i2, isAllRadius: d2 === 1, topRadius: v2, rightRadius: y3, bottomRadius: g2, leftRadius: m2 };
            } }, { key: "initState", value: function() {
              return this.parseValue(this.props.value);
            } }, { key: "template", value: function() {
              var t3 = this.state, e3 = t3.top, n3 = t3.right, r2 = t3.bottom, i2 = t3.left, a2 = t3.round, o2 = F.a.percent(Math.abs((i2.value - (100 - n3.value)) / 2)).toPx(220), c2 = e3.toPx(220), s2 = o2.clone(), u2 = F.a.percent(100 - r2.value).toPx(220), l2 = F.a.percent(100 - n3.value).toPx(220), f2 = F.a.percent(Math.abs((e3.value - (100 - r2.value)) / 2)).toPx(220), h2 = i2.toPx(220), p2 = F.a.percent(Math.abs((e3.value - (100 - r2.value)) / 2)).toPx(220), d2 = a2 ? "checked" : "";
              return "\n        <div class='clip-path-editor inset-editor'>\n            <div class='drag-area' ref='$area'>\n                <div class='drag-pointer' data-type='top' ref='$top' style='left: ".concat(o2, ";top: ").concat(c2, ";'></div>\n                <div class='drag-pointer' data-type='right' ref='$right' style='left: ").concat(l2, ";top: ").concat(f2, ";'></div>\n                <div class='drag-pointer' data-type='bottom' ref='$bottom' style='left: ").concat(s2, ";top: ").concat(u2, ";'></div>\n                <div class='drag-pointer' data-type='left' ref='$left' style='left: ").concat(h2, ";top: ").concat(p2, ";'></div>\n                <div class='clip-area inset' ref='$clipAreaView' style='pointer-events: none;'></div>\n                <div class='clip-area-handle' ref='$clipArea' style='left: ").concat(h2, ";top: ").concat(c2, ";width: ").concat(F.a.px(l2.value - i2.value), ";height: ").concat(F.a.px(u2.value - c2.value), `;'></div>
            </div>
            <div class='round-area'>
                <label><input type="checkbox" `).concat(d2, " ref='$hasRound' /> Round </label>\n                <div ref='$round'></div>\n            </div>\n        </div>\n    ");
            } }, { key: Object(V.BIND)("$clipAreaView"), value: function() {
              return { style: { "clip-path": "".concat(this.props.key, "(").concat(this.toClipPathValueString(), ")") } };
            } }, { key: Object(V.CLICK)("$hasRound"), value: function(t3) {
              this.updateData({ round: this.refs.$hasRound.checked() }), this.bindData("$clipAreaView");
            } }, { key: Object(V.LOAD)("$round"), value: function() {
              var t3 = this.state, e3 = [t3.topRadius, t3.rightRadius, t3.bottomRadius, t3.leftRadius].join(" ");
              return `<object refClass="DirectionEditor" ref='$borderRadius' value='`.concat(e3, "' onchange='changeBorderRadius' />");
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeBorderRadius"), value: function(t3) {
              var e3 = be()(t3, 5), n3 = e3[0], r2 = e3[1], i2 = e3[2], a2 = e3[3], o2 = e3[4];
              this.updateData({ isAllRadius: n3 === 1, topRadius: r2, rightRadius: i2, bottomRadius: a2, leftRadius: o2 }), this.bindData("$clipAreaView");
            } }, { key: "refreshPointer", value: function() {
              var t3 = this.state, e3 = t3.top, n3 = t3.right, r2 = t3.bottom, i2 = t3.left, a2 = Math.abs((i2.value + (100 - n3.value)) / 2), o2 = Math.abs((e3.value + (100 - r2.value)) / 2), c2 = F.a.percent(a2).toPx(220), s2 = e3.toPx(220), u2 = F.a.percent(a2).toPx(220), l2 = F.a.percent(100 - r2.value).toPx(220), f2 = F.a.percent(100 - n3.value).toPx(220), h2 = F.a.percent(o2).toPx(220), p2 = i2.toPx(220), d2 = F.a.percent(o2).toPx(220);
              this.refs.$top.css({ left: c2, top: s2 }), this.refs.$right.css({ left: f2, top: h2 }), this.refs.$bottom.css({ left: u2, top: l2 }), this.refs.$left.css({ left: p2, top: d2 }), this.refs.$clipArea.css({ left: p2, top: s2, width: F.a.px(f2.value - p2.value), height: F.a.px(l2.value - s2.value) }), this.bindData("$clipAreaView");
            } }, { key: Object(V.POINTERSTART)("$area .clip-area-handle") + Object(V.MOVE)("moveClipArea"), value: function(t3) {
              this.type = t3.$dt.attr("data-type"), this.$target = t3.$dt, this.areaRect = this.refs.$area.rect(), this.startXY = t3.xy, this.clipRect = { left: F.a.parse(this.$target.css("left")), top: F.a.parse(this.$target.css("top")), width: F.a.parse(this.$target.css("width")), height: F.a.parse(this.$target.css("height")) };
            } }, { key: "moveClipArea", value: function(t3, e3) {
              var n3 = this.clipRect.width.value, r2 = this.clipRect.height.value, i2 = this.clipRect.left.value + t3, a2 = this.clipRect.top.value + e3;
              0 > i2 ? i2 = 0 : this.areaRect.width < i2 + n3 && (i2 = this.areaRect.width - n3), 0 > a2 ? a2 = 0 : this.areaRect.height < a2 + r2 && (a2 = this.areaRect.height - r2);
              var o2 = F.a.px(i2), c2 = F.a.px(a2);
              this.updateData({ top: c2.toPercent(this.areaRect.height).round(100), bottom: F.a.px(this.areaRect.height - (a2 + r2)).toPercent(this.areaRect.height).round(100), right: F.a.px(this.areaRect.width - (i2 + n3)).toPercent(this.areaRect.width).round(100), left: o2.toPercent(this.areaRect.width).round(100) }), this.refreshPointer();
            } }, { key: Object(V.POINTERSTART)("$area .drag-pointer") + Object(V.MOVE)(), value: function(t3) {
              this.type = t3.$dt.attr("data-type"), this.$target = t3.$dt, this.areaRect = this.refs.$area.rect(), this.startXY = t3.xy;
            } }, { key: "move", value: function(t3, e3) {
              var n3 = this.startXY.x + t3, r2 = this.startXY.y + e3;
              this.areaRect.x > n3 ? n3 = this.areaRect.x : this.areaRect.right < n3 && (n3 = this.areaRect.right), this.areaRect.y > r2 ? r2 = this.areaRect.y : this.areaRect.bottom < r2 && (r2 = this.areaRect.bottom);
              var i2 = F.a.px(n3 - this.areaRect.x), a2 = F.a.px(r2 - this.areaRect.y);
              this.type === "top" ? this.updateData({ top: a2.toPercent(this.areaRect.height).round(100) }) : this.type === "bottom" ? this.updateData({ bottom: F.a.px(this.areaRect.height - a2.value).toPercent(this.areaRect.height).round(100) }) : this.type === "right" ? this.updateData({ right: F.a.px(this.areaRect.width - i2.value).toPercent(this.areaRect.width).round(100) }) : this.type === "left" && this.updateData({ left: i2.toPercent(this.areaRect.width).round(100) }), this.refreshPointer();
            } }, { key: "toClipPathValueString", value: function() {
              var t3 = this.state, e3 = t3.top, n3 = t3.right, r2 = t3.left, i2 = t3.bottom, a2 = t3.round, o2 = t3.topRadius, c2 = t3.leftRadius, s2 = t3.bottomRadius, u2 = t3.rightRadius, l2 = [e3, n3, i2, r2].join(" "), f2 = [o2, u2, s2, c2].join(" ");
              return "".concat(l2, " ").concat(a2 && f2.trim() ? "round ".concat(f2) : "");
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.parent.trigger(this.props.onchange, this.props.key, this.toClipPathValueString(), this.props.params);
            } }]), n2;
          }(J.a), Pe = n(19);
          function we(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Re(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? we(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : we(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Ce(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Ee = function(t2) {
            s()(n2, t2);
            var e2 = Ce(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "parseValue", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", e3 = 220, n3 = 220;
              return t3.split(",").filter(function(t4) {
                return t4.trim();
              }).map(function(t4) {
                var r2 = t4.trim().split(" "), i2 = be()(r2, 2), a2 = i2[0], o2 = i2[1];
                return { x: F.a.parse(a2).toPx(e3), y: F.a.parse(o2).toPx(n3) };
              });
            } }, { key: "initState", value: function() {
              return { value: this.parseValue(this.props.value) };
            } }, { key: "template", value: function() {
              return "\n        <div class='clip-path-editor polygon-editor'>\n            <div class='drag-area' ref='$area'>\n                <div class='pointer-list' ref='$list'></div>\n                <div class='clip-area polygon' ref='$clipArea'></div>            \n            </div>\n            <div class='pointer-input' ref='$inputList'></div>\n        </div>\n    ";
            } }, { key: Object(V.LOAD)("$inputList"), value: function() {
              return this.state.value.map(function(t3, e3) {
                return `
            <div class='pointer-item' data-index="`.concat(e3, `">
                <div class='input-item'>
                    <label>X</label><input type='number' class='x' value="`).concat(t3.x.value.toString(), `" /><span>%</span>
                </div>
                <div class='input-item'>
                    <label>Y</label><input type='number' class='y' value="`).concat(t3.y.value.toString(), `" /><span>%</span>
                </div>
                <div class='tools'>
                    <button type="button" class='copy' data-index="`).concat(e3, '">').concat(D.a.copy, `</button>
                    <button type="button" class='remove' data-index="`).concat(e3, '">').concat(D.a.remove2, "</button>\n                </div>\n            </div>\n            ");
              });
            } }, { key: Object(V.CLICK)("$area") + V.PREVENT, value: function(t3) {
              if (Pe.a.create(t3.target).is(this.refs.$area)) {
                this.areaRect = this.refs.$area.rect();
                var e3 = t3.xy, n3 = e3.x, r2 = e3.y;
                this.appendValue({ x: F.a.px(n3 - this.areaRect.left), y: F.a.px(r2 - this.areaRect.top) }), this.refresh();
              }
            } }, { key: Object(V.CLICK)("$inputList .pointer-item .remove"), value: function(t3) {
              var e3 = +t3.$dt.attr("data-index");
              this.removeValue(e3), this.refresh();
            } }, { key: Object(V.CLICK)("$inputList .pointer-item .copy"), value: function(t3) {
              var e3 = +t3.$dt.attr("data-index");
              this.copyValue(e3), this.refresh();
            } }, { key: Object(V.BIND)("$clipArea"), value: function() {
              return { style: { "clip-path": "polygon(".concat(this.toClipPathValueString(), ")") } };
            } }, { key: Object(V.LOAD)("$list"), value: function() {
              var t3 = this;
              return this.state.value.map(function(e3, n3) {
                var r2 = [n3 === 0 ? "first" : "", n3 === t3.state.value.length - 1 ? "last" : ""].filter(function(t4) {
                  return t4;
                }).join(" ");
                return "<div class='drag-pointer ".concat(r2, `' data-index="`).concat(n3.toString(), `" style='left: `).concat(e3.x, ";top: ").concat(e3.y, ";'></div>");
              });
            } }, { key: Object(V.CLICK)("$area .drag-pointer") + V.ALT + V.PREVENT, value: function(t3) {
              var e3 = +t3.$dt.attr("data-index");
              this.removeValue(e3), this.refresh();
            } }, { key: Object(V.POINTERSTART)("$area .drag-pointer") + Object(V.MOVE)(), value: function(t3) {
              this.selectedIndex = +t3.$dt.attr("data-index"), this.$target = t3.$dt, this.areaRect = this.refs.$area.rect(), this.startXY = t3.xy, this.$value = this.state.value[this.selectedIndex];
              var e3 = this.refs.$inputList;
              this.$x = e3.$('.pointer-item[data-index="'.concat(this.selectedIndex, '"] input.x')), this.$y = e3.$('.pointer-item[data-index="'.concat(this.selectedIndex, '"] input.y'));
            } }, { key: "move", value: function(t3, e3) {
              var n3 = this.startXY.x + t3, r2 = this.startXY.y + e3;
              this.areaRect.x > n3 ? n3 = this.areaRect.x : this.areaRect.right < n3 && (n3 = this.areaRect.right), this.areaRect.y > r2 ? r2 = this.areaRect.y : this.areaRect.bottom < r2 && (r2 = this.areaRect.bottom);
              var i2 = F.a.px(n3 - this.areaRect.x), a2 = F.a.px(r2 - this.areaRect.y);
              this.$target.css({ left: i2, top: a2 }), this.updateValue(this.selectedIndex, { x: i2, y: a2 });
              this.$x.val(i2.toPercent(220).round(10).value), this.$y.val(a2.toPercent(220).round(10).value), this.bindData("$clipArea");
            } }, { key: "toClipPathValueString", value: function() {
              return this.state.value.map(function(t3) {
                return "".concat(t3.x.toPercent(220).round(10), " ").concat(t3.y.toPercent(220).round(10));
              }).join(",");
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.parent.trigger(this.props.onchange, this.props.key, this.toClipPathValueString(), this.props.params);
            } }, { key: "appendValue", value: function(t3) {
              this.state.value.push(t3), this.parent.trigger(this.props.onchange, this.props.key, this.toClipPathValueString(), this.props.params);
            } }, { key: "removeValue", value: function(t3) {
              this.state.value.splice(t3, 1), this.parent.trigger(this.props.onchange, this.props.key, this.toClipPathValueString(), this.props.params);
            } }, { key: "copyValue", value: function(t3) {
              var e3 = this.state.value[t3], n3 = e3.x, r2 = e3.y;
              this.state.value.splice(t3 + 1, 0, { x: F.a.px(n3.value + 10), y: F.a.px(r2.value + 10) }), this.parent.trigger(this.props.onchange, this.props.key, this.toClipPathValueString(), this.props.params);
            } }, { key: "updateValue", value: function(t3, e3) {
              this.state.value[t3] = Re(Re({}, this.state.value[t3]), e3), this.parent.trigger(this.props.onchange, this.props.key, this.toClipPathValueString(), this.props.params);
            } }]), n2;
          }(J.a), $e = n(71);
          function Ie(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Te = function(t2) {
            s()(n2, t2);
            var e2 = Ie(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "parseValue", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "50% 50%", e3 = "50% 50%", n3 = "";
              if ((t3 = t3 || "50%").includes("at")) {
                var r2 = t3.split("at").map(function(t4) {
                  return t4.trim();
                }), i2 = be()(r2, 2);
                e3 = i2[0], n3 = i2[1];
              } else
                n3 = t3.trim();
              var a2 = n3.split(" "), o2 = be()(a2, 2), c2 = o2[0], s2 = o2[1];
              Object(X.isUndefined)(s2) && (s2 = c2), c2 = F.a.parse(c2), s2 = F.a.parse(s2);
              var u2 = e3.split(" "), l2 = be()(u2, 2), f2 = l2[0], h2 = l2[1];
              return Object(X.isUndefined)(h2) && (h2 = f2), { radiusX: f2 = F.a.parse(f2), radiusY: h2 = F.a.parse(h2), x: c2, y: s2 };
            } }, { key: "initState", value: function() {
              return this.parseValue(this.props.value);
            } }, { key: "template", value: function() {
              return `
        <div class='clip-path-editor circle-editor'>
            <div>
                <object refClass="RangeEditor"  
                    ref='$rangeX' 
                    label='Radius X' 
                    key='radiusX' 
                    value='`.concat(this.state.radiusX, `' 
                    min="0" 
                    max="100" 
                    step="0.1" 
                    units="%" 
                    onchange='changeRangeEditor' 
                />
            </div>
            <div>
                <object refClass="RangeEditor"  
                    ref='$rangeY' 
                    label='Radius Y' 
                    key='radiusY' 
                    value='`).concat(this.state.radiusY, `' 
                    min="0" 
                    max="100" 
                    step="0.1" 
                    units="%" 
                    onchange='changeRangeEditor' 
                />
            </div>            
            <div class='drag-area' ref='$area'>
                <div class='drag-pointer' ref='$pointer' style='left: `).concat(this.state.x, ";top: ").concat(this.state.y, ";'></div>\n                <div class='clip-area circle' ref='$clipArea'></div>\n            </div>\n        </div>\n    ");
            } }, { key: Object(V.BIND)("$clipArea"), value: function() {
              return { style: { "clip-path": "".concat(this.props.key, "(").concat(this.toClipPathValueString(), ")") } };
            } }, { key: Object(V.POINTERSTART)("$area") + Object(V.MOVE)() + Object(V.END)(), value: function(t3) {
              this.areaRect = this.refs.$area.rect(), this.startXY = t3.xy;
            } }, { key: "move", value: function(t3, e3) {
              var n3 = this.startXY.x + t3, r2 = this.startXY.y + e3;
              this.areaRect.x > n3 ? n3 = this.areaRect.x : this.areaRect.right < n3 && (n3 = this.areaRect.right), this.areaRect.y > r2 ? r2 = this.areaRect.y : this.areaRect.bottom < r2 && (r2 = this.areaRect.bottom);
              var i2 = F.a.percent((n3 - this.areaRect.x) / this.areaRect.width * 100).round(1), a2 = F.a.percent((r2 - this.areaRect.y) / this.areaRect.height * 100).round(1);
              this.refs.$pointer.css({ left: i2, top: a2 }), this.updateData({ x: i2, y: a2 }), this.bindData("$clipArea");
            } }, { key: "toClipPathValueString", value: function() {
              var t3 = this.state, e3 = t3.x, n3 = t3.y, r2 = t3.radiusX, i2 = t3.radiusY, a2 = "".concat(e3, " ").concat(n3), o2 = "".concat(r2, " ").concat(i2);
              return "".concat(o2, " at ").concat(a2);
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3), this.parent.trigger(this.props.onchange, this.props.key, this.toClipPathValueString(), this.props.params);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeRangeEditor"), value: function(t3, e3) {
              this.updateData(M()({}, t3, e3.clone()));
            } }]), n2;
          }(J.a);
          n(169);
          function Be(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Me = function(t2) {
            s()(n2, t2);
            var e2 = Be(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "components", value: function() {
              return { CircleEditor: Oe, InsetEditor: Se, PolygonEditor: Ee, EllipseEditor: Te };
            } }, { key: "getTitle", value: function() {
              return "ClipPath";
            } }, { key: "initState", value: function() {
              return { type: "none", value: "" };
            } }, { key: "toClipPathCSS", value: function() {
              return ge.a.toCSS(this.state);
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.emit(this.state.changeEvent || "changeClipPathPopup", this.toClipPathCSS());
            } }, { key: "getBody", value: function() {
              return `
    <div class='elf--clippath-popup' ref='$popup'>
      <div class="box">
        <div class='clip-path-editor clip-path-type' ref='$clippathType'></div>
        <div class='clip-path-editor' ref='$clippath'></div>
      </div>
    </div>`;
            } }, { key: Object(V.LOAD)("$clippathType"), value: function() {
              return "\n      <div>".concat(this.state.type, " Editor</div>\n    ");
            } }, { key: Object(V.LOAD)("$clippath"), value: function() {
              switch (this.state.type) {
                case "circle":
                  return `<object refClass="CircleEditor" ref='$circle' key='circle' value='`.concat(this.state.value, "' onchange='changeClipPath' />");
                case "ellipse":
                  return `<object refClass="EllipseEditor" ref='$ellipse' key='ellipse' value='`.concat(this.state.value, "' onchange='changeClipPath' />");
                case "inset":
                  return `<object refClass="InsetEditor" ref='$inset' key='inset' value='`.concat(this.state.value, "' onchange='changeClipPath' />");
                case "polygon":
                  return `<object refClass="PolygonEditor" ref='$polygon' key='polygon' value='`.concat(this.state.value, "' onchange='changeClipPath' />");
                case "path":
                  return `<object refClass="PathEditor" ref='$path' key='path' value='`.concat(this.state.value, "' onchange='changeClipPath' />");
                case "svg":
                  var t3 = (this.$selection.currentProject || { svg: [] }).svg.filter(function(t4) {
                    return t4.type === "clip-path";
                  }).map(function(t4) {
                    return t4.name;
                  }).join(",");
                  return t3.length && (t3 = "," + t3), `<object refClass="SelectEditor"  ref='$svg' key='svg' value='`.concat(this.state.value, "' options='").concat(t3, "' onchange='changeClipPath' />");
                default:
                  return "<div class='type none'></div>";
              }
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeClipPath"), value: function(t3, e3) {
              this.updateData({ type: t3, value: e3 });
            } }, { key: Object(V.SUBSCRIBE)("showClipPathPopup"), value: function(t3) {
              this.state.changeEvent = t3.changeEvent, this.setState(ge.a.parseStyle(t3["clip-path"])), this.refresh(), this.show(220);
            } }, { key: Object(V.SUBSCRIBE)("hideClipPathPopup"), value: function() {
              this.hide();
            } }]), n2;
          }(tt);
          n(170);
          function Ve(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var De = ["circle", "ellipse", "inset", "polygon", "path", "svg"], Le = function(t2) {
            s()(n2, t2);
            var e2 = Ve(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("clippath.property.title");
            } }, { key: "hasKeyframe", value: function() {
              return true;
            } }, { key: "getKeyframeProperty", value: function() {
              return "clip-path";
            } }, { key: "getClassName", value: function() {
              return "clip-path-property";
            } }, { key: "getBody", value: function() {
              return "<div class='elf--clip-path-list' ref='$clippathList'></div>";
            } }, { key: "getTools", value: function() {
              return '\n      <select ref="$clipPathSelect">      \n        '.concat(De.map(function(t3) {
                return "<option value='".concat(t3, "'>").concat(t3, "</option>");
              }).join(""), '\n      </select>\n      <button type="button" ref="$add" title="add Clip Path">').concat(D.a.add, "</button>\n    ");
            } }, { key: "makeClipPathTemplate", value: function(t3) {
              return "\n      <div class='clippath-item'>\n        <div class='title'>\n          <div class='name'>".concat(t3, `</div>
        </div>
        <div class='tools'>
          <button type="button" class="del">`).concat(D.a.remove2, "</button>\n        </div>        \n      </div>\n    ");
            } }, { key: Object(V.CLICK)("$clippathList .clippath-item .title"), value: function(t3) {
              this.$selection.current && this.viewClipPathPicker();
            } }, { key: Object(V.CLICK)("$clippathList .del") + V.PREVENT, value: function(t3) {
              var e3 = this;
              this.$selection.current && (this.command("setAttributeForMulti", "delete clip-path", this.$selection.packByValue({ "clip-path": "" })), this.emit("hideClipPathPopup"), setTimeout(function() {
                e3.refresh();
              }, 100));
            } }, { key: "editableProperty", get: function() {
              return "clip-path";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }, { key: Object(V.LOAD)("$clippathList"), value: function() {
              var t3 = this.$selection.current;
              return t3 && t3["clip-path"] ? this.makeClipPathTemplate(t3["clip-path"].split("(")[0]) : "";
            } }, { key: Object(V.CLICK)("$add"), value: function() {
              var t3 = this.$selection.current;
              t3 && (t3["clip-path"] ? alert("clip-path is already exists.") : (t3 && (t3["clip-path"] = this.refs.$clipPathSelect.value, this.command("setAttributeForMulti", "change clip-path", this.$selection.packByValue({ "clip-path": this.refs.$clipPathSelect.value }))), this.refresh()));
            } }, { key: "viewClipPathPicker", value: function() {
              var t3 = this, e3 = this.$selection.current;
              if (e3)
                switch (ge.a.parseStyle(e3["clip-path"]).type) {
                  case "path":
                    var n3 = e3.accumulatedPath(e3.clipPathString).d, r2 = n3 ? "modify" : "path";
                    this.emit("showPathEditor", r2, { changeEvent: function(n4) {
                      n4.d = e3.invertPath(n4.d).scale(1 / e3.width.value, 1 / e3.height.value).d, t3.updatePathInfo({ "clip-path": "path(".concat(n4.d, ")") });
                    }, current: e3, d: n3 });
                    break;
                  case "svg":
                    break;
                  default:
                    this.emit("showClipPathPopup", { "clip-path": e3["clip-path"], changeEvent: function(e4) {
                      t3.updatePathInfo(e4);
                    } });
                }
            } }, { key: "updatePathInfo", value: function(t3) {
              if (t3) {
                var e3 = this.$selection.current;
                e3 && (e3.reset(t3), this.refresh(), this.command("setAttributeForMulti", "change clip-path", this.$selection.packByValue(t3)));
              }
            } }]), n2;
          }($.a);
          n(171);
          function Ae(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Fe = function(t2) {
            s()(n2, t2);
            var e2 = Ae(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("code.view.property.title");
            } }, { key: "checkParentTab", value: function() {
              return this.parent.state.selectedIndexValue === "code";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelectionStyleView", "refreshSelection") + Object(V.IF)("checkParentTab"), value: function() {
              this.refresh();
            } }, { key: "getBody", value: function() {
              return `
      <div class="property-item elf--code-view-item" ref='$body'></div>
    `;
            } }, { key: Object(V.LOAD)("$body") + V.DOMDIFF, value: function() {
              return [this.$editor.html.codeview(this.$selection.current)];
            } }]), n2;
          }($.a);
          function ze(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Ne = function(t2) {
            s()(n2, t2);
            var e2 = ze(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { hue: 0, minValue: 0, maxValue: 360 };
            } }, { key: "template", value: function() {
              return '\n            <div class="hue">\n                <div ref="$container" class="hue-container">\n                    <div ref="$bar" class="drag-bar"></div>\n                </div>\n            </div>\n        ';
            } }, { key: Object(V.BIND)("$bar"), value: function() {
              var t3 = this.state.hue;
              return { style: { left: F.a.percent(t3 / 360 * 100) }, class: { first: t3 <= this.state.minValue, last: t3 >= this.state.maxValue } };
            } }, { key: Object(V.POINTERSTART)("$container") + Object(V.MOVE)("movePointer") + Object(V.END)("moveEndPointer"), value: function(t3) {
              this.rect = this.refs.$container.rect(), this.refreshColorUI();
            } }, { key: "movePointer", value: function() {
              this.refreshColorUI();
            } }, { key: "refreshColorUI", value: function() {
              var t3 = this.rect.left, e3 = this.rect.right, n3 = (Math.max(Math.min(e3, this.$config.get("bodyEvent").clientX), t3) - t3) / (e3 - t3);
              this.parent.changeColor({ h: n3 * this.state.maxValue, type: "hsv" });
            } }, { key: "setValue", value: function(t3) {
              this.setState({ hue: t3 });
            } }]), n2;
          }(J.a);
          function _e(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Ue = function(t2) {
            s()(n2, t2);
            var e2 = _e(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { colorbar: Bt.a.parse("rgba(0, 0, 0, 1)"), opacity: 0, minValue: 0, maxValue: 100 };
            } }, { key: "template", value: function() {
              return '\n        <div class="opacity">\n            <div ref="$container" class="opacity-container">\n                <div ref="$colorbar" class="color-bar"></div>\n                <div ref="$bar" class="drag-bar2"></div>\n            </div>\n        </div>\n        ';
            } }, { key: Object(V.BIND)("$colorbar"), value: function() {
              var t3 = Object(X.clone)(this.state.colorbar);
              t3.a = 0;
              var e3 = Bt.a.format(t3, "rgb");
              t3.a = 1;
              var n3 = Bt.a.format(t3, "rgb");
              return { style: { background: "linear-gradient(to right, ".concat(e3, ", ").concat(n3, ")") } };
            } }, { key: Object(V.BIND)("$bar"), value: function() {
              var t3 = 100 * this.state.opacity;
              return { style: { left: F.a.percent(t3) }, class: { first: t3 <= this.state.minValue, last: t3 >= this.state.maxValue } };
            } }, { key: Object(V.POINTERSTART)("$container") + Object(V.MOVE)("movePointer") + Object(V.END)("moveEndPointer"), value: function(t3) {
              this.rect = this.refs.$container.rect(), this.refreshColorUI();
            } }, { key: "movePointer", value: function() {
              this.refreshColorUI();
            } }, { key: "refreshColorUI", value: function() {
              var t3 = this.rect.left, e3 = this.rect.right, n3 = (Math.max(Math.min(e3, this.$config.get("bodyEvent").clientX), t3) - t3) / (e3 - t3);
              this.parent.changeColor({ a: n3.toFixed(2) });
            } }, { key: "setValue", value: function(t3, e3) {
              this.setState({ opacity: e3, colorbar: t3 });
            } }]), n2;
          }(J.a);
          function Ge(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var He = function(t2) {
            s()(n2, t2);
            var e2 = Ge(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { value: "rgba(0, 0, 0, 1)" };
            } }, { key: "template", value: function() {
              return "<div class='color'></div>";
            } }, { key: Object(V.BIND)("$el"), value: function() {
              return { style: { "background-color": this.state.value } };
            } }, { key: "setValue", value: function(t3) {
              this.setState({ value: t3 });
            } }]), n2;
          }(J.a);
          function Ke(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Ye = function(t2) {
            s()(n2, t2);
            var e2 = Ke(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              return '\n        <div class="information hex">\n            <div ref="$informationChange" class="information-change">\n                <button ref="$formatChangeButton" type="button" class="format-change-button arrow-button"></button>\n            </div>\n            <div class="information-item hex">\n                <div class="input-field hex">\n                    <input ref="$hexCode" class="input" type="text" />\n                    <div class="title">HEX</div>\n                </div>\n            </div>\n            <div class="information-item rgb">\n                <div class="input-field rgb-r">\n                    <input ref="$rgb_r" class="input" type="number" step="1" min="0" max="255" />\n                    <div class="title">R</div>\n                </div>\n                <div class="input-field rgb-g">\n                    <input ref="$rgb_g" class="input" type="number" step="1" min="0" max="255" />\n                    <div class="title">G</div>\n                </div>\n                <div class="input-field rgb-b">\n                    <input ref="$rgb_b" class="input" type="number" step="1" min="0" max="255" />\n                    <div class="title">B</div>\n                </div>          \n                <div class="input-field rgb-a">\n                    <input ref="$rgb_a" class="input" type="number" step="0.01" min="0" max="1" />\n                    <div class="title">A</div>\n                </div>                                                            \n            </div>\n            <div class="information-item hsl">\n                <div class="input-field hsl-h">\n                    <input ref="$hsl_h" class="input" type="number" step="1" min="0" max="360" />\n                    <div class="title">H</div>\n                </div>\n                <div class="input-field hsl-s">\n                    <input ref="$hsl_s" class="input" type="number" step="1" min="0" max="100" />\n                    <div class="postfix">%</div>\n                    <div class="title">S</div>\n                </div>\n                <div class="input-field hsl-l">\n                    <input ref="$hsl_l" class="input" type="number" step="1" min="0" max="100" />\n                    <div class="postfix">%</div>                        \n                    <div class="title">L</div>\n                </div>\n                <div class="input-field hsl-a">\n                    <input ref="$hsl_a" class="input" type="number" step="0.01" min="0" max="1" />\n                    <div class="title">A</div>\n                </div>\n            </div>\n        </div>\n        ';
            } }, { key: "manager", get: function() {
              return this.parent.manager;
            } }, { key: "setCurrentFormat", value: function(t3) {
              this.format = t3, this.initFormat();
            } }, { key: "initFormat", value: function() {
              var t3 = this, e3 = this.format || "hex";
              ["hex", "rgb", "hsl"].filter(function(t4) {
                return t4 !== e3;
              }).forEach(function(e4) {
                t3.$el.removeClass(e4);
              }), this.$el.addClass(e3);
            } }, { key: "nextFormat", value: function() {
              var t3 = this.format || "hex", e3 = "hex";
              t3 == "hex" ? e3 = "rgb" : t3 == "rgb" ? e3 = "hsl" : t3 == "hsl" && (e3 = this.parent.alpha == 1 ? "hex" : "rgb"), this.format = e3, this.initFormat(), this.parent.changeFormat(this.format);
            } }, { key: "goToFormat", value: function(t3) {
              this.format = t3, t3 !== "rgb" && t3 !== "hsl" || this.initFormat(), this.parent.changeFormat(this.format);
            } }, { key: "getFormat", value: function() {
              return this.format || "hex";
            } }, { key: "changeRgbColor", value: function() {
              this.parent.lastUpdateColor({ type: "rgb", r: this.refs.$rgb_r.int(), g: this.refs.$rgb_g.int(), b: this.refs.$rgb_b.int(), a: this.refs.$rgb_a.float() });
            } }, { key: "changeHslColor", value: function() {
              this.parent.lastUpdateColor({ type: "hsl", h: this.refs.$hsl_h.int(), s: this.refs.$hsl_s.int(), l: this.refs.$hsl_l.int(), a: this.refs.$hsl_a.float() });
            } }, { key: "hasValue", value: function(t3) {
              return t3.target.value !== "";
            } }, { key: Object(V.INPUT)("$rgb_r") + Object(V.IF)("hasValue"), value: function(t3) {
              this.changeRgbColor();
            } }, { key: Object(V.INPUT)("$rgb_g") + Object(V.IF)("hasValue"), value: function(t3) {
              this.changeRgbColor();
            } }, { key: Object(V.INPUT)("$rgb_b") + Object(V.IF)("hasValue"), value: function(t3) {
              this.changeRgbColor();
            } }, { key: Object(V.INPUT)("$rgb_a") + Object(V.IF)("hasValue"), value: function(t3) {
              this.changeRgbColor();
            } }, { key: Object(V.INPUT)("$hsl_h") + Object(V.IF)("hasValue"), value: function(t3) {
              this.changeHslColor();
            } }, { key: Object(V.INPUT)("$hsl_s") + Object(V.IF)("hasValue"), value: function(t3) {
              this.changeHslColor();
            } }, { key: Object(V.INPUT)("$hsl_l") + Object(V.IF)("hasValue"), value: function(t3) {
              this.changeHslColor();
            } }, { key: Object(V.INPUT)("$hsl_a") + Object(V.IF)("hasValue"), value: function(t3) {
              this.changeHslColor();
            } }, { key: Object(V.KEYUP)("$hexCode") + Object(V.IF)("hasValue"), value: function(t3) {
              var e3 = this.refs.$hexCode.val();
              e3.charAt(0) != "#" || e3.length != 7 && e3.length !== 9 || (this.parent.initColor(e3), this.emit("lastUpdateColor"));
            } }, { key: Object(V.CLICK)("$formatChangeButton"), value: function(t3) {
              this.nextFormat();
            } }, { key: Object(V.CLICK)("$el .information-item.hex .input-field .title"), value: function(t3) {
              this.goToFormat("hex");
            } }, { key: Object(V.CLICK)("$el .information-item.rgb .input-field .title"), value: function(t3) {
              this.goToFormat("hsl");
            } }, { key: Object(V.CLICK)("$el .information-item.hsl .input-field .title"), value: function(t3) {
              this.goToFormat("rgb");
            } }, { key: "setRGBInput", value: function() {
              this.refs.$rgb_r.val(this.manager.rgb.r), this.refs.$rgb_g.val(this.manager.rgb.g), this.refs.$rgb_b.val(this.manager.rgb.b), this.refs.$rgb_a.val(this.manager.alpha);
            } }, { key: "setHSLInput", value: function() {
              this.refs.$hsl_h.val(this.manager.hsl.h), this.refs.$hsl_s.val(this.manager.hsl.s), this.refs.$hsl_l.val(this.manager.hsl.l), this.refs.$hsl_a.val(this.manager.alpha);
            } }, { key: "setHexInput", value: function() {
              this.refs.$hexCode.val(this.manager.toString("hex"));
            } }, { key: "setValue", value: function() {
              this.refresh();
            } }, { key: "refresh", value: function() {
              this.setCurrentFormat(this.manager.format), this.setRGBInput(), this.setHSLInput(), this.setHexInput();
            } }]), n2;
          }(J.a);
          function Xe(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var We = function(t2) {
            s()(n2, t2);
            var e2 = Xe(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { hueColor: "rgba(0, 0, 0, 1)", s: 0, v: 0 };
            } }, { key: "template", value: function() {
              return '\n        <div class="color-panel">\n            <div ref="$saturation" class="saturation">\n                <div ref="$value" class="value">\n                    <div ref="$drag_pointer" class="drag-pointer"></div>\n                </div>\n            </div>        \n        </div>        \n        ';
            } }, { key: "afterRender", value: function() {
              this.rect = this.$el.rect();
            } }, { key: Object(V.BIND)("$el"), value: function() {
              return { style: { "background-color": this.state.hueColor } };
            } }, { key: Object(V.BIND)("$drag_pointer"), value: function() {
              this.rect.width === 0 && (this.rect = this.$el.rect());
              var t3 = this.rect.width * this.state.s, e3 = this.rect.height * (1 - this.state.v);
              return { style: { left: F.a.px(t3), top: F.a.px(e3) } };
            } }, { key: Object(V.POINTERSTART)("$el") + Object(V.MOVE)("movePointer") + Object(V.END)("moveEndPointer"), value: function(t3) {
              this.rect = this.$el.rect(), this.refreshColorUI();
            } }, { key: "movePointer", value: function() {
              this.refreshColorUI();
            } }, { key: "moveEndPointer", value: function() {
              this.parent.changeEndColor();
            } }, { key: "refreshColorUI", value: function() {
              var t3 = this.$config.get("bodyEvent"), e3 = this.rect.left, n3 = this.rect.right, r2 = this.rect.top, i2 = this.rect.bottom, a2 = i2 - r2, o2 = (Math.min(n3, Math.max(e3, t3.clientX)) - e3) / (n3 - e3), c2 = (a2 - (Math.min(i2, Math.max(r2, t3.clientY)) - r2)) / a2;
              this.parent.changeColor({ type: "hsv", s: o2, v: c2 });
            } }, { key: "setValue", value: function(t3, e3, n3) {
              this.setState({ s: t3, v: e3, hueColor: n3 });
            } }]), n2;
          }(J.a), Ze = [{ rgb: "#ff0000", start: 0 }, { rgb: "#ffff00", start: 0.17 }, { rgb: "#00ff00", start: 0.33 }, { rgb: "#00ffff", start: 0.5 }, { rgb: "#0000ff", start: 0.67 }, { rgb: "#ff00ff", start: 0.83 }, { rgb: "#ff0000", start: 1 }];
          !function() {
            for (var t2 = 0, e2 = Ze.length; t2 < e2; t2++) {
              var n2 = Ze[t2], r2 = Bt.a.parse(n2.rgb);
              n2.r = r2.r, n2.g = r2.g, n2.b = r2.b;
            }
          }();
          var qe = { colors: Ze, checkHueColor: function(t2) {
            for (var e2, n2, r2 = 0; r2 < Ze.length; r2++)
              if (Ze[r2].start >= t2) {
                e2 = Ze[r2 - 1], n2 = Ze[r2];
                break;
              }
            return e2 && n2 ? Bt.a.mix(e2, n2, (t2 - e2.start) / (n2.start - e2.start)) : Ze[0].rgb;
          } };
          function Je(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Qe(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Je(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Je(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          var tn = function() {
            function t2() {
              i()(this, t2), this.initialize();
            }
            return o()(t2, [{ key: "initialize", value: function() {
              this.state = { rgb: {}, hsl: {}, hsv: {}, alpha: 1, format: "hex" };
            } }, { key: "hsv", get: function() {
              return this.state.hsv;
            } }, { key: "rgb", get: function() {
              return this.state.rgb;
            } }, { key: "hsl", get: function() {
              return this.state.hsl;
            } }, { key: "hex", get: function() {
              return this.state.hex;
            } }, { key: "alpha", get: function() {
              return this.state.alpha;
            } }, { key: "format", get: function() {
              return this.state.format;
            } }, { key: "changeFormat", value: function(t3) {
              this.state.format = t3;
            } }, { key: "initColor", value: function(t3) {
              this.changeColor(t3);
            } }, { key: "changeColor", value: function(t3) {
              t3 = t3 || "#FF0000", Object(X.isString)(t3) && (t3 = Bt.a.parse(t3)), this.state.alpha = Object(X.isUndefined)(t3.a) ? this.state.alpha : t3.a, this.state.format = t3.type != "hsv" && t3.type || this.state.format, t3.type == "hsl" ? (this.state.hsl = Qe(Qe({}, this.state.hsl), t3), this.state.rgb = Bt.a.HSLtoRGB(this.state.hsl), this.state.hsv = Bt.a.HSLtoHSV(t3)) : t3.type == "hex" || t3.type == "rgb" ? (this.state.rgb = Qe(Qe({}, this.state.rgb), t3), this.state.hsl = Bt.a.RGBtoHSL(this.state.rgb), this.state.hsv = Bt.a.RGBtoHSV(t3)) : t3.type == "hsv" && (this.state.hsv = Qe(Qe({}, this.state.hsv), t3), this.state.rgb = Bt.a.HSVtoRGB(this.state.hsv), this.state.hsl = Bt.a.HSVtoHSL(this.state.hsv));
            } }, { key: "getHueColor", value: function() {
              return qe.checkHueColor(this.state.hsv.h / 360);
            } }, { key: "toString", value: function(t3) {
              t3 = t3 || this.state.format;
              var e2 = this.state[t3] || this.state.rgb;
              return Bt.a.format(Qe(Qe({}, e2), {}, { a: this.state.alpha }), t3);
            } }, { key: "toColor", value: function(t3) {
              return t3 = (t3 || this.state.format).toLowerCase(), this.toString(t3);
            } }]), t2;
          }();
          function en(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var nn = function(t2) {
            s()(n2, t2);
            var e2 = en(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "created", value: function() {
              this.manager = new tn();
            } }, { key: "initState", value: function() {
              var t3 = this.props.value || "rgba(0, 0, 0, 1)";
              return this.manager.initColor(t3), { key: this.props.key, value: this.manager.toString() };
            } }, { key: "updateData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.setState(t3, false), this.modifyColorPicker();
            } }, { key: "modifyColorPicker", value: function() {
              this.parent.trigger(this.props.onchange, this.props.key, this.state.value, this.props.params);
            } }, { key: "initColor", value: function(t3, e3) {
              this.manager.changeColor(t3, e3), this.refresh();
            } }, { key: "changeColor", value: function(t3, e3) {
              this.manager.changeColor(t3, e3), this.refresh(), this.updateData({ value: this.manager.toColor() });
            } }, { key: Object(V.SUBSCRIBE_SELF)("selectColorAssets"), value: function(t3, e3) {
              this.lastUpdateColor(e3);
            } }, { key: "changeFormat", value: function(t3) {
              this.manager.changeFormat(t3), this.setState({ value: this.manager.toColor() }, false), this.modifyColorPicker(), this.changeEndColor();
            } }, { key: "lastUpdateColor", value: function(t3, e3) {
              this.manager.changeColor(t3, e3), this.refresh(), this.setState({ value: this.manager.toColor() }, false), this.modifyColorPicker(), this.changeEndColor();
            } }, { key: "changeEndColor", value: function() {
              this.parent.trigger(this.props.onchangeend, this.props.key, this.state.value, this.props.params);
            } }, { key: "refresh", value: function() {
              var t3 = this.manager.toColor();
              this.children.$palette.setValue(this.manager.hsv.s, this.manager.hsv.v, this.manager.getHueColor()), this.children.$opacity.setValue(this.manager.rgb, this.manager.alpha), this.children.$hue.setValue(this.manager.hsv.h), this.children.$colorview.setValue(t3), this.children.$information.setValue();
            } }, { key: "components", value: function() {
              return { Hue: Ne, Opacity: Ue, ColorView: He, Palette: We, ColorInformation: Ye };
            } }, { key: "template", value: function() {
              return `
        <div class='colorpicker sketch inline'>
            <div class='colorpicker-body'>
                <object refClass="Palette" ref='$palette' />
                <div class="control">
                    <object refClass="Hue" ref='$hue' />
                    <object refClass="Opacity" ref='$opacity' />
                    <div class="empty"></div>
                    <object refClass="ColorView" ref='$colorview' />
                </div>
                <object refClass="ColorInformation" ref='$information' />
                <object refClass="ColorAssetsEditor" ref='$colorAsset' key="colorAssets" onchange="selectColorAssets" /> 
            </div>
        </div>
      `;
            } }]), n2;
          }(J.a);
          n(172);
          function rn(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var an = function(t2) {
            s()(n2, t2);
            var e2 = rn(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("colorpicker.popup.title");
            } }, { key: "getClassName", value: function() {
              return "compact elf--colorpicker-popup";
            } }, { key: "initState", value: function() {
              return { color: "rgba(0, 0, 0, 1)" };
            } }, { key: "updateData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.setState(t3, false), this.state.target && this.state.target.trigger(this.state.changeEvent, this.state.color, this.params);
            } }, { key: "updateEndData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.setState(t3, false), this.state.target && this.state.target.trigger(this.state.changeEndEvent, this.state.color, this.params);
            } }, { key: "getBody", value: function() {
              var t3 = this;
              return `
    <div class="elf--color-picker-popup">
      <div class='box'>
        <object 
          refClass="EmbedColorPicker" 
          ref='$color' 
          value='`.concat(this.state.color, "' \n          onchange=").concat(this.subscribe(function(e3) {
                return t3.updateData({ color: e3 });
              }), " \n          onchangeend=").concat(this.subscribe(function(e3) {
                return t3.updateEndData({ color: e3 });
              }), " />\n      </div>\n    </div>\n  ");
            } }, { key: Object(V.LOAD)("$projectColors"), value: function() {
              return (this.$selection.currentProject || { colors: [] }).colors.map(function(t3) {
                return "\n      <div class='color-item' title='".concat(t3.name, "'>\n        <div class='color-view' data-color='").concat(t3.color, "' style='background-color: ").concat(t3.color, "'></div>\n      </div>");
              });
            } }, { key: Object(V.CLICK)("$projectColors .color-view"), value: function(t3) {
              this.updateData({ color: t3.$dt.attr("data-color") }), this.children.$color.setValue(this.state.color);
            } }, { key: Object(V.SUBSCRIBE)("showColorPickerPopup"), value: function(t3, e3) {
              if (t3.changeEvent = t3.changeEvent || "changeFillPopup", !(t3.target instanceof $e.a))
                throw new Error("ColorPicker needs data.target");
              this.params = e3, this.setState(t3, false), this.children.$color.setValue(this.state.color), this.show(232);
            } }, { key: Object(V.SUBSCRIBE)("hideColorPickerPopup"), value: function() {
              this.hide();
            } }]), n2;
          }(tt);
          function on(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var cn = function(t2) {
            s()(n2, t2);
            var e2 = on(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { value: this.props.value || "rgba(0, 0, 0, 1)" };
            } }, { key: "template", value: function() {
              return `
        <div class='embed-color-picker'>
          <object refClass="ColorPickerEditor" 
            ref='$colorpicker' 
            key="colorpicker" 
            value="`.concat(this.state.value, `" 
            onchange='localChangeColor' 
            onchangeend='localLastUpdate' 
          />        
        </div>
      `);
            } }, { key: Object(V.SUBSCRIBE_SELF)("localChangeColor"), value: function(t3, e3) {
              this.parent.trigger(this.props.onchange, e3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("localLastUpdate"), value: function(t3, e3) {
              this.parent.trigger(this.props.onchangeend, e3);
            } }, { key: "setValue", value: function(t3) {
              this.state.value = t3, this.children.$colorpicker.initColor(t3);
            } }, { key: "refresh", value: function() {
              this.children.$colorpicker.initColor(this.props.value);
            } }]), n2;
          }(J.a);
          function sn(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function un(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? sn(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : sn(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function ln(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var fn = function(t2) {
            s()(n2, t2);
            var e2 = ln(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return "Component";
            } }, { key: "isShow", value: function() {
              var t3 = this.$selection.current;
              return !(!t3 || !t3.is("component"));
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.DEBOUNCE)(100), value: function() {
              var t3 = this;
              this.refreshShow(function(e3) {
                var n3 = t3.$selection.current;
                return t3.$editor.components.createInspector(n3).length > 0;
              });
            } }, { key: "refresh", value: function() {
              var t3 = this.$selection.current;
              t3 && (this.setTitle(t3.getDefaultTitle() || t3.itemType || t3.name), this.load());
            } }, { key: "getBody", value: function() {
              return "\n      <div ref='$body'></div>\n    ";
            } }, { key: "getPropertyEditor", value: function(t3, e3, n3, r2, i2) {
              return Object(X.isString)(r2) ? '\n        <div>  \n          <object refClass="'.concat(r2, '" ').concat(Object(X.OBJECT_TO_PROPERTY)(un(un({}, i2), {}, { onchange: "changeComponentProperty", ref: "".concat(e3).concat(t3), key: e3 })), '>\n            <property name="value" valueType="json">').concat(JSON.stringify(n3 || {}), "</property>\n          </object>\n        </div>") : Object.keys(r2).map(function(r3) {
                return '\n          <div>\n            <object refClass="'.concat(r3, '" ').concat(Object(X.OBJECT_TO_PROPERTY)(un(un({}, i2), {}, { onchange: "changeComponentProperty", ref: "".concat(e3).concat(t3).concat(r3), key: e3 })), '>\n              <property name="value" valueType="json">').concat(JSON.stringify(n3 || {}), "</property>\n            </object>\n          </div>");
              }).join("");
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = this, e3 = this.$selection.current;
              return e3 ? e3 && !e3.is("component") ? "" : this.$editor.components.createInspector(e3).map(function(n3, r2) {
                return Object(X.isString)(n3) ? "\n          <div class='property-item is-label'> \n            <label class='label string-label'>".concat(n3, "</label>\n          </div>") : "\n          <div class='property-item'> \n            ".concat(t3.getPropertyEditor(r2, n3.key, e3[n3.key] || n3.defaultValue, n3.editor, n3.editorOptions), "\n          </div>\n        ");
              }) : "";
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeComponentProperty"), value: function(t3, e3) {
              var n3, r2 = this.$selection.current, i2 = (n3 = this.$editor.components.createInspector(r2).find(function(e4) {
                return e4.key === t3;
              })) === null || n3 === void 0 ? void 0 : n3.convert, a2 = i2 ? i2(r2, t3, e3) : M()({}, t3, e3);
              this.command("setAttributeForMulti", "change component : " + t3, this.$selection.packByValue(a2));
            } }]), n2;
          }($.a);
          n(173);
          function hn(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var pn = function(t2) {
            s()(n2, t2);
            var e2 = hn(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return "Content";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection", "refreshContent") + Object(V.DEBOUNCE)(100), value: function() {
              this.refreshShow(["text"]);
            } }, { key: "getBody", value: function() {
              return '\n      <div class="property-item elf--content-item">\n        <textarea ref="$contentItem"></textarea>\n      </div>\n    ';
            } }, { key: Object(V.BIND)("$contentItem"), value: function() {
              var t3 = this.$selection.current;
              return t3 ? { value: t3.content || "" } : "";
            } }, { key: Object(V.INPUT)("$contentItem"), value: function(t3) {
              this.setContent();
            } }, { key: "setContent", value: function() {
              var t3 = this.$selection.current;
              if (t3) {
                var e3 = { content: this.refs.$contentItem.value };
                t3.reset(e3), this.emit("refreshSelectionStyleView", t3);
              }
            } }]), n2;
          }($.a), dn = [{ key: "style.canvas.background.color", defaultValue: "#ececec", title: "Canvas Background Color", description: "Set canvas background color", type: "color" }, { key: "area.width", defaultValue: 100, title: "Area Width to find layers fastly", description: "Set area width/height", type: "number" }, { key: "store.key", defaultValue: "easylogic.studio", title: "Store Key", description: "Set localStorage key", type: "number" }, { key: "set.tool.hand", defaultValue: false, title: "Hand tool", description: "Hand tool is on", type: "boolean" }, { key: "canvas.width", defaultValue: 1e4, title: "Default canvas width", description: "Set default canvas width", type: "number" }, { key: "canvas.height", defaultValue: 1e4, title: "Default canvas height", description: "Set default canvas height", type: "number" }, { key: "body.move.ms", defaultValue: 30, title: "pointer move delay millisecond", description: "Set delay millisecond to moving pointer in body  ", type: "number" }, { key: "debug", defaultValue: false, title: "debug mode", description: "Set debug mode to on ", type: "boolean" }, { key: "fixed.angle", defaultValue: 15, title: "fixed angle count", description: "Set fixed angle", type: "number" }, { key: "show.ruler", defaultValue: true, title: "Show ruler", description: "Set ruler visibility to on", type: "boolean" }, { key: "show.left.panel", defaultValue: true, title: "Show left panel", description: "Set left panel visibility to on", type: "boolean" }, { key: "show.right.panel", defaultValue: true, title: "Show right panel", description: "Set right panel visibility to on", type: "boolean" }, { key: "snap.distance", defaultValue: 3, title: "Snap distance between objects", description: "Set snap distance", type: "number" }, { key: "snap.grid", defaultValue: 50, title: "Snap grid size between objects", description: "Set snap grid size", type: "number" }, { key: "history.delay.ms", defaultValue: 1e3, title: "history delay milliseconds", description: "Set history delay time", type: "number" }], vn = n(81), yn = n(45);
          function gn(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function mn(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? gn(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : gn(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function bn(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var kn = function(t2) {
            s()(n2, t2);
            var e2 = bn(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIcon", value: function() {
              return D.a.lens;
            } }, { key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, mn({ itemType: "circle", name: "New Circle", "border-radius": "100%" }, t3));
            } }, { key: "getDefaultTitle", value: function() {
              return "Circle";
            } }]), n2;
          }(yn.a);
          function On(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function xn(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? On(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : On(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function jn(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Sn = function(t2) {
            s()(n2, t2);
            var e2 = jn(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIcon", value: function() {
              return D.a.image;
            } }, { key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, xn({ itemType: "image", name: "New Image", elementType: "image", src: "" }, t3));
            } }, { key: "enableHasChildren", value: function() {
              return false;
            } }, { key: "getDefaultTitle", value: function() {
              return "Image";
            } }, { key: "toCloneObject", value: function() {
              return xn(xn({}, A()(h()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("src"));
            } }, { key: "resize", value: function() {
              this.reset({ width: this.json.naturalWidth.clone(), height: this.json.naturalHeight.clone() });
            } }]), n2;
          }(yn.a), Pn = n(59);
          function wn(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Rn(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? wn(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : wn(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Cn(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var En = function(t2) {
            s()(n2, t2);
            var e2 = Cn(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIcon", value: function() {
              return D.a.rect;
            } }, { key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, Rn({ itemType: "rect", name: "New Rect" }, t3));
            } }, { key: "getDefaultTitle", value: function() {
              return "Rect";
            } }]), n2;
          }(yn.a), $n = n(29), In = n(49);
          function Tn(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Bn(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Tn(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Tn(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Mn(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Vn = {};
          ["appearance", "border", "border-radius", "background-image", "backdrop-filter", "clip-path", "pattern", "box-shadow", "layout", "transform", "transform-origin", "perspective", "perspective-origin", "backdrop-filter"].forEach(function(t2) {
            Vn[t2] = true;
          });
          var Dn = function(t2) {
            s()(n2, t2);
            var e2 = Mn(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, Bn({ itemType: "svg", name: "New SVG", elementType: "svg", overflow: "visible", stroke: "black", "stroke-width": 1, svgfilter: "", fill: "transparent", "fill-rule": "", "fill-opacity": "", "stroke-linecap": "", "stroke-linejoin": "", "stroke-dashoffset": 0, "stroke-dasharray": " ", "text-anchor": "start" }, t3));
            } }, { key: "editable", value: function(t3) {
              if (Vn[t3])
                return false;
              switch (t3) {
                case "svg-item":
                  return true;
              }
              return A()(h()(n2.prototype), "editable", this).call(this, t3);
            } }, { key: "toCloneObject", value: function() {
              return Bn(Bn({}, A()(h()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("overflow", "stroke", "stroke-width", "svgfilter", "fill", "fill-rule", "fill-opacity", "stroke-linecap", "stroke-linejoin", "stroke-dashoffset", "stroke-dasharray", "text-anchor"));
            } }, { key: "getDefaultTitle", value: function() {
              return "SVG";
            } }, { key: "isSVG", value: function() {
              return true;
            } }]), n2;
          }(yn.a);
          function Ln(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function An(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Ln(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Ln(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Fn(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var zn = function(t2) {
            s()(n2, t2);
            var e2 = Fn(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIcon", value: function() {
              return D.a.edit;
            } }, { key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, An({ itemType: "svg-path", name: "New Path", "stroke-width": 1, d: "", totalLength: 0 }, t3));
            } }, { key: "enableHasChildren", value: function() {
              return false;
            } }, { key: "refreshMatrixCache", value: function() {
              A()(h()(n2.prototype), "refreshMatrixCache", this).call(this), this.hasChangedField("d") && (this.cachePath = new $n.a(this.json.d));
            } }, { key: "setCache", value: function() {
              A()(h()(n2.prototype), "setCache", this).call(this), this.cachePath = new $n.a(this.json.d);
            } }, { key: "d", get: function() {
              return this.json.d ? (this.cachePath || (this.cachePath = new $n.a(this.json.d)), this.cachePath.clone().scaleTo(this.json.width.value, this.json.height.value)) : null;
            } }, { key: "toCloneObject", value: function() {
              return An(An({}, A()(h()(n2.prototype), "toCloneObject", this).call(this)), {}, { d: this.json.d });
            } }, { key: "getDefaultTitle", value: function() {
              return "Path";
            } }]), n2;
          }(Dn);
          function Nn(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function _n(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Nn(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Nn(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Un(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Gn = function(t2) {
            s()(n2, t2);
            var e2 = Un(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIcon", value: function() {
              return D.a.title;
            } }, { key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, _n({ itemType: "svg-text", name: "New Text", totalLength: 0, fill: "rgba(0, 0, 0, 1)", text: "Insert a text", "font-weight": F.a.number(100), textLength: F.a.em(0), lengthAdjust: "spacingAndGlyphs", "shape-inside": "", "shape-subtract": "", "shape-margin": "", "shape-padding": "" }, t3));
            } }, { key: "enableHasChildren", value: function() {
              return false;
            } }, { key: "convert", value: function(t3) {
              return (t3 = A()(h()(n2.prototype), "convert", this).call(this, t3)).textLength = F.a.parse(t3.textLength), t3;
            } }, { key: "toCloneObject", value: function() {
              return _n(_n({}, A()(h()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("totalLength", "text", "textLength", "lengthAdjust", "shape-inside"));
            } }, { key: "getDefaultTitle", value: function() {
              return "Text";
            } }]), n2;
          }(Dn);
          function Hn(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Kn(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Hn(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Hn(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Yn(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Xn = function(t2) {
            s()(n2, t2);
            var e2 = Yn(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIcon", value: function() {
              return D.a.text_rotate;
            } }, { key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, Kn({ itemType: "svg-textpath", name: "New TextPath", d: "", totalLength: 0, fill: "rgba(0, 0, 0, 1)", text: "Insert a text", textLength: F.a.em(0), lengthAdjust: "spacingAndGlyphs", startOffset: F.a.em(0) }, t3));
            } }, { key: "enableHasChildren", value: function() {
              return false;
            } }, { key: "refreshMatrixCache", value: function() {
              A()(h()(n2.prototype), "refreshMatrixCache", this).call(this), this.hasChangedField("d") && (this.cachePath = new $n.a(this.json.d));
            } }, { key: "d", get: function() {
              return this.json.d ? (this.cachePath || (this.cachePath = new $n.a(this.json.d)), this.cachePath.clone().scaleTo(this.json.width.value, this.json.height.value)) : null;
            } }, { key: "convert", value: function(t3) {
              return (t3 = A()(h()(n2.prototype), "convert", this).call(this, t3)).textLength = F.a.parse(t3.textLength), t3.startOffset = F.a.parse(t3.startOffset), t3;
            } }, { key: "toCloneObject", value: function() {
              return Kn(Kn({}, A()(h()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("totalLength", "d", "text", "textLength", "lengthAdjust", "startOffset"));
            } }, { key: "getDefaultTitle", value: function() {
              return "TextPath";
            } }, { key: "toAnimationKeyframes", value: function(t3) {
              var e3 = t3.filter(function(t4) {
                return Object(In.e)(t4.property);
              }), n3 = t3.filter(function(t4) {
                return Object(In.d)(t4.property);
              }), r2 = t3.filter(function(t4) {
                return Object(In.c)(t4.property);
              });
              return [{ selector: '[data-id="'.concat(this.json.id, '"]'), properties: r2 }, { selector: '[data-id="'.concat(this.json.id, '"] textPath'), properties: e3 }, { selector: '[data-id="'.concat(this.json.id, '"] path'), properties: n3 }];
            } }]), n2;
          }(Dn), Wn = n(67);
          function Zn(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function qn(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Zn(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Zn(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Jn(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Qn = '\n  <svg>\n    <rect width="100%" height="100%" fill="black" />\n  </svg>\n', tr = function(t2) {
            s()(n2, t2);
            var e2 = Jn(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIcon", value: function() {
              return D.a.auto_awesome;
            } }, { key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, qn({ itemType: "template", name: "New Template", engine: "dom", template: Qn, params: [] }, t3));
            } }, { key: "enableHasChildren", value: function() {
              return false;
            } }, { key: "getDefaultTitle", value: function() {
              return "Template";
            } }, { key: "toCloneObject", value: function() {
              return qn(qn({}, A()(h()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("template"));
            } }]), n2;
          }(Wn.a);
          function er(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function nr(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? er(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : er(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function rr(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var ir, ar = function(t2) {
            s()(n2, t2);
            var e2 = rr(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getIcon", value: function() {
              return D.a.title;
            } }, { key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, nr({ itemType: "text", name: "New Text", elementType: "p", content: "" }, t3));
            } }, { key: "enableHasChildren", value: function() {
              return false;
            } }, { key: "getDefaultTitle", value: function() {
              return "Text";
            } }, { key: "toCloneObject", value: function() {
              return nr(nr({}, A()(h()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("content"));
            } }, { key: "editable", value: function(t3) {
              switch (t3) {
                case "font":
                case "font-spacing":
                case "text-style":
                case "text-shadow":
                case "text-fill":
                case "text-clip":
                case "background-image":
                case "box-model":
                  return true;
                case "svg-item":
                case "border":
                case "border-radius":
                case "backdrop-filter":
                case "background-image":
                case "pattern":
                case "box-shadow":
                case "transform":
                case "transform-origin":
                case "perspective":
                case "perspective-origin":
                  return false;
              }
              return A()(h()(n2.prototype), "editable", this).call(this, t3);
            } }]), n2;
          }(yn.a), or = { en_US: { "app.title": "EASYLOGIC", "app.sample": function(t2, e2, n2) {
            return "".concat(t2, "-").concat(e2, "-").concat(n2);
          }, "app.lang.en_US": "English", "app.lang.ko_KR": "\uD55C\uAD6D\uC5B4", "app.lang.fr_FR": "Fran\xE7ais", "app.label.lang": "Language", "app.layout.all": "All", "app.layout.css": "CSS", "app.layout.svg": "SVG", "app.label.layout": "Menu Layout", "app.theme.dark": "Dark", "app.theme.light": "Light", "app.theme.toon": "Toon", "app.theme.gray": "Gray", "app.label.theme": "Theme", "app.tab.title.projects": "Projects", "app.tab.title.layers": "Layers", "app.tab.title.libraries": "Library", "app.tab.title.components": "Component", "app.tab.title.artboards": "Artboard", "app.tab.title.assets": "Assets", "app.tab.title.keyMap": "KeyMap", "app.confirm.message.artboard.items.removeArtboard": "Do you remove an artboard preview really?", "app.confirm.message.custom-component.items.removeCustomComponent": "Do you remove a custom component preview really?", "menu.item.download.title": "Download", "menu.item.save.title": "Save", "menu.item.export.title": "Export", "menu.item.codepen.title": "CodePen", "menu.item.fullscreen.title": "Full Screen", "menu.item.shortcuts.title": "ShortCuts", "menu.item.github.title": "Github", "menu.item.learn.title": "Learn", "menu.item.projects.title": "Projects", "project.property.title": "Project", "project.information.property.title": "Project information", "project.information.property.name": "Name", "project.information.property.description": "Description", "artboard.property.title": "ArtBoards", "artboard.property.layout.title.flex": "Flex", "artboard.property.layout.title.grid": "Grid", "layer.tree.property.title": "Layers", "layer.tree.property.layout.title.flex": "Flex", "layer.tree.property.layout.title.grid": "Grid", "alignment.property.title": "Alignment", "position.property.title": "Position", "position.property.X": "X", "position.property.Y": "Y", "size.property.title": "Size", "position.property.width": "W", "position.property.height": "H", "position.property.opacity": "Opacity", "position.property.rotate": "Rotate", "background.color.property.title": "Appearance", "background.color.property.color": "Color", "background.color.property.zindex": "z-index", "background.color.property.blend": "Blend", "background.color.property.overflow": "Overflow", "background.color.property.overflow.visible": "Visible", "background.color.property.overflow.hidden": "Hidden", "background.color.property.overflow.scroll": "Scroll", "background.color.property.overflow.auto": "Auto", "blend.normal": "normal", "blend.multiply": "multiply", "blend.screen": "screen", "blend.overlay": "overlay", "blend.darken": "darken", "blend.lighten": "lighten", "blend.color-dodge": "color-dodge", "blend.color-burn": "color-burn", "blend.hard-light": "hard-light", "blend.soft-light": "soft-light", "blend.difference": "difference", "blend.exclusion": "exclusion", "blend.hue": "hue", "blend.saturation": "saturation", "blend.color": "color", "blend.luminosity": "luminosity", "background.image.property.title": "Fill", "border.property.title": "Border", "border.radius.property.title": "Border Radius", "boxshadow.property.title": "Box Shadows", "filter.property.title": "Filter", "filter.property.blur": "Blur", "filter.property.grayscale": "GrayScale", "filter.property.hue-rotate": "Hue Rotate", "filter.property.invert": "Invert", "filter.property.brightness": "Brightness", "filter.property.contrast": "Contrast", "filter.property.drop-shadow": "Drop Shadow", "filter.property.drop-shadow.color": "Color", "filter.property.drop-shadow.offsetX": "Offset X", "filter.property.drop-shadow.offsetY": "Offset Y", "filter.property.drop-shadow.blurRadius": "Blur", "filter.property.opacity": "Opacity", "filter.property.saturate": "Saturate", "filter.property.sepia": "Sepia", "filter.property.svg": "SVG", "font.property.title": "Font", "font.property.color": "Color", "font.property.size": "Size", "font.property.stretch": "Stretch", "font.property.weight": "Weight", "font.property.style": "Style", "font.property.family": "Family", "font.spacing.property.title": "Font spacing", "font.spacing.property.lineHeight": "Line height", "font.spacing.property.letterSpacing": "Letter spacing", "font.spacing.property.wordSpacing": "Word spacing", "font.spacing.property.indent": "Indent", "backdrop.filter.property.title": "Backdrop Filter", "clippath.property.title": "Clip Path", "export.property.title": "Export", "export.property.download": "Download", "iframe.property.title": "IFrame", "image.property.title": "Image", "image.property.origin": "Origin", "image.property.size": "Size", "image.property.width": "Width", "image.property.height": "height", "video.property.title": "Video", "video.property.play": "Play", "video.property.pause": "Pause", "video.property.volume": "Volume", "video.property.playbackRate": "Playback Rate", "video.property.currentTime": "Current Time", "video.property.playTime": "Play Time Distance", "motion.property.title": "Motion", "text.property.title": "Text Style", "text.property.align": "Align", "text.property.transform": "Transform", "text.property.decoration": "Decoration", "text.clip.property.title": "Text Clip", "text.shadow.property.title": "Text Shadows", "text.fill.property.title": "Text Fill", "text.fill.property.fill": "Fill", "text.fill.property.stroke": "Stroke", "text.fill.property.strokeWidth": "Width", "transform.property.title": "Transform", "transform.origin.property.title": "Transform Origin", "transition.property.title": "CSS Transition", "keyframe.property.title": "CSS Keyframe", "selector.property.title": "Selector", "selector.property.none": "None selector", "path.data.property.title": "Path Information", "polygon.data.property.title": "Polygon Information", "perspective.property.title": "Perspective", "perspective.origin.property.title": "Perspective Origin", "svg.item.property.title": "Appearance", "svg.item.property.isMotionPath": "Motion Path", "svg.item.property.fill": "Fill", "svg.item.property.fillOpacity": "Opacity", "svg.item.property.path": "Path", "svg.item.property.polygon": "Polygon", "svg.item.property.totalLength": "Total Length", "svg.item.property.fillRule": "Fill Rule", "svg.item.property.stroke": "Stroke", "svg.item.property.strokeWidth": "Width", "svg.item.property.dashArray": "Dash Array", "svg.item.property.dashOffset": "Dash Offset", "svg.item.property.lineCap": "Line Cap", "svg.item.property.lineJoin": "Line Join", "svg.item.property.filter": "Filter", "border.editor.all": "All", "border.editor.width": "Width", "border.editor.style": "Style", "border.editor.color": "C", "border.editor.top": "Top", "border.editor.left": "Left", "border.editor.right": "Right", "border.editor.bottom": "Bottom", "border.radius.editor.topLeft": "Top Left", "border.radius.editor.topRight": "Top Right", "border.radius.editor.bottomLeft": "Bottom Left", "border.radius.editor.bottomRight": "Bottom Right", "boxshadow.editor.blur": "Blur", "boxshadow.editor.spread": "Spread", "css.property.editor.properties": "Properties", "offset.path.list.editor.path": "Path", "offset.path.list.editor.totalLength": "Total Length", "offset.path.list.editor.distance": "Distance", "offset.path.list.editor.direction": "Direction", "offset.path.list.editor.rotate": "Rotate", "svgfilter.select.editor.message.create": "Create new svg filter", "svgfilter.select.editor.message.select": "Select a filter", "fill.editor.message.click.image": "Click the preview area if you want to select a image", "fill.editor.message.drag.position": "Drag if you want to move center position", "fill.editor.x1": "Start X", "fill.editor.x2": "End X", "fill.editor.y1": "Start Y", "fill.editor.y2": "End Y", "fill.editor.spread": "Spread", "fill.editor.offset": "Offset", "fill.editor.cx": "Center X", "fill.editor.cy": "Center Y", "fill.editor.r": "End radius", "fill.editor.fx": "Start X", "fill.editor.fy": "Start Y", "fill.editor.fr": "Start radius", "perspective.origin.editor.originX": "Origin X", "perspective.origin.editor.originY": "Origin Y", "path.manager.msg": "Keydown ESC or Enter key to close editing", "path.manager.mode.modify": "Modify", "path.manager.mode.path": "Path", "path.manager.mode.transform": "Transform", "path.manager.mode.reverse": "Reverse", "path.manager.mode.flipX": "Flip X", "path.manager.mode.flipY": "Flip Y", "path.manager.mode.flipOrigin": "Flip Origin", "colorpicker.popup.title": "ColorPicker", "selector.popup.title": "Selector Property", "selector.popup.selector": "Selector", "background.image.position.popup.title": "Background Pattern", "background.image.position.popup.size": "Size", "background.image.position.popup.width": "Width", "background.image.position.popup.height": "Height", "background.image.position.popup.repeat": "Repeat", "background.image.position.popup.blend": "Blend", "background.image.position.popup.type.repeat": "repeat", "background.image.position.popup.type.no-repeat": "no repeat", "background.image.position.popup.type.repeat-x": "repeat-x", "background.image.position.popup.type.repeat-y": "repeat-y", "background.image.position.popup.type.space": "space", "background.image.position.popup.type.round": "round", "gradient.picker.popup.title": "Gradient & Image Picker", "image.asset.property.title": "Image", "video.asset.property.title": "Video", "color.asset.property.title": "Color", "gradient.asset.property.title": "Gradient", "pattern.asset.property.title": "Pattern", "svgfilter.asset.property.title": "SVG Filter", "inspector.tab.title.style": "Style", "inspector.tab.title.component": "Component", "inspector.tab.title.transition": "Transition & Animation", "inspector.tab.title.asset": "Assets", "inspector.tab.title.text": "Text", "inspector.tab.title.code": "Code", "inspector.tab.title.history": "History", "timeline.property.title": "Timeline", "timeline.property.resize": "Drag if you want to resize timeline height.", "timeline.animation.property.title": "Animations", "timeline.play.control.play": "Play", "timeline.play.control.pause": "Pause", "timeline.play.control.first": "First", "timeline.play.control.prev": "Previous", "timeline.play.control.next": "Next", "timeline.play.control.last": "Last", "timeline.play.control.direction": "Direction", "timeline.play.control.speed": "Speed", "timeline.play.control.repeat": "Repeat", "timeline.play.control.infinite": "Infinite", "timeline.play.control.normal": "normal", "timeline.play.control.alternate": "alternate", "timeline.play.control.reverse": "reverse", "timeline.play.control.alternate.reverse": "alternate reverse", "timeline.value.editor.value": "Value", "timeline.value.editor.time": "Time", "timeline.value.editor.timing": "Timing", "timeline.value.editor.offset.message": "Please input enter key to change time offset.", "svgfilter.popup.title": "SVG Filter", "css.item.rotate": "Rotate", "css.item.rotateX": "Rotate X", "css.item.rotateY": "Rotate Y", "css.item.rotateZ": "Rotate Z", "css.item.rotate3d": "3D Rotate", "css.item.skewX": "Skew X", "css.item.skewY": "Skew Y", "css.item.translate": "Translate", "css.item.translateX": "Translate X", "css.item.translateY": "Translate Y", "css.item.translateZ": "Translate Z", "css.item.translate3d": "3D Translate", "css.item.perspective": "Perspective", "css.item.scale": "Scale", "css.item.scaleX": "Scale X", "css.item.scaleY": "Scale Y", "css.item.scaleZ": "Scale Z", "css.item.scale3d": "3D Scale", "css.item.matrix": "Matrix", "css.item.matrix3d": "3D Matrix", "animation.property.title": "CSS Animation", "animation.property.direction": "Direction", "animation.property.play.state": "Play State", "animation.property.fill.mode": "Fill Mode", "animation.property.delay": "Delay", "animation.property.duration": "Duration", "animation.property.iteration.count": "Iteration Count", "animation.property.Select a keyframe": "Select a keyframe", "animation.property.popup.title": "Animation", "animation.property.popup.timing.function": "Timing Function", "animation.property.popup.keyframe": "Keyframe", "animation.property.popup.direction": "Direction", "animation.property.popup.play.state": "Play State", "animation.property.popup.fill.mode": "Fill Mode", "animation.property.popup.delay": "Delay", "animation.property.popup.duration": "Duration", "animation.property.popup.iteration": "Iteration", "animation.property.popup.normal": "normal", "animation.property.popup.reverse": "reverse", "animation.property.popup.alternate": "alternate", "animation.property.popup.alternate-reverse": "alternate-reverse", "animation.property.popup.none": "none", "animation.property.popup.forwards": "forwards", "animation.property.popup.backwards": "backwards", "animation.property.popup.both": "both", "animation.property.popup.Select a keyframe": "Select a keyframe", "keyframe.popup.title": "Keyframe", "code.view.property.title": "CodeView", "svg.filter.editor.tab.filter": "Filter", "svg.filter.editor.tab.preset": "Preset", "svg.filter.editor.tab.asset": "Assets", "svg.filter.editor.GRAPHIC REFERENCES": "GRAPHIC REFERENCES", "svg.filter.editor.SOURCES": "SOURCES", "svg.filter.editor.MODIFIER": "MODIFIER", "svg.filter.editor.LIGHTING": "LIGHTING", "svg.filter.editor.COMBINERS": "COMBINERS", "svg.filter.editor.Template": "Template", "layout.property.title": "Layout", "layout.property.flex": "Flex Box", "layout.property.grid": "Grid", "layout.property.default": "Default", "flex.layout.editor.row": "Row", "flex.layout.editor.column": "column", "flex.layout.editor.row-reverse": "Row Reverse", "flex.layout.editor.column-reverse": "Column Reverse", "flex.layout.editor.nowrap": "Nowrap", "flex.layout.editor.wrap": "Wrap", "flex.layout.editor.wrap-reverse": "Wrap Reverse", "flex.layout.editor.flex-start": "Start", "flex.layout.editor.flex-end": "End", "flex.layout.editor.center": "Center", "flex.layout.editor.space-between": "Between", "flex.layout.editor.space-around": "Around", "flex.layout.editor.baseline": "BaseLine", "flex.layout.editor.stretch": "Stretch", "flex.layout.editor.direction": "Direction", "flex.layout.editor.justify-content": "Justify Content", "flex.layout.editor.align-items": "Align Items", "flex.layout.editor.align-content": "Align Content", "flex.layout.item.property.title": "Layout Item Detail", "flex.layout.item.property.grow": "Flex Grow", "flex.layout.item.property.shrink": "Flex Shrink", "flex.layout.item.property.basis": "Flex Basis", "flex.layout.item.property.none": "none", "flex.layout.item.property.auto": "auto", "flex.layout.item.property.value": "value", "grid.layout.editor.template.columns": "Columns", "grid.layout.editor.column.gap": "Column Gap", "grid.layout.editor.template.rows": "Rows", "grid.layout.editor.row.gap": "Row Gap", "grid.box.editor.box.title": "Box", "grid.box.editor.type": "Type", "grid.box.editor.repeat": "Repeat", "grid.box.editor.length": "Length", "grid.box.editor.none": "None", "grid.box.editor.auto": "Auto", "grid.box.editor.count": "Count", "grid.box.editor.value": "Size", "grid.layout.item.property.title": "Layout Item Detail", "grid.layout.item.property.column": "Column", "grid.layout.item.property.row": "Row", "grid.layout.item.property.start": "Start", "grid.layout.item.property.end": "End", "grid.layout.item.property.none": "none", "grid.layout.item.property.value": "value", "box.model.property.title": "Box Model", "box.model.property.margin": "Margin", "box.model.property.padding": "Padding", "component.items.canvas": "Canvas", "component.items.layer": "Layer", "component.items.3dlayer": "3D Layer", "component.items.drawing": "Drawing", "component.items.custom": "Custom Component", "component.items.chart": "Chart", "component.items.plugin": "Plugin", "svg.text.property.title": "SVG Text Style", "svg.text.property.textarea": "Text Area", "svg.text.property.size": "Font Size", "svg.text.property.weight": "Font Weight", "svg.text.property.style": "Font Style", "svg.text.property.anchor": "Text Anchor", "svg.text.property.family": "Font Family", "svg.text.property.length.adjust": "Length Adjust", "svg.text.property.text.length": "Text Length", "svg.text.property.start.offset": "Start Offset", "fill.picker.popup.title": "SVG Fragment picker", "gradient.editor.drag.message": "Drag if you want to move center pointer.", "draw.manager.tolerance": "Tolerance", "pattern.property.title": "Pattern", "pattern.info.popup.title": "Pattern Info", "pattern.info.popup.width": "Width", "pattern.info.popup.height": "Height", "pattern.info.popup.lineWidth": "Line Width", "pattern.info.popup.lineHeight": "Line Height", "pattern.info.popup.rotate": "Rotate", "pattern.info.popup.blend": "Blend Mode", "pattern.info.popup.foreColor": "Fore", "pattern.info.popup.backColor": "Back", "stroke.dasharray.editor.add": "Add Dash", "viewport.panning.enable": "You can move the area by holding down space key and dragging the screen." }, fr_FR: (ir = { "app.title": "EASYLOGIC", "app.sample": function(t2, e2, n2) {
            return "".concat(t2, "-").concat(e2, "-").concat(n2);
          }, "app.lang.en_US": "English", "app.lang.ko_KR": "\uD55C\uAD6D\uC5B4", "app.lang.fr_FR": "Fran\xE7ais", "app.label.lang": "Langue", "app.layout.all": "All", "app.layout.css": "CSS", "app.layout.svg": "SVG", "app.label.layout": "Menu Layout", "app.theme.dark": "Sombre", "app.theme.light": "Clair", "app.theme.gray": "Gris", "app.label.theme": "Th\xE8me", "app.tab.title.projects": "Projets", "app.tab.title.layers": "Objets", "app.tab.title.libraries": "Librarie", "app.tab.title.components": "Objet", "app.tab.title.artboards": "Artboard", "app.tab.title.assets": "Elements", "app.tab.title.keyMap": "Clavier", "app.confirm.message.artboard.items.removeArtboard": "Do you remove an artboard preview really?", "app.confirm.message.custom-component.items.removeCustomComponent": "Do you remove a custom component preview really?", "menu.item.download.title": "T\xE9l\xE9charger", "menu.item.save.title": "Enregistrer", "menu.item.export.title": "Exporter", "menu.item.codepen.title": "CodePen", "menu.item.fullscreen.title": "Ecran", "menu.item.shortcuts.title": "ShortCuts", "menu.item.github.title": "Github", "menu.item.learn.title": "Docs", "menu.item.projects.title": "Projects", "project.property.title": "Projet", "project.information.property.title": "Information", "project.information.property.name": "Nom", "project.information.property.description": "Description", "artboard.property.title": "Planche", "artboard.property.layout.title.flex": "Flex", "artboard.property.layout.title.grid": "Grille", "layer.tree.property.title": "Objets", "layer.tree.property.layout.title.flex": "Flex", "layer.tree.property.layout.title.grid": "Grille", "alignment.property.title": "Alignment", "position.property.title": "Position", "position.property.X": "X", "position.property.Y": "Y", "size.property.title": "Taille", "position.property.width": "Largeur", "position.property.height": "Hauteur", "position.property.opacity": "Opacity", "position.property.rotate": "Rotate", "background.color.property.title": "Apparance", "background.color.property.color": "Couleur", "background.color.property.zindex": "z-index", "background.color.property.opacity": "Opacit\xE9", "background.color.property.blend": "M\xE9lange", "background.color.property.overflow": "D\xE9bordement", "background.color.property.overflow.visible": "Visible", "background.color.property.overflow.hidden": "Cach\xE9", "background.color.property.overflow.scroll": "Scroll", "background.color.property.overflow.auto": "Auto", "blend.normal": "normal", "blend.multiply": "multiplie", "blend.screen": "\xE9cran", "blend.overlay": "couche", "blend.darken": "sombre", "blend.lighten": "clair", "blend.color-dodge": "dodge", "blend.color-burn": "brul\xE9", "blend.hard-light": "dur", "blend.soft-light": "doux", "blend.difference": 'diff"rence', "blend.exclusion": "exclusion", "blend.hue": "teinte", "blend.saturation": "saturation", "blend.color": "couleur", "blend.luminosity": "luminosit\xE9", "background.image.property.title": "Remplissage", "border.property.title": "Bordure", "border.radius.property.title": "Rayon de bordure", "boxshadow.property.title": "Ombres", "filter.property.title": "Filtre", "filter.property.blur": "Flou", "filter.property.grayscale": "Echelle de gris", "filter.property.hue-rotate": "Rotation teinte", "filter.property.invert": "Invertir", "filter.property.brightness": "Luminosit\xE9", "filter.property.contrast": "Contraste", "filter.property.drop-shadow": "Ombre port\xE9e", "filter.property.drop-shadow.color": "Couleur", "filter.property.drop-shadow.offsetX": "D\xE9calage X", "filter.property.drop-shadow.offsetY": "D\xE9calage Y", "filter.property.drop-shadow.blurRadius": "Flou", "filter.property.opacity": "Opacit\xE9", "filter.property.saturate": "Saturation", "filter.property.sepia": "S\xE9pia", "filter.property.svg": "SVG", "font.property.title": "Police", "font.property.color": "Couleur", "font.property.size": "Taille", "font.property.stretch": "Etirement", "font.property.weight": "Poids", "font.property.style": "Style", "font.property.family": "Famille", "font.spacing.property.title": "Espaces du texte", "font.spacing.property.lineHeight": "Hauteur de ligne", "font.spacing.property.letterSpacing": "Espace inter-caract\xE8res", "font.spacing.property.wordSpacing": "Espace inter-mots", "font.spacing.property.indent": "Identation", "backdrop.filter.property.title": "Filtre Backdrop", "clippath.property.title": "Chemin du Clip", "export.property.title": "Exporter", "export.property.download": "T\xE9l\xE9charger", "iframe.property.title": "IFrame", "image.property.title": "Image", "image.property.origin": "Origine", "image.property.size": "Taille", "image.property.width": "Largeur", "image.property.height": "Hauteur", "video.property.title": "Video", "video.property.play": "Jouer", "video.property.pause": "Pause", "video.property.volume": "Volume", "video.property.playbackRate": "Vitesse de lecture", "video.property.currentTime": "Temps actuel", "video.property.playTime": "Temps de lecture", "motion.property.title": "Mouvement", "text.property.title": "Style Texte", "text.property.align": "Alignement", "text.property.transform": "Transformation", "text.property.decoration": "D\xE9coration", "text.clip.property.title": "Clip Texte", "text.shadow.property.title": "Ombres Texte", "text.fill.property.title": "Remplissage Texte", "text.fill.property.fill": "Remplissage", "text.fill.property.stroke": "Trait", "text.fill.property.strokeWidth": "Largeur", "transform.property.title": "Transformation", "transform.origin.property.title": "Origine Transformation", "transition.property.title": "Transition CSS", "keyframe.property.title": "Image cl\xE9 CSS", "selector.property.title": "S\xE9l\xE9cteur", "selector.property.none": "Aucun s\xE9l\xE9cteur", "path.data.property.title": "Information Chemin", "polygon.data.property.title": "Information Polygone", "perspective.property.title": "Perspective", "perspective.origin.property.title": "Origine Perspective", "svg.item.property.title": "Appearance", "svg.item.property.isMotionPath": "Chemin de mouvement", "svg.item.property.fill": "Remplissage", "svg.item.property.fillOpacity": "Opacit\xE9", "svg.item.property.path": "Chemin", "svg.item.property.polygon": "Polygone", "svg.item.property.totalLength": "Longueur totale", "svg.item.property.fillRule": "R\xE8gle remplissage", "svg.item.property.stroke": "Trait", "svg.item.property.strokeWidth": "Largeur de trait", "svg.item.property.dashArray": "Suite tiret", "svg.item.property.dashOffset": "D\xE9calage tiret", "svg.item.property.lineCap": "Chapeau Ligne", "svg.item.property.lineJoin": "Jonction ligne", "svg.item.property.filter": "Filtre", "border.editor.all": "Tout", "border.editor.width": "Largeur", "border.editor.style": "Style", "border.editor.color": "Couleur", "border.editor.top": "Haut", "border.editor.left": "Gauche", "border.editor.right": "Droite", "border.editor.bottom": "Bas", "border.radius.editor.topLeft": "Haut gauche", "border.radius.editor.topRight": "Haut droite", "border.radius.editor.bottomLeft": "Bas gauche", "border.radius.editor.bottomRight": "Bas droite", "boxshadow.editor.blur": "Flou", "boxshadow.editor.spread": "Etalement", "css.property.editor.properties": "Propri\xE9t\xE9s", "offset.path.list.editor.path": "Chemin", "offset.path.list.editor.totalLength": "Longueur totale", "offset.path.list.editor.distance": "Distance", "offset.path.list.editor.direction": "Direction", "offset.path.list.editor.rotate": "Rotation", "svgfilter.select.editor.message.create": "Cr\xE9er un filtre svg", "svgfilter.select.editor.message.select": "S\xE9lection filtre", "fill.editor.message.click.image": "Cliquez sur aper\xE7u si vous souhaitez s\xE9lectionner une image", "fill.editor.message.drag.position": "Prendre pour changer la position centrale", "fill.editor.x1": "D\xE9but X", "fill.editor.x2": "Fin X", "fill.editor.y1": "D\xE9but Y", "fill.editor.y2": "Fin Y", "fill.editor.spread": "Etalement", "fill.editor.offset": "D\xE9calage", "fill.editor.cx": "Centre X", "fill.editor.cy": "Centre Y", "fill.editor.r": "Rayon de fin", "fill.editor.fx": "D\xE9part X", "fill.editor.fy": "D\xE9part Y", "fill.editor.fr": "Rayon de d\xE9part", "perspective.origin.editor.originX": "Origine X", "perspective.origin.editor.originY": "Origine Y", "path.manager.msg": "Appuyer ESC ou Entr\xE9z keypour fermer Edition", "path.manager.mode.modify": "Modifier", "path.manager.mode.path": "Chemin", "path.manager.mode.transform": "Transformer", "path.manager.mode.reverse": "Reverse", "path.manager.mode.flipX": "Retouner X", "path.manager.mode.flipY": "Retouner Y", "path.manager.mode.flipOrigin": "Retouner Origine", "colorpicker.popup.title": "Pipette", "selector.popup.title": "Propi\xE9t\xE9 de S\xE9lecteur", "selector.popup.selector": "S\xE9lecteur", "background.image.position.popup.title": "Motif de fond", "background.image.position.popup.size": "Taille", "background.image.position.popup.width": "Largeur", "background.image.position.popup.height": "Hauteur", "background.image.position.popup.repeat": "Rep\xE8te", "background.image.position.popup.blend": "M\xE9lange", "background.image.position.popup.type.repeat": "rep\xE8te", "background.image.position.popup.type.no-repeat": "sans rep\xE9tition", "background.image.position.popup.type.repeat-x": "rep\xE8te-x", "background.image.position.popup.type.repeat-y": "rep\xE8te-y", "background.image.position.popup.type.space": "espace", "background.image.position.popup.type.round": "rond", "gradient.picker.popup.title": "S\xE9lection Gradient & Image", "image.asset.property.title": "Image", "video.asset.property.title": "Vid\xE9o", "color.asset.property.title": "Couleur", "gradient.asset.property.title": "Gradient", "pattern.asset.property.title": "Motif", "svgfilter.asset.property.title": "Filtre SVG", "inspector.tab.title.style": "Style", "inspector.tab.title.component": "Composant", "inspector.tab.title.transition": "Transition & Animation", "inspector.tab.title.asset": "El\xE9ments", "inspector.tab.title.text": "Texte", "inspector.tab.title.code": "Code", "inspector.tab.title.history": "History" }, M()(ir, "inspector.tab.title.history", "History"), M()(ir, "timeline.property.title", "Chronologie"), M()(ir, "timeline.property.resize", "Drag if you want to resize timeline height."), M()(ir, "timeline.animation.property.title", "Animations"), M()(ir, "timeline.play.control.play", "Jouer"), M()(ir, "timeline.play.control.pause", "Pause"), M()(ir, "timeline.play.control.first", "Premier"), M()(ir, "timeline.play.control.prev", "Pr\xE9c\xE9dent"), M()(ir, "timeline.play.control.next", "Suivant"), M()(ir, "timeline.play.control.last", "Dernier"), M()(ir, "timeline.play.control.direction", "Direction"), M()(ir, "timeline.play.control.speed", "Vitesse"), M()(ir, "timeline.play.control.repeat", "R\xE9p\xE9ter"), M()(ir, "timeline.play.control.infinite", "Infini"), M()(ir, "timeline.play.control.normal", "normal"), M()(ir, "timeline.play.control.alternate", "alternatif"), M()(ir, "timeline.play.control.reverse", "inverse"), M()(ir, "timeline.play.control.alternate.reverse", "inverse alternatif"), M()(ir, "timeline.value.editor.value", "Valeur"), M()(ir, "timeline.value.editor.time", "Temps"), M()(ir, "timeline.value.editor.timing", "Calage temps"), M()(ir, "timeline.value.editor.offset.message", "Please input enter key to change time offset."), M()(ir, "svgfilter.popup.title", "Filtre SVG"), M()(ir, "css.item.rotate", "Rotation"), M()(ir, "css.item.rotateX", "Rotation X"), M()(ir, "css.item.rotateY", "Rotation Y"), M()(ir, "css.item.rotateZ", "Rotation Z"), M()(ir, "css.item.rotate3d", "Rotation 3D"), M()(ir, "css.item.skewX", "Oblique X"), M()(ir, "css.item.skewY", "Oblique Y"), M()(ir, "css.item.translate", "Translation"), M()(ir, "css.item.translateX", "Translation X"), M()(ir, "css.item.translateY", "Translation Y"), M()(ir, "css.item.translateZ", "Translation Z"), M()(ir, "css.item.translate3d", "Translation 3D"), M()(ir, "css.item.perspective", "Persp\xE9ctive"), M()(ir, "css.item.scale", "Echelle"), M()(ir, "css.item.scaleX", "Echelle X"), M()(ir, "css.item.scaleY", "Echelle Y"), M()(ir, "css.item.scaleZ", "Echelle Z"), M()(ir, "css.item.scale3d", "Echelle 3D"), M()(ir, "css.item.matrix", "Matrice"), M()(ir, "css.item.matrix3d", "Matrice 3D"), M()(ir, "animation.property.title", "Animation CSS"), M()(ir, "animation.property.direction", "Direction"), M()(ir, "animation.property.play.state", "Etat lecture"), M()(ir, "animation.property.fill.mode", "Mode remplissage"), M()(ir, "animation.property.delay", "D\xE9lais"), M()(ir, "animation.property.duration", "Dur\xE9e"), M()(ir, "animation.property.iteration.count", "Nombre It\xE9rations"), M()(ir, "animation.property.Select a keyframe", "Selectionner une image cl\xE9"), M()(ir, "animation.property.popup.title", "Animation"), M()(ir, "animation.property.popup.timing.function", "Fonction temps"), M()(ir, "animation.property.popup.keyframe", "image cl\xE9"), M()(ir, "animation.property.popup.direction", "Direction"), M()(ir, "animation.property.popup.play.state", "Etat lecture"), M()(ir, "animation.property.popup.fill.mode", "Mode remplissage"), M()(ir, "animation.property.popup.delay", "D\xE9lais"), M()(ir, "animation.property.popup.duration", "Dur\xE9\xE9"), M()(ir, "animation.property.popup.iteration", "It\xE9ration"), M()(ir, "animation.property.popup.normal", "normal"), M()(ir, "animation.property.popup.reverse", "inverse"), M()(ir, "animation.property.popup.alternate", "alternatif"), M()(ir, "animation.property.popup.alternate-reverse", "inverse alternatif"), M()(ir, "animation.property.popup.none", "Aucun"), M()(ir, "animation.property.popup.forwards", "en avant"), M()(ir, "animation.property.popup.backwards", "en arri\xE8re"), M()(ir, "animation.property.popup.both", "les deux"), M()(ir, "animation.property.popup.Select a keyframe", "Selectionner une image cl\xE9"), M()(ir, "keyframe.popup.title", "image cl\xE9"), M()(ir, "code.view.property.title", "Vue code"), M()(ir, "svg.filter.editor.tab.filter", "Filtrer"), M()(ir, "svg.filter.editor.tab.preset", "Pre-rempli"), M()(ir, "svg.filter.editor.tab.asset", "El\xE9ments"), M()(ir, "svg.filter.editor.GRAPHIC REFERENCES", "REFERENCES GRAPHIQUES"), M()(ir, "svg.filter.editor.SOURCES", "SOURCES"), M()(ir, "svg.filter.editor.MODIFIER", "MODIFIER"), M()(ir, "svg.filter.editor.LIGHTING", "ECLAIRAGE"), M()(ir, "svg.filter.editor.COMBINERS", "COMBINER"), M()(ir, "svg.filter.editor.Template", "Mod\xE8le"), M()(ir, "layout.property.title", "Disposition"), M()(ir, "layout.property.flex", "Bo\xEEte Flex"), M()(ir, "layout.property.grid", "Grille"), M()(ir, "layout.property.default", "D\xE9faut"), M()(ir, "flex.layout.editor.row", "Ligne"), M()(ir, "flex.layout.editor.column", "Colonne"), M()(ir, "flex.layout.editor.row-reverse", "Inverse ligne"), M()(ir, "flex.layout.editor.column-reverse", "Inverse Colonne"), M()(ir, "flex.layout.editor.nowrap", "Non-emball\xE9"), M()(ir, "flex.layout.editor.wrap", "Emball\xE9 (wrap)"), M()(ir, "flex.layout.editor.wrap-reverse", "Inverse emball\xE9"), M()(ir, "flex.layout.editor.flex-start", "D\xE9but"), M()(ir, "flex.layout.editor.flex-end", "Fin"), M()(ir, "flex.layout.editor.center", "Centrer"), M()(ir, "flex.layout.editor.space-between", "Entre"), M()(ir, "flex.layout.editor.space-around", "Autour"), M()(ir, "flex.layout.editor.baseline", "Base"), M()(ir, "flex.layout.editor.stretch", "Etirement"), M()(ir, "flex.layout.editor.direction", "Direction"), M()(ir, "flex.layout.editor.justify-content", "Justifier"), M()(ir, "flex.layout.editor.align-items", "Aligner objets"), M()(ir, "flex.layout.editor.align-content", "Aligner contenu"), M()(ir, "flex.layout.item.property.title", "D\xE9tail Disposition objet"), M()(ir, "flex.layout.item.property.grow", "Augmenter Flex"), M()(ir, "flex.layout.item.property.shrink", "R\xE9duire Flex"), M()(ir, "flex.layout.item.property.basis", "Base Flex"), M()(ir, "flex.layout.item.property.none", "Aucun"), M()(ir, "flex.layout.item.property.auto", "auto"), M()(ir, "flex.layout.item.property.value", "valeur"), M()(ir, "grid.layout.editor.template.columns", "Colonne"), M()(ir, "grid.layout.editor.column.gap", "Espace Colonne"), M()(ir, "grid.layout.editor.template.rows", "Lignes"), M()(ir, "grid.layout.editor.row.gap", "Espace lignes"), M()(ir, "grid.box.editor.box.title", "Bo\xEEte"), M()(ir, "grid.box.editor.type", "Type"), M()(ir, "grid.box.editor.repeat", "R\xE9p\xE9ter"), M()(ir, "grid.box.editor.length", "Longueur"), M()(ir, "grid.box.editor.none", "Aucun"), M()(ir, "grid.box.editor.auto", "Auto"), M()(ir, "grid.box.editor.count", "Compte"), M()(ir, "grid.box.editor.value", "Taille"), M()(ir, "grid.layout.item.property.title", "D\xE9tail disposition objets"), M()(ir, "grid.layout.item.property.column", "Colonne"), M()(ir, "grid.layout.item.property.row", "Ligne"), M()(ir, "grid.layout.item.property.start", "D\xE9but"), M()(ir, "grid.layout.item.property.end", "Fin"), M()(ir, "grid.layout.item.property.none", "Aucun"), M()(ir, "grid.layout.item.property.value", "valeur"), M()(ir, "box.model.property.title", "Mod\xE8le"), M()(ir, "box.model.property.margin", "Marge"), M()(ir, "box.model.property.padding", "Espace"), M()(ir, "component.items.canvas", "Toile"), M()(ir, "component.items.layer", "Objet"), M()(ir, "component.items.3dlayer", "Objet 3D"), M()(ir, "component.items.drawing", "Dessin"), M()(ir, "component.items.custom", "Composant personnalis\xE9"), M()(ir, "component.items.chart", "Chart"), M()(ir, "component.items.plugin", "Plugin"), M()(ir, "svg.text.property.title", "Style SVG Texte"), M()(ir, "svg.text.property.textarea", "Zone Texte"), M()(ir, "svg.text.property.size", "Taille"), M()(ir, "svg.text.property.weight", "Poids"), M()(ir, "svg.text.property.style", "Style"), M()(ir, "svg.text.property.anchor", "Ancre Texte"), M()(ir, "svg.text.property.family", "Famille"), M()(ir, "svg.text.property.length.adjust", "Ajusteement longueur"), M()(ir, "svg.text.property.text.length", "Ajusteement Texte"), M()(ir, "svg.text.property.start.offset", "D\xE9callage d\xE9part"), M()(ir, "fill.picker.popup.title", "S\xE9lection Fragment SVG"), M()(ir, "gradient.editor.drag.message", "Glisser pour d\xE9placer centre."), M()(ir, "draw.manager.tolerance", "Tol\xE9rance"), M()(ir, "pattern.property.title", "Motif"), M()(ir, "pattern.info.popup.title", "Info Motif"), M()(ir, "pattern.info.popup.width", "Largeur"), M()(ir, "pattern.info.popup.height", "Hauteur"), M()(ir, "pattern.info.popup.lineWidth", "Largeur ligne"), M()(ir, "pattern.info.popup.lineHeight", "Hauteur de ligne"), M()(ir, "pattern.info.popup.rotate", "Rotatation"), M()(ir, "pattern.info.popup.blend", "M\xE9lange"), M()(ir, "pattern.info.popup.foreColor", "Avant"), M()(ir, "pattern.info.popup.backColor", "Arri\xE8re"), M()(ir, "stroke.dasharray.editor.add", "Ajout tiret"), M()(ir, "viewport.panning.enable", "You can move the area by holding down space and dragging the screen."), ir), ko_KR: { "app.title": "EASYLOGIC", "app.sample": function(t2, e2, n2) {
            return "".concat(t2, "-").concat(e2, "-").concat(n2);
          }, "app.lang.en_US": "English", "app.lang.ko_KR": "\uD55C\uAD6D\uC5B4", "app.lang.fr_FR": "Fran\xE7ais", "app.label.lang": "\uC5B8\uC5B4", "app.layout.all": "\uC804\uCCB4", "app.layout.css": "CSS", "app.layout.svg": "SVG", "app.label.layout": "\uBA54\uB274\uAD6C\uC131", "app.theme.dark": "\uC5B4\uB450\uC6B4", "app.theme.light": "\uBC1D\uC740", "app.theme.toon": "\uADF8\uB9AC\uAE30", "app.theme.gray": "\uD68C\uC0C9", "app.label.theme": "\uD14C\uB9C8", "app.tab.title.projects": "\uD504\uB85C\uC81D\uD2B8", "app.tab.title.layers": "\uB808\uC774\uC5B4", "app.tab.title.libraries": "\uB77C\uC774\uBE0C\uB7EC\uB9AC", "app.tab.title.components": "\uCEF4\uD3EC\uB10C\uD2B8", "app.tab.title.artboards": "\uC544\uD2B8\uBCF4\uB4DC", "app.tab.title.assets": "\uC5D0\uC14B", "app.tab.title.keyMap": "\uB2E8\uCD95\uD0A4", "app.confirm.message.artboard.items.removeArtboard": "\uC544\uD2B8\uBCF4\uB4DC \uD504\uB9AC\uBDF0\uB97C \uC0AD\uC81C \uD558\uC2DC\uACA0\uC2B5\uB2C8\uAE4C?", "app.confirm.message.custom-component.items.removeCustomComponent": "\uCEF4\uD3EC\uB10C\uD2B8 \uD504\uB9AC\uBDF0\uB97C \uC0AD\uC81C \uD558\uC2DC\uACA0\uC2B5\uB2C8\uAE4C?", "menu.item.download.title": "\uB2E4\uC6B4\uB85C\uB4DC", "menu.item.save.title": "\uC800\uC7A5", "menu.item.export.title": "\uB0B4\uBCF4\uB0B4\uAE30", "menu.item.codepen.title": "CodePen", "menu.item.fullscreen.title": "\uC804\uCCB4\uD654\uBA74", "menu.item.shortcuts.title": "\uB2E8\uCD95\uD0A4", "menu.item.github.title": "Github", "menu.item.learn.title": "\uBC30\uC6B0\uAE30", "menu.item.projects.title": "\uD504\uB85C\uC81D\uD2B8", "project.property.title": "\uD504\uB85C\uC81D\uD2B8", "project.information.property.title": "\uD504\uB85C\uC81D\uD2B8 \uC815\uBCF4", "project.information.property.name": "\uC774\uB984", "project.information.property.description": "\uC124\uBA85", "artboard.property.title": "\uC544\uD2B8\uBCF4\uB4DC", "artboard.property.layout.title.flex": "\uD50C\uB809\uC2A4", "artboard.property.layout.title.grid": "\uADF8\uB9AC\uB4DC", "layer.tree.property.title": "\uB808\uC774\uC5B4", "layer.tree.property.layout.title.flex": "\uD50C\uB809\uC2A4", "layer.tree.property.layout.title.grid": "\uADF8\uB9AC\uB4DC", "alignment.property.title": "\uC815\uB82C", "position.property.title": "\uC704\uCE58", "position.property.X": "X", "position.property.Y": "Y", "size.property.title": "\uD06C\uAE30", "position.property.width": "\uB113\uC774", "position.property.height": "\uB192\uC774", "position.property.rotate": "\uD68C\uC804", "position.property.opacity": "\uD22C\uBA85", "background.color.property.title": "\uD45C\uC2DC", "background.color.property.color": "\uBC30\uACBD\uC0C9", "background.color.property.zindex": "z-index", "background.color.property.blend": "\uBE14\uB80C\uB4DC\uBAA8\uB4DC", "background.color.property.overflow": "\uC624\uBC84\uD50C\uB85C\uC6B0", "background.color.property.overflow.visible": "\uBCF4\uC774\uAE30", "background.color.property.overflow.hidden": "\uC228\uAE30\uAE30", "background.color.property.overflow.scroll": "\uC2A4\uD06C\uB864", "background.color.property.overflow.auto": "\uC790\uB3D9", "blend.normal": "Normal(\uD45C\uC900) \uD63C\uD569\uBAA8\uB4DC", "blend.multiply": "Multiply(\uACF1\uD558\uAE30) \uBAA8\uB4DC", "blend.screen": "Screen(\uC2A4\uD06C\uB9B0) \uBAA8\uB4DC ", "blend.overlay": "Overlay(\uC624\uBC84\uB808\uC774) \uBAA8\uB4DC", "blend.darken": "Darken(\uC5B4\uB461\uAE30) \uBAA8\uB4DC", "blend.lighten": "Lighten(\uBC1D\uAE30) \uBAA8\uB4DC ", "blend.color-dodge": "Color Dodge(\uCEEC\uB7EC \uB2F7\uC9C0) \uBAA8\uB4DC ", "blend.color-burn": "Color Burn(\uCEEC\uB7EC \uBC88) \uBAA8\uB4DC ", "blend.hard-light": "Hard Light(\uD558\uB4DC \uB77C\uC774\uD2B8) \uBAA8\uB4DC ", "blend.soft-light": "Soft Light(\uC18C\uD504\uD2B8 \uB77C\uC774\uD2B8) \uBAA8\uB4DC ", "blend.difference": "Difference(\uCC28\uC774) \uBAA8\uB4DC", "blend.exclusion": "Exclusion(\uC81C\uC678) \uBAA8\uB4DC", "blend.hue": "Hue(\uC0C9\uC870) \uBAA8\uB4DC ", "blend.saturation": "Saturation(\uCC44\uB3C4) \uBAA8\uB4DC", "blend.color": "Color(\uC0C9\uC0C1) \uBAA8\uB4DC", "blend.luminosity": "Luminosity(\uAD11\uB3C4) \uBAA8\uB4DC ", "background.image.property.title": "\uCC44\uC6B0\uAE30", "border.property.title": "\uC678\uACFD\uC120", "border.radius.property.title": "\uB465\uADFC \uC678\uACFD\uC120", "boxshadow.property.title": "\uADF8\uB9BC\uC790", "filter.property.title": "\uD544\uD130", "filter.property.blur": "\uD750\uB9BC(Blur)", "filter.property.grayscale": "\uD68C\uC0C9(GrayScale)", "filter.property.hue-rotate": "\uC0C9\uC870(HueRotate)", "filter.property.invert": "\uBC18\uC804(Invert)", "filter.property.brightness": "\uBC1D\uAE30(Brightness)", "filter.property.contrast": "\uB300\b\uC870(Contrast)", "filter.property.drop-shadow": "\uADF8\uB9BC\uC790(Drop Shadow)", "filter.property.drop-shadow.color": "\uC0C9", "filter.property.drop-shadow.offsetX": "X \uAC04\uACA9", "filter.property.drop-shadow.offsetY": "Y \uAC04\uACA9", "filter.property.drop-shadow.blurRadius": "\uD750\uB9BC", "filter.property.opacity": "\uD22C\uBA85\uB3C4(Opacity)", "filter.property.saturate": "\uCC44\uB3C4(Saturate)", "filter.property.sepia": "\uAC08\uC0C9\uD1A4(Sepia)", "filter.property.svg": "SVG", "font.property.title": "\uD3F0\uD2B8", "font.property.color": "\uC0C9", "font.property.size": "\uD06C\uAE30", "font.property.stretch": "\uBED7\uAE30", "font.property.weight": "\uAD75\uAE30", "font.property.style": "\uC2A4\uD0C0\uC77C", "font.property.family": "\uAE00\uAF34", "font.spacing.property.title": "\uD3F0\uD2B8 \uACF5\uAC04", "font.spacing.property.lineHeight": "\uC904 \uB192\uC774", "font.spacing.property.letterSpacing": "\uAE00\uC790 \uAC04\uACA9", "font.spacing.property.wordSpacing": "\uB2E8\uC5B4 \uAC04\uACA9", "font.spacing.property.indent": "\uB4E4\uC5EC\uC4F0\uAE30", "backdrop.filter.property.title": "\uD6C4\uBA74 \uD544\uD130", "clippath.property.title": "\uD074\uB9BD\uD328\uC2A4", "export.property.title": "\uB0B4\uBCF4\uB0B4\uAE30", "export.property.download": "\uB2E4\uC6B4\uB85C\uB4DC", "iframe.property.title": "\uC544\uC774\uD504\uB808\uC784", "image.property.title": "\uC774\uBBF8\uC9C0", "image.property.origin": "\uC6D0\uBCF8", "image.property.size": "\uD06C\uAE30", "image.property.width": "\uB113\uC774", "image.property.height": "\uB192\uC774", "video.property.title": "\uBE44\uB514\uC624", "video.property.play": "\uC2DC\uC791", "video.property.pause": "\uBA48\uCDA4", "video.property.volume": "\uBCFC\uB968", "video.property.playbackRate": "\uBE60\uB974\uAE30", "video.property.currentTime": "\uD604\uC7AC \uC2DC\uAC04", "video.property.playTime": "\uD50C\uB808\uC774 \uC2DC\uAC04 \uAC04\uACA9", "motion.property.title": "\uBAA8\uC158", "path.data.property.title": "\uD328\uC2A4 \uC815\uBCF4", "polygon.data.property.title": "\uD3F4\uB9AC\uACE4 \uC815\uBCF4", "text.property.title": "\uD14D\uC2A4\uD2B8 \uC2A4\uD0C0\uC77C", "text.property.align": "\uC815\uB82C", "text.property.transform": "\uBCC0\uD615", "text.property.decoration": "\uC7A5\uC2DD", "text.clip.property.title": "\uD14D\uC2A4\uD2B8 \uD074\uB9BD", "text.shadow.property.title": "\uD14D\uC2A4\uD2B8 \uADF8\uB9BC\uC790", "text.fill.property.title": "\uD14D\uC2A4\uD2B8 \uCC44\uC6B0\uAE30", "text.fill.property.fill": "\uCC44\uC6B0\uAE30", "text.fill.property.stroke": "\uC724\uACFD\uC120", "text.fill.property.strokeWidth": "\uC724\uACFD\uC120 \uAD75\uAE30", "transform.property.title": "\uD2B8\uB79C\uC2A4\uD3FC", "transform.origin.property.title": "\uD2B8\uB79C\uC2A4\uD3FC Origin", "transition.property.title": "CSS \uD2B8\uB79C\uC9C0\uC158", "keyframe.property.title": "CSS \uD0A4\uD504\uB808\uC784", "selector.property.title": "CSS \uC140\uB809\uD130", "selector.property.none": "\uC120\uD0DD\uC790 \uC5C6\uC74C", "perspective.property.title": "\uD22C\uC601(perspective)", "perspective.origin.property.title": "\uD22C\uC601 \uC911\uC2EC\uC810", "svg.item.property.title": "\uBCF4\uC774\uAE30", "svg.item.property.isMotionPath": "\uBAA8\uC158 \uD328\uC2A4", "svg.item.property.fill": "\uCC44\uC6B0\uAE30", "svg.item.property.fillOpacity": "\uD22C\uBA85\uB3C4", "svg.item.property.path": "\uD328\uC2A4", "svg.item.property.polygon": "\uD3F4\uB9AC\uACE4", "svg.item.property.totalLength": "\uC804\uCCB4 \uAE38\uC774", "svg.item.property.fillRule": "\uCC44\uC6B0\uAE30 \uADDC\uCE59", "svg.item.property.stroke": "\uC120", "svg.item.property.strokeWidth": "\uC120 \uAD75\uAE30", "svg.item.property.dashArray": "\uC810\uC120 \uAE38\uC774", "svg.item.property.dashOffset": "\uC810\uC120 \uC704\uCE58", "svg.item.property.lineCap": "\uC120 \uBAA8\uC591", "svg.item.property.lineJoin": "\uACB9\uCE5C \uC120", "svg.item.property.filter": "\uD544\uD130", "border.editor.all": "\uC804\uCCB4", "border.editor.width": "\uD06C\uAE30", "border.editor.style": "\uC2A4\uD0C0\uC77C", "border.editor.color": "\uC0C9", "border.editor.top": "\uC704", "border.editor.left": "\uC67C\uCABD", "border.editor.right": "\uC624\uB978\uCABD", "border.editor.bottom": "\uC544\uB798", "border.radius.editor.topLeft": "\uC67C\uCABD \uC704", "border.radius.editor.topRight": "\uC624\uB978\uCABD \uC704", "border.radius.editor.bottomLeft": "\uC67C\uCABD \uC544\uB798", "border.radius.editor.bottomRight": "\uC624\uB978\uCABD \uC544\uB798", "boxshadow.editor.blur": "\uD750\uB9BC", "boxshadow.editor.spread": "\uAE38\uC774", "css.property.editor.properties": "\uC18D\uC131", "offset.path.list.editor.path": "\uD328\uC2A4", "offset.path.list.editor.totalLength": "\uC804\uCCB4 \uAE38\uC774", "offset.path.list.editor.distance": "\uAC70\uB9AC", "offset.path.list.editor.direction": "\uBC29\uD5A5", "offset.path.list.editor.rotate": "\uD68C\uC804", "svgfilter.select.editor.message.create": "\uC0C8\uB85C\uC6B4 SVG Filter \uB97C \uB9CC\uB4DC\uC138\uC694.", "svgfilter.select.editor.message.select": "\uD544\uD130\uB97C \uC120\uD0DD\uD558\uC138\uC694.", "fill.editor.message.click.image": "\uC774\uBBF8\uC9C0\uB97C \uC120\uD0DD\uD558\uACE0 \uC2F6\uC73C\uBA74 \uD504\uB9AC\uBDF0 \uC601\uC5ED\uC744 \uD074\uB9AD\uD558\uC138\uC694.", "fill.editor.message.drag.position": "\uAC00\uC6B4\uB370 \uC704\uCE58\uB97C \uB4DC\uB798\uADF8 \uD574\uBCF4\uC138\uC694.", "fill.editor.x1": "\uC2DC\uC791 X", "fill.editor.x2": "\uB05D X", "fill.editor.y1": "\uC2DC\uC791 Y", "fill.editor.y2": "\uB05D Y", "fill.editor.spread": "\uD655\uC0B0", "fill.editor.offset": "\uC704\uCE58", "fill.editor.cx": "\uC911\uC2EC\uC810 X", "fill.editor.cy": "\uC911\uC2EC\uC810 Y", "fill.editor.r": "\uB05D \uBC18\uC9C0\uB984", "fill.editor.fx": "\uC2DC\uC791 X", "fill.editor.fy": "\uC2DC\uC791 Y", "fill.editor.fr": "\uC2DC\uC791 \uBC18\uC9C0\uB984", "perspective.origin.editor.originX": "\uC911\uC2EC\uC810 X", "perspective.origin.editor.originY": "\uC911\uC2EC\uC810 Y", "path.manager.msg": "\uD3B8\uC9D1\uC744 \uC885\uB8CC\uD560 \uB54C\uB294 ESC \uD0A4\uB098 Enter \uD0A4\uB97C \uB204\uB974\uC138\uC694. \uB610\uB294 \uD654\uBA74\uC744 \uD074\uB9AD\uD558\uC2DC\uBA74 \uB429\uB2C8\uB2E4.", "path.manager.mode.modify": "\uC810 \uD3B8\uC9D1", "path.manager.mode.path": "\uC810 \uCD94\uAC00", "path.manager.mode.transform": "\uBCC0\uD615", "path.manager.mode.reverse": "\uC21C\uC11C\uBCC0\uACBD", "path.manager.mode.flipX": "X\uCD95 \uD68C\uC804", "path.manager.mode.flipY": "Y\uCD95 \uD68C\uC804", "path.manager.mode.flipOrigin": "\uC804\uCCB4 \uD68C\uC804", "colorpicker.popup.title": "\uC0C9\uC0C1 \uC120\uD0DD", "selector.popup.title": "\uC120\uD0DD\uC790 \uC18D\uC131", "selector.popup.selector": "\uC120\uD0DD\uC790", "background.image.position.popup.title": "\uBC30\uACBD \uD328\uD134", "background.image.position.popup.size": "\uD06C\uAE30", "background.image.position.popup.width": "\uB113\uC774", "background.image.position.popup.height": "\uB192\uC774", "background.image.position.popup.repeat": "\uBC18\uBCF5", "background.image.position.popup.blend": "\uBE14\uB80C\uB4DC", "background.image.position.popup.type.repeat": "\uBC18\uBCF5", "background.image.position.popup.type.no-repeat": "\uBC18\uBCF5 \uC548\uD568", "background.image.position.popup.type.repeat-x": "x\uCD95 \uBC18\uBCF5", "background.image.position.popup.type.repeat-y": "y\uCD95 \uBC18\uBCF5", "background.image.position.popup.type.space": "\uACF5\uBC31\uC720\uC9C0", "background.image.position.popup.type.round": "\uBC18\uC62C\uB9BC", "gradient.picker.popup.title": "\uADF8\uB77C\uB514\uC5B8\uD2B8\uC640 \uC774\uBBF8\uC9C0", "image.asset.property.title": "\uC774\uBBF8\uC9C0", "video.asset.property.title": "\uBE44\uB514\uC624", "color.asset.property.title": "\uC0C9", "gradient.asset.property.title": "\uADF8\uB77C\uB514\uC5B8\uD2B8", "pattern.asset.property.title": "\uD328\uD134", "svgfilter.asset.property.title": "SVG \uD544\uD130", "inspector.tab.title.style": "\uC2A4\uD0C0\uC77C \uC18D\uC131", "inspector.tab.title.component": "\uCEF4\uD3EC\uB10C\uD2B8 \uC18D\uC131", "inspector.tab.title.transition": "\uD2B8\uB79C\uC9C0\uC158\uACFC \uC560\uB2C8\uBA54\uC774\uC158 \uC18D\uC131", "inspector.tab.title.asset": "\uC5D0\uC14B \uAD00\uB9AC\uC790", "inspector.tab.title.text": "\uD14D\uC2A4\uD2B8", "inspector.tab.title.code": "\uCF54\uB4DC", "inspector.tab.title.history": "\uAE30\uB85D", "timeline.property.title": "\uD0C0\uC784\uB77C\uC778", "timeline.property.resize": "\uD0C0\uC784\uB77C\uC778 \uB192\uC774\uB97C \uBCC0\uACBD\uD569\uB2C8\uB2E4. \uB4DC\uB798\uADF8 \uD574\uC8FC\uC138\uC694.", "timeline.animation.property.title": "\uC560\uB2C8\uBA54\uC774\uC158", "timeline.play.control.play": "\uD50C\uB808\uC774", "timeline.play.control.pause": "\uBA48\uCDA4", "timeline.play.control.first": "\uCC98\uC74C\uC73C\uB85C", "timeline.play.control.prev": "\uC774\uC804\uC73C\uB85C", "timeline.play.control.next": "\uB2E4\uC74C\uC73C\uB85C", "timeline.play.control.last": "\uB9C8\uC9C0\uB9C9\uC73C\uB85C", "timeline.play.control.direction": "\uBC29\uD5A5", "timeline.play.control.speed": "\uC18D\uB825", "timeline.play.control.repeat": "\uBC18\uBCF5", "timeline.play.control.infinite": "\uBB34\uD55C", "timeline.play.control.normal": "normal", "timeline.play.control.alternate": "alternate", "timeline.play.control.reverse": "reverse", "timeline.play.control.alternate.reverse": "alternate reverse", "timeline.value.editor.value": "\uAC12", "timeline.value.editor.time": "\uC2DC\uAC04", "timeline.value.editor.timing": "\uD0C0\uC774\uBC0D \uD568\uC218", "timeline.value.editor.offset.message": "Enter\uD0A4\uB97C \uC785\uB825\uD558\uBA74 \uC801\uC6A9\uB429\uB2C8\uB2E4.", "svgfilter.popup.title": "SVG \uD544\uD130", "css.item.rotate": "\uD68C\uC804", "css.item.rotateX": "X\uCD95 \uD68C\uC804", "css.item.rotateY": "Y\uCD95 \uD68C\uC804", "css.item.rotateZ": "Z\uCD95 \uD68C\uC804", "css.item.rotate3d": "3D \uD68C\uC804", "css.item.skewX": "X\uCD95 \uB298\uC774\uAE30", "css.item.skewY": "Y\uCD95 \uB298\uC774\uAE30", "css.item.translate": "\uC774\uB3D9", "css.item.translateX": "X\uCD95 \uC774\uB3D9", "css.item.translateY": "Y\uCD95 \uC774\uB3D9", "css.item.translateZ": "Z\uCD95 \uC774\uB3D9", "css.item.translate3d": "3D \uC774\uB3D9", "css.item.perspective": "\uC6D0\uADFC", "css.item.scale": "\uD06C\uAE30\uBCC0\uACBD", "css.item.scaleX": "X\uCD95 \uD06C\uAE30\uBCC0\uACBD", "css.item.scaleY": "Y\uCD95 \uD06C\uAE30\uBCC0\uACBD", "css.item.scaleZ": "Z\uCD95 \uD06C\uAE30\uBCC0\uACBD", "css.item.scale3d": "3D \uD06C\uAE30\uBCC0\uACBD", "css.item.matrix": "\uBCC0\uD658 \uD589\uB82C", "css.item.matrix3d": "3D \uBCC0\uD658 \uD589\uB82C", "animation.property.title": "CSS \uC560\uB2C8\uBA54\uC774\uC158", "animation.property.direction": "\uBC29\uD5A5", "animation.property.play.state": "\uD50C\uB808\uC774 \uC0C1\uD0DC", "animation.property.fill.mode": "\uCC44\uC6B0\uAE30 \uBAA8\uB4DC", "animation.property.delay": "\uB300\uAE30\uC2DC\uAC04", "animation.property.duration": "\uC2DC\uAC04", "animation.property.iteration.count": "\uBC18\uBCF5 \uD69F\uC218", "animation.property.select a keyframe": "\uD0A4\uD504\uB808\uC784\uC744 \uC120\uD0DD\uD574\uC8FC\uC138\uC694", "animation.property.popup.title": "CSS \uC560\uB2C8\uBA54\uC774\uC158", "animation.property.popup.timing.function": "\uD0C0\uC774\uBC0D \uD568\uC218", "animation.property.popup.keyframe": "\uD0A4\uD504\uB808\uC784", "animation.property.popup.direction": "\uBC29\uD5A5", "animation.property.popup.play.state": "\uD50C\uB808\uC774 \uC0C1\uD0DC", "animation.property.popup.fill.mode": "\uCC44\uC6B0\uAE30 \uBAA8\uB4DC", "animation.property.popup.delay": "\uB300\uAE30\uC2DC\uAC04", "animation.property.popup.duration": "\uC2DC\uAC04", "animation.property.popup.iteration": "\uBC18\uBCF5 \uD69F\uC218", "animation.property.popup.normal": "\uC2DC\uAC04\uC21C", "animation.property.popup.reverse": "\uC5ED\uC2DC\uAC04\uC21C", "animation.property.popup.alternate": "\uC655\uBCF5 \uC2DC\uAC04\uC21C", "animation.property.popup.alternate-reverse": "\uC655\uBCF5 \uC5ED\uC2DC\uAC04\uC21C", "animation.property.popup.none": "none", "animation.property.popup.forwards": "forwards", "animation.property.popup.backwards": "backwards", "animation.property.popup.both": "both", "animation.property.popup.Select a keyframe": "\uD0A4\uD504\uB808\uC784\uC744 \uC120\uD0DD\uD574\uC8FC\uC138\uC694.", "keyframe.popup.title": "\uD0A4\uD504\uB808\uC784", "code.view.property.title": "\uCF54\uB4DC\uBDF0", "svg.filter.editor.tab.filter": "\uD544\uD130", "svg.filter.editor.tab.preset": "\uD504\uB9AC\uC14B", "svg.filter.editor.tab.asset": "\uC5D0\uC14B", "svg.filter.editor.GRAPHIC REFERENCES": "\uCC38\uC870 \uADF8\uB798\uD53D", "svg.filter.editor.SOURCES": "\uC6D0\uBCF8", "svg.filter.editor.MODIFIER": "\uC218\uC815", "svg.filter.editor.LIGHTING": "\uBE5B", "svg.filter.editor.COMBINERS": "\uACB0\uD569", "svg.filter.editor.Template": "\uD15C\uD50C\uB9BF", "layout.property.title": "\uB808\uC774\uC544\uC6C3", "layout.property.flex": "\uD50C\uB809\uC2A4 \uBC15\uC2A4", "layout.property.grid": "\uADF8\uB9AC\uB4DC", "layout.property.default": "\uAE30\uBCF8 \uC88C\uD45C", "flex.layout.editor.row": "\uD589", "flex.layout.editor.column": "\uC5F4", "flex.layout.editor.row-reverse": "\uC5ED\uBC29\uD5A5 \uD589", "flex.layout.editor.column-reverse": "\uC5ED\uBC29\uD5A5 \uC5F4", "flex.layout.editor.nowrap": "\uAC10\uC2F8\uC9C0 \uC54A\uAE30", "flex.layout.editor.wrap": "\uAC10\uC2F8\uAE30", "flex.layout.editor.wrap-reverse": "\uC5ED\uBC29\uD5A5 \uAC10\uC2F8\uAE30", "flex.layout.editor.flex-start": "\uC2DC\uC791", "flex.layout.editor.flex-end": "\uB05D", "flex.layout.editor.center": "\uC911\uAC04", "flex.layout.editor.space-between": "\uACF5\uAC04 \uC911\uAC04 \uCC44\uC6C0", "flex.layout.editor.space-around": "\uACF5\uAC04 \uC591\uB05D \uCC44\uC6C0", "flex.layout.editor.baseline": "\uAE30\uBCF8\uC120", "flex.layout.editor.stretch": "\uD3BC\uCE58\uAE30", "flex.layout.editor.direction": "\uBC29\uD5A5", "flex.layout.editor.justify-content": "\uCEE8\uD150\uCE20 \uC870\uC815", "flex.layout.editor.align-items": "\uC544\uC774\uD15C \uC815\uB82C", "flex.layout.editor.align-content": "\uCEE8\uD150\uCE20 \uC815\uB82C", "flex.layout.item.property.title": "\uD50C\uB809\uC2A4 \uC544\uC774\uD15C \uC124\uC815", "flex.layout.item.property.grow": "\uACF5\uAC04 \uBE44\uC728", "flex.layout.item.property.shrink": "\uCD95\uC18C \uBE44\uC728", "flex.layout.item.property.basis": "\uCD08\uAE30 \uD06C\uAE30", "flex.layout.item.property.none": "\uC5C6\uC74C", "flex.layout.item.property.auto": "\uC790\uB3D9", "flex.layout.item.property.value": "\uAC12", "grid.layout.editor.template.columns": "\uC5F4", "grid.layout.editor.column.gap": "\uC5F4 \uAC04\uACA9", "grid.layout.editor.template.rows": "\uD589", "grid.layout.editor.row.gap": "\uD589 \uAC04\uACA9", "grid.box.editor.box.title": "\uC601\uC5ED", "grid.box.editor.type": "\uD0C0\uC785", "grid.box.editor.repeat": "\uBC18\uBCF5", "grid.box.editor.length": "\uAE38\uC774", "grid.box.editor.none": "\uC5C6\uC74C", "grid.box.editor.auto": "\uC790\uB3D9", "grid.box.editor.count": "\uAC1C\uC218", "grid.box.editor.value": "\uD06C\uAE30", "grid.layout.item.property.title": "\uADF8\uB9AC\uB4DC \uC544\uC774\uD15C \uC124\uC815", "grid.layout.item.property.column": "\uC5F4", "grid.layout.item.property.row": "\uD589", "grid.layout.item.property.start": "\uC2DC\uC791", "grid.layout.item.property.End": "\uB05D", "grid.layout.item.property.none": "\uC5C6\uC74C", "grid.layout.item.property.value": "\uAC12", "box.model.property.title": "\uBC15\uC2A4 \uBAA8\uB378", "box.model.property.margin": "\uB9C8\uC9C4", "box.model.property.padding": "\uD328\uB529", "component.items.canvas": "\uCE94\uBC84\uC2A4", "component.items.layer": "\uB808\uC774\uC5B4", "component.items.3dlayer": "3D \uB808\uC774\uC5B4", "component.items.drawing": "\uADF8\uB9AC\uAE30", "component.items.custom": "\uC0AC\uC6A9\uC790 \uC815\uC758 \uCEF4\uD3EC\uB10C\uD2B8", "component.items.chart": "\uCC28\uD2B8", "component.items.plugin": "\uD50C\uB7EC\uADF8\uC778", "svg.text.property.title": "SVG Text \uC2A4\uD0C0\uC77C", "svg.text.property.textarea": "\uD14D\uC2A4\uD2B8 \uC785\uB825", "svg.text.property.size": "\uD3F0\uD2B8 \uD06C\uAE30", "svg.text.property.weight": "\uD3F0\uD2B8 \uAD75\uAE30", "svg.text.property.style": "\uD3F0\uD2B8 \uC2A4\uD0C0\uC77C", "svg.text.property.anchor": "\uD14D\uC2A4\uD2B8 \uC704\uCE58", "svg.text.property.family": "\uD3F0\uD2B8 \uAE00\uAF34", "svg.text.property.length.adjust": "\uAE38\uC774 \uB300\uC751", "svg.text.property.text.length": "\uD14D\uC2A4\uD2B8 \uAE38\uC774", "svg.text.property.start.offset": "\uC2DC\uC791 \uC9C0\uC810", "fill.picker.popup.title": "\uC0C9 \uCC44\uC6B0\uAE30", "gradient.editor.drag.message": "\uB4DC\uB798\uADF8 \uD558\uBA74 \uC911\uC2EC\uC810\uC744 \uC62E\uAE38 \uC218 \uC788\uC2B5\uB2C8\uB2E4.", "draw.manager.tolerance": "\uD3EC\uC778\uD2B8 \uD5C8\uC6A9 \uC624\uCC28", "pattern.property.title": "\uD328\uD134", "pattern.info.popup.title": "\uD328\uD134 \uC815\uBCF4", "pattern.info.popup.width": "\uB113\uC774", "pattern.info.popup.height": "\uB192\uC774", "pattern.info.popup.lineWidth": "\uC120 \uB113\uC774", "pattern.info.popup.lineHeight": "\uC120 \uB192\uC774", "pattern.info.popup.rotate": "\uD68C\uC804", "pattern.info.popup.blend": "\uBE14\uB80C\uB4DC", "pattern.info.popup.foreColor": "\uD328\uD134\uC0C9", "pattern.info.popup.backColor": "\uBC30\uACBD\uC0C9", "stroke.dasharray.editor.add": "\uC810 \uCD94\uAC00", "viewport.panning.enable": "space \uB97C \uB204\uB978\uCC44 \uD654\uBA74\uC744 \uB4DC\uB798\uADF8 \uD558\uBA74 \uC601\uC5ED\uC744 \uC6C0\uC9C1\uC77C \uC218 \uC788\uC2B5\uB2C8\uB2E4." } };
          n(174);
          function cr(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var sr = function(t2) {
            s()(n2, t2);
            var e2 = cr(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("export.property.title");
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection", "refreshContent") + Object(V.DEBOUNCE)(100), value: function() {
              this.refreshShowIsNot("project");
            } }, { key: "getClassName", value: function() {
              return "elf--export-property";
            } }, { key: "getBody", value: function() {
              return "\n        <div class='export-item svg'>\n          <label>SVG</label>\n          <button ref='$svg'>".concat(D.a.archive, " ").concat(this.$i18n("export.property.download"), "</button>\n        </div>\n        <div class='export-item png'>\n          <label>PNG</label>\n          <button ref='$png'>").concat(D.a.archive, " ").concat(this.$i18n("export.property.download"), "</button>\n        </div> \n      ");
            } }, { key: Object(V.CLICK)("$svg"), value: function() {
              this.emit("downloadSVG");
            } }, { key: Object(V.CLICK)("$png"), value: function() {
              this.emit("downloadPNG");
            } }]), n2;
          }($.a), ur = ["blur", "grayscale", "hue-rotate", "invert", "brightness", "contrast", "drop-shadow", "opacity", "saturate", "sepia", "svg"];
          function lr(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var fr = function(t2) {
            s()(n2, t2);
            var e2 = lr(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("filter.property.title");
            } }, { key: "hasKeyframe", value: function() {
              return true;
            } }, { key: "afterRender", value: function() {
              this.show();
            } }, { key: "getKeyframeProperty", value: function() {
              return "filter";
            } }, { key: "getTitleClassName", value: function() {
              return "filter";
            } }, { key: "getBodyClassName", value: function() {
              return "no-padding";
            } }, { key: "getBody", value: function() {
              return "<div class='full filter-property' ref='$body'></div>";
            } }, { key: "getTools", value: function() {
              return '\n      <select ref="$filterSelect">      \n      </select>\n      <button type="button" ref="$add" title="add Filter">'.concat(D.a.add, "</button>\n    ");
            } }, { key: Object(V.CLICK)("$add"), value: function() {
              var t3 = this.refs.$filterSelect.value;
              this.children.$filterEditor.trigger("add", t3);
            } }, { key: Object(V.LOAD)("$filterSelect"), value: function() {
              var t3 = this, e3 = ur.map(function(e4) {
                return { title: t3.$i18n("filter.property.".concat(e4)), value: e4 };
              }), n3 = this.getSVGFilterList();
              return (n3.length ? [].concat(ht()(e3), [{ title: "-------", value: "" }], ht()(n3)) : ht()(e3)).map(function(t4) {
                var e4 = t4.title, n4 = t4.value;
                return "<option value='".concat(n4, "'>").concat(e4, "</option>");
              });
            } }, { key: "getSVGFilterList", value: function() {
              var t3 = this.$selection.currentProject, e3 = [];
              return t3 && (e3 = t3.svgfilters.map(function(t4) {
                var e4 = t4.id;
                return { title: "svg - #".concat(e4), value: e4 };
              })), e3;
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = (this.$selection.current || {}).filter;
              return `
      <div>
        <object refClass="FilterEditor" ref='$filterEditor' key="filter" value='`.concat(t3, "' hide-label='true' onchange='changeFilterEditor' />\n      </div>");
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeFilterEditor"), value: function(t3, e3) {
              this.command("setAttributeForMulti", "change filter", this.$selection.packByValue(M()({}, t3, e3)));
            } }, { key: "editableProperty", get: function() {
              return "filter";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }, { key: Object(V.SUBSCRIBE)("refreshSVGArea") + Object(V.DEBOUNCE)(1e3), value: function() {
              this.load("$filterSelect");
            } }]), n2;
          }($.a);
          function hr(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var pr = function(t2) {
            s()(n2, t2);
            var e2 = hr(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("font.property.title");
            } }, { key: "getClassName", value: function() {
              return "item";
            } }, { key: "afterRender", value: function() {
              this.show();
            } }, { key: "editableProperty", get: function() {
              return "font";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }, { key: "refresh", value: function() {
              var t3 = this.$selection.current;
              t3 && (this.children.$color.setValue(t3.color || "rgba(0, 0, 0, 1)"), this.children.$size.setValue(t3["font-size"]), this.children.$stretch.setValue(t3["font-stretch"] || "0%"), this.children.$style.setValue(t3["font-style"]), this.children.$family.setValue(t3["font-family"]));
            } }, { key: "getBody", value: function() {
              return `
      <div class='property-item animation-property-item'>
        <div class='group'>
          <span class='add-timeline-property' data-property='color'></span>
        </div>
        <object refClass="ColorViewEditor" ref='$color' label='`.concat(this.$i18n("font.property.color"), `' key='color' onchange="changeColor" />
      </div>      
      <div class='property-item animation-property-item'>
        <div class='group'>
          <span class='add-timeline-property' data-property='font-size'></span>
        </div>
        <object refClass="RangeEditor"  
          ref='$size' 
          label='`).concat(this.$i18n("font.property.size"), `' 
          key="font-size" 
          
          onchange="changeRangeEditor" />
      </div>
      <div class='property-item animation-property-item'>
        <div class='group'>
          <span class='add-timeline-property' data-property='font-stretch'></span>
        </div>
        <object refClass="RangeEditor"  
          ref='$stretch' 
          label='`).concat(this.$i18n("font.property.stretch"), `' 
          key="font-stretch" 
          
          units='%',
          onchange="changeRangeEditor" />
      </div>      
 
      <div class='property-item animation-property-item'>
        <div class='group'>
          <span class='add-timeline-property' data-property='font-weight'></span>
        </div>
        <object refClass="NumberRangeEditor"  
          ref='$weightRange' 
          label='`).concat(this.$i18n("font.property.weight"), `' 
          key='font-weight' 
         
          value="400" 
          min="100"
          max="900"
          step="1"
          calc="false"
          unit="number" 
          onchange="changeRangeEditor" 
          />
      </div>              
      <div class='property-item'>
        <object refClass="SelectIconEditor" 
          ref='$style' 
          label='`).concat(this.$i18n("font.property.style"), `' 
          key="font-style"
          compact="true"
          options=`).concat(this.variable(["normal", "italic"]), `
          icons='title,italic'
          onchange="changeRangeEditor" />
      </div>      

      <div class='property-item'>
        <object refClass="FontSelectEditor"  
          ref='$family' 
          icon="true"
          label='`).concat(this.$i18n("font.property.family"), `' 
          key="font-family" 
          onchange="changeRangeEditor" 
        />
      </div> 
         
    `);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeColor"), value: function(t3, e3) {
              this.trigger("changeRangeEditor", t3, e3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeRangeEditor"), value: function(t3, e3) {
              this.command("setAttributeForMulti", "change font attribute", this.$selection.packByValue(M()({}, t3, e3)));
            } }]), n2;
          }($.a);
          function dr(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var vr = function(t2) {
            s()(n2, t2);
            var e2 = dr(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("font.spacing.property.title");
            } }, { key: "editableProperty", get: function() {
              return "font-spacing";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }, { key: "refresh", value: function() {
              var t3 = this.$selection.current;
              t3 && (this.children.$lineHeight.setValue(t3["line-height"] || F.a.number(1)), this.children.$letter.setValue(t3["letter-spacing"] || "0px"), this.children.$word.setValue(t3["word-spacing"] || "0px"), this.children.$indent.setValue(t3["text-indent"] || "0px"));
            } }, { key: "getBody", value: function() {
              return `

    <div class='property-item animation-property-item'>
      <div class='group'>
        <span class='add-timeline-property' data-property='line-height'></span>
      </div>
      <object refClass="RangeEditor"  
        ref='$lineHeight' 
        label='`.concat(this.$i18n("font.spacing.property.lineHeight"), `' 
        key="line-height" 
        min="0"
        max="10"
        step="0.01"
        units=",px,%,em"
        onchange="changeRangeEditor" />
    </div>       
      <div class='property-item animation-property-item'>
        <div class='group'>
          <span class='add-timeline-property' data-property='letter-spacing'></span>
        </div>
        <object refClass="RangeEditor"  ref='$letter' label='`).concat(this.$i18n("font.spacing.property.letterSpacing"), `' key="letter-spacing" min="-100" max="100" onchange="changeRangeEditor" />
      </div>

      <div class='property-item animation-property-item'>
        <div class='group'>
          <span class='add-timeline-property' data-property='word-spacing'></span>
        </div>
        <object refClass="RangeEditor"  ref='$word' label='`).concat(this.$i18n("font.spacing.property.wordSpacing"), `' key="word-spacing"  min="-100" max="100" onchange="changeRangeEditor" />
      </div>

      <div class='property-item animation-property-item'>
        <div class='group'>
          <span class='add-timeline-property' data-property='text-indent'></span>
        </div>      
        <object refClass="RangeEditor"  ref='$indent' label='`).concat(this.$i18n("font.spacing.property.indent"), `' key="text-indent"  min="-100" max="100" onchange="changeRangeEditor" />
      </div>      
    `);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeRangeEditor"), value: function(t3, e3) {
              e3.unit === "" && (e3 = F.a.number(e3.value)), this.command("setAttributeForMulti", "change font spacing : ".concat(t3), this.$selection.packByValue(M()({}, t3, e3)));
            } }]), n2;
          }($.a), yr = n(37), gr = n(38), mr = n(54);
          n(175);
          function br(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function kr(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Or = ["static-gradient", "linear-gradient", "radial-gradient", "image-resource"], xr = { "image-resource": D.a.photo }, jr = { top: { x1: "0%", y1: "100%", x2: "0%", y2: "0%" }, "top left": { x1: "100%", y1: "100%", x2: "0%", y2: "0%" }, "top right": { x1: "0%", y1: "100%", x2: "100%", y2: "0%" }, left: { x1: "100%", y1: "0%", x2: "0%", y2: "0%" }, right: { x1: "0%", y1: "0%", x2: "100%", y2: "0%" }, bottom: { x1: "0%", y1: "0%", x2: "0%", y2: "100%" }, "bottom left": { x1: "100%", y1: "0%", x2: "0%", y2: "100%" }, "bottom right": { x1: "0%", y1: "0%", x2: "100%", y2: "100%" } }, Sr = ["x1", "y1", "x2", "y2", "cx", "cy", "r", "fx", "fy", "fr", "spreadMethod", "patternUnits", "patternWidth", "patternHeight", "imageX", "imageY", "imageWidth", "imageHeight"], Pr = ["x1", "y1", "x2", "y2", "cx", "cy", "r", "fx", "fy", "fr", "patternWidth", "patternHeight", "imageX", "imageY", "imageWidth", "imageHeight"], wr = function(t2) {
            s()(n2, t2);
            var e2 = kr(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { cachedRect: null, index: +(this.props.index || 0), value: this.props.value, image: gr.a.parseImage(this.props.value || "transparent") || mr.a.create() };
            } }, { key: "setValue", value: function(t3) {
              this.setState({ cachedRect: null, image: gr.a.parseImage(t3) }, false), this.refresh(), this.parent.trigger("changeTabType", this.state.image.type);
            } }, { key: "template", value: function() {
              var t3 = this, e3 = this.state.image, n3 = (e3 = e3 || {}).type || "static-gradient";
              return n3 === "url" && (n3 = "image-resource"), "\n        <div class='elf--fill-editor' data-selected-editor='".concat(n3, "'>\n            <div class='gradient-preview'>\n              <div class='gradient-view' ref='$gradientView'>\n                <div class='drag-pointer' ref='$dragPosition'></div>\n              </div>\n              <svg class='pointer-draw' ref='$pointerDrawArea'>\n                <line data-type='line' ref='$line' />\n                <circle r='5' data-type='start' ref='$startPoint' />\n                <circle r='5' data-type='end' ref='$endPoint' />\n                <circle r='5' data-type='center' ref='$centerPoint' />\n                <circle r='5' data-type='f' ref='$fPoint' />\n              </svg>              \n              <div class='preset-position'>\n                <div data-value='top' title='top'>").concat(D.a.chevron_right, "</div>\n                <div data-value='right' title='right'>").concat(D.a.chevron_right, "</div>\n                <div data-value='left' title='left'>").concat(D.a.chevron_right, "</div>\n                <div data-value='bottom' title='bottom'>").concat(D.a.chevron_right, "</div>\n                <div data-value='top left' title='top left'>").concat(D.a.chevron_right, "</div>\n                <div data-value='top right' title='top right'>").concat(D.a.chevron_right, "</div>\n                <div data-value='bottom left' title='bottom left'>").concat(D.a.chevron_right, "</div>\n                <div data-value='bottom right' title='bottom right'>").concat(D.a.chevron_right, `</div>                
              </div>
              <div data-editor='image-loader'>
                <input type='file' accept="image/*" ref='$file' />
              </div>              
            </div>
            <div class="picker-tab">
              <div class="picker-tab-list" ref="$tab">
                `).concat(Or.map(function(t4) {
                return "<span class='picker-tab-item ".concat(t4, "' data-editor='").concat(t4, "'><span class='icon'>").concat(xr[t4] || "", "</span></span>");
              }).join(""), `
              </div>
            </div>
            <div class='gradient-steps' data-editor='gradient'>
                <div class="hue-container" ref="$back"></div>            
                <div class="hue" ref="$steps">
                    <div class='step-list' ref="$stepList" ></div>
                </div>
            </div>
            <div class='tools' data-editor='tools'>
              <object refClass="RangeEditor"  label='`).concat(this.$i18n("fill.editor.offset"), `' ref='$range' key='length' onchange='changeColorStepOffset' />
            </div>
            <div class='sub-editor' ref='$subEditor'> 
                <div data-editor='spreadMethod'>
                  <object refClass="SelectIconEditor" label='`).concat(this.$i18n("fill.editor.spread"), `' ref='$spreadMethod' value="pad" options='pad,reflect,repeat' key='spreadMethod' onchange='changeKeyValue' />
                </div>  
                <div data-editor='patternUnits'>
                  <object refClass="SelectEditor"  label='Pattern' ref='$patternUnits' options='userSpaceOnUse' key='patternUnits' onchange='changeKeyValue' />
                </div>                  
                `).concat(Pr.map(function(n4) {
                var r2 = t3.$i18n("fill.editor." + n4);
                return "\n                    <div data-editor='".concat(n4, `'>
                      <object refClass="RangeEditor"  label='`).concat(r2, "' ref='$").concat(n4, `' value="`).concat(t3.getImageFieldValue(e3, n4), `" key='`).concat(n4, "' onchange='changeKeyValue' />\n                    </div>\n                  ");
              }).join(""), "\n                                                                                                                                \n            </div>            \n        </div>\n      ");
            } }, { key: "getImageFieldValue", value: function(t3, e3) {
              var n3 = t3[e3];
              if (Object(X.isUndefined)(n3))
                switch (e3) {
                  case "cx":
                  case "cy":
                  case "r":
                  case "fx":
                  case "fy":
                    return "50%";
                  case "x1":
                  case "y1":
                  case "y2":
                  case "fr":
                  case "imageX":
                  case "imageY":
                    return "0%";
                  case "x2":
                  case "patternWidth":
                  case "patternHeight":
                  case "imageWidth":
                  case "imageHeight":
                    return "100%";
                }
              return n3;
            } }, { key: Object(V.CHANGE)("$file"), value: function(t3) {
              var e3 = this;
              this.$selection.currentProject && ht()(t3.target.files).forEach(function(t4) {
                e3.emit("updateImageAssetItem", t4, function(t5) {
                  e3.trigger("setImageUrl", t5);
                });
              });
            } }, { key: Object(V.CLICK)("$el .preset-position [data-value]"), value: function(t3) {
              var e3 = t3.$dt.attr("data-value");
              jr[e3] && (this.state.image.reset(jr[e3]), this.refresh(), this.refreshFieldValue(), this.updateData());
            } }, { key: "refreshFieldValue", value: function() {
              this.children.$x1.setValue(this.state.image.x1), this.children.$y1.setValue(this.state.image.y1), this.children.$x2.setValue(this.state.image.x2), this.children.$y2.setValue(this.state.image.y2), this.children.$cx.setValue(this.state.image.cx), this.children.$cy.setValue(this.state.image.cy), this.children.$r.setValue(this.state.image.r), this.children.$fx.setValue(this.state.image.fx), this.children.$fy.setValue(this.state.image.fy), this.children.$fr.setValue(this.state.image.fr), this.children.$spreadMethod.setValue(this.state.image.spreadMethod), this.children.$patternUnits.setValue(this.state.image.patternUnits), this.children.$patternWidth.setValue(this.state.image.patternWidth), this.children.$patternHeight.setValue(this.state.image.patternHeight), this.children.$imageX.setValue(this.state.image.imageX), this.children.$imageY.setValue(this.state.image.imageY), this.children.$imageWidth.setValue(this.state.image.imageWidth), this.children.$imagenHeight.setValue(this.state.image.imageHeight);
            } }, { key: "getDrawAreaRect", value: function() {
              return { width: 224, height: 150 };
            } }, { key: "getFieldValue", value: function(t3) {
              return F.a.parse(this.getImageFieldValue(this.state.image, t3));
            } }, { key: Object(V.BIND)("$line"), value: function() {
              var t3 = this.getDrawAreaRect(), e3 = t3.width, n3 = t3.height;
              return { x1: this.getFieldValue("x1").toPx(e3), y1: this.getFieldValue("y1").toPx(n3), x2: this.getFieldValue("x2").toPx(e3), y2: this.getFieldValue("y2").toPx(n3) };
            } }, { key: Object(V.BIND)("$startPoint"), value: function() {
              var t3 = this.getDrawAreaRect(), e3 = t3.width, n3 = t3.height;
              return { cx: this.getFieldValue("x1").toPx(e3), cy: this.getFieldValue("y1").toPx(n3) };
            } }, { key: Object(V.BIND)("$endPoint"), value: function() {
              var t3 = this.getDrawAreaRect(), e3 = t3.width, n3 = t3.height;
              return { cx: this.getFieldValue("x2").toPx(e3), cy: this.getFieldValue("y2").toPx(n3) };
            } }, { key: Object(V.BIND)("$centerPoint"), value: function() {
              var t3 = this.getDrawAreaRect(), e3 = t3.width, n3 = t3.height;
              return { cx: this.getFieldValue("cx").toPx(e3), cy: this.getFieldValue("cy").toPx(n3) };
            } }, { key: Object(V.BIND)("$fPoint"), value: function() {
              var t3 = this.getDrawAreaRect(), e3 = t3.width, n3 = t3.height;
              return { cx: this.getFieldValue("fx").toPx(e3), cy: this.getFieldValue("fy").toPx(n3) };
            } }, { key: Object(V.POINTERSTART)("$pointerDrawArea circle[data-type]") + Object(V.MOVE)("moveDragPointer"), value: function(t3) {
              this.containerRect = this.refs.$pointerDrawArea.rect(), this.startXY = t3.xy, this.type = t3.$dt.attr("data-type"), this.state.cachedRect = null;
            } }, { key: "getRectRate", value: function(t3, e3, n3) {
              var r2 = t3.width, i2 = t3.height, a2 = t3.x, o2 = t3.y;
              return a2 > e3 ? e3 = a2 : a2 + r2 < e3 && (e3 = a2 + r2), o2 > n3 ? n3 = o2 : o2 + i2 < n3 && (n3 = o2 + i2), { left: F.a.percent((e3 - a2) / r2 * 100), top: F.a.percent((n3 - o2) / i2 * 100) };
            } }, { key: "moveDragPointer", value: function(t3, e3) {
              var n3 = this.startXY.x + t3, r2 = this.startXY.y + e3, i2 = this.getRectRate(this.containerRect, n3, r2), a2 = i2.left, o2 = i2.top;
              this.type == "start" ? (this.state.image.reset({ x1: a2, y1: o2 }), this.children.$x1.setValue(a2), this.children.$y1.setValue(o2), this.bindData("$startPoint"), this.bindData("$line")) : this.type == "end" ? (this.state.image.reset({ x2: a2, y2: o2 }), this.children.$x2.setValue(a2), this.children.$y2.setValue(o2), this.bindData("$endPoint"), this.bindData("$line")) : this.type == "center" ? (this.state.image.reset({ cx: a2, cy: o2 }), this.children.$cx.setValue(a2), this.children.$cy.setValue(o2), this.bindData("$centerPoint")) : this.type == "f" && (this.state.image.reset({ fx: a2, fy: o2 }), this.children.$fx.setValue(a2), this.children.$fy.setValue(o2), this.bindData("$fPoint")), this.bindData("$gradientView"), this.updateData();
            } }, { key: Object(V.CLICK)("$tab .picker-tab-item"), value: function(t3) {
              var e3 = this, n3 = t3.$dt.attr("data-editor");
              this.$el.attr("data-selected-editor", n3), this.parent.trigger("changeTabType", n3);
              var r2 = n3 === "image-resource" ? this.state.image.url : this.state.url, i2 = {};
              Sr.forEach(function(t4) {
                i2[t4] = e3.children["$".concat(t4)].getValue();
              }), this.state.image = gr.a.changeImageType(function(t4) {
                for (var e4 = 1; e4 < arguments.length; e4++) {
                  var n4 = arguments[e4] != null ? arguments[e4] : {};
                  e4 % 2 ? br(Object(n4), true).forEach(function(e5) {
                    M()(t4, e5, n4[e5]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(n4)) : br(Object(n4)).forEach(function(e5) {
                    Object.defineProperty(t4, e5, Object.getOwnPropertyDescriptor(n4, e5));
                  });
                }
                return t4;
              }({ type: n3, url: r2, colorsteps: this.state.image.colorsteps || [] }, i2)), this.refresh(), this.updateData(), this.sendMessage();
            } }, { key: "sendMessage", value: function(t3) {
              (t3 = this.$el.attr("data-selected-editor")) === "linear-gradient" ? this.emit("addStatusBarMessage", "") : t3 === "url" || t3 === "image-resource" ? this.emit("addStatusBarMessage", this.$i18n("fill.editor.message.click.image")) : this.emit("addStatusBarMessage", this.$i18n("fill.editor.message.drag.position"));
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeKeyValue"), value: function(t3, e3) {
              this.state.image.reset(M()({}, t3, e3)), this.bindData("$gradientView"), this.bindData("$line"), this.bindData("$startPoint"), this.bindData("$endPoint"), this.bindData("$centerPoint"), this.bindData("$fPoint"), this.updateData();
            } }, { key: Object(V.SUBSCRIBE)("changeColorStepOffset"), value: function(t3, e3) {
              this.currentStep && (this.currentStep.percent = e3.value, this.state.image.sortColorStep(), this.refresh(), this.updateData());
            } }, { key: Object(V.CLICK)("$back"), value: function(t3) {
              var e3 = this.refs.$stepList.rect(), n3 = e3.x, r2 = e3.right, i2 = t3.xy.x;
              i2 < n3 ? i2 = n3 : i2 > r2 && (i2 = r2);
              var a2 = (i2 - n3) / e3.width * 100;
              this.state.image.insertColorStep(a2), this.state.image.sortColorStep(), this.refresh(), this.updateData();
            } }, { key: Object(V.BIND)("$el"), value: function() {
              var t3 = this.state.image.type;
              return t3 === "url" && (t3 = "image-resource"), this.parent.trigger("changeTabType", t3), { "data-selected-editor": t3 };
            } }, { key: Object(V.BIND)("$stepList"), value: function() {
              return { "data-selected-index": this.state.index.toString(), style: { "background-image": this.getLinearGradient() } };
            } }, { key: "fillId", get: function() {
              return this.id + "fill";
            } }, { key: Object(V.BIND)("$gradientView"), value: function() {
              return { innerHTML: '\n        <svg x="0" y="0" width="100%" height="100%">\n          <defs>\n            '.concat(this.state.image.toSVGString(this.fillId), '\n          </defs>\n          <rect x="0" y="0" width="100%" height="100%" fill="').concat(this.state.image.toFillValue(this.fillId), '" />\n        </svg>\n      ') };
            } }, { key: Object(V.LOAD)("$stepList"), value: function() {
              var t3 = this;
              return (this.state.image.colorsteps || []).map(function(e3, n3) {
                var r2 = t3.$selection.isSelectedColorStep(e3.id) ? "selected" : "";
                return "\n      <div class='step ".concat(r2, "' data-id='").concat(e3.id, "' style='left: ").concat(e3.percent, `%;'>
        <div class='color-view' style="background-color: `).concat(e3.color, `"></div>
        <div class='arrow' style="background-color: `).concat(e3.color, '"></div>\n      </div>');
              });
            } }, { key: "removeStep", value: function(t3) {
              this.state.image.removeColorStep(t3), this.refresh(), this.updateData();
            } }, { key: "selectStep", value: function(t3) {
              var e3 = this;
              this.state.id = t3, this.$selection.selectColorStep(t3), this.state.image.colorsteps && (this.currentStep = this.state.image.colorsteps.find(function(t4) {
                return e3.$selection.isSelectedColorStep(t4.id);
              }), this.children.$range.setValue(F.a.percent(this.currentStep.percent)), this.parent.trigger("selectColorStep", this.currentStep.color)), this.refresh();
            } }, { key: Object(V.POINTERSTART)("$stepList .step") + Object(V.MOVE)(), value: function(t3) {
              var e3 = t3.$dt.attr("data-id");
              if (t3.altKey)
                return this.removeStep(e3), false;
              this.selectStep(e3), this.startXY = t3.xy, this.cachedStepListRect = this.refs.$stepList.rect();
            } }, { key: "getStepListRect", value: function() {
              return this.cachedStepListRect;
            } }, { key: "move", value: function(t3, e3) {
              var n3 = this.getStepListRect(), r2 = n3.x, i2 = n3.right, a2 = this.startXY.x + t3;
              a2 < r2 ? a2 = r2 : a2 > i2 && (a2 = i2);
              var o2 = (a2 - r2) / n3.width * 100;
              this.currentStep.percent = o2, this.children.$range.setValue(F.a.percent(o2)), this.state.image.sortColorStep(), this.refresh(), this.updateData();
            } }, { key: "refresh", value: function() {
              this.load();
            } }, { key: "getLinearGradient", value: function() {
              var t3 = this.state.image;
              return "linear-gradient(to right, ".concat(yr.a.toColorString(t3.colorsteps), ")");
            } }, { key: Object(V.SUBSCRIBE)("setColorStepColor"), value: function(t3) {
              this.state.image.type === "static-gradient" ? (this.state.image.setColor(t3), this.refresh(), this.updateData()) : this.currentStep && (this.currentStep.color = t3, this.refresh(), this.updateData());
            } }, { key: Object(V.SUBSCRIBE)("setImageUrl"), value: function(t3) {
              this.state.image && (this.state.url = t3, this.state.image.reset({ url: t3 }), this.refresh(), this.updateData());
            } }, { key: "updateData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.setState(t3, false), this.parent.trigger(this.props.onchange, this.state.image.toString());
            } }]), n2;
          }(J.a), Rr = n(53), Cr = n.n(Rr);
          n(176);
          function Er(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function $r(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Er(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Er(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Ir(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Tr, Br = function(t2) {
            s()(n2, t2);
            var e2 = Ir(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("gradient.picker.popup.title");
            } }, { key: "initialize", value: function() {
              A()(h()(n2.prototype), "initialize", this).call(this), this.selectedTab = "static-gradient";
            } }, { key: "getClassName", value: function() {
              return "fill-picker-popup";
            } }, { key: "getBody", value: function() {
              return `
      <div class="elf--gradient-picker-popup" ref='$body' data-selected-editor=''>
        <div class='box'>
          <div ref='$gradientEditor'></div>
        </div>
        <div class='box'>
          <div class='colorpicker'>
            <object refClass="EmbedColorPicker" ref='$color' onchange='changeColor' />                    
          </div>
          <div class='assetpicker'>
            <object refClass="ImageAssetPicker" ref='$asset' onchange='changeImageUrl' />
          </div>
        </div>
      </div>
     
    `;
            } }, { key: Object(V.SUBSCRIBE)("changeTabType"), value: function(t3) {
              this.refs.$body.attr("data-selected-editor", t3);
            } }, { key: "getColorString", value: function() {
              var t3 = "";
              return this.state.image instanceof yr.a && (t3 = this.state.image.getColorString()), t3;
            } }, { key: "getCurrentColor", value: function() {
              return this.state.image.colorsteps[this.state.selectColorStepIndex || 0].color;
            } }, { key: Object(V.LOAD)("$gradientEditor"), value: function() {
              return '<object refClass="GradientEditor" \n      ref="$g" \n      value="'.concat(this.state.image, '" \n      selectedIndex="').concat(this.state.selectColorStepIndex, `" 
      onchange='changeGradientEditor'
    />`);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeGradientEditor"), value: function(t3) {
              this.state.image = t3, this.updateData();
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeColor"), value: function(t3) {
              this.children.$g.trigger("setColorStepColor", t3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeImageUrl"), value: function(t3) {
              this.children.$g.trigger("setImageUrl", t3);
            } }, { key: Object(V.SUBSCRIBE)("showGradientPickerPopup"), value: function(t3, e3) {
              t3.changeEvent = t3.changeEvent || "changeFillPopup", t3.image = t3.gradient, t3.params = e3, this.setState(t3), this.show(432);
            } }, { key: Object(V.SUBSCRIBE)("selectColorStep"), value: function(t3) {
              this.children.$color.setValue(t3);
            } }, { key: Object(V.SUBSCRIBE)("changeColorStep"), value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.state.image.reset($r({}, t3)), this.updateData();
            } }, { key: "updateData", value: function() {
              this.state.instance.trigger(this.state.changeEvent, this.state.image, this.state.params);
            } }]), n2;
          }(tt);
          function Mr(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Vr(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Mr(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Mr(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Dr(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Lr = function(t2) {
            s()(n2, t2);
            var e2 = Dr(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("fill.picker.popup.title");
            } }, { key: "initState", value: function() {
              return { image: mr.a.create() };
            } }, { key: "initialize", value: function() {
              A()(h()(n2.prototype), "initialize", this).call(this), this.selectedTab = "static-gradient";
            } }, { key: "getClassName", value: function() {
              return "fill-picker-popup";
            } }, { key: "getBody", value: function() {
              var t3 = this;
              return Object(X.html)(Tr || (Tr = Cr()([`
      <div class="elf--gradient-picker-popup" ref='$body' data-selected-editor=''>
        <div class='box'>
          <div ref='$gradientEditor'></div>
        </div>
        <div class='box'>
          <div class='colorpicker'>
            <object refClass="EmbedColorPicker" ref='$color' onchange=`, ` />                    
          </div>
          <div class='assetpicker'>
            <object refClass="ImageAssetPicker" ref='$asset' onchange='changeImageUrl' />
          </div>
        </div>
      </div>
     
    `])), this.subscribe(function(e3) {
                t3.trigger("changeColor", e3);
              }));
            } }, { key: Object(V.SUBSCRIBE)("changeTabType"), value: function(t3) {
              this.refs.$body.attr("data-selected-editor", t3);
            } }, { key: "getColorString", value: function() {
              var t3 = "";
              return this.state.image instanceof yr.a && (t3 = this.state.image.getColorString()), t3;
            } }, { key: "getCurrentColor", value: function() {
              return this.state.image.colorsteps[this.state.selectColorStepIndex || 0].color;
            } }, { key: Object(V.LOAD)("$gradientEditor"), value: function() {
              return '<object refClass="FillEditor" \n      ref="$g" \n      value="'.concat(this.state.image, '" \n      selectedIndex="').concat(this.state.selectColorStepIndex, `" 
      onchange='changeFillEditor'
    />`);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeFillEditor"), value: function(t3) {
              this.state.image = t3, this.updateData();
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeColor"), value: function(t3) {
              this.children.$g.trigger("setColorStepColor", t3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeImageUrl"), value: function(t3) {
              this.children.$g.trigger("setImageUrl", t3);
            } }, { key: Object(V.SUBSCRIBE)("showFillPickerPopup"), value: function(t3, e3) {
              this.show(240), t3.changeEvent = t3.changeEvent || "changeFillPopup", t3.params = e3, this.trigger("selectColorStep", t3.image.colorsteps[0].color), this.setState(t3);
            } }, { key: Object(V.SUBSCRIBE)("selectColorStep"), value: function(t3) {
              this.children.$color.setValue(t3);
            } }, { key: Object(V.SUBSCRIBE)("changeColorStep"), value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.state.image.reset(Vr({}, t3)), this.updateData();
            } }, { key: "updateData", value: function() {
              this.state.instance.trigger(this.state.changeEvent, this.state.image, this.state.params);
            } }]), n2;
          }(tt);
          n(177);
          function Ar(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Fr = function(t2) {
            s()(n2, t2);
            var e2 = Ar(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { index: this.props.index, label: this.props.label, simple: this.props.simple === "true", image: gr.a.parseImage(this.props.image || "transparent") };
            } }, { key: "fillId", get: function() {
              return this.id + "fill";
            } }, { key: "updateData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.setState(t3, false), this.modifyValue(t3);
            } }, { key: "modifyValue", value: function(t3) {
              this.parent.trigger(this.props.onchange, this.props.key, this.getValue(), this.state.index);
            } }, { key: "getValue", value: function() {
              return this.state.image.toString();
            } }, { key: "setValue", value: function(t3) {
              this.setState({ image: gr.a.parseImage(t3) });
            } }, { key: Object(V.BIND)("$fillView"), value: function() {
              var t3 = this.state.image;
              return t3 ? { innerHTML: t3.toSVGString(this.fillId) } : { innerHTML: "" };
            } }, { key: Object(V.BIND)("$fillColor"), value: function() {
              var t3 = this.state.image;
              return t3 ? { fill: t3.toFillValue(this.fillId) } : { fill: "transparent" };
            } }, { key: Object(V.BIND)("$colors"), value: function() {
              var t3 = this.state.image;
              if (!t3)
                return { fill: "transparent" };
              var e3 = t3.type != "url" ? "".concat(t3.colorsteps[0].color) : "transparent";
              return (t3.type.includes("linear") || t3.type.includes("radial")) && (e3 = t3.colorsteps.map(function(t4) {
                return "<span class='color' style='background-color: ".concat(t4.color, "' title='").concat(t4.color, "'></span>");
              }).join("")), { innerHTML: "<div> ".concat(e3, " </div>") };
            } }, { key: "template", value: function() {
              var t3 = this.state, e3 = t3.label, n3 = (t3.removable, t3.simple);
              return "\n            <div class='elf--fill-single-editor ".concat(e3 ? "has-label" : "", "'>\n                ").concat(e3 ? "<label>".concat(e3, "</label>") : "", `            
                <div class='preview' ref='$preview'>
                    <div class='mini-view'>

                        <svg class='color-view' ref='$miniView'>
                            <defs ref='$fillView'></defs>
                            <rect x="0" y="0" width="100%" height="100%" ref='$fillColor' fill='url(#`).concat(this.fillId, ")' />\n                        </svg>\n                    </div>\n                </div>\n                <div class='colors ").concat(n3 ? "simple" : "", "' ref='$colors'></div>\n            </div>\n        ");
            } }, { key: Object(V.CLICK)("$preview"), value: function(t3) {
              this.viewGradientPopup();
            } }, { key: "viewGradientPopup", value: function() {
              this.emit("showFillPickerPopup", { instance: this, changeEvent: "changeFillSingle", image: this.state.image });
            } }, { key: Object(V.SUBSCRIBE)("changeFillSingle"), value: function(t3, e3) {
              this.updateData({ image: gr.a.parseImage(t3) }), this.refresh();
            } }]), n2;
          }(J.a);
          n(178);
          function zr(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Nr(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var _r = function(t2) {
            s()(n2, t2);
            var e2 = Nr(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { index: this.props.index, image: this.props.image, color: "rgba(0, 0, 0, 1)" };
            } }, { key: "updateData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.setState(t3, false), this.modifyValue(t3);
            } }, { key: "modifyValue", value: function(t3) {
              this.parent.trigger(this.props.onchange, this.props.key, t3, this.state.index);
            } }, { key: "setValue", value: function(t3) {
              this.setState(function(t4) {
                for (var e3 = 1; e3 < arguments.length; e3++) {
                  var n3 = arguments[e3] != null ? arguments[e3] : {};
                  e3 % 2 ? zr(Object(n3), true).forEach(function(e4) {
                    M()(t4, e4, n3[e4]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(n3)) : zr(Object(n3)).forEach(function(e4) {
                    Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(n3, e4));
                  });
                }
                return t4;
              }({}, t3));
            } }, { key: Object(V.BIND)("$miniView"), value: function() {
              return { style: { "background-image": this.state.image, "background-size": "cover", color: this.props.color } };
            } }, { key: "template", value: function() {
              return `
            <div class='elf--gradient-single-editor'>
                <div class='preview' ref='$preview'>
                    <div class='mini-view'>
                        <div class='color-view' style="background-color: `.concat(this.state.color, `" ref='$miniView'></div>
                    </div>
                </div>
            </div>
        `);
            } }, { key: Object(V.CLICK)("$preview"), value: function(t3) {
              this.viewGradientPopup();
            } }, { key: "viewGradientPopup", value: function() {
              this.emit("showGradientPickerPopup", { instance: this, changeEvent: "changeGradientSingle", gradient: this.state.image });
            } }, { key: Object(V.SUBSCRIBE)("changeGradientSingle"), value: function(t3, e3) {
              this.updateData({ image: t3 }), this.refresh();
            } }]), n2;
          }(J.a), Ur = ["0deg", "45deg", "90deg"], Gr = { title: "Linear", key: "linear", execute: function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 42;
            return Object(X.repeat)(t2).map(function(t3) {
              return { gradient: "linear-gradient(".concat(X.randomItem.apply(void 0, Ur), ", ").concat(kt.a.createColorStep(2), ")") };
            });
          } }, Hr = { title: "Radial", key: "radial", execute: function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 42;
            return Object(X.repeat)(t2).map(function(t3) {
              return { gradient: "radial-gradient(".concat("circle", ", ").concat(kt.a.createColorStep(2), ")") };
            });
          } }, Kr = n(44), Yr = ["0deg", "45deg", "90deg"], Xr = ["0deg", "45deg", "90deg"], Wr = [Gr, { title: "Random Linear", key: "random-linear", execute: function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 42;
            return Object(X.repeat)(t2).map(function(t3) {
              return { gradient: "linear-gradient(".concat(X.randomItem.apply(void 0, Yr), ", ").concat(kt.a.createColorStep(10), ")") };
            });
          } }, { title: "Repeat Linear", key: "repeat-linear", execute: function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 42;
            return Object(X.repeat)(t2).map(function(t3) {
              return { gradient: "repeating-linear-gradient(".concat(X.randomItem.apply(void 0, Xr), ", ").concat(kt.a.createRepeatColorStep(2, "10px"), ")") };
            });
          } }, Hr, { title: "Random Radial", key: "random-radial", execute: function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 42;
            return Object(X.repeat)(t2).map(function(t3) {
              return { gradient: "radial-gradient(circle, ".concat(kt.a.createColorStep(10), ")") };
            });
          } }, { title: "Repeat Radial", key: "repeat-radial", execute: function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 42;
            return Object(X.repeat)(t2).map(function(t3) {
              return { gradient: "repeating-radial-gradient(".concat("circle", ", ").concat(kt.a.createRepeatColorStep(3, "6px"), ")") };
            });
          } }, { title: "Conic", key: "conic", execute: function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 42;
            return Object(X.repeat)(t2).map(function(t3) {
              var e2 = Object(Kr.randomNumber)(45, 55), n2 = Object(Kr.randomNumber)(45, 55), r2 = Object(Kr.randomNumber)(0, 360);
              return { gradient: "conic-gradient(from ".concat(r2, "deg at ").concat(e2, "% ").concat(n2, "%, ").concat(kt.a.createColorStep(2, 360, "deg"), ")") };
            });
          } }, { title: "Random Conic", key: "random-conic", execute: function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 42;
            return Object(X.repeat)(t2).map(function(t3) {
              return { gradient: "conic-gradient(from 0deg at 50% 50%, ".concat(kt.a.createColorStep(10, 360, "deg"), ")") };
            });
          } }, { title: "Repeat Conic", key: "repeat-conic", execute: function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 42;
            return Object(X.repeat)(t2).map(function(t3) {
              return { gradient: "repeating-conic-gradient(from 0deg at 0% 50%, ".concat(kt.a.createRepeatColorStep(10, "10deg"), ")") };
            });
          } }];
          n(179);
          function Zr(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var qr = Wr.map(function(t2) {
            return { value: t2.key, text: t2.title };
          }), Jr = function(t2) {
            s()(n2, t2);
            var e2 = Zr(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("gradient.asset.property.title");
            } }, { key: "initState", value: function() {
              return { mode: "grid", preset: "linear" };
            } }, { key: "getTools", value: function() {
              return '<div ref="$tools"></div>';
            } }, { key: Object(V.LOAD)("$tools"), value: function() {
              return '\n      <object refClass="SelectEditor"  key="preset" value="'.concat(this.state.preset, '" options=').concat(this.variable(qr), ' onchange="changePreset"  />\n    ');
            } }, { key: Object(V.SUBSCRIBE_SELF)("changePreset"), value: function(t3, e3) {
              this.setState(M()({}, t3, e3));
            } }, { key: "getClassName", value: function() {
              return "elf--gradient-assets-property";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.DEBOUNCE)(100), value: function() {
              this.show();
            } }, { key: "getBody", value: function() {
              return "\n      <div class='property-item gradient-assets'>\n        <div class='gradient-list' ref='$gradientList' data-view-mode='".concat(this.state.mode, "'></div>\n      </div>\n    ");
            } }, { key: Object(V.DRAGSTART)("$gradientList .gradient-item"), value: function(t3) {
              var e3 = t3.$dt.attr("data-gradient");
              t3.dataTransfer.effectAllowed = "copy", t3.dataTransfer.setData("text/gradient", e3);
            } }, { key: Object(V.LOAD)("$gradientList"), value: function() {
              var t3 = this, e3 = Wr.find(function(e4) {
                return e4.key === t3.state.preset;
              });
              if (!e3)
                return "";
              var n3 = e3.execute().map(function(t4, e4) {
                return `
        <div class='gradient-item' data-index="`.concat(e4, `" data-gradient='`).concat(t4.gradient, `' data-custom="`).concat(t4.custom, `">
          <div class='preview' title="`).concat(t4.gradient, `" draggable="true">
            <div class='gradient-view' style='background-image: `).concat(t4.gradient, ";'></div>\n          </div>\n        </div>\n      ");
              });
              return e3.edit && n3.push(`<div class='add-gradient-item'><butto type="button">`.concat(icon.add, "</button></div>")), n3;
            } }, { key: "executeGradient", value: function(t3) {
              var e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1], n3 = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2], r2 = this.$selection.currentProject;
              r2 ? (t3 && t3(r2), e3 && this.refresh(), n3 && this.emit("refreshGradientAssets")) : alert("Please select a project.");
            } }, { key: Object(V.CLICK)("$gradientList .add-gradient-item"), value: function() {
              this.executeGradient(function(t3) {
                t3.createGradient({ gradient: yr.a.random(), name: "", variable: "" });
              });
            } }, { key: Object(V.CLICK)("$gradientList .preview"), value: function(t3) {
              var e3 = t3.$dt.closest("gradient-item").attr("data-gradient");
              this.emit("drop.asset", { gradient: e3 });
            } }]), n2;
          }($.a);
          n(180);
          function Qr(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var ti = function(t2) {
            s()(n2, t2);
            var e2 = Qr(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "afterRender", value: function() {
              this.show();
            } }, { key: "getTitle", value: function() {
              return "History";
            } }, { key: "getBody", value: function() {
              return `
      <div class="elf--history-list-view" ref='$body'></div>
    `;
            } }, { key: Object(V.LOAD)("$body") + V.DOMDIFF, value: function() {
              var t3 = this;
              return this.$editor.history.map(function(e3, n3) {
                return e3 === "-" ? "<div class='divider'>-</div>" : "\n        <div class='history-item'>\n          <span>".concat(n3 === t3.$editor.history.currentIndex ? D.a.arrowRight : "", "</span>\n          <span>").concat(e3.message, "</span>\n        </div>\n      ");
              });
            } }, { key: Object(V.SUBSCRIBE)("refreshHistory"), value: function() {
              this.refresh();
            } }]), n2;
          }($.a);
          function ei(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                Reflect.construct(r2, arguments, i2);
              } else
                r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          p.a;
          function ni(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              }), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function ri(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? ni(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : ni(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function ii(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                Reflect.construct(r2, arguments, i2);
              } else
                r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          Wn.a;
          function ai(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                Reflect.construct(r2, arguments, i2);
              } else
                r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          $.a;
          var oi = n(39);
          function ci(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                Reflect.construct(r2, arguments, i2);
              } else
                r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          oi.a;
          function si(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function ui(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? si(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : si(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function li(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var fi = ["", "100x100", "200x200", "300x300", "400x300", "900x600", "1024x762"], hi = function(t2) {
            s()(n2, t2);
            var e2 = li(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getClassName", value: function() {
              return "item";
            } }, { key: "getTitle", value: function() {
              return this.$i18n("image.property.title");
            } }, { key: "getBody", value: function() {
              return "<div ref='$body' style='padding-top: 3px;'></div>";
            } }, { key: "getFooter", value: function() {
              return "\n      <div>\n        <label> ".concat(this.$i18n("image.property.origin"), ` </label> 
        <span ref='$sizeInfo'></span> 
        <button type="button" ref='$resize'>`).concat(D.a.size, `</button>
      </div>
      <div>
        <object refClass="SelectEditor"  ref='$select' label="`).concat(this.$i18n("image.property.size"), `" key='size' value='' options='`).concat(fi.join(","), "' onchange='changeImageSize' />\n      </div>\n    ");
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeImageSize"), value: function(t3, e3) {
              var n3 = e3.split("x").map(function(t4) {
                return F.a.px(t4);
              }), r2 = be()(n3, 2), i2 = r2[0], a2 = r2[1];
              this.command("setAttributeForMulti", "resize image", this.$selection.packByValue({ width: i2, height: a2 }));
            } }, { key: Object(V.CLICK)("$resize"), value: function() {
              this.$selection.current && this.command("setAttributeForMulti", "resize image", this.$selection.packByValue({ width: function(t3) {
                return t3.naturalWidth.clone();
              }, height: function(t3) {
                return t3.naturalHeight.clone();
              } }));
            } }, { key: Object(V.BIND)("$sizeInfo"), value: function() {
              var t3 = this.$selection.current || {};
              return { innerHTML: "".concat(this.$i18n("image.property.width"), ": ").concat(t3.naturalWidth, ", ").concat(this.$i18n("image.property.height"), ": ").concat(t3.naturalHeight) };
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = (this.$selection.current || {}).src || "";
              return `<object refClass="ImageSelectEditor" 
              ref='$1' 
              key='src' 
              value="`.concat(t3, '" \n              onchange="changeSelect" />');
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeSelect"), value: function(t3, e3, n3) {
              var r2 = this.$selection.current;
              r2 && (r2.reset(ui({ src: e3 }, n3)), this.bindData("$sizeInfo"), this.command("setAttributeForMulti", "change image", this.$selection.packByValue(ui({ src: e3 }, n3))));
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.DEBOUNCE)(100), value: function() {
              this.refreshShow(["image"]);
            } }]), n2;
          }($.a);
          n(181);
          function pi(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var di = function(t2) {
            s()(n2, t2);
            var e2 = pi(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { value: this.props.value };
            } }, { key: "template", value: function() {
              return "\n            <div class='elf--image-select-editor' ref='$body'></div>\n        ";
            } }, { key: "getValue", value: function() {
              return this.state.value;
            } }, { key: "setValue", value: function(t3) {
              this.setState({ value: t3 });
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = this.$selection.currentProject;
              if (t3)
                return `
            <div class='preview-container'>
                <img src="`.concat(t3.getImageValueById(this.state.value) || this.state.value, `" />
                <input type='file' ref='$file' accept="image/*" />
            </div>
            <div class='select-container'>
                <button type="button" ref='$select'>Select a image</button>
            <div>
        `);
            } }, { key: Object(V.CHANGE)("$file"), value: function(t3) {
              var e3 = this, n3 = ht()(t3.target.files);
              n3.length && this.emit("updateImageAssetItem", n3[0], function(t4) {
                e3.trigger("changeImageSelectEditor", t4);
              });
            } }, { key: Object(V.CLICK)("$select"), value: function() {
              this.emit("showImageSelectPopup", { context: this, changeEvent: "changeImageSelectEditor", value: this.state.value });
            } }, { key: Object(V.SUBSCRIBE)("changeImageSelectEditor"), value: function(t3) {
              this.updateData({ value: t3 }), this.refresh();
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.parent.trigger(this.props.onchange, this.props.key, this.state.value, this.props.params);
            } }]), n2;
          }(J.a);
          n(182);
          function vi(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var yi = function(t2) {
            s()(n2, t2);
            var e2 = vi(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return "Select a image";
            } }, { key: "getClassName", value: function() {
              return "compact";
            } }, { key: "initState", value: function() {
              return { value: "" };
            } }, { key: "updateData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.setState(t3, false), this.state.context.trigger(this.state.changeEvent, this.state.value, { width: this.state.width, height: this.state.height, naturalWidth: this.state.naturalWidth, naturalHeight: this.state.naturalHeight });
            } }, { key: "getBody", value: function() {
              return `
      <div class="elf--image-select-popup">
        <div class='box' ref='$imageBox'>
          
        </div>
      </div>
    `;
            } }, { key: Object(V.LOAD)("$imageBox") + V.DOMDIFF, value: function() {
              return (this.$selection.currentProject || { images: [] }).images.map(function(t3, e3) {
                return "<div class='image-item' ><img src='".concat(t3.local, `' data-id="`).concat(t3.id, '" /></div>');
              });
            } }, { key: Object(V.CLICK)("$imageBox .image-item"), value: function(t3) {
              var e3 = t3.$dt.$("img");
              this.updateData({ value: e3.attr("data-id"), naturalWidth: F.a.px(e3.naturalWidth), naturalHeight: F.a.px(e3.naturalHeight), width: F.a.px(e3.naturalWidth), height: F.a.px(e3.naturalHeight) }), this.trigger("hideImageSelectPopup");
            } }, { key: Object(V.SUBSCRIBE)("showImageSelectPopup"), value: function(t3, e3) {
              this.setState({ context: t3.context, changeEvent: t3.changeEvent, value: t3.value, params: e3 }, false), this.refresh(), this.show(500);
            } }, { key: Object(V.SUBSCRIBE)("hideImageSelectPopup"), value: function() {
              this.hide();
            } }]), n2;
          }(tt);
          n(183);
          function gi(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var mi = function(t2) {
            s()(n2, t2);
            var e2 = gi(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("keyframe.popup.title");
            } }, { key: "initState", value: function() {
              return { name: "none", offsets: [] };
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.emit("changeKeyframePopup", this.state);
            } }, { key: "getBody", value: function() {
              return `
    <div class='elf--keyframe-popup' ref='$popup'>
      <div class="box">
        `.concat(this.templateForName(), "\n        ").concat(this.templateForOffset(), "\n      </div>\n    </div>");
            } }, { key: "templateForOffset", value: function() {
              return `
      <div>
        <object refClass="OffsetEditor" ref='$offsetEditor' />
      </div>
    `;
            } }, { key: "templateForName", value: function() {
              return "\n      <div class='name'>\n        <label>Name</label>\n        <div class='input grid-1'>\n          <input type='text' value='".concat(this.state.name, "' ref='$name'/>\n        </div>\n      </div>\n    ");
            } }, { key: Object(V.INPUT)("$name"), value: function(t3) {
              if (!this.refs.$name.value.match(/^[a-zA-Z0-9\b]+$/))
                return t3.preventDefault(), t3.stopPropagation(), false;
              this.updateData({ name: this.refs.$name.value });
            } }, { key: "getOffsetData", value: function() {
              return { offsets: this.state.offsets.map(function(t3) {
                return t3;
              }) };
            } }, { key: "refresh", value: function() {
              this.refs.$name.val(this.state.name), this.emit("showOffsetEditor", this.getOffsetData());
            } }, { key: Object(V.SUBSCRIBE)("changeOffsetEditor"), value: function(t3) {
              this.updateData(t3);
            } }, { key: Object(V.SUBSCRIBE)("showKeyframePopup"), value: function(t3) {
              this.setState(t3), this.refresh(), this.show(240);
            } }, { key: Object(V.SUBSCRIBE)("hideKeyframePopup"), value: function() {
              this.$el.hide();
            } }]), n2;
          }(tt), bi = n(79);
          n(184);
          function ki(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Oi = function(t2) {
            s()(n2, t2);
            var e2 = ki(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("keyframe.property.title");
            } }, { key: "getBody", value: function() {
              return "<div class='elf--keyframe-list' ref='$keyframeList'></div>";
            } }, { key: "getTools", value: function() {
              return '\n      <button type="button" ref="$add" title="add Filter">'.concat(D.a.add, "</button>\n    ");
            } }, { key: "makeProperty", value: function(t3) {
              var e3 = t3.key;
              return e3 === "x" ? e3 = "left" : e3 === "y" && (e3 = "top"), "\n      <div class='offset-property-item'>\n        <label>".concat(e3, ":</label>\n        <div class='value'>").concat(t3.value, "</div>\n      </div>\n    ");
            } }, { key: "makeOffset", value: function(t3) {
              var e3 = this;
              return "\n      <div class='offset'>\n        <label>".concat(t3.offset, "</label>\n        <div class='properties'>\n          ").concat(t3.properties.map(function(t4) {
                return e3.makeProperty(t4);
              }).join(""), "\n        </div>        \n      </div>\n    ");
            } }, { key: "makeKeyframeTemplate", value: function(t3, e3) {
              var n3 = this;
              return e3 = e3.toString(), "\n      <div class='keyframe-item' data-selected-value='".concat(t3.selectedType, "' ref='$keyframeIndex").concat(e3, "' data-index='").concat(e3, "'>\n        <div class='title'>\n          <div class='name'>").concat(t3.name, `</div>
          <div class='tools'>
            <div class='group'>
              <button type="button" data-type='list'>`).concat(D.a.list, `</button>
              <button type="button" data-type='code'>`).concat(D.a.code, '</button>\n            </div>\n            <button type="button" class="del" data-index="').concat(e3, '">').concat(D.a.remove2, "</button>\n          </div>\n        </div>\n        <div class='offset-list'>\n          <div class='container'>\n            ").concat(t3.offsets.map(function(t4) {
                return "\n              <div class='offset' style='left: ".concat(t4.offset, "; background-color: ").concat(t4.color, "'></div>\n              ");
              }).join(""), "\n          </div>\n        </div>\n        <div class='keyframe-code' data-type='list'>\n          ").concat(t3.offsets.map(function(t4) {
                return n3.makeOffset(t4);
              }).join(""), "\n        </div>\n        <div class='keyframe-code' data-type='code'>\n          <pre>").concat(t3.toString().trim(), "</pre>\n        </div>        \n      </div>\n    ");
            } }, { key: Object(V.CLICK)("$keyframeList .keyframe-item .title .group button[data-type]"), value: function(t3) {
              var e3 = t3.$dt.closest("keyframe-item"), n3 = +e3.attr("data-index"), r2 = t3.$dt.attr("data-type"), i2 = this.$selection.currentProject;
              if (i2) {
                var a2 = i2.keyframes[n3];
                a2 && a2.reset({ selectedType: r2 }), e3.attr("data-selected-value", r2);
              }
            } }, { key: Object(V.CLICK)("$keyframeList .keyframe-item .offset-list"), value: function(t3) {
              var e3 = +t3.$dt.closest("keyframe-item").attr("data-index");
              this.$selection.currentProject && this.viewKeyframePicker(e3);
            } }, { key: Object(V.CLICK)("$keyframeList .del") + V.PREVENT, value: function(t3) {
              var e3 = t3.$dt.attr("data-index"), n3 = this.$selection.currentProject;
              n3 && (n3.removeKeyframe(e3), this.emit("refreshProject", n3), this.refresh());
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.DEBOUNCE)(100), value: function() {
              this.refreshShowIsNot(["project"]);
            } }, { key: Object(V.LOAD)("$keyframeList"), value: function() {
              var t3 = this, e3 = this.$selection.currentProject;
              if (!e3)
                return "";
              var n3 = e3.keyframe ? bi.a.parseStyle(e3) : e3.keyframes;
              return e3.keyframe = "", e3.keyframes = n3, n3.map(function(e4, n4) {
                return t3.makeKeyframeTemplate(e4, n4);
              });
            } }, { key: Object(V.CLICK)("$add"), value: function() {
              var t3 = this.$selection.currentProject;
              t3 ? (t3.createKeyframe(), this.refresh(), this.emit("refreshProject", t3)) : alert("Please select a project.");
            } }, { key: "viewKeyframePicker", value: function(t3) {
              typeof this.selectedIndex == "number" && this.selectItem(this.selectedIndex, false), this.selectedIndex = +t3, this.selectItem(this.selectedIndex, true), this.current = this.$selection.currentProject, this.current && (this.currentKeyframe = this.current.keyframes[this.selectedIndex], this.viewKeyframePropertyPopup());
            } }, { key: "selectItem", value: function(t3) {
              var e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1];
              e3 ? this.getRef("$keyframeIndex", t3).addClass("selected") : this.getRef("$keyframeIndex", t3).removeClass("selected"), this.current && this.current.keyframes.forEach(function(e4, n3) {
                e4.selected = n3 === t3;
              });
            } }, { key: "viewKeyframePropertyPopup", value: function(t3) {
              if (this.current = this.$selection.currentProject, this.current) {
                this.currentKeyframe = this.current.keyframes[this.selectedIndex];
                var e3 = this.currentKeyframe, n3 = e3.name, r2 = e3.offsets;
                this.emit("showKeyframePopup", { position: t3, name: n3, offsets: r2 });
              }
            } }, { key: Object(V.SUBSCRIBE)("changeKeyframePopup"), value: function(t3) {
              var e3 = this.$selection.currentProject;
              e3 && (this.currentKeyframe = e3.keyframes[this.selectedIndex], this.currentKeyframe && this.currentKeyframe.reset(t3), this.refresh(), this.emit("refreshProject", e3));
            } }]), n2;
          }($.a), xi = n(74);
          function ji(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Si = function(t2) {
            s()(n2, t2);
            var e2 = ji(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { offsets: [] };
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.modifyOffset();
            } }, { key: "modifyOffset", value: function() {
              this.emit("changeOffsetEditor", this.state);
            } }, { key: "template", value: function() {
              return "\n    <div class='editor offset-editor' ref='$editor'>\n        ".concat(this.templateForOffset(), "\n        ").concat(this.templateForOffsetInput(), "\n        ").concat(this.templateForProperty(), "        \n    </div>");
            } }, { key: "templateForOffsetInput", value: function() {
              return `
      <div class='offset-input' >
        <div class='title'>
          <label>Offset</label>
          <div class='tools'>
            <object refClass="InputRangeEditor" 
              key='offset' 
              min='0' 
              max='100' 
              step="0.01" 
              value="`.concat(F.a.percent(0), `" 
              ref='$offsetInput' 
              units="%" 
              onchange='changeRangeEditor' 
            />
          </div>
        </div>
      </div>
    `);
            } }, { key: Object(V.SUBSCRIBE)("changeRangeEditor"), value: function(t3, e3) {
              var n3 = this.state.offsets[this.selectedIndex];
              n3 && (n3.offset = e3.clone(), this.refresh(), this.modifyOffset());
            } }, { key: "templateForProperty", value: function() {
              return `<object refClass="CSSPropertyEditor" ref='$offsetPropertyEditor' hide-refresh="true" onchange='changeCSSPropertyEditor' />`;
            } }, { key: "templateForOffset", value: function() {
              return `<div class='offset' ref='$offset' data-selected-value="-1"></div>`;
            } }, { key: "makeOffset", value: function(t3, e3) {
              return "<div class='offset-item' style='left: ".concat(t3.offset, ";' data-offset-index='").concat(e3.toString(), "'></div>");
            } }, { key: "selectItem", value: function(t3) {
              if (Object(X.isUndefined)(t3)) {
                t3 = -1;
                for (var e3 = 0, n3 = this.state.offsets.length; e3 < n3; e3++)
                  if (this.state.offsets[e3].selected) {
                    t3 = e3;
                    break;
                  }
                t3 === -1 && (t3 = 0);
              }
              this.getRef("$offset").attr("data-selected-value", t3), this.selectedIndex = t3, this.state.offsets.forEach(function(e4, n4) {
                e4.selected = n4 === t3;
              });
              var r2 = this.state.offsets.filter(function(t4) {
                return t4.selected;
              });
              this.selectedOffsetItem = r2.length ? r2[0] : {}, this.refreshOffsetInput();
            } }, { key: "refreshOffsetInput", value: function() {
              var t3 = this.state.offsets[this.selectedIndex];
              t3 && this.children.$offsetInput.setValue(t3.offset);
            } }, { key: Object(V.LOAD)("$offset"), value: function() {
              var t3 = this;
              return this.state.offsets.map(function(e3, n3) {
                return t3.makeOffset(e3, n3);
              });
            } }, { key: "isNotOffsetItem", value: function(t3) {
              return !Pe.a.create(t3.target).hasClass("offset-item") && !this.currentOffset;
            } }, { key: Object(V.CLICK)("$offset") + Object(V.IF)("isNotOffsetItem") + V.PREVENT, value: function(t3) {
              this.baseOffsetWidth = this.refs.$offset.width(), this.baseOffsetArea = this.refs.$offset.offset();
              var e3 = t3.xy.x, n3 = F.a.percent((e3 - this.baseOffsetArea.left) / this.baseOffsetWidth * 100).round(100);
              this.state.offsets.push(new xi.a({ offset: n3 })), this.selectItem(this.state.offsets.length - 1, true), this.refresh(), this.modifyOffset();
            } }, { key: "refreshOffsetProperty", value: function() {
              this.emit("showCSSPropertyEditor", this.selectedOffsetItem.properties);
            } }, { key: Object(V.POINTERSTART)("$offset .offset-item") + Object(V.MOVE)("moveOffset") + Object(V.END)("endOffset"), value: function(t3) {
              this.baseOffsetWidth = this.refs.$offset.width(), this.baseOffsetArea = this.refs.$offset.offset(), this.currentOffsetleft = F.a.parse(t3.$dt.css("left")), this.currentOffset = t3.$dt, this.currentOffsetIndex = +t3.$dt.attr("data-offset-index"), this.currentOffsetXY = t3.xy, this.baseOffsetMin = this.baseOffsetArea.left, this.baseOffsetMax = this.baseOffsetArea.left + this.baseOffsetWidth, this.isRemoveOffset = false, t3.altKey ? this.isRemoveOffset = true : (this.selectItem(this.currentOffsetIndex, true), this.refreshOffsetInput());
            } }, { key: "moveOffset", value: function(t3, e3) {
              if (!this.isRemoveOffset) {
                var n3 = this.currentOffsetXY.x + t3;
                n3 < this.baseOffsetMin && (n3 = this.baseOffsetMin), n3 > this.baseOffsetMax && (n3 = this.baseOffsetMax);
                var r2 = F.a.percent((n3 - this.baseOffsetMin) / this.baseOffsetWidth * 100).round(100);
                this.state.offsets[this.currentOffsetIndex].offset.set(r2.value), this.currentOffset.css("left", r2), this.refreshOffsetInput(), this.modifyOffset();
              }
            } }, { key: "removeOffset", value: function(t3) {
              this.state.offsets.splice(t3, 1), this.selectItem(0), this.refresh(), this.modifyOffset();
            } }, { key: "endOffset", value: function(t3, e3) {
              var n3 = this;
              this.isRemoveOffset ? setTimeout(function() {
                n3.currentOffset = null, n3.removeOffset(n3.currentOffsetIndex);
              }, 10) : setTimeout(function() {
                n3.currentOffset = null, n3.refreshOffsetInput(), n3.refreshOffsetProperty(), n3.modifyOffset();
              }, 10);
            } }, { key: "refresh", value: function() {
              this.load(), this.refreshOffsetProperty();
            } }, { key: Object(V.SUBSCRIBE)("showOffsetEditor"), value: function(t3) {
              this.setState(t3), this.selectItem(), this.refresh();
            } }, { key: Object(V.SUBSCRIBE)("changeCSSPropertyEditor"), value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], e3 = this.state.offsets[this.selectedIndex];
              e3 && (e3.properties = ht()(t3)), this.modifyOffset();
            } }]), n2;
          }(J.a), Pi = n(47);
          n(185);
          function wi(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Ri = function(t2) {
            s()(n2, t2);
            var e2 = wi(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("layer.tree.property.title");
            } }, { key: "getClassName", value: function() {
              return "full";
            } }, { key: "initState", value: function() {
              return { hideDragPointer: true, lastDragOverPosition: 0, lastDragOverOffset: 0, rootRect: { top: 0 }, itemRect: { height: 0 } };
            } }, { key: "getBody", value: function() {
              return `
      <div class="elf--layer-list scrollbar" ref="$layerList"></div>
      <div class='drag-point' ref='$dragPointer'></div>
    `;
            } }, { key: Object(V.BIND)("$dragPointer"), value: function() {
              var t3 = this.state.lastDragOverOffset, e3 = this.state.itemRect.height / 3, n3 = {};
              if (this.state.lastDragOverOffset < e3) {
                t3 = 0;
                var r2 = this.state.lastDragOverPosition + t3 - this.state.rootRect.top;
                n3 = { top: F.a.px(r2), height: "1px", width: "100%", left: "0px" }, this.state.lastDragOverItemDirection = "before";
              } else if (this.state.lastDragOverOffset > this.state.itemRect.height - e3) {
                t3 = this.state.itemRect.height;
                r2 = this.state.lastDragOverPosition + t3 - this.state.rootRect.top;
                n3 = { top: F.a.px(r2), height: "1px", width: "100%", left: "0px" }, this.state.lastDragOverItemDirection = "after";
              } else {
                t3 = 0;
                r2 = this.state.lastDragOverPosition + t3 - this.state.rootRect.top;
                n3 = { top: F.a.px(r2), height: F.a.px(this.state.itemRect.height), width: "100%", left: "0px" }, this.state.lastDragOverItemDirection = "self";
              }
              return n3.display = this.state.hideDragPointer ? "none" : "block", { style: n3 };
            } }, { key: "getIcon", value: function(t3) {
              if (t3.isGroup && t3.is("artboard") === false)
                return D.a.group;
              switch (t3.itemType) {
                case "artboard":
                  return D.a.artboard;
                case "circle":
                  return D.a.lens;
                case "image":
                  return D.a.image;
                case "text":
                case "svg-text":
                  return D.a.title;
                case "svg-textpath":
                  return D.a.text_rotate;
                case "svg-path":
                  return D.a.pentool;
                case "cube":
                  return D.a.cube;
                case "cylinder":
                  return D.a.cylinder;
                default:
                  return D.a.rect;
              }
            } }, { key: "makeLayerList", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
              if (!t3.layers)
                return "";
              for (var n3 = t3.layers, r2 = [], i2 = n3.length - 1; i2 > -1; i2--) {
                var a2 = n3[i2], o2 = (this.$selection.check(a2), this.$selection.check(a2) ? "selected" : ""), c2 = this.$selection.checkHover(a2) ? "hovered" : "", s2 = a2.name;
                a2.is("text") && (s2 = a2.text || a2.name);
                var u2 = "";
                a2.hasLayout() && (u2 = this.$i18n("layer.tree.property.layout.title." + a2.layout));
                var l2 = a2.isTreeItemHide(), f2 = F.a.px(20 * e3);
                r2.push("        \n        <div class='layer-item ".concat(o2, " ").concat(c2, `' data-is-group="`).concat(a2.isGroup, '" data-depth="').concat(e3, `" data-layout='`).concat(a2.layout, "' data-layer-id='").concat(a2.id, `' data-is-hide="`).concat(l2, `"  draggable="true">
          <div class='detail'>
            <label data-layout-title='`).concat(u2, "' style='padding-left: ").concat(f2, "' > \n              <div class='folder ").concat(a2.collapsed ? "collapsed" : "", "'>").concat(a2.isGroup ? D.a.arrow_right : "", `</div>
              <span class='icon' data-item-type="`).concat(a2.itemType, '">').concat(this.getIcon(a2), "</span> \n              <span class='name'>").concat(s2, '</span>\n            </label>\n            <div class="tools">\n              <button type="button" class="lock" data-lock="').concat(a2.lock, `" title='Lock'>`).concat(a2.lock ? D.a.lock : D.a.lock_open, '</button>\n              <button type="button" class="visible" data-visible="').concat(a2.visible, `" title='Visible'>`).concat(D.a.visible, `</button>
              <button type="button" class="remove" title='Remove'>`).concat(D.a.remove2, "</button>                          \n            </div>\n          </div>\n        </div>\n\n        ").concat(this.makeLayerList(a2, e3 + 1), "\n      "));
              }
              return r2.join(" ");
            } }, { key: Object(V.SUBSCRIBE)("refreshContent"), value: function(t3) {
              this.refresh();
            } }, { key: Object(V.LOAD)("$layerList") + V.DOMDIFF, value: function() {
              var t3 = this.$selection.currentProject;
              return t3 ? this.makeLayerList(t3, 0) + `
      <div class='layer-item ' data-depth="0" data-is-last="true">
      </div>
    ` : "";
            } }, { key: Object(V.DRAGSTART)("$layerList .layer-item"), value: function(t3) {
              var e3 = t3.$dt.attr("data-layer-id");
              t3.$dt.addClass("drag-start"), t3.dataTransfer.setData("layer/id", e3), this.state.rootRect = this.refs.$layerList.rect(), this.state.itemRect = t3.$dt.rect(), this.setState({ hideDragPointer: false }, false), this.bindData("$dragPointer");
            } }, { key: Object(V.DRAGEND)("$layerList .layer-item"), value: function(t3) {
              this.setState({ hideDragPointer: true }, false), this.bindData("$dragPointer"), this.refs.$layerList.$$(".".concat("drag-start")).forEach(function(t4) {
                t4.removeClass("drag-start");
              });
            } }, { key: Object(V.DRAGOVER)("$layerList .layer-item:not(.".concat("drag-start", ")")) + V.PREVENT, value: function(t3) {
              var e3 = t3.$dt.attr("data-layer-id");
              this.state.lastDragOverItemId = e3, this.state.lastDragOverPosition = t3.$dt.rect().top, this.state.lastDragOverOffset = t3.offsetY, this.bindData("$dragPointer");
            } }, { key: Object(V.DROP)("$layerList .layer-item:not(.".concat("drag-start", ")")), value: function(t3) {
              var e3 = t3.$dt.attr("data-layer-id"), n3 = t3.dataTransfer.getData("layer/id");
              if (e3 !== n3) {
                var r2 = this.$selection.currentProject, i2 = r2.searchById(e3), a2 = r2.searchById(n3);
                if (!i2 || !i2.hasParent(a2.id)) {
                  switch (this.state.lastDragOverItemDirection) {
                    case "self":
                      i2.appendChildItem(a2);
                      break;
                    case "before":
                      i2.appendBefore(a2);
                      break;
                    case "after":
                      i2.appendAfter(a2);
                  }
                  this.$selection.select(a2), this.setState({ hideDragPointer: true }), this.emit("refreshAll");
                }
              }
            } }, { key: Object(V.DOUBLECLICK)("$layerList .layer-item"), value: function(t3) {
              this.startInputEditing(t3.$dt.$(".name"));
            } }, { key: "modifyDoneInputEditing", value: function(t3, e3) {
              var n3 = this;
              if (Pi.a.enter === e3.keyCode)
                this.endInputEditing(t3, function() {
                  var e4 = t3.closest("layer-item").attr("data-layer-id"), r3 = t3.text();
                  n3.emit("refreshItemName", e4, r3);
                });
              else {
                var r2 = t3.closest("layer-item").attr("data-layer-id"), i2 = t3.text();
                this.emit("refreshItemName", r2, i2);
              }
            } }, { key: Object(V.KEYDOWN)("$layerList .layer-item .name") + V.STOP, value: function(t3) {
              this.modifyDoneInputEditing(t3.$dt, t3);
            } }, { key: Object(V.FOCUSOUT)("$layerList .layer-item .name") + V.PREVENT + V.STOP, value: function(t3) {
              this.modifyDoneInputEditing(t3.$dt, { keyCode: Pi.a.enter });
            } }, { key: "selectLayer", value: function(t3) {
              t3 && this.$selection.select(t3), this.refresh(), this.emit("refreshSelection");
            } }, { key: "addLayer", value: function(t3) {
              t3 && (this.$selection.select(t3), this.emit("refreshArtboard"));
            } }, { key: Object(V.CLICK)("$add"), value: function(t3) {
              this.emit("newComponent", "rect", { "background-color": Bt.a.random(), width: F.a.px(200), height: F.a.px(100) });
            } }, { key: Object(V.CLICK)("$layerList .layer-item label .name"), value: function(t3) {
              var e3 = t3.$dt.closest("layer-item");
              e3.onlyOneClass("selected");
              var n3 = e3.attr("data-layer-id"), r2 = this.$selection.currentProject.searchById(n3);
              this.$selection.select(r2), this.command("refreshSelection");
            } }, { key: Object(V.CLICK)("$layerList .layer-item label .folder"), value: function(t3) {
              var e3 = this.$selection.currentProject, n3 = t3.$dt.closest("layer-item").attr("data-layer-id"), r2 = e3.searchById(n3);
              r2.reset({ collapsed: !r2.collapsed }), this.refresh();
            } }, { key: Object(V.CLICK)("$layerList .layer-item .visible"), value: function(t3) {
              var e3 = this.$selection.currentProject, n3 = t3.$dt.closest("layer-item").attr("data-layer-id"), r2 = e3.searchById(n3);
              t3.$dt.attr("data-visible", !r2.visible), this.command("setAttributeForMulti", "change visible for layer", this.$selection.packByValue({ visible: !r2.visible }, r2.id));
            } }, { key: Object(V.CLICK)("$layerList .layer-item .remove"), value: function(t3) {
              var e3 = this.$selection.currentProject, n3 = t3.$dt.closest("layer-item").attr("data-layer-id");
              this.$selection.removeById(n3), e3.searchById(n3).remove(), this.refresh(), this.emit("refreshArtboard");
            } }, { key: Object(V.CLICK)("$layerList .layer-item .lock"), value: function(t3) {
              var e3 = this.$selection.currentProject, n3 = t3.$dt.closest("layer-item").attr("data-layer-id"), r2 = e3.searchById(n3), i2 = !r2.lock;
              t3.$dt.attr("data-lock", i2), i2 && (this.$selection.removeById(n3), this.emit("history.refreshSelection")), this.command("setAttributeForMulti", "change lock for layer", this.$selection.packByValue({ lock: i2 }, r2.id));
            } }, { key: Object(V.SUBSCRIBE)("changeHoverItem"), value: function() {
              if (this.refs.$layerList.$$(".hovered").forEach(function(t4) {
                t4.removeClass("hovered");
              }), this.$selection.hoverItems.length) {
                var t3 = this.$selection.hoverItems.map(function(t4) {
                  return '[data-layer-id="'.concat(t4.id, '"]');
                }).join(",");
                this.refs.$layerList.$$(t3).forEach(function(t4) {
                  t4.addClass("hovered");
                });
              }
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeSelection"), value: function() {
              var t3 = this, e3 = arguments.length > 0 && arguments[0] !== void 0 && arguments[0];
              if (e3 && this.refs.$layerList) {
                this.refs.$layerList.$$(".selected").forEach(function(t4) {
                  t4.removeClass("selected");
                });
                var n3 = this.$selection.items.map(function(t4) {
                  return '[data-layer-id="'.concat(t4.id, '"]');
                }).join(",");
                n3 && this.refs.$layerList.$$(n3).forEach(function(e4) {
                  e4.addClass("selected");
                  var n4 = t3.$selection.itemKeys[e4.attr("data-layer-id")];
                  n4.is("svg-path", "svg-polygon") && e4.$(".icon").html(t3.getIcon(n4));
                });
              }
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection", "history.refreshSelection"), value: function() {
              this.trigger("changeSelection", true);
            } }, { key: Object(V.SUBSCRIBE)("refreshStylePosition"), value: function() {
              this.trigger("changeSelection");
            } }, { key: Object(V.SUBSCRIBE)("refreshLayerTreeView"), value: function() {
              this.refresh();
            } }, { key: Object(V.SUBSCRIBE)("changeItemLayout"), value: function() {
              this.refresh();
            } }]), n2;
          }($.a);
          function Ci(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Ei(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Ci(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Ci(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function $i(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Ii = function(t2) {
            s()(n2, t2);
            var e2 = $i(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDirectionOptions", value: function() {
              return this.makeOptionsFunction("row,column,row-reverse,column-reverse");
            } }, { key: "getWrapOptions", value: function() {
              return this.makeOptionsFunction("nowrap,wrap,wrap-reverse");
            } }, { key: "getJustifyContentOptions", value: function() {
              return this.makeOptionsFunction("flex-start,flex-end,center,space-between,space-around");
            } }, { key: "getAlignItemsOptions", value: function() {
              return this.makeOptionsFunction("flex-start,flex-end,center,baseline,stretch");
            } }, { key: "getAlignContentOptions", value: function() {
              return this.makeOptionsFunction("flex-start,flex-end,center,space-between,space-around,stretch");
            } }, { key: "makeOptionsFunction", value: function(t3) {
              var e3 = this;
              return this.variable(t3.split(",").map(function(t4) {
                return { value: t4, text: e3.$i18n("flex.layout.editor." + t4) };
              }));
            } }, { key: "initState", value: function() {
              return Ei({}, Object(X.STRING_TO_CSS)(this.props.value));
            } }, { key: "setValue", value: function(t3) {
              this.setState(Ei({}, Object(X.STRING_TO_CSS)(t3)));
            } }, { key: "getValue", value: function() {
              return Object(X.CSS_TO_STRING)(this.state);
            } }, { key: "modifyData", value: function() {
              this.parent.trigger(this.props.onchange, this.props.key, this.getValue());
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              return "\n            <div class='flex-layout-item'>\n                <div class='label'><label>".concat(this.$i18n("flex.layout.editor.direction"), `</label></div>
                <object refClass="SelectIconEditor" 
                    key='flex-direction'
                    value="`).concat(this.state["flex-direction"] || "row", '"\n                    options="').concat(this.getDirectionOptions(), `"
                    onchange='changeKeyValue'
                />
            </div>
            <div class='flex-layout-item'>
                <div class='label'><label>`).concat(this.$i18n("flex.layout.editor.wrap"), `</label></div>
                <object refClass="SelectIconEditor" 
                    key='flex-wrap'
                    value="`).concat(this.state["flex-wrap"] || "wrap", '"\n                    options="').concat(this.getWrapOptions(), `"
                    onchange='changeKeyValue'
                />
            </div>
            <div class='flex-layout-item'>
                <div class='label'><label>`).concat(this.$i18n("flex.layout.editor.justify-content"), `</label></div>
                <object refClass="SelectIconEditor" 
                    key='justify-content'
                    value="`).concat(this.state["justify-content"] || "flex-start", '"\n                    options="').concat(this.getJustifyContentOptions(), `"
                    onchange='changeKeyValue'
                />
            </div>
            <div class='flex-layout-item'>
                <div class='label'><label>`).concat(this.$i18n("flex.layout.editor.align-items"), `</label></div>
                <object refClass="SelectIconEditor" 
                    key='align-items'
                    value="`).concat(this.state["align-items"] || "flex-start", '"\n                    options="').concat(this.getAlignItemsOptions(), `"
                    onchange='changeKeyValue'
                />
            </div>
            <div class='flex-layout-item'>
                <div class='label'><label>`).concat(this.$i18n("flex.layout.editor.align-content"), `</label></div>
                <object refClass="SelectIconEditor" 
                    key='align-content'
                    value="`).concat(this.state["align-content"] || "flex-start", '"\n                    options="').concat(this.getAlignContentOptions(), `"
                    onchange='changeKeyValue'
                />
            </div>    
        `);
            } }, { key: "template", value: function() {
              return "\n            <div class='flex-layout-editor' ref='$body' ></div>\n        ";
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeKeyValue"), value: function(t3, e3, n3) {
              this.setState(M()({}, t3, e3), false), this.modifyData();
            } }]), n2;
          }(J.a);
          function Ti(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Bi(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Mi = function(t2) {
            s()(n2, t2);
            var e2 = Bi(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return function(t3) {
                for (var e3 = 1; e3 < arguments.length; e3++) {
                  var n3 = arguments[e3] != null ? arguments[e3] : {};
                  e3 % 2 ? Ti(Object(n3), true).forEach(function(e4) {
                    M()(t3, e4, n3[e4]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(n3)) : Ti(Object(n3)).forEach(function(e4) {
                    Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(n3, e4));
                  });
                }
                return t3;
              }({}, Object(X.STRING_TO_CSS)(this.props.value));
            } }, { key: "setValue", value: function(t3) {
              this.setState(Object(X.STRING_TO_CSS)(t3));
            } }, { key: "getValue", value: function() {
              return Object(X.CSS_TO_STRING)(this.state);
            } }, { key: "modifyData", value: function() {
              this.parent.trigger(this.props.onchange, this.props.key, this.getValue());
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              return "\n            <div class='flex-layout-item'>\n                <div class='label'><label>".concat(this.$i18n("flex.layout.item.editor.direction"), `</label></div>
                <object refClass="SelectIconEditor" 
                    key='flex-direction'
                    value="`).concat(this.state["flex-direction"] || "row", '"\n                    options="').concat(getDirectionOptions(), `"
                    onchange='changeKeyValue'
                />
            </div>
            <div class='flex-layout-item'>
                <div class='label'><label>`).concat(this.$i18n("flex.layout.item.editor.wrap"), `</label></div>
                <object refClass="SelectIconEditor" 
                    key='flex-wrap'
                    value="`).concat(this.state["flex-wrap"] || "wrap", '"\n                    options="').concat(getWrapOptions(), `"
                    onchange='changeKeyValue'
                />
            </div>
            <div class='flex-layout-item'>
                <div class='label'><label>`).concat(this.$i18n("flex.layout.item.editor.justify-content"), `</label></div>
                <object refClass="SelectIconEditor" 
                    key='justify-content'
                    value="`).concat(this.state["justify-content"], '"\n                    options="').concat(getJustifyContentOptions(), `"
                    onchange='changeKeyValue'
                />
            </div>
            <div class='flex-layout-item'>
                <div class='label'><label>`).concat(this.$i18n("flex.layout.item.editor.align-items"), `</label></div>
                <object refClass="SelectIconEditor" 
                    key='align-items'
                    value="`).concat(this.state["align-items"], '"\n                    options="').concat(getAlignItemsOptions(), `"
                    onchange='changeKeyValue'
                />
            </div>
            <div class='flex-layout-item'>
                <div class='label'><label>`).concat(this.$i18n("flex.layout.item.editor.align-content"), `</label></div>
                <object refClass="SelectIconEditor" 
                    key='align-content'
                    value="`).concat(this.state["align-content"], '"\n                    options="').concat(getAlignContentOptions(), `"
                    onchange='changeKeyValue'
                />
            </div>    
        `);
            } }, { key: "template", value: function() {
              return "\n            <div class='flex-layout-editor' ref='$body' ></div>\n        ";
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeKeyValue"), value: function(t3, e3, n3) {
              this.setState(M()({}, t3, e3), false), this.modifyData();
            } }]), n2;
          }(J.a);
          n(186);
          function Vi(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Di = function(t2) {
            s()(n2, t2);
            var e2 = Vi(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("flex.layout.item.property.title");
            } }, { key: "getClassName", value: function() {
              return "elf--flex-layout-item-property";
            } }, { key: "getLayoutOptions", value: function() {
              var t3 = this;
              return this.variable(["none", "auto", "value"].map(function(e3) {
                return { value: e3, text: t3.$i18n("flex.layout.item.property.".concat(e3)) };
              }));
            } }, { key: "getBody", value: function() {
              return "\n        <div class='property-item' ref='$body'></div>\n      ";
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = this.$selection.current || { "flex-layout-item": "none" }, e3 = t3["flex-layout-item"] || "none", n3 = [];
              return ["none", "auto"].includes(e3) === false && (n3 = e3.split(" ")), n3.length > 0 && (e3 = "value"), `
      <div class='layout-select'>
        <object refClass="SelectIconEditor" 
        ref='$layout' 
        key='layout' 
        icon="true" 
        value="`.concat(e3, '"\n        options="').concat(this.getLayoutOptions(), `"  
        onchange="changeLayoutType" />
      </div>
      <div class='layout-list' ref='$layoutList' data-selected-value='`).concat(t3.layout, `'>
        <div data-value='none'></div>
        <div data-value='auto'></div>
        <div data-value='value'>
          <div class='value-item'>
            <object refClass="RangeEditor"  ref='$grow' label='`).concat(this.$i18n("flex.layout.item.property.grow"), `' key="flex-grow" value="`).concat(n3[0], `" min='0' max='1' step='0.01' units=",auto" onchange='changeFlexItem' />
          </div>
          <div class='value-item'>
            <object refClass="RangeEditor"  ref='$shrink' label='`).concat(this.$i18n("flex.layout.item.property.shrink"), `' key="flex-shrink" value="`).concat(n3[1], `" min='0' max='1' step='0.01' units=",auto" onchange='changeFlexItem' />
          </div>
          <div class='value-item'>
            <object refClass="RangeEditor"  ref='$basis' label='`).concat(this.$i18n("flex.layout.item.property.basis"), `' key="flex-basis" value="`).concat(n3[2], `" min='0' units="px,em,%,auto" onchange='changeFlexItem' />
          </div>                    
        </div>
      </div>
    `);
            } }, { key: "getFlexItemValue", value: function(t3) {
              return t3.unit === "auto" ? "auto" : t3 + "";
            } }, { key: "getFlexValue", value: function() {
              var t3 = this.children.$grow.getValue(), e3 = this.children.$shrink.getValue(), n3 = this.children.$basis.getValue();
              return t3 = this.getFlexItemValue(t3), e3 = this.getFlexItemValue(e3), n3 = this.getFlexItemValue(n3), Object(X.CSS_TO_STRING)({ flex: "".concat(t3, " ").concat(e3, " ").concat(n3) });
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeFlexItem"), value: function(t3, e3) {
              var n3 = this;
              this.command("setAttributeForMulti", "change flex layout", this.$selection.packByValue({ "flex-layout-item": this.getFlexValue() })), this.nextTick(function() {
                n3.emit("refreshAllElementBoundSize");
              });
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeLayoutType"), value: function(t3, e3) {
              var n3 = this, r2 = this.children.$layout.getValue();
              e3 = r2;
              r2 === "value" && (e3 = this.getFlexValue()), this.command("setAttributeForMulti", "change flex layout", this.$selection.packByValue({ "flex-layout-item": e3 })), this.refs.$layoutList.attr("data-selected-value", r2), this.nextTick(function() {
                n3.emit("refreshAllElementBoundSize");
              });
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.DEBOUNCE)(100), value: function() {
              var t3 = this;
              this.refreshShow(function() {
                var e3 = t3.$selection.current;
                return e3 && e3.isInFlex();
              });
            } }]), n2;
          }($.a), Li = n(40), Ai = n.n(Li);
          n(187);
          function Fi(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var zi = /(auto)|(repeat\([^\)]*\))|(([\d.]+)(px|pt|fr|r?em|deg|vh|vw|%))/gi, Ni = function(t2) {
            s()(n2, t2);
            var e2 = Fi(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getLayoutItemOptions", value: function() {
              var t3 = this;
              return this.variable("none,auto,repeat,length".split(",").map(function(e3) {
                return { value: e3, text: t3.$i18n("grid.box.editor.".concat(e3)) };
              }));
            } }, { key: "initState", value: function() {
              return { label: this.props.label, list: this.parseValue(this.props.value) };
            } }, { key: "setValue", value: function(t3) {
              this.setState({ list: this.parseValue(t3) });
            } }, { key: "parseValue", value: function(t3) {
              for (var e3 = null, n3 = []; (e3 = zi.exec(t3)) !== null; ) {
                var r2 = e3[0];
                if (r2 === "auto")
                  n3.push({ type: "auto", count: 0, value: "0px" });
                else if (r2.includes("repeat")) {
                  var i2 = r2.split("repeat(")[1].split(")");
                  i2.pop();
                  var a2 = i2.join("").split(","), o2 = Ai()(a2), c2 = o2[0], s2 = o2.slice(1);
                  n3.push({ type: "repeat", count: c2, value: s2.join(", ") });
                } else
                  n3.push({ type: "length", count: 1, value: r2 });
              }
              return n3;
            } }, { key: "getValue", value: function() {
              return this.state.list.map(function(t3) {
                return t3.type === "repeat" ? "repeat(".concat(t3.count, ", ").concat(t3.value, ")") : t3.type === "auto" || t3.type === "none" ? t3.type : t3.value;
              }).join(" ");
            } }, { key: "modifyData", value: function() {
              this.parent.trigger(this.props.onchange, this.props.key, this.getValue());
            } }, { key: "makeItem", value: function(t3, e3) {
              return "\n            <div class='item' data-repeat-type='".concat(t3.type, "' data-index='").concat(e3, `' >
                <div class='repeat'>
                    <object refClass="SelectEditor" 
                        ref='$`).concat(e3, `-type' 
                        options="`).concat(this.getLayoutItemOptions(), '" \n                        key="type" \n                        value="').concat(t3.type || "auto", '" \n                        params="').concat(e3, `" 
                        onchange="changeKeyValue" />
                </div>
                <div class='count'>
                    <object refClass="NumberInputEditor" 
                        ref='$`).concat(e3, `-count' 
                        key="count" 
                        value="`).concat(t3.count, '" \n                        params="').concat(e3, `" 
                        max='1000'
                        onchange="changeKeyValue" />
                </div>                
                <div class='value'>
                    <object refClass="InputRangeEditor" 
                        ref='$`).concat(e3, `-value' 
                        key="value" 
                        value="`).concat(t3.value, '" \n                        params="').concat(e3, `" 
                        units='auto,fr,px,em,%'
                        onchange="changeKeyValue" />
                </div>
                <div class='tools'>
                    <button type="button" class='copy'>`).concat(D.a.copy, `</button>                
                    <button type="button" class='remove'>`).concat(D.a.remove2, "</button>\n                </div>\n            </div>\n        ");
            } }, { key: Object(V.LOAD)("$list"), value: function() {
              var t3 = this;
              return this.state.list.map(function(e3, n3) {
                return t3.makeItem(e3, n3);
              });
            } }, { key: "template", value: function() {
              return "\n            <div class='elf--grid-box-editor' ref='$body' >\n                <div class='grid-box-editor-item'>\n                    <div class='item header'>\n                        <div class='repeat'>\n                            <label>".concat(this.state.label, " </label>\n                            <button type='button' ref='$add'>").concat(D.a.add, "</button>\n                        </div>\n                        <div class='count'>").concat(this.$i18n("grid.box.editor.count"), "</div>\n                        <div class='value'>").concat(this.$i18n("grid.box.editor.value"), "</div>\n                        <div class='tools'></div>\n                    </div>\n                    <div ref='$list'></div>\n                </div>\n            </div>\n        ");
            } }, { key: Object(V.CLICK)("$list .remove"), value: function(t3) {
              var e3 = +t3.$dt.closest("item").attr("data-index");
              this.state.list.splice(e3, 1), this.refresh(), this.modifyData();
            } }, { key: Object(V.CLICK)("$list .copy"), value: function(t3) {
              var e3 = +t3.$dt.closest("item").attr("data-index"), n3 = clone(this.state.list[e3]);
              this.state.list.splice(e3, 0, n3), this.refresh(), this.modifyData();
            } }, { key: Object(V.CLICK)("$add"), value: function() {
              this.trigger("add");
            } }, { key: Object(V.SUBSCRIBE)("add"), value: function() {
              this.state.list.push({ type: "auto", count: 0, value: "0px" }), this.refresh(), this.modifyData();
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeKeyValue"), value: function(t3, e3, n3) {
              var r2 = +n3, i2 = this.state.list[r2];
              i2 && (t3 === "type" && this.refs.$list.$('[data-index="'.concat(r2, '"]')).attr("data-repeat-type", e3), i2[t3] = e3), this.modifyData();
            } }]), n2;
          }(J.a);
          function _i(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Ui = function(t2) {
            s()(n2, t2);
            var e2 = _i(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { label: this.props.label, value: this.parseValue(this.props.value) };
            } }, { key: "setValue", value: function(t3) {
              this.setState({ list: this.parseValue(t3) });
            } }, { key: "parseValue", value: function(t3) {
              return F.a.parse(t3);
            } }, { key: "getValue", value: function() {
              return this.state.value;
            } }, { key: "modifyData", value: function() {
              this.parent.trigger(this.props.onchange, this.props.key, this.getValue());
            } }, { key: "makeItem", value: function() {
              return `
            <div class='item'>
                <div class='value'>
                    <object refClass="RangeEditor" 
                        label='`.concat(this.state.label, `' 
                        ref='$value' 
                        key="value" 
                        value="`).concat(this.state.value, `" 
                        units='px,em,%'
                        onchange="changeKeyValue" />
                </div>
            </div>
        `);
            } }, { key: Object(V.LOAD)("$list"), value: function() {
              return this.makeItem();
            } }, { key: "template", value: function() {
              return "\n            <div class='grid-gap-editor' ref='$body' >\n                <div class='grid-gap-editor-item'>\n                    <div ref='$list'></div>\n                </div>\n            </div>\n        ";
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeKeyValue"), value: function(t3, e3) {
              this.state.value = e3, this.modifyData();
            } }]), n2;
          }(J.a);
          n(188);
          function Gi(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Hi(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Gi(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Gi(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Ki(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Yi = function(t2) {
            s()(n2, t2);
            var e2 = Ki(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return Hi({}, Object(X.STRING_TO_CSS)(this.props.value));
            } }, { key: "setValue", value: function(t3) {
              this.setState(Hi({}, Object(X.STRING_TO_CSS)(t3)));
            } }, { key: "getValue", value: function() {
              return Object(X.CSS_TO_STRING)(this.state);
            } }, { key: "modifyData", value: function() {
              this.parent.trigger(this.props.onchange, this.props.key, this.getValue());
            } }, { key: "template", value: function() {
              return "\n            <div class='elf--grid-layout-editor' ref='$body' ></div>\n        ";
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              return `
            <div class='grid-layout-item'>
                <object refClass="GridBoxEditor" 
                    label='`.concat(this.$i18n("grid.layout.editor.template.columns"), `'
                    ref='$columnBox'
                    key='grid-template-columns'
                    value="`).concat(this.state["grid-template-columns"] || "", `"
                    onchange='changeKeyValue'
                />
            </div>
            <div class='grid-layout-item'>
                <object refClass="GridGapEditor" 
                    label='`).concat(this.$i18n("grid.layout.editor.column.gap"), `'
                    key='grid-column-gap'
                    value="`).concat(this.state["grid-column-gap"] || "", `"
                    onchange='changeKeyValue'
                />
            </div>            
            <div class='grid-layout-item'>
                <object refClass="GridBoxEditor" 
                    label='`).concat(this.$i18n("grid.layout.editor.template.rows"), `'
                    ref='$rowBox'
                    key='grid-template-rows'
                    value="`).concat(this.state["grid-template-rows"] || "", `"
                    onchange='changeKeyValue'
                />
            </div>            
            <div class='grid-layout-item'>
                <object refClass="GridGapEditor" 
                    label='`).concat(this.$i18n("grid.layout.editor.row.gap"), `'                
                    key='grid-row-gap'
                    value="`).concat(this.state["grid-row-gap"] || "", `"
                    onchange='changeKeyValue'
                />
            </div>
        `);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeKeyValue"), value: function(t3, e3, n3) {
              this.setState(M()({}, t3, e3), false), this.modifyData();
            } }]), n2;
          }(J.a);
          function Xi(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Wi(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Zi = function(t2) {
            s()(n2, t2);
            var e2 = Wi(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return function(t3) {
                for (var e3 = 1; e3 < arguments.length; e3++) {
                  var n3 = arguments[e3] != null ? arguments[e3] : {};
                  e3 % 2 ? Xi(Object(n3), true).forEach(function(e4) {
                    M()(t3, e4, n3[e4]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(n3)) : Xi(Object(n3)).forEach(function(e4) {
                    Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(n3, e4));
                  });
                }
                return t3;
              }({}, Object(X.STRING_TO_CSS)(this.props.value));
            } }, { key: "setValue", value: function(t3) {
              this.setState(Object(X.STRING_TO_CSS)(t3));
            } }, { key: "getValue", value: function() {
              return Object(X.CSS_TO_STRING)(this.state);
            } }, { key: "modifyData", value: function() {
              this.parent.trigger(this.props.onchange, this.props.key, this.getValue());
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              return "\n            <div class='grid-layout-item'>\n                <div class='label'><label>".concat(this.$i18n("grid.layout.item.editor.direction"), `</label></div>
                <object refClass="SelectIconEditor" 
                    key='grid-direction'
                    value="`).concat(this.state["grid-direction"] || "row", '"\n                    options="').concat(getDirectionOptions(), `"
                    onchange='changeKeyValue'
                />
            </div>
            <div class='grid-layout-item'>
                <div class='label'><label>`).concat(this.$i18n("grid.layout.item.editor.wrap"), `</label></div>
                <object refClass="SelectIconEditor" 
                    key='grid-wrap'
                    value="`).concat(this.state["grid-wrap"] || "wrap", '"\n                    options="').concat(getWrapOptions(), `"
                    onchange='changeKeyValue'
                />
            </div>
            <div class='grid-layout-item'>
                <div class='label'><label>`).concat(this.$i18n("grid.layout.item.editor.justify-content"), `</label></div>
                <object refClass="SelectIconEditor" 
                    key='justify-content'
                    value="`).concat(this.state["justify-content"], '"\n                    options="').concat(getJustifyContentOptions(), `"
                    onchange='changeKeyValue'
                />
            </div>
            <div class='grid-layout-item'>
                <div class='label'><label>`).concat(this.$i18n("grid.layout.item.editor.align-items"), `</label></div>
                <object refClass="SelectIconEditor" 
                    key='align-items'
                    value="`).concat(this.state["align-items"], '"\n                    options="').concat(getAlignItemsOptions(), `"
                    onchange='changeKeyValue'
                />
            </div>
            <div class='grid-layout-item'>
                <div class='label'><label>`).concat(this.$i18n("grid.layout.item.editor.align-content"), `</label></div>
                <object refClass="SelectIconEditor" 
                    key='align-content'
                    value="`).concat(this.state["align-content"], '"\n                    options="').concat(getAlignContentOptions(), `"
                    onchange='changeKeyValue'
                />
            </div>    
        `);
            } }, { key: "template", value: function() {
              return "\n            <div class='grid-layout-editor' ref='$body' ></div>\n        ";
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeKeyValue"), value: function(t3, e3, n3) {
              this.setState(M()({}, t3, e3), false), this.modifyData();
            } }]), n2;
          }(J.a);
          n(189);
          function qi(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Ji = function(t2) {
            s()(n2, t2);
            var e2 = qi(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("grid.layout.item.property.title");
            } }, { key: "getLayoutOptions", value: function() {
              var t3 = this;
              return this.variable(["none", "value"].map(function(e3) {
                return { value: e3, text: t3.$i18n("grid.layout.item.property.".concat(e3)) };
              }));
            } }, { key: "getClassName", value: function() {
              return "elf--grid-layout-item-property";
            } }, { key: "getBody", value: function() {
              return "\n        <div class='property-item' ref='$body'></div>\n      ";
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = this.$selection.current || { "grid-layout-item": "none" }, e3 = t3["grid-layout-item"] || "none", n3 = {};
              return ["none"].includes(e3) === false && (n3 = Object(X.STRING_TO_CSS)(t3["grid-layout-item"])), Object.keys(n3).length > 0 && (e3 = "value"), `
      <div class='layout-select'>
        <object refClass="SelectIconEditor" 
        ref='$layout' 
        key='layout' 
        icon="true" 
        value="`.concat(e3, '"\n        options="').concat(this.getLayoutOptions(), `"  
        onchange="changeLayoutType" />
      </div>
      <div class='layout-list' ref='$layoutList' data-selected-value='`).concat(e3, "'>\n        <div data-value='none'></div>\n        <div data-value='value'>\n          <div class='value-item'>\n            <label></label>\n            <div>").concat(this.$i18n("grid.layout.item.property.start"), "</div>\n            <div>").concat(this.$i18n("grid.layout.item.property.end"), "</div>\n          </div>\n          <div class='value-item'>\n            <label>").concat(this.$i18n("grid.layout.item.property.column"), `</label>
            <div>
              <object refClass="NumberInputEditor"  ref='$columnStart' key="grid-column-start" value="`).concat(n3["grid-column-start"] || "0", `" min='0' onchange='changeGridItem' />
            </div>
            <div>
              <object refClass="NumberInputEditor"  ref='$columnEnd' key="grid-column-end" value="`).concat(n3["grid-column-end"] || "0", `" min='0' onchange='changeGridItem' />
            </div>            
          </div>
          <div class='value-item'>
            <label>`).concat(this.$i18n("grid.layout.item.property.row"), `</label>
            <div>
              <object refClass="NumberInputEditor"  ref='$rowStart' key="grid-row-start" value="`).concat(n3["grid-row-start"] || "0", `" min='0' onchange='changeGridItem' />
            </div>
            <div>
              <object refClass="NumberInputEditor"  ref='$rowEnd' key="grid-row-end" value="`).concat(n3["grid-row-end"] || "0", `" min='0' onchange='changeGridItem' />
            </div>            
          </div>          
        </div>
      </div>
    `);
            } }, { key: "getGridValue", value: function() {
              var t3 = { "grid-column-start": this.children.$columnStart.getValue(), "grid-column-end": this.children.$columnEnd.getValue(), "grid-row-start": this.children.$rowStart.getValue(), "grid-row-end": this.children.$rowEnd.getValue() };
              return Object(X.CSS_TO_STRING)(t3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeGridItem"), value: function(t3, e3) {
              var n3 = this;
              this.command("setAttributeForMulti", "change grid layout item", this.$selection.packByValue({ "grid-layout-item": this.getGridValue() })), this.nextTick(function() {
                n3.emit("refreshAllElementBoundSize");
              });
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeLayoutType"), value: function(t3, e3) {
              var n3 = this, r2 = this.children.$layout.getValue();
              e3 = r2;
              r2 === "value" && (e3 = this.getGridValue()), this.command("setAttributeForMulti", "change grid layout item", this.$selection.packByValue({ "grid-layout-item": e3 })), this.refs.$layoutList.attr("data-selected-value", r2), this.nextTick(function() {
                n3.emit("refreshAllElementBoundSize");
              });
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.DEBOUNCE)(100), value: function() {
              var t3 = this;
              this.refreshShow(function() {
                var e3 = t3.$selection.current;
                return e3 && e3.isInGrid();
              });
            } }]), n2;
          }($.a);
          n(190);
          function Qi(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var ta = function(t2) {
            s()(n2, t2);
            var e2 = Qi(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("layout.property.title");
            } }, { key: "getLayoutOptions", value: function() {
              var t3 = this;
              return this.variable(["default", "flex", "grid"].map(function(e3) {
                return { value: e3, text: t3.$i18n("layout.property.".concat(e3)) };
              }));
            } }, { key: "getClassName", value: function() {
              return "elf--layout-property";
            } }, { key: "getBody", value: function() {
              return "\n        <div class='property-item' ref='$layoutType'></div>\n      ";
            } }, { key: Object(V.LOAD)("$layoutType"), value: function() {
              var t3 = this.$selection.current || { layout: "default" };
              return `
      <div class='layout-select'>
        <object refClass="SelectIconEditor" 
          ref='$layout' 
          key='layout' 
          icon="true" 
          value="`.concat(t3.layout, '"\n          options="').concat(this.getLayoutOptions(), `"  
          colors=",green,red"
          onchange="changeLayoutType" />
      </div>
      <div class='layout-list' ref='$layoutList'>
        <div data-value='default' class='`).concat(t3.layout === "default" ? "selected" : "", "'></div>\n        <div data-value='flex' class='").concat(t3.layout === "flex" ? "selected" : "", `'>
          <object refClass="FlexLayoutEditor" ref='$flex' key='flex-layout' value="`).concat(t3["flex-layout"] || "", `" onchange='changeLayoutInfo' />
        </div>
        <div data-value='grid' class='`).concat(t3.layout === "grid" ? "selected" : "", `'>
          <object refClass="GridLayoutEditor" ref='$grid' key='grid-layout' value="`).concat(t3["grid-layout"] || "", `" onchange='changeLayoutInfo' />
        </div>
      </div>
    `);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeLayoutInfo"), value: function(t3, e3) {
              var n3 = this;
              this.command("setAttributeForMulti", "change layout info", this.$selection.packByValue(M()({}, t3, e3))), this.nextTick(function() {
                n3.emit("refreshAllElementBoundSize");
              });
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeLayoutType"), value: function(t3, e3) {
              var n3 = this;
              this.$selection.reset(this.$selection.packByValue(M()({}, t3, e3))), this.command("setAttributeForMulti", "change layout type", this.$selection.packByValue(M()({}, t3, e3))), this.nextTick(function() {
                n3.refresh(), n3.emit("refreshAllElementBoundSize"), n3.emit("changeItemLayout");
              });
            } }, { key: "editableProperty", get: function() {
              return "layout";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }]), n2;
          }($.a), ea = [{ key: "check", title: "Check", execute: function() {
            return [{ pattern: "check(20px 20px, 10px 10px, black, transparent)" }, { pattern: "check(40px 40px, 20px 20px, black, transparent)" }, { pattern: "check(60px 60px, 30px 30px, #DDB104, rgba(254,240,188,0))" }, { pattern: "check(80px 80px, 40px 40px, #DDB104, rgba(254,240,188,0))" }, { pattern: "check(100px 100px, 50px 50px, #DCF3DC, transparent)" }, { pattern: "check(200px 200px, 100px 100px, #102C45, transparent)" }];
          } }, { key: "grid", title: "Grid", execute: function() {
            return [{ pattern: "grid(20px 20px, 10px 10px, black, transparent)" }, { pattern: "grid(40px 40px, 20px 20px, black, transparent)" }, { pattern: "grid(60px 60px, 30px 30px, #DDB104, rgba(254,240,188,0))" }, { pattern: "grid(80px 80px, 40px 40px, #DDB104, rgba(254,240,188,0))" }, { pattern: "grid(100px 100px, 50px 50px, #DCF3DC, transparent)" }, { pattern: "grid(200px 200px, 100px 100px, #102C45, transparent)" }];
          } }, { key: "dot", title: "Dot", execute: function() {
            return [{ pattern: "dot(20px 20px, 10px 10px, #B7C4CD, white, normal, 1px)" }, { pattern: "dot(40px 40px, 20px 20px, #E7393F, #FEF0BC, normal, 2px)" }, { pattern: "dot(60px 60px, 30px 30px, #E7393F, black, normal, 3px)" }, { pattern: "dot(80px 80px, 40px 40px, #B7C4CD, white, normal, 4px)" }];
          } }, { key: "cross-dot", title: "Cross Dot", execute: function() {
            return [{ pattern: "cross-dot(20px 20px, 10px 10px, #B7C4CD, white, normal, 1px)" }, { pattern: "cross-dot(40px 40px, 20px 20px, #DDB104, #FEF0BC, normal, 4px)" }, { pattern: "cross-dot(60px 60px, 30px 30px, #35DB92, #DCF9EC, normal, 6px)" }];
          } }, { key: "diagonal-line", title: "Diagonal Line", execute: function() {
            return [{ pattern: "diagonal-line(10px 10px, 45deg, #B7C4CD, white, normal, 1px)" }, { pattern: "diagonal-line(25px 25px, 90deg, #DDB104, #FEF0BC, normal, 2px)" }, { pattern: "diagonal-line(50px 50px, 135deg, #35DB92, #DCF9EC, normal, 3px)" }];
          } }, { key: "vertical-line", title: "Vertical Line", execute: function() {
            return [{ pattern: "vertical-line(10px 10px, 0, #B7C4CD, white, normal, 1px)" }, { pattern: "vertical-line(25px 25px, 0, #DDB104, #FEF0BC, normal, 2px)" }, { pattern: "vertical-line(50px 50px, 0, black, rgba(231,57,63,0.9), normal, 1px)" }];
          } }, { key: "horizontal-line", title: "Horizontal Line", execute: function() {
            return [{ pattern: "horizontal-line(10px 10px, 0, #B7C4CD, white, normal, 1px)" }, { pattern: "horizontal-line(25px 25px, 0, #DDB104, #FEF0BC, normal, 2px)" }, { pattern: "horizontal-line(50px 50px, 0, #35DB92, #DCF9EC, normal, 3px)" }];
          } }], na = n(43);
          n(191);
          function ra(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var ia = function(t2) {
            s()(n2, t2);
            var e2 = ra(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("pattern.asset.property.title");
            } }, { key: "initState", value: function() {
              return { mode: "grid", preset: "check" };
            } }, { key: "getTools", value: function() {
              var t3 = this.variable(ea.map(function(t4) {
                return { value: t4.key, text: t4.title };
              }));
              return '\n      <object refClass="SelectEditor"  key="preset" value="'.concat(this.state.preset, '" options="').concat(t3, '" onchange="changePreset"  />\n    ');
            } }, { key: Object(V.SUBSCRIBE_SELF)("changePreset"), value: function(t3, e3) {
              this.setState(M()({}, t3, e3));
            } }, { key: "getClassName", value: function() {
              return "elf--pattern-assets-property";
            } }, { key: "editableProperty", get: function() {
              return "pattern";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.DEBOUNCE)(100) + Object(V.IF)("checkShow"), value: function() {
            } }, { key: "getBody", value: function() {
              return "\n      <div class='property-item pattern-assets'>\n        <div class='pattern-list' ref='$patternList' data-view-mode='".concat(this.state.mode, "'></div>\n      </div>\n    ");
            } }, { key: Object(V.DRAGSTART)("$patternList .pattern-item"), value: function(t3) {
              var e3 = t3.$dt.attr("data-pattern");
              t3.dataTransfer.effectAllowed = "copy", t3.dataTransfer.setData("text/pattern", e3);
            } }, { key: Object(V.LOAD)("$patternList"), value: function() {
              var t3 = this, e3 = ea.find(function(e4) {
                return e4.key === t3.state.preset;
              });
              return e3 ? e3.execute().map(function(t4, e4) {
                var n3 = Object(X.CSS_TO_STRING)(na.a.toCSS(t4.pattern));
                return `
        <div class='pattern-item' data-index="`.concat(e4, '" data-pattern="').concat(t4.pattern, `">
          <div class='preview' title="`).concat(t4.title, `" draggable="true">
            <div class='pattern-view' style='`).concat(n3, "'></div>\n          </div>\n        </div>\n      ");
              }) : "";
            } }, { key: Object(V.CLICK)("$patternList .pattern-item"), value: function(t3) {
              var e3 = t3.$dt.attr("data-pattern");
              this.$editor.modeView === "CanvasView" ? this.emit("addBackgroundImagePattern", e3) : this.emit("setPatternAsset", e3);
            } }]), n2;
          }($.a);
          n(192);
          function aa(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var oa = function(t2) {
            s()(n2, t2);
            var e2 = aa(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { hideLabel: this.props["hide-label"] === "true", value: this.props.value, patterns: this.parsePattern(this.props.value) };
            } }, { key: "parsePattern", value: function(t3) {
              return na.a.parseStyle(t3);
            } }, { key: "setValue", value: function(t3) {
              this.setState({ value: t3, patterns: this.parsePattern(t3) });
            } }, { key: "template", value: function() {
              var t3 = this.state.hideLabel ? "hide" : "";
              return "\n            <div class='elf--pattern-editor' >\n                <div class='label ".concat(t3, "'>\n                    <label>").concat(this.props.title || "", `</label>
                    <div class='tools'>
                        <button type="button" ref='$add'>`).concat(D.a.add, " ").concat(this.props.title ? "" : "Add", "</button>\n                    </div>\n                </div>\n                <div class='pattern-list' ref='$patternList'></div>\n            </div>\n        ");
            } }, { key: Object(V.LOAD)("$patternList"), value: function() {
              var t3 = this;
              return this.state.patterns.map(function(e3, n3) {
                var r2 = e3.selected ? "selected" : "";
                return e3.selected && (t3.selectedIndex = n3), "\n            <div class='pattern-item ".concat(r2, "' data-index='").concat(n3, `' ref="fillIndex`).concat(n3, `"  draggable='true'>
                <object refClass="PatternSizeEditor" 
                    key="pattern-size"
                    ref="$bp`).concat(n3, '"\n                    type="').concat(e3.type, '"\n                    x="').concat(e3.x, '"\n                    y="').concat(e3.y, '"\n                    width="').concat(e3.width, '"\n                    height="').concat(e3.height, '"\n                    index="').concat(n3, '"\n                    foreColor="').concat(e3.foreColor, '"\n                    backColor="').concat(e3.backColor, '"\n                    blendMode="').concat(e3.blendMode, '"\n                    lineWidth="').concat(e3.lineWidth, '"\n                    lineHeight="').concat(e3.lineHeight, `"
                    onchange='changePatternSizeInfo' />
                <div class='tools'>
                    <button type="button" class='remove' title='Remove a pattern' data-index='`).concat(n3, "'>").concat(D.a.remove, "</button>\n                </div>\n            </div>\n            ");
              });
            } }, { key: "modifyPattern", value: function() {
              var t3 = na.a.join(this.state.patterns);
              this.parent.trigger(this.props.onchange, this.props.key, t3);
            } }, { key: Object(V.SUBSCRIBE)("add"), value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "check", e3 = ea.find(function(e4) {
                return e4.key === t3;
              });
              e3 && (this.state.patterns.push.apply(this.state.patterns, na.a.parseStyle(e3.execute()[0].pattern)), this.refresh(), this.modifyPattern());
            } }, { key: Object(V.CLICK)("$add"), value: function() {
              this.trigger("add");
            } }, { key: Object(V.DRAGSTART)("$patternList .pattern-item"), value: function(t3) {
              this.startIndex = +t3.$dt.attr("data-index");
            } }, { key: Object(V.DRAGOVER)("$patternList .pattern-item") + V.PREVENT, value: function(t3) {
            } }, { key: "sortItem", value: function(t3, e3, n3) {
              t3.splice.apply(t3, [n3 + (e3 < n3 ? -1 : 0), 0].concat(ht()(t3.splice(e3, 1))));
            } }, { key: "sortPattern", value: function(t3, e3) {
              this.sortItem(this.state.patterns, t3, e3);
            } }, { key: Object(V.DROP)("$patternList .pattern-item") + V.PREVENT, value: function(t3) {
              var e3 = +t3.$dt.attr("data-index");
              this.selectItem(this.startIndex, true), this.sortPattern(this.startIndex, e3), this.modifyPattern(), this.refresh();
            } }, { key: "getCurrentPattern", value: function() {
              return this.state.patterns[this.selectedIndex];
            } }, { key: Object(V.CLICK)("$patternList .tools .remove"), value: function(t3) {
              var e3 = +t3.$dt.attr("data-index");
              this.state.patterns.splice(e3, 1), this.modifyPattern(), this.refresh();
            } }, { key: "selectItem", value: function(t3) {
              var e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1];
              e3 ? this.refs["fillIndex".concat(t3)].addClass("selected") : this.refs["fillIndex".concat(t3)].removeClass("selected"), this.state.patterns.forEach(function(e4, n3) {
                e4.selected = n3 === t3;
              });
            } }, { key: Object(V.SUBSCRIBE)("changePatternSizeInfo") + Object(V.DEBOUNCE)(10), value: function(t3, e3, n3) {
              this.state.patterns[n3].reset(e3), this.modifyPattern(), this.refresh();
            } }]), n2;
          }(J.a);
          function ca(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var sa = function(t2) {
            s()(n2, t2);
            var e2 = ca(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("pattern.info.popup.title");
            } }, { key: "initState", value: function() {
              return { type: this.props.type || "grid", x: this.props.x || F.a.z(), y: this.props.y || F.a.z(), width: this.props.width || F.a.z(), height: this.props.height || F.a.z(), lineWidth: this.props.lineWidth || F.a.px(1), lineHeight: this.props.lineHeight || F.a.px(1), foreColor: this.props.foreColor || "black", backColor: this.props.backColor || "transparent", blendMode: this.props.blendMode || "normal" };
            } }, { key: "updateData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.setState(t3, false);
              var e3 = this.state, n3 = e3.x, r2 = e3.y, i2 = e3.width, a2 = e3.height, o2 = e3.foreColor, c2 = e3.backColor, s2 = e3.blendMode, u2 = e3.lineWidth, l2 = e3.lineHeight;
              this.state.instance.trigger(this.state.changeEvent, { x: n3, y: r2, width: i2, height: a2, foreColor: o2, backColor: c2, blendMode: s2, lineWidth: u2, lineHeight: l2 }, this.state.params);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeRangeEditor"), value: function(t3, e3) {
              this.updateData(M()({}, t3, e3));
            } }, { key: "templateForX", value: function() {
              if (this.hasNotX())
                return "";
              var t3 = "X", e3 = "";
              return this.state.type === "diagonal-line" && (t3 = this.$i18n("pattern.info.popup.rotate"), e3 = "deg"), `
      <div class='popup-item'>
        <object refClass="RangeEditor"  
            label="`.concat(t3, '"\n            calc="false"            \n            ref="$x" \n            key="x"\n            value="').concat(this.state.x, '"\n            min="0" max="1000" step="1"\n            units="').concat(e3, '"\n            onchange="changeRangeEditor"\n        />\n      </div>\n    ');
            } }, { key: "templateForY", value: function() {
              return this.hasNotY() ? "" : `
      <div class='popup-item'>
        <object refClass="RangeEditor"  
            label="Y" 
            calc="false"       
            ref="$y" 
            key="y"
            value="`.concat(this.state.y, '"            \n            min="0" max="1000" step="1"\n            onchange="changeRangeEditor"\n        />\n      </div>\n    ');
            } }, { key: "templateForWidth", value: function() {
              return `
    <div class='popup-item'>
      <object refClass="RangeEditor"  
          label="`.concat(this.$i18n("pattern.info.popup.width"), '"   \n          calc="false"             \n          ref="$width" \n          key="width"\n          value="').concat(this.state.width, '"          \n          min="0" max="500" step="1" \n          onchange="changeRangeEditor"\n      />\n    </div>\n    ');
            } }, { key: "templateForHeight", value: function() {
              return `
    <div class='popup-item'>
      <object refClass="RangeEditor"  
          label="`.concat(this.$i18n("pattern.info.popup.height"), '"\n          calc="false"          \n          ref="$height" \n          key="height"\n          value="').concat(this.state.height, '"          \n          min="0" max="500" step="1" onchange="changeRangeEditor"\n      />\n    </div>\n    ');
            } }, { key: "hasNotLineWidth", value: function() {
              return ["check"].includes(this.state.type);
            } }, { key: "hasNotLineHeight", value: function() {
              return ["cross-dot", "dot", "check", "diagonal-line", "horizontal-line"].includes(this.state.type);
            } }, { key: "hasNotX", value: function() {
              return ["grid", "dot", "horizontal-line"].includes(this.state.type);
            } }, { key: "hasNotY", value: function() {
              return ["grid", "dot", "diagonal-line", "vertical-line"].includes(this.state.type);
            } }, { key: "templateForLineWidth", value: function() {
              return this.hasNotLineWidth() ? "" : `
    <div class='popup-item'>
      <object refClass="RangeEditor"  
          label="`.concat(this.$i18n("pattern.info.popup.lineWidth"), '"   \n          calc="false"             \n          ref="$lineWidth" \n          key="lineWidth"\n          value="').concat(this.state.lineWidth, '"          \n          min="0" max="500" step="1" \n          onchange="changeRangeEditor"\n      />\n    </div>\n    ');
            } }, { key: "templateForLineHeight", value: function() {
              return this.hasNotLineHeight() ? "" : `
    <div class='popup-item'>
      <object refClass="RangeEditor"  
          label="`.concat(this.$i18n("pattern.info.popup.lineHeight"), '"\n          calc="false"          \n          ref="$lineHeight" \n          key="lineHeight"\n          value="').concat(this.state.lineHeight, '"          \n          min="0" max="500" step="1" onchange="changeRangeEditor"\n      />\n    </div>\n    ');
            } }, { key: "templateForForeColor", value: function() {
              return `
      <div class='popup-item'>
        <object refClass="ColorViewEditor" 
            ref='$foreColor' 
            label="`.concat(this.$i18n("pattern.info.popup.foreColor"), `" 
            key='foreColor' 
            value="`).concat(this.state.foreColor, '"\n            onchange="changeRangeEditor" />\n      </div>\n    ');
            } }, { key: "templateForBackColor", value: function() {
              return `
      <div class='popup-item'>
        <object refClass="ColorViewEditor" 
            ref='$backColor' 
            label="`.concat(this.$i18n("pattern.info.popup.backColor"), `" 
            key='backColor' 
            value="`).concat(this.state.backColor, '"\n            onchange="changeRangeEditor" />\n      </div>\n    ');
            } }, { key: "templateForBlendMode", value: function() {
              return `
    <div class='popup-item'>
      <object refClass="BlendSelectEditor" 
            ref='$blend' 
            key='blendMode' 
            label="`.concat(this.$i18n("pattern.info.popup.blend"), '"\n            value="').concat(this.state.blendMode, '" \n            onchange="changeRangeEditor" \n        />\n    </div>\n    ');
            } }, { key: "getBody", value: function() {
              return `
      <div class="background-image-position-picker" ref='$picker'></div>
    `;
            } }, { key: Object(V.LOAD)("$picker"), value: function() {
              return "\n      \n      <div class='box'>\n\n        <div class='background-property'>      \n          ".concat(this.templateForWidth(), "\n          ").concat(this.templateForHeight(), "        \n          ").concat(this.templateForLineWidth(), "\n          ").concat(this.templateForLineHeight(), "                  \n          ").concat(this.templateForX(), "\n          ").concat(this.templateForY(), "\n          ").concat(this.templateForForeColor(), "\n          ").concat(this.templateForBackColor(), "\n          ").concat(this.templateForBlendMode(), "\n        </div>\n      </div>\n    ");
            } }, { key: Object(V.SUBSCRIBE)("showPatternInfoPopup"), value: function(t3, e3) {
              this.state.changeEvent = t3.changeEvent || "changePatternInfoPopup", this.state.params = e3, this.state.instance = t3.instance, this.setState(t3.data), this.show(460);
            } }]), n2;
          }(tt), ua = ["check", "grid", "dot", "cross-dot", "diagonal-line", "vertical-line", "horizontal-line"];
          function la(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var fa = function(t2) {
            s()(n2, t2);
            var e2 = la(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("pattern.property.title");
            } }, { key: "hasKeyframe", value: function() {
              return true;
            } }, { key: "getKeyframeProperty", value: function() {
              return "pattern";
            } }, { key: "getTitleClassName", value: function() {
              return "pattern";
            } }, { key: "getBody", value: function() {
              return "<div class='full pattern-property' ref='$body'></div>";
            } }, { key: "getTools", value: function() {
              return '\n      <select ref="$patternSelect">      \n      </select>\n      <button type="button" ref="$add" title="add Pattern">'.concat(D.a.add, "</button>\n    ");
            } }, { key: Object(V.CLICK)("$add"), value: function() {
              var t3 = this.refs.$patternSelect.value;
              this.children.$patternEditor.trigger("add", t3);
            } }, { key: Object(V.LOAD)("$patternSelect"), value: function() {
              var t3 = this, e3 = ua.map(function(e4) {
                return { title: t3.$i18n("pattern.property.".concat(e4)), value: e4 };
              });
              return ht()(e3).map(function(t4) {
                var e4 = t4.title, n3 = t4.value;
                return "<option value='".concat(n3, "'>").concat(e4, "</option>");
              });
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = (this.$selection.current || {}).pattern;
              return `<object refClass="PatternEditor" ref='$patternEditor' value='`.concat(t3, "' hide-label='true' onchange='changePatternEditor' />");
            } }, { key: Object(V.SUBSCRIBE_SELF)("changePatternEditor"), value: function(t3, e3) {
              this.command("setAttributeForMulti", "change pattern", this.$selection.packByValue({ pattern: e3 }));
            } }, { key: "editableProperty", get: function() {
              return "pattern";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }, { key: Object(V.SUBSCRIBE)("refreshSVGArea") + Object(V.DEBOUNCE)(1e3), value: function() {
              this.load("$patternSelect");
            } }]), n2;
          }($.a);
          n(193);
          function ha(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function pa(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? ha(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : ha(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function da(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var va = function(t2) {
            s()(n2, t2);
            var e2 = da(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { index: this.props.index, x: F.a.parse(this.props.x), y: F.a.parse(this.props.y), width: F.a.parse(this.props.width), height: F.a.parse(this.props.height), lineWidth: F.a.parse(this.props.linewidth), lineHeight: F.a.parse(this.props.lineheight), backColor: this.props.backcolor, foreColor: this.props.forecolor, blendMode: this.props.blendmode, type: this.props.type };
            } }, { key: "updateData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.setState(t3, false), this.modifyValue(t3);
            } }, { key: "modifyValue", value: function(t3) {
              this.parent.trigger(this.props.onchange, this.props.key, t3, this.state.index);
            } }, { key: "setValue", value: function(t3) {
              this.setState(pa({}, t3));
            } }, { key: Object(V.BIND)("$miniView"), value: function() {
              var t3 = pa({}, this.state);
              return this.state.width.value > 80 && (t3.width = F.a.px(80), t3.x = F.a.px(t3.x.value / this.state.width.value / 80)), this.state.height.value > 80 && (t3.height = F.a.px(80), t3.y = F.a.px(this.state.y.value / this.state.height.value / 80)), { cssText: na.a.parse(t3).toCSS() };
            } }, { key: "template", value: function() {
              return `
            <div class='elf--pattern-size-editor'>
                <div class='preview' ref='$preview'>
                    <div class='mini-view'>
                        <div class='color-view' style="background-color: `.concat(this.state.color, `" ref='$miniView'></div>
                    </div>
                </div>
            </div>
        `);
            } }, { key: Object(V.CLICK)("$preview"), value: function(t3) {
              this.viewBackgroundPositionPopup();
            } }, { key: "viewBackgroundPositionPopup", value: function() {
              var t3 = this;
              this.emit("showPatternInfoPopup", { changeEvent: function(e3) {
                t3.updateData(pa({}, e3));
              }, data: this.state, instance: this });
            } }]), n2;
          }(J.a);
          function ya(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var ga = function(t2) {
            s()(n2, t2);
            var e2 = ya(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("perspective.property.title");
            } }, { key: "getKeyframeProperty", value: function() {
              return "perspective";
            } }, { key: "getTools", value: function() {
              return `
        <button type="button" class="remove" ref='$remove'>`.concat(D.a.remove, "</button>\n    ");
            } }, { key: Object(V.CLICK)("$remove"), value: function() {
              this.trigger("changePerspective", "perspective", "");
            } }, { key: "getBody", value: function() {
              return "<div class='property-item' ref='$perspective'></div>";
            } }, { key: Object(V.LOAD)("$perspective"), value: function() {
              var t3 = (this.$selection.current || {}).perspective || "";
              return `
        <object refClass="RangeEditor"  ref='$1' key='perspective' value="`.concat(t3, '" max="2000px" onchange="changePerspective" />\n    ');
            } }, { key: Object(V.SUBSCRIBE_SELF)("changePerspective"), value: function(t3, e3) {
              this.command("setAttributeForMulti", "change perspective", this.$selection.packByValue(M()({}, t3, e3)));
            } }, { key: "editableProperty", get: function() {
              return "perspective";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.DEBOUNCE)(100) + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }]), n2;
          }($.a);
          n(194);
          function ma(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var ba = [{ key: "perspective-origin-x", title: "X" }, { key: "perspective-origin-y", title: "Y" }], ka = ba.map(function(t2) {
            return t2.key;
          }), Oa = { top: "50% 0%", "top left": "0% 0%", "top right": "100% 0%", left: "0% 50%", center: "50% 50%", right: "100% 50%", bottom: "50% 100%", "bottom left": "0% 100%", "bottom right": "100% 100%" }, xa = function(t2) {
            s()(n2, t2);
            var e2 = ma(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              var t3 = this.props.value.split(" "), e3 = { isAll: true, "perspective-origin": F.a.z(), "perspective-origin-x": F.a.z(), "perspective-origin-y": F.a.z() };
              return this.props.value && (t3.length === 1 ? (e3.isAll = true, e3["perspective-origin"] = F.a.parse(t3[0]), e3["perspective-origin-x"] = F.a.parse(t3[0]), e3["perspective-origin-y"] = F.a.parse(t3[0])) : t3.length == 2 && (e3.isAll = false, e3["perspective-origin-x"] = F.a.parse(t3[0]), e3["perspective-origin-y"] = F.a.parse(t3[1]))), e3;
            } }, { key: "template", value: function() {
              return "\n      <div class='elf--perspective-origin-editor' ref='$body'>\n        <div class='direction' ref='$direction'>\n          <div class='pos' data-value='top'></div>\n          <div class='pos' data-value='top left'></div>\n          <div class='pos' data-value='top right'></div>\n          <div class='pos' data-value='bottom'></div>\n          <div class='pos' data-value='bottom left'></div>\n          <div class='pos' data-value='bottom right'></div>\n          <div class='pos' data-value='left'></div>\n          <div class='pos' data-value='right'></div>\n          <div class='pos' data-value='center'></div>\n        </div>\n        <div ref='$body'></div>\n      </div>\n    ";
            } }, { key: Object(V.CLICK)("$direction .pos"), value: function(t3) {
              var e3 = t3.$dt.attr("data-value");
              this.state.isAll = false;
              var n3 = Oa[e3].split(" "), r2 = be()(n3, 2), i2 = r2[0], a2 = r2[1];
              this.state["perspective-origin-x"] = F.a.parse(i2), this.state["perspective-origin-y"] = F.a.parse(a2), this.refresh(), this.modifyPerspectiveOrigin();
            } }, { key: Object(V.SUBSCRIBE_SELF)("changePerspectiveOrigin"), value: function(t3, e3) {
              var n3 = this;
              t3 === "perspective-origin" && ka.forEach(function(t4) {
                n3.children["$".concat(t4)].setValue(e3.toString());
              }), this.setPerspectiveOrigin();
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = this, e3 = this.state.isAll ? "all" : "partitial", n3 = this.state["perspective-origin"];
              return '\n      <div class="property-item perspective-origin-item">\n        <div class="radius-selector" data-selected-value="'.concat(e3, '" ref="$selector">\n          <button type="button" data-value="all">').concat(D.a.border_all, '</button>\n          <button type="button" data-value="partitial">\n            ').concat(D.a.border_inner, `
          </button>
        </div>
        <div class="radius-value">
          <object refClass="RangeEditor"  ref='$all' key='perspective-origin' value="`).concat(n3, `" onchange='changePerspectiveOrigin' />
        </div>
      </div>
      <div
        class="property-item full perspective-origin-item"
        ref="$partitialSetting"
        style="display: none;"
      >
        <div class="radius-setting-box" ref="$radiusSettingBox">
          `).concat(ba.map(function(e4) {
                var n4 = t3.$i18n(e4.title);
                return `
              <div>
                  <object refClass="RangeEditor"  ref='$`.concat(e4.key, "' label='").concat(n4, "' key='").concat(e4.key, `' value="`).concat(t3.state[e4.key], `" onchange='changePerspectiveOrigin' />
              </div>  
            `);
              }).join(""), "\n        </div>\n      </div>\n    ");
            } }, { key: "setPerspectiveOrigin", value: function() {
              var t3 = this;
              this.refs.$selector.attr("data-selected-value") === "all" ? (this.state.isAll = true, this.state["perspective-origin"] = this.children.$all.getValue()) : (this.state.isAll = false, ka.forEach(function(e3) {
                t3.state[e3] = t3.children["$".concat(e3)].getValue();
              })), this.modifyPerspectiveOrigin();
            } }, { key: "modifyPerspectiveOrigin", value: function() {
              var t3 = "";
              t3 = this.state.isAll ? "".concat(this.state["perspective-origin"]) : "".concat(this.state["perspective-origin-x"], " ").concat(this.state["perspective-origin-y"]), this.parent.trigger(this.props.onchange, t3);
            } }, { key: Object(V.CLICK)("$selector button"), value: function(t3) {
              var e3 = t3.$dt.attr("data-value");
              this.refs.$selector.attr("data-selected-value", e3), e3 === "all" ? this.refs.$partitialSetting.hide() : this.refs.$partitialSetting.show("grid"), this.setPerspectiveOrigin();
            } }]), n2;
          }(J.a);
          function ja(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Sa = function(t2) {
            s()(n2, t2);
            var e2 = ja(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("perspective.origin.property.title");
            } }, { key: "getKeyframeProperty", value: function() {
              return "perspective-origin";
            } }, { key: "getTools", value: function() {
              return `
        <button type="button" class="remove" ref='$remove'>`.concat(D.a.remove, "</button>\n    ");
            } }, { key: Object(V.CLICK)("$remove"), value: function() {
              this.trigger("changePerspectiveOrigin", "");
            } }, { key: "getBody", value: function() {
              return `
      <div class="property-item full perspective-origin-item" ref='$body'></div>
    `;
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = (this.$selection.current || {})["perspective-origin"] || "";
              return `<object refClass="PerspectiveOriginEditor" 
              ref='$1' 
              value='`.concat(t3, "' \n              onchange='changePerspectiveOrigin' \n            />");
            } }, { key: "editableProperty", get: function() {
              return "perspective-origin";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.DEBOUNCE)(100) + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }, { key: Object(V.SUBSCRIBE_SELF)("changePerspectiveOrigin"), value: function(t3) {
              this.command("setAttributeForMulti", "change perspective origin", this.$selection.packByValue({ "perspective-origin": t3 }));
            } }]), n2;
          }($.a), Pa = n(26);
          function wa(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Ra = F.a.z(), Ca = function(t2) {
            s()(n2, t2);
            var e2 = wa(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("position.property.title");
            } }, { key: "afterRender", value: function() {
              this.show();
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection"), value: function() {
              this.refreshShowIsNot(["project"]);
            } }, { key: "checkChangedValue", value: function() {
              var t3 = this.$selection.current;
              return !!t3 && t3.hasChangedField("x", "y", "width", "height", "transform", "rotateZ", "rotate", "opacity");
            } }, { key: Object(V.SUBSCRIBE)("refreshSelectionStyleView") + Object(V.IF)("checkChangedValue") + Object(V.THROTTLE)(10), value: function() {
              var t3 = this.$selection.current;
              if (!t3)
                return "";
              this.children.$x.setValue(t3.x || Ra), this.children.$y.setValue(t3.y || Ra), this.children.$width.setValue(t3.width || Ra), this.children.$height.setValue(t3.height || Ra), this.children.$opacity.setValue(t3.opacity || "1");
              var e3 = Pa.a.get(t3.transform, "rotateZ");
              e3 && this.children.$rotate.setValue(e3[0]);
            } }, { key: "isHideHeader", value: function() {
              return true;
            } }, { key: "getBodyClassName", value: function() {
              return "no-padding";
            } }, { key: "getBody", value: function() {
              return `
      <div class="position-item" ref="$positionItem" style='padding: 5px 10px;'>
        <div style='display: grid;grid-template-columns: repeat(2, 1fr); grid-column-gap: 10px;'>
          <div class='property-item animation-property-item' style='padding: 0px;'>
            <div class='group'>
              <span class='add-timeline-property' data-property='x'></span>
            </div>
            <object refClass='InputRangeEditor' ref='$x' compact="true" label="X" key='x' min="-1000" max='1000' onchange='changRangeEditor' />
          </div>
          <div class='property-item animation-property-item' style='padding: 0px;'>
            <div class='group'>
              <span class='add-timeline-property' data-property='y'></span>
            </div>
            <object refClass='InputRangeEditor' ref='$y' compact="true"  label="Y" key='y' min="-1000" max='1000' onchange='changRangeEditor' />
          </div>
        </div>
        <div style='display: grid;grid-template-columns: repeat(2, 1fr); grid-column-gap: 10px; padding-top: 10px;'>
          <div class='property-item animation-property-item' style='padding:0px'>
            <div class='group'>
              <span class='add-timeline-property' data-property='width'></span>
            </div>
            <object refClass='InputRangeEditor' ref='$width' compact="true"  label="`.concat(this.$i18n("position.property.width"), `" key='width' min="0" max='3000' onchange='changRangeEditor' />
          </div>
          <div class='property-item animation-property-item' style='padding:0px'>
            <div class='group'>
              <span class='add-timeline-property' data-property='height'></span>      
            </div>
            <object refClass='InputRangeEditor' ref='$height' compact="true"  label="`).concat(this.$i18n("position.property.height"), `" key='height' min="0" max='3000' onchange='changRangeEditor' />
          </div>      
        </div> 
        <div style='display: grid;grid-template-columns: repeat(2, 1fr); grid-column-gap: 10px; padding-top: 10px;'>
          <div class='property-item animation-property-item'>
            <div class='group'>
              <span class='add-timeline-property' data-property='rotate'></span>
            </div>
            <object refClass='InputRangeEditor' 
              ref='$rotate' 
              key='rotateZ' 
              compact="true" 
              label='rotate_left'
              min="-360"
              max="360"
              step="1"
              units="deg"
              onchange="changeRotate" />
          </div>        

          <div class='property-item animation-property-item'>
            <div class='group'>
              <span class='add-timeline-property' data-property='opacity'></span>
            </div>
            <object refClass="NumberInputEditor"
              ref='$opacity' 
              key='opacity' 
              compact="true" 
              label='opacity'
              min="0"
              max="1"
              step="0.01"
              onchange="changeSelect" />
          </div>        
        </div>                
      </div>
    `);
            } }, { key: "refresh", value: function() {
              var t3 = this.$selection.current;
              if (t3) {
                this.children.$x.setValue(t3.x), this.children.$y.setValue(t3.y), this.children.$width.setValue(t3.width), this.children.$height.setValue(t3.height), this.children.$opacity.setValue(t3.opacity || "1");
                var e3 = Pa.a.get(t3.transform, "rotateZ");
                e3 && this.children.$rotate.setValue(e3[0]);
              }
            } }, { key: Object(V.SUBSCRIBE_SELF)("changRangeEditor"), value: function(t3, e3) {
              var n3 = this;
              this.command("setAttributeForMulti", "change position or size", this.$selection.packByValue(M()({}, t3, e3))), this.nextTick(function() {
                n3.emit("refreshAllElementBoundSize");
              });
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeRotate"), value: function(t3, e3) {
              console.log(e3), this.command("setAttributeForMulti", "change rotate", this.$selection.packByValue({ transform: function(t4) {
                return Pa.a.rotateZ(t4.transform, e3);
              } }));
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeSelect"), value: function(t3, e3) {
              this.command("setAttributeForMulti", "change ".concat(t3), this.$selection.packByValue(M()({}, t3, e3)));
            } }]), n2;
          }($.a);
          n(195);
          function Ea(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var $a = function(t2) {
            s()(n2, t2);
            var e2 = Ea(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              var t3 = this.props.split || ",", e3 = Object(X.isArray)(this.props.options) ? this.props.options.map(function(t4) {
                return Object(X.isString)(t4) ? { value: t4 } : t4;
              }) : (this.props.options || "").split(t3).map(function(t4) {
                return t4.trim();
              }).map(function(t4) {
                var e4 = t4.split(":"), n4 = be()(e4, 2);
                return { value: n4[0], text: n4[1] };
              }), n3 = this.props.value, r2 = this.props.tabindex;
              return { splitChar: t3, label: this.props.label || "", options: e3, value: n3, tabIndex: r2 };
            } }, { key: "template", value: function() {
              var t3 = this.state, e3 = t3.label, n3 = t3.tabIndex ? 'tabIndex="1"' : "";
              return "\n            <div class='elf--select-editor ".concat(e3 ? "has-label" : "", "'>\n                ").concat(e3 ? '<label title="'.concat(e3, '">').concat(e3, "</label>") : "", "\n                <select ref='$options' ").concat(n3, "></select>\n            </div>\n        ");
            } }, { key: "getValue", value: function() {
              return this.refs.$options.value;
            } }, { key: "setValue", value: function(t3) {
              this.state.value = t3 + "", this.refs.$options.val(this.state.value), this.refresh();
            } }, { key: "refresh", value: function() {
              this.load();
            } }, { key: Object(V.BIND)("$options"), value: function() {
              return { "data-count": this.state.options.length.toString() };
            } }, { key: Object(V.LOAD)("$options"), value: function() {
              var t3 = this;
              return this.state.options.map(function(e3) {
                var n3 = e3.value, r2 = e3.text || e3.value;
                r2 === "" ? r2 = t3.props["none-value"] ? t3.props["none-value"] : "" : r2 === "-" && (r2 = "----------", n3 = "");
                var i2 = n3 === t3.state.value ? "selected" : "";
                return "<option ".concat(i2, ' value="').concat(n3, '">').concat(r2, "</option>");
              });
            } }, { key: Object(V.CHANGE)("$options"), value: function() {
              this.updateData({ value: this.refs.$options.value });
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.parent.trigger(this.props.onchange, this.props.key, this.state.value, this.props.params);
            } }]), n2;
          }(J.a);
          function Ia(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Ta(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Ia(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Ia(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Ba(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Ma = ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], Va = function(t2) {
            s()(n2, t2);
            var e2 = Ba(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getBlendList", value: function() {
              var t3 = this;
              return Ma.map(function(e3) {
                return { value: e3, text: t3.$i18n("blend.".concat(e3)) };
              });
            } }, { key: "initState", value: function() {
              return Ta(Ta({}, A()(h()(n2.prototype), "initState", this).call(this)), {}, { options: this.getBlendList() });
            } }]), n2;
          }($a);
          n(196);
          function Da(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var La = function(t2) {
            s()(n2, t2);
            var e2 = Da(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { clippath: this.props.value };
            } }, { key: "updateData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.setState(t3), this.modifyClipPath();
            } }, { key: "getValue", value: function() {
              return this.state.clippath;
            } }, { key: "setValue", value: function(t3) {
              this.setState({ clippath: t3 });
            } }, { key: "modifyClipPath", value: function() {
              this.parent.trigger(this.props.onchange, this.state.clippath, this.props.params);
            } }, { key: "template", value: function() {
              return "\n            <div class='elf--clip-path-editor'></div>\n        ";
            } }, { key: Object(V.LOAD)(), value: function() {
              var t3 = this.state.clippath;
              return "\n        <div class='clippath-item'>\n            <div class='name'>".concat(t3, "</div>\n        </div>\n        ");
            } }, { key: Object(V.CLICK)(), value: function(t3) {
              this.viewClipPathPicker();
            } }, { key: "viewClipPathPicker", value: function() {
              var t3 = this;
              this.emit("showClipPathPopup", { changeEvent: function(e3) {
                t3.updateData({ clippath: e3["clip-path"] });
              }, "clip-path": this.state.clippath });
            } }]), n2;
          }(J.a), Aa = { title: "random", key: "random", execute: function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 42, e2 = Bt.a.randomByCount(t2).map(function(t3) {
              return { color: t3 };
            });
            return e2.sort(function(t3, e3) {
              var n2 = Bt.a.parse(t3.color), r2 = Bt.a.parse(e3.color);
              return n2.h > r2.h ? 1 : -1;
            }), e2;
          } }, Fa = ["#ffebee", "#ffcdd2", "#ef9a9a", "#e57373", "#ef5350", "#f44336", "#e53935", "#d32f2f", "#c62828", "#b71c1c", "#f44336", "#ff8a80", "#ff5252", "#ff1744", "#d50000"].map(function(t2) {
            return { color: t2 };
          }), za = { title: "material red", key: "material-red", execute: function() {
            return Fa;
          } }, Na = ["#fce4ec", "#f8bbd0", "#f48fb1", "#f06292", "#ec407a", "#e91e63", "#d81b60", "#c2185b", "#ad1457", "#880e4f", "#e91e63", "#ff80ab", "#ff4081", "#f50057", "#c51162"].map(function(t2) {
            return { color: t2 };
          }), _a = { title: "material pink", key: "material-pink", execute: function() {
            return Na;
          } }, Ua = ["#f3e5f5", "#e1bee7", "#ce93d8", "#ba68c8", "#ab47bc", "#9c27b0", "#8e24aa", "#7b1fa2", "#6a1b9a", "#4a148c", "#9c27b0", "#ea80fc", "#e040fb", "#d500f9", "#aa00ff"].map(function(t2) {
            return { color: t2 };
          }), Ga = { title: "material purple", key: "material-purple", execute: function() {
            return Ua;
          } }, Ha = ["#ede7f6", "#d1c4e9", "#b39ddb", "#9575cd", "#7e57c2", "#673ab7", "#5e35b1", "#512da8", "#4527a0", "#311b92", "#673ab7", "#b388ff", "#7c4dff", "#651fff", "#6200ea"].map(function(t2) {
            return { color: t2 };
          }), Ka = { title: "material deep purple", key: "material-deeppurple", execute: function() {
            return Ha;
          } }, Ya = ["#e8eaf6", "#c5cae9", "#9fa8da", "#7986cb", "#5c6bc0", "#3f51b5", "#3949ab", "#303f9f", "#283593", "#1a237e", "#3f51b5", "#8c9eff", "#536dfe", "#3d5afe", "#304ffe"].map(function(t2) {
            return { color: t2 };
          }), Xa = { title: "material indigo", key: "material-indigo", execute: function() {
            return Ya;
          } }, Wa = ["#e3f2fd", "#bbdefb", "#90caf9", "#64b5f6", "#42a5f5", "#2196f3", "#1e88e5", "#1976d2", "#1565c0", "#0d47a1", "#2196f3", "#82b1ff", "#448aff", "#2979ff", "#2962ff"].map(function(t2) {
            return { color: t2 };
          }), Za = { title: "material blue", key: "material-blue", execute: function() {
            return Wa;
          } }, qa = ["#e1f5fe", "#b3e5fc", "#81d4fa", "#4fc3f7", "#29b6f6", "#03a9f4", "#039be5", "#0288d1", "#0277bd", "#01579b", "#03a9f4", "#80d8ff", "#40c4ff", "#00b0ff", "#0091ea"].map(function(t2) {
            return { color: t2 };
          }), Ja = { title: "material light blue", key: "material-lightblue", execute: function() {
            return qa;
          } }, Qa = ["#e0f7fa", "#b2ebf2", "#80deea", "#4dd0e1", "#26c6da", "#00bcd4", "#00acc1", "#0097a7", "#00838f", "#006064", "#00bcd4", "#84ffff", "#18ffff", "#00e5ff", "#00b8d4"].map(function(t2) {
            return { color: t2 };
          }), to = { title: "material cyan", key: "material-cyan", execute: function() {
            return Qa;
          } }, eo = ["#e0f2f1", "#b2dfdb", "#80cbc4", "#4db6ac", "#26a69a", "#009688", "#00897b", "#00796b", "#00695c", "#004d40", "#009688", "#a7ffeb", "#64ffda", "#1de9b6", "#00bfa5"].map(function(t2) {
            return { color: t2 };
          }), no = { title: "material teal", key: "material-teal", execute: function() {
            return eo;
          } }, ro = ["#E8F5E9", "#C8E6C9", "#A5D6A7", "#81C784", "#66BB6A", "#4CAF50", "#43A047", "#388E3C", "#2E7D32", "#1B5E20", "#B9F6CA", "#69F0AE", "#00E676", "#00C853"].map(function(t2) {
            return { color: t2 };
          }), io = { title: "material green", key: "material-green", execute: function() {
            return ro;
          } }, ao = ["#F1F8E9", "#DCEDC8", "#C5E1A5", "#AED581", "#9CCC65", "#8BC34A", "#7CB342", "#689F38", "#558B2F", "#33691E", "#CCFF90", "#B2FF59", "#76FF03", "#64DD17"].map(function(t2) {
            return { color: t2 };
          }), oo = { title: "material lightgreen", key: "material-lightgreen", execute: function() {
            return ao;
          } }, co = ["#F9FBE7", "#F0F4C3", "#E6EE9C", "#DCE775", "#D4E157", "#CDDC39", "#C0CA33", "#AFB42B", "#9E9D24", "#827717", "#F4FF81", "#EEFF41", "#C6FF00", "#AEEA00"].map(function(t2) {
            return { color: t2 };
          }), so = { title: "material lime", key: "material-lime", execute: function() {
            return co;
          } }, uo = ["#FFFDE7", "#FFF9C4", "#FFF59D", "#FFF176", "#FFEE58", "#FFEB3B", "#FDD835", "#FBC02D", "#F9A825", "#F57F17", "#FFFF8D", "#FFFF00", "#FFEA00", "#FFD600"].map(function(t2) {
            return { color: t2 };
          }), lo = { title: "material yellow", key: "material-yellow", execute: function() {
            return uo;
          } }, fo = ["#FFF8E1", "#FFECB3", "#FFE082", "#FFD54F", "#FFCA28", "#FFC107", "#FFB300", "#FFA000", "#FF8F00", "#FF6F00", "#FFE57F", "#FFD740", "#FFC400", "#FFAB00"].map(function(t2) {
            return { color: t2 };
          }), ho = { title: "material amber", key: "material-amber", execute: function() {
            return fo;
          } }, po = ["#FFF3E0", "#FFE0B2", "#FFCC80", "#FFB74D", "#FFA726", "#FF9800", "#FB8C00", "#F57C00", "#EF6C00", "#E65100", "#FFD180", "#FFAB40", "#FF9100", "#FF6D00"].map(function(t2) {
            return { color: t2 };
          }), vo = { title: "material orange", key: "material-orange", execute: function() {
            return po;
          } }, yo = ["#FBE9E7", "#FFCCBC", "#FFAB91", "#FF8A65", "#FF7043", "#FF5722", "#F4511E", "#E64A19", "#D84315", "#BF360C", "#FF9E80", "#FF6E40", "#FF3D00", "#DD2C00"].map(function(t2) {
            return { color: t2 };
          }), go = { title: "material deep orange", key: "material-deeporange", execute: function() {
            return yo;
          } }, mo = ["#EFEBE9", "#D7CCC8", "#BCAAA4", "#A1887F", "#8D6E63", "#795548", "#6D4C41", "#5D4037", "#4E342E", "#3E2723"].map(function(t2) {
            return { color: t2 };
          }), bo = { title: "material brown", key: "material-brown", execute: function() {
            return mo;
          } }, ko = ["#FAFAFA", "#F5F5F5", "#EEEEEE", "#E0E0E0", "#BDBDBD", "#9E9E9E", "#757575", "#616161", "#424242", "#212121"].map(function(t2) {
            return { color: t2 };
          }), Oo = { title: "material gray", key: "material-gray", execute: function() {
            return ko;
          } }, xo = ["#ECEFF1", "#CFD8DC", "#B0BEC5", "#90A4AE", "#78909C", "#607D8B", "#546E7A", "#455A64", "#37474F", "#263238"].map(function(t2) {
            return { color: t2 };
          }), jo = { title: "material bluegray", key: "material-bluegray", execute: function() {
            return xo;
          } }, So = ["#f8f9fa", "#f1f3f5", "#e9ecef", "#dee2e6", "#ced4da", "#adb5bd", "#868e96", "#495057", "#343a40", "#212529"].map(function(t2) {
            return { color: t2 };
          }), Po = [Aa, { title: "opencolor gray", resource: "https://yeun.github.io/open-color/", key: "opencolor-gray", execute: function() {
            return So;
          } }, za, _a, Ga, Ka, Xa, Za, Ja, to, no, io, oo, so, lo, ho, vo, go, bo, Oo, jo];
          n(197);
          function wo(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Ro = function(t2) {
            s()(n2, t2);
            var e2 = wo(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { mode: "grid", preset: "random", isLoaded: false, colors: Po };
            } }, { key: "getTools", value: function() {
              return '<div ref="$tools"></div>';
            } }, { key: Object(V.LOAD)("$tools"), value: function() {
              var t3 = this.variable(this.state.colors.map(function(t4) {
                return { value: t4.key, text: t4.title };
              }));
              return '\n      <object refClass="SelectEditor"  key="preset" value="'.concat(this.state.preset, '" options="').concat(t3, '" onchange="changePreset"  />\n    ');
            } }, { key: Object(V.SUBSCRIBE)("changePreset"), value: function(t3, e3) {
              this.setState(M()({}, t3, e3));
            } }, { key: "template", value: function() {
              return "\n      <div class='elf--color-assets-editor'>\n        <div class='color-assets-head'>\n          <label>".concat(this.$i18n("color.asset.property.title"), "</label>\n          <div class='tools'>").concat(this.getTools(), "</div>\n        </div>\n        <div class='color-list' ref='$colorList' data-view-mode='").concat(this.state.mode, "'></div>\n      </div>\n    ");
            } }, { key: Object(V.LOAD)("$colorList"), value: function() {
              var t3 = this, e3 = this.state.colors.find(function(e4) {
                return e4.key === t3.state.preset;
              });
              return e3 ? e3.execute().map(function(t4, e4) {
                return `
        <div class='color-item' data-index="`.concat(e4, '" data-color="').concat(t4.color, `">
          <div class='preview' title="`).concat(t4.color, '" data-index="').concat(e4, `">
            <div class='color-view' style='background-color: `).concat(t4.color, ";'></div>\n          </div>\n        </div>\n      ");
              }) : "";
            } }, { key: "executeColor", value: function(t3) {
              var e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1], n3 = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2], r2 = this.$selection.currentProject;
              r2 ? (t3 && t3(r2), e3 && this.refresh(), n3 && this.emit("refreshColorAssets")) : alert("Please select a project.");
            } }, { key: Object(V.CLICK)("$colorList .preview"), value: function(t3) {
              var e3 = t3.$dt.$(".color-view").css("background-color");
              this.modifyColorPicker(e3);
            } }, { key: "modifyColorPicker", value: function(t3) {
              this.parent.trigger(this.props.onchange, this.props.key, t3, this.props.params);
            } }]), n2;
          }(J.a);
          n(198);
          function Co(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Eo = function(t2) {
            s()(n2, t2);
            var e2 = Co(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { params: this.props.params, color: this.props.color || "rgba(0, 0, 0, 1)" };
            } }, { key: "updateData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.setState(t3, false), this.modifyColor();
            } }, { key: "modifyColor", value: function() {
              this.parent.trigger(this.props.onchange, this.props.key, this.state.color, this.state.params);
            } }, { key: "changeColor", value: function(t3) {
              this.setState({ color: t3 });
            } }, { key: "setValue", value: function(t3) {
              this.changeColor(t3);
            } }, { key: Object(V.BIND)("$miniView"), value: function() {
              return { style: { "background-color": this.state.color } };
            } }, { key: "template", value: function() {
              return `
            <div class='elf--color-single-editor'>
                <div class='preview' ref='$preview'>
                    <div class='mini-view'>
                        <div class='color-view' style="background-color: `.concat(this.state.color, `" ref='$miniView'></div>
                    </div>
                </div>
            </div>
        `);
            } }, { key: Object(V.CLICK)("$preview"), value: function(t3) {
              this.viewColorPicker();
            } }, { key: "viewColorPicker", value: function() {
              var t3 = this;
              this.emit("showColorPickerPopup", { target: this, changeEvent: function(e3) {
                t3.refs.$miniView.cssText("background-color: ".concat(e3)), t3.updateData({ color: e3 });
              }, color: this.state.color });
            } }]), n2;
          }(J.a);
          n(199);
          function $o(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Io = function(t2) {
            s()(n2, t2);
            var e2 = $o(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { label: this.props.label, value: this.props.value || "rgba(0, 0, 0, 1)" };
            } }, { key: "updateData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.setState(t3), this.modifyColor();
            } }, { key: "updateEndData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.setState(t3), this.modifyEndColor();
            } }, { key: "getValue", value: function() {
              return this.state.value;
            } }, { key: "setValue", value: function(t3) {
              this.changeColor(t3);
            } }, { key: "modifyColor", value: function() {
              this.parent.trigger(this.props.onchange, this.props.key, this.state.value, this.props.params);
            } }, { key: "modifyEndColor", value: function() {
              this.parent.trigger(this.props.onchangeend, this.props.key, this.state.value, this.props.params);
            } }, { key: "changeColor", value: function(t3) {
              this.setState({ value: t3 });
            } }, { key: "refresh", value: function() {
              this.refs.$miniView.cssText("background-color: ".concat(this.state.value)), this.refs.$colorCode.val(this.state.value);
            } }, { key: "template", value: function() {
              var t3 = this.state.label;
              return "\n            <div class='elf--color-view-editor ".concat(t3 ? "has-label" : "", "'>\n                ").concat(t3 ? "<label>".concat(t3, "</label>") : "", `            
                <div class='color-code' ref="$container">
                    <div class='preview' ref='$preview'>
                        <div class='mini-view'>
                            <div class='color-view' style="background-color: `).concat(this.state.value, `" ref='$miniView'></div>
                        </div>
                    </div>                
                    <input type="text" ref='$colorCode' value='`).concat(this.state.value, `' tabIndex="1" />
                </div>
            </div>
        `);
            } }, { key: Object(V.BIND)("$miniView"), value: function() {
              return { style: { "background-color": this.state.value } };
            } }, { key: Object(V.BIND)("$colorCode"), value: function() {
              return { value: this.state.value };
            } }, { key: Object(V.FOCUS)("$colorCode"), value: function(t3) {
              this.refs.$container.addClass("focused");
            } }, { key: Object(V.BLUR)("$colorCode"), value: function(t3) {
              this.refs.$container.removeClass("focused");
            } }, { key: Object(V.CLICK)("$preview"), value: function(t3) {
              this.viewColorPicker();
            } }, { key: "viewColorPicker", value: function() {
              var t3 = this;
              this.emit("showColorPickerPopup", { target: this, changeEvent: function(e3) {
                t3.updateData({ value: e3 });
              }, changeEndEvent: function(e3) {
                t3.updateEndData({ value: e3 });
              }, color: this.state.value });
            } }, { key: Object(V.CLICK)("$remove"), value: function(t3) {
              this.updateData({ value: "" });
            } }, { key: Object(V.INPUT)("$el .color-code input"), value: function(t3) {
              var e3 = t3.$dt.value;
              this.refs.$miniView.cssText("background-color: ".concat(e3)), this.updateData({ value: e3 });
            } }]), n2;
          }(J.a);
          n(200);
          function To(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Bo = function(t2) {
            s()(n2, t2);
            var e2 = To(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { hideTitle: this.props["hide-title"] === "true", hideRefresh: this.props["hide-refresh"] === "true", properties: [] };
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.modifyProperty();
            } }, { key: "modifyProperty", value: function() {
              this.parent.trigger(this.props.onchange, this.state.properties);
            } }, { key: "template", value: function() {
              return "\n      <div class='elf--css-property-editor ".concat(Object(X.OBJECT_TO_CLASS)({ "hide-title": this.state.hideTitle, "hide-refresh": this.state.hideRefresh }), "'>\n        <div class='title'>\n          <label>").concat(this.$i18n("css.property.editor.properties"), "</label>\n          <div class='tools'>\n            ").concat(this.makePropertySelect(), `
            <button type="button" ref='$addProperty'>`).concat(D.a.add, "</button>\n          </div>\n        </div>\n        <div class='input grid-1 css-property-list' ref='$property'></div>\n      </div>\n    ");
            } }, { key: "getPropertyDefaultValue", value: function(t3) {
              switch (t3) {
                case "animation-timing-function":
                case "box-shadow":
                case "text-shadow":
                case "color":
                case "background-image":
                case "background-color":
                case "text-fill-color":
                case "text-stroke-color":
                case "filter":
                case "backdrop-filter":
                case "var":
                case "transform":
                case "transform-origin":
                case "perspective-origin":
                case "playTime":
                  return F.a.string("");
                case "offset-distance":
                  return F.a.percent(0);
                case "rotate":
                  return F.a.deg(0);
                case "mix-blend-mode":
                  return "normal";
                case "clip-path":
                  return "";
                case "opacity":
                  return 1;
                default:
                  return F.a.z();
              }
            } }, { key: Object(V.CLICK)("$addProperty"), value: function(t3) {
              var e3 = this.getRef("$propertySelect").value;
              if (this.state.properties.find(function(t4) {
                return t4.key === e3;
              }))
                alert("".concat(e3, " is already added."));
              else {
                var n3 = this.getPropertyDefaultValue(e3), r2 = this.$selection.current;
                r2 && (n3 = r2[e3]), this.state.properties.push({ key: e3, value: n3 }), this.refresh(), this.modifyProperty();
              }
            } }, { key: "makeIndivisualPropertyColorEditor", value: function(t3, e3) {
              var n3 = t3.key.split("-").join("");
              return `
      <div class='property-editor'>
        <object refClass="ColorViewEditor" ref='$`.concat(n3).concat(e3, `' value="`).concat(t3.value, '" key="').concat(t3.key, '" onChange="changeColorProperty" />\n      </div>\n    ');
            } }, { key: "makeCustomePropertyEditor", value: function(t3, e3) {
              return "\n      <div class='property-editor'>\n        <".concat(t3.editor, ' \n          onchange="changeSelect"\n          ref="$customProperty').concat(e3, '"\n          key="').concat(t3.key, '"\n          value="').concat(t3.value, '"\n        />\n      </div>\n    ');
            } }, { key: "makeIndivisualPropertyEditor", value: function(t3, e3) {
              return t3.key === "background-image" ? `
        <div class='property-editor'>
          <object refClass="BackgroundImageEditor" ref='$backgroundImage`.concat(e3, `' key="`).concat(t3.key, '" hide-title="').concat(this.state.hideTitle, '" value="').concat(t3.value, '" onChange="changeKeyValue" />\n        </div>\n      ') : t3.key === "filter" ? `
        <div class='property-editor'>
          <object refClass="FilterEditor" ref='$filter`.concat(e3, `' key="`).concat(t3.key, '" value="').concat(t3.value, '" onChange="changeKeyValue" />\n        </div>\n      ') : t3.key === "backdrop-filter" ? `
        <div class='property-editor'>
          <object refClass="FilterEditor" ref='$backdropFilter`.concat(e3, `' key="`).concat(t3.key, '" value="').concat(t3.value, '" onChange="changeKeyValue" />\n        </div>\n      ') : t3.key === "box-shadow" ? `
        <div class='property-editor'>
          <object refClass="BoxShadowEditor" ref='$boxshadow`.concat(e3, `' value="`).concat(t3.value, '" hide-label="false" onChange="changeBoxShadowProperty" />\n        </div>\n      ') : t3.key === "text-shadow" ? `
        <div class='property-editor'>
          <object refClass="TextShadowEditor" ref='$textshadow`.concat(e3, `' value="`).concat(t3.value, '" hide-label="false" onChange="changeTextShadowProperty" />\n        </div>\n      ') : t3.key === "var" ? `
        <div class='property-editor'>
          <object refClass="VarEditor" ref='$var`.concat(e3, `' value="`).concat(t3.value, '" onChange="changeVar" />\n        </div>\n      ') : t3.key === "transform" ? `
        <div class='property-editor'>
          <object refClass="TransformEditor" ref='$transform`.concat(e3, `' value="`).concat(t3.value, '" onChange="changeTransform" />\n        </div>\n      ') : t3.key === "transform-origin" ? `
        <div class='property-editor'>
          <object refClass="TransformOriginEditor" ref='$transformOrigin`.concat(e3, `' value="`).concat(t3.value, '" onChange="changeTransformOrigin" />\n        </div>\n      ') : t3.key === "perspective-origin" ? `
        <div class='property-editor'>
          <object refClass="PerspectiveOriginEditor" ref='$perspectiveOrigin`.concat(e3, `' value="`).concat(t3.value, '" onChange="changePerspectiveOrigin" />\n        </div>\n      ') : t3.key === "fill-rule" ? `
        <div class='property-editor'>
          <object refClass="SelectEditor"  
          ref='$fillRule`.concat(e3, `' 
          key='fill-rule' 
          icon="true" 
          options=`).concat(this.variable(["nonzero", "evenodd"]), '\n          value="').concat(t3.value, '"\n          onchange="changeSelect" />\n        </div>\n      ') : t3.key === "stroke-linecap" ? `
        <div class='property-editor'>
          <object refClass="SelectEditor"  
          ref='$strokeLinecap`.concat(e3, `' 
          key='stroke-linecap' 
          icon="true" 
          options=`).concat(this.variable(["butt", "round", "square"]), '          \n          value="').concat(t3.value, '"\n          onchange="changeSelect" />\n        </div>\n      ') : t3.key === "stroke-linejoin" ? `
        <div class='property-editor'>
          <object refClass="SelectEditor"  
          ref='$strokeLinejoin`.concat(e3, `' 
          key='stroke-linejoin' 
          icon="true" 
          options=`).concat(this.variable(["miter", "arcs", "bevel", "miter-clip", "round"]), '                    \n          value="').concat(t3.value, '"\n          onchange="changeSelect" />\n        </div>\n      ') : t3.key === "mix-blend-mode" ? `
        <div class='property-editor'>
          <object refClass="BlendSelectEditor" 
          ref='$mixBlendMode`.concat(e3, `' 
          key='mix-blend-mode' 
          icon="true" 
          value="`).concat(t3.value, '"\n          onchange="changeSelect" />\n        </div>\n      ') : t3.key === "stroke-dasharray" ? `
        <object refClass="StrokeDashArrayEditor" 
          ref='$strokeDashArray`.concat(e3, "' \n          key='stroke-dasharray'\n          value='").concat(t3.value, "' \n          onchange='changeSelect' \n        />\n      ") : t3.key === "border-radius" ? `
        <object refClass="BorderRadiusEditor"
          ref='$borderRadius`.concat(e3, "' \n          key='border-radius'\n          value='").concat(t3.value, "' \n          onchange='changeBorderRadius' \n        />\n      ") : t3.key === "border" ? `
        <object refClass="BorderEditor"
          ref='$border`.concat(e3, "' \n          key='border'\n          value='").concat(t3.value, "' \n          onchange='changeKeyValue' \n        />\n      ") : t3.key === "clip-path" ? `
        <object refClass="ClipPathEditor"
          ref='$clipPath`.concat(e3, "' \n          key='clip-path'\n          value='").concat(t3.value, "' \n          onchange='changeClipPath' \n        />\n      ") : t3.key === "d" ? `
        <object refClass="PathDataEditor" ref='$pathData`.concat(e3, "' key='d' value='").concat(t3.value, "' onchange='changeSelect' />\n      ") : t3.key === "points" ? `
        <object refClass="PolygonDataEditor" ref='$polygonData`.concat(e3, "' key='points' value='").concat(t3.value, "' onchange='changeSelect' />\n      ") : t3.key === "playTime" ? `
        <object refClass="MediaProgressEditor" ref='$playTime`.concat(e3, `'  key='playTime' value="`).concat(t3.value, '" onchange="changeSelect" />      \n      ') : "\n      <div class='property-editor'>\n        ???\n\n      </div>\n    ";
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeKeyValue"), value: function(t3, e3) {
              this.modifyPropertyValue(t3, e3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeBorderRadius"), value: function(t3) {
              this.modifyPropertyValue("border-radius", t3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeClipPath"), value: function(t3) {
              this.modifyPropertyValue("clip-path", t3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeColorProperty"), value: function(t3, e3) {
              this.modifyPropertyValue(t3, e3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeBackgroundImageProperty"), value: function(t3, e3) {
              this.modifyPropertyValue(t3, e3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeFilterProperty"), value: function(t3) {
              this.modifyPropertyValue("filter", t3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeBackdropFilterProperty"), value: function(t3) {
              this.modifyPropertyValue("backdrop-filter", t3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeBoxShadowProperty"), value: function(t3) {
              this.modifyPropertyValue("box-shadow", t3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeTextShadowProperty"), value: function(t3) {
              this.modifyPropertyValue("text-shadow", t3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeVar"), value: function(t3) {
              this.modifyPropertyValue("var", t3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeTransform"), value: function(t3) {
              this.modifyPropertyValue("transform", t3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeTransformOrigin"), value: function(t3) {
              this.modifyPropertyValue("transform-origin", t3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changePerspectiveOrigin"), value: function(t3) {
              this.modifyPropertyValue("perspective-origin", t3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeSelect"), value: function(t3, e3) {
              this.modifyPropertyValue(t3, e3);
            } }, { key: "makePropertyEditor", value: function(t3, e3) {
              if (t3.editor)
                return this.makeCustomePropertyEditor(t3, e3);
              switch (t3.key) {
                case "animation-timing-function":
                case "box-shadow":
                case "text-shadow":
                case "background-image":
                case "filter":
                case "backdrop-filter":
                case "var":
                case "transform":
                case "transform-origin":
                case "perspective-origin":
                case "mix-blend-mode":
                case "border":
                case "border-radius":
                case "clip-path":
                case "fill-rule":
                case "stroke-linecap":
                case "stroke-linejoin":
                case "stroke-dasharray":
                case "d":
                case "points":
                case "offset-path":
                case "playTime":
                  return this.makeIndivisualPropertyEditor(t3, e3);
                case "color":
                case "background-color":
                case "text-fill-color":
                case "text-stroke-color":
                case "stroke":
                case "fill":
                  return this.makeIndivisualPropertyColorEditor(t3, e3);
                case "opacity":
                case "fill-opacity":
                case "stroke-dashoffset":
                case "offset-distance":
                  return `
          <div class='property-editor'>
            <object refClass="NumberRangeEditor"  
              ref='$opacity`.concat(e3, "' \n              key='").concat(t3.key, `' 
              min="`).concat(0, '"\n              max="').concat(1, '"\n              step="').concat(0.01, '"\n              value="').concat(t3.value || 1, `"
              selected-unit='number'
              removable="true"
              onchange="changeRangeEditor" />
          </div>
        `);
                case "rotate":
                  return `
          <div class='property-editor'>
            <object refClass="RangeEditor"  
              ref='rangeEditor`.concat(e3, "' \n              key='").concat(t3.key, "' \n              value='").concat(t3.value, `'  
              min="-2000"
              max="2000"
              units="deg" 
              onChange="changeRangeEditor" />
          </div>
        `);
                case "left":
                case "margin-top":
                case "margin-bottom":
                case "margin-left":
                case "margin-right":
                case "padding-top":
                case "padding-bottom":
                case "padding-left":
                case "padding-right":
                case "font-size":
                case "font-stretch":
                case "width":
                case "height":
                case "perspective":
                case "offset-distance":
                case "text-stroke-width":
                default:
                  return `
          <div class='property-editor'>
            <object refClass="RangeEditor"  ref='rangeEditor`.concat(e3, "' key='").concat(t3.key, "' value='").concat(t3.value, `' max="1000" onChange="changeRangeEditor" />
          </div>
        `);
              }
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeRangeEditor"), value: function(t3, e3) {
              this.modifyPropertyValue(t3, e3 + "");
            } }, { key: "searchKey", value: function(t3, e3) {
              this.state.properties.filter(function(e4) {
                return e4.key === t3;
              }).forEach(e3);
            } }, { key: "modifyPropertyValue", value: function(t3, e3) {
              this.searchKey(t3, function(t4) {
                t4.value = e3;
              }), this.modifyProperty();
            } }, { key: "makePropertySelect", value: function() {
              return "\n      <select class='property-select' ref='$propertySelect'>\n        <optgroup label='Position'>\n          <option value='x'>x</option>\n          <option value='y'>y</option>        \n        </optgroup>\n        <optgroup label='Size'>\n          <option value='width'>width</option>\n          <option value='height'>height</option>\n        </optgroup>      \n        <optgroup label='Box Model'>\n          <option value='margin-left'>margin-left</option>\n          <option value='margin-right'>margin-right</option>\n          <option value='margin-bottom'>margin-bottom</option>\n          <option value='margin-top'>margin-top</option>\n          <option value='padding-left'>padding-left</option>\n          <option value='padding-right'>padding-right</option>\n          <option value='padding-bottom'>padding-bottom</option>\n          <option value='padding-top'>padding-top</option>       \n        </optgroup>\n        <optgroup label='Border'>\n          <option value='border'>border</option>\n          <option value='border-radius'>border-radius</option>\n        </optgroup>        \n        <optgroup label='Style'>\n          <option value='background-color'>background-color</option>\n          <option value='background-image'>background-image</option>\n          <option value='box-shadow'>box-shadow</option>\n          <option value='text-shadow'>text-shadow</option>\n          <option value='filter'>filter</option>      \n          <option value='backdrop-filter'>backdrop-filter</option>\n          <option value='mix-blend-mode'>mix-blend-mode</option>\n        </optgroup>            \n        <optgroup label='Transform'>\n          <option value='transform'>transform</option>\n          <option value='transform-origin'>transform-origin</option>\n          <option value='perspective'>perspective</option>\n          <option value='perspective-origin'>perspective-origin</option>\n        </optgroup>\n        <optgroup label='Font'>\n          <option value='font-size'>font-size</option>\n          <option value='font-weight'>font-weight</option>          \n          <option value='font-stretch'>font-stretch</option>\n        </optgroup>\n        <optgroup label='Animation'>\n          <option value='animation-timing-function'>timing-function</option>\n        </optgroup>        \n      </select>\n    ";
            } }, { key: Object(V.LOAD)("$property"), value: function() {
              var t3 = this;
              return this.state.properties.map(function(e3, n3) {
                return "\n        <div class='css-property-item'>\n          <div class='title'>\n            <label>".concat(e3.key, `</label>
            <div class='tools'>
              <button type="button" class='remove' data-index="`).concat(n3, '">').concat(D.a.remove2, `</button>
            </div>
          </div>
          <div class='title-2'>
            <div class='tools'>
              <label><button type="button" class='refresh' data-index="`).concat(n3, '">').concat(D.a.refresh, "</button> Refresh</label>\n            </div>\n          </div>\n          <div class='value-editor'>\n            ").concat(t3.makePropertyEditor(e3, n3), "\n          </div>\n        </div>\n      ");
              });
            } }, { key: Object(V.SUBSCRIBE)("showCSSPropertyEditor"), value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
              this.setState({ properties: t3 }), this.refresh();
            } }, { key: Object(V.CLICK)("$property .remove"), value: function(t3) {
              var e3 = +t3.$dt.attr("data-index");
              this.state.properties.splice(e3, 1), this.refresh(), this.modifyProperty();
            } }, { key: Object(V.CLICK)("$property .refresh"), value: function(t3) {
              this.parent.trigger("refreshPropertyValue");
            } }]), n2;
          }(J.a), Mo = n(27), Vo = n(14);
          n(201);
          function Do(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Lo = function(t2) {
            s()(n2, t2);
            var e2 = Do(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { key: this.props.key, currentBezier: Object(Mo.k)(this.props.value || "linear"), currentBezierIndex: 0, selectedColor: "#609de2", animatedColor: "#609de266", curveColor: "#609de2", baseLineColor: "rgba(117, 117, 117, 0.46)" };
            } }, { key: "template", value: function() {
              var t3 = Object(X.curveToPath)(this.state.currentBezier, 150, 150), e3 = Object(X.curveToPointLine)(this.state.currentBezier, 150, 150), n3 = Object(X.curveToPath)("ease", 30, 30), r2 = Object(X.curveToPointLine)("ease", 30, 30), i2 = Object(X.curveToPath)("ease-in", 30, 30), a2 = Object(X.curveToPointLine)("ease-in", 30, 30), o2 = Object(X.curveToPath)("ease-out", 30, 30), c2 = Object(X.curveToPointLine)("ease-out", 30, 30);
              return "\n            <div class='elf--cubic-bezier-editor'>\n                <div class='predefined'>\n                    <div class='left' ref='$left'>".concat(D.a.chevron_left, "</div>\n                    <div class='predefined-text' ref='$text'></div>\n                    <div class='right' ref='$right'>").concat(D.a.chevron_right, `</div>
                </div>
                <div class='animation'>
                    <canvas 
                        class='animation-canvas' 
                        ref='$animationCanvas' 
                        title='Click and Replay point animation' 
                        width='230px' 
                        height='20px'
                    ></canvas>
                </div>
                <div class='item-list' ref='$itemList' data-selected-value=''>
                    <div class='item' data-bezier='ease' title='ease'>
                        <svg class='item-canvas' width="30" height="30" viewBox="0 0 30 30">
                            <path d="`).concat(n3, `" stroke="white" stroke-width="1" fill='none' />
                            <path d="`).concat(r2, `" stroke="gray" stroke-width="1" fill='none' />
                        </svg>
                    </div>
                    <div class='item' data-bezier='ease-in' title='ease-in'>
                        <svg class='item-canvas' width="30" height="30" viewBox="0 0 30 30">
                            <path d="`).concat(i2, `" stroke="white" stroke-width="1" fill='none' />
                            <path d="`).concat(a2, `" stroke="gray" stroke-width="1" fill='none' /> 
                        </svg>
                    </div>
                    <div class='item' data-bezier='ease-out' title='ease-out'>
                        <svg class='item-canvas' width="30" height="30" viewBox="0 0 30 30">
                            <path d="`).concat(o2, `" stroke="white" stroke-width="1" fill='none' />
                            <path d="`).concat(c2, `" stroke="gray" stroke-width="1" fill='none' />
                        </svg>
                    </div>
                </div>
                <div class='bezier'>
                    <svg class='bezier-canvas' width="150" height="150" viewBox="0 0 150 150" overflow="visible">
                        <path d="`).concat(t3, `" stroke="white" stroke-width="1" fill='none' ref='$bezierCanvas' />
                        <path d="`).concat(e3, `" stroke="gray" stroke-width="1" fill='none' ref='$bezierCanvasPoint' />
                    </svg>                
                    <div class='control' ref='$control'>
                        <div class='pointer1' ref='$pointer1'></div>
                        <div class='pointer2' ref='$pointer2'></div>
                    </div>
                </div>
            </div>
        `);
            } }, { key: Object(V.BIND)("$bezierCanvas"), value: function() {
              return { d: Object(X.curveToPath)(this.state.currentBezier, 150, 150) };
            } }, { key: Object(V.BIND)("$bezierCanvasPoint"), value: function() {
              return { d: Object(X.curveToPointLine)(this.state.currentBezier, 150, 150) };
            } }, { key: "updateData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.setState(t3), this.modifyCubicBezier();
            } }, { key: "modifyCubicBezier", value: function() {
              this.parent.trigger(this.props.onchange, this.state.key, Object(Mo.c)(this.state.currentBezier));
            } }, { key: Object(V.CLICK)("$left"), value: function() {
              var t3 = this.state, e3 = t3.currentBezier, n3 = t3.currentBezierIndex;
              n3 == 0 ? n3 = Mo.a.length - 1 : --n3;
              e3 = Mo.a[n3];
              this.updateData({ currentBezierIndex: n3, currentBezier: e3 }), this.refresh();
            } }, { key: Object(V.CLICK)("$right"), value: function() {
              var t3 = this.state, e3 = t3.currentBezier, n3 = t3.currentBezierIndex;
              n3 = ++n3 % Mo.a.length, e3 = Mo.a[n3], this.updateData({ currentBezierIndex: n3, currentBezier: e3 }), this.refresh();
            } }, { key: Object(V.CLICK)("$text"), value: function() {
              var t3 = ht()(Mo.a[this.state.currentBezierIndex]);
              this.updateData({ currentBezier: t3 }), this.refresh();
            } }, { key: Object(V.CLICK)("$itemList .item"), value: function(t3) {
              var e3 = t3.$dt.attr("data-bezier");
              this.refs.$itemList.attr("data-selected-value", e3);
              var n3 = Object(Mo.k)(e3);
              this.updateData({ currentBezier: n3 }), this.refresh();
            } }, { key: "refresh", value: function() {
              this.refreshEasingText(), this.refreshBezierCanvas();
            } }, { key: "refreshBezierCanvas", value: function() {
              this.bindData("$bezierCanvas"), this.bindData("$bezierCanvasPoint"), this.refreshPointer(), this.drawPoint();
            } }, { key: "refreshEasingText", value: function() {
              this.refs.$text.html(this.state.currentBezier[4] || "ease");
            } }, { key: "refreshPointer", value: function() {
              var t3 = Object(Mo.k)(this.state.currentBezier), e3 = this.refs.$control.width(), n3 = this.refs.$control.height(), r2 = t3[0] * e3, i2 = (1 - t3[1]) * n3;
              this.refs.$pointer1.css({ left: F.a.px(r2).round(), top: F.a.px(i2).round() }), r2 = t3[2] * e3, i2 = (1 - t3[3]) * n3, this.refs.$pointer2.css({ left: F.a.px(r2).round(), top: F.a.px(i2).round() });
            } }, { key: "drawPoint", value: function() {
              var t3 = this;
              this.timer && clearTimeout(this.timer), this.animationTimer && clearTimeout(this.animationTimer), this.timer = setTimeout(function() {
                t3.animationPoint();
              }, 100);
            } }, { key: "start", value: function(t3) {
              var e3 = this, n3 = this.animationCanvasData.func(t3), r2 = 10 + (this.animationCanvasData.width - 20) * n3.y, i2 = this.animationCanvasData.context;
              i2.beginPath(), i2.arc(r2, 10, 5, 0, 2 * Math.PI), i2.fill(), i2.stroke(), i2.closePath(), t3 >= 1 || (this.animationTimer = setTimeout(function() {
                e3.start(t3 + 0.05);
              }, 50));
            } }, { key: "animationPoint", value: function() {
              var t3 = Object(Mo.k)(this.state.currentBezier), e3 = Object(Mo.b)(Object(Mo.c)(t3));
              this.refs.$animationCanvas.clear();
              var n3 = this.refs.$animationCanvas.width(), r2 = this.refs.$animationCanvas.height(), i2 = this.refs.$animationCanvas.context();
              i2.fillStyle = this.state.animatedColor, i2.strokeStyle = this.state.selectedColor, i2.lineWidth = 1, this.animationCanvasData = { func: e3, width: n3, height: r2, context: i2 }, this.start(0);
            } }, { key: "setPosition", value: function(t3) {
              var e3 = this.refs.$control.width(), n3 = this.refs.$control.height(), r2 = this.refs.$control.offset().left, i2 = this.refs.$control.offset().top, a2 = t3, o2 = a2.x;
              0 > o2 ? o2 = 0 : a2.x > document.body.clientWidth && (o2 = document.body.clientWidth), (o2 -= r2) < 0 && (o2 = 0), e3 < o2 && (o2 = e3);
              var c2 = a2.y;
              return c2 -= i2, { x: Object(Vo.div)(o2, e3), y: c2 == n3 ? 0 : Object(Vo.div)(n3 - c2, n3) };
            } }, { key: Object(V.POINTERSTART)("$pointer1") + Object(V.MOVE)("movePointer1") + Object(V.END)("drawPoint"), value: function(t3) {
              this.clientX = t3.clientX, this.clientY = t3.clientY;
            } }, { key: "movePointer1", value: function(t3, e3) {
              var n3 = this.setPosition({ x: this.clientX + t3, y: this.clientY + e3 });
              this.state.currentBezier[0] = n3.x, this.state.currentBezier[1] = n3.y, this.refreshBezierCanvas(), this.modifyCubicBezier();
            } }, { key: Object(V.POINTERSTART)("$pointer2") + Object(V.MOVE)("movePointer2") + Object(V.END)("drawPoint"), value: function(t3) {
              this.clientX = t3.clientX, this.clientY = t3.clientY;
            } }, { key: "movePointer2", value: function(t3, e3) {
              var n3 = this.setPosition({ x: this.clientX + t3, y: this.clientY + e3 });
              this.state.currentBezier[2] = n3.x, this.state.currentBezier[3] = n3.y, this.refreshBezierCanvas(), this.modifyCubicBezier();
            } }, { key: Object(V.SUBSCRIBE)("showCubicBezierEditor"), value: function(t3) {
              var e3 = Object(Mo.k)(t3 || this.state.currentBezier);
              this.setState({ currentBezier: e3 }), this.refresh();
            } }]), n2;
          }(J.a);
          n(202);
          function Ao(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Fo = [{ key: "top", title: "Top" }, { key: "right", title: "Right" }, { key: "bottom", title: "Bottom" }, { key: "left", title: "Left" }], zo = function(t2) {
            s()(n2, t2);
            var e2 = Ao(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              var t3 = xe.a.parse(this.props.value), e3 = be()(t3, 5), n3 = e3[0], r2 = e3[1], i2 = e3[2], a2 = e3[3], o2 = e3[4];
              return { isAll: n3 === 1, all: r2.clone(), top: r2.clone(), right: i2.clone(), bottom: a2.clone(), left: o2.clone() };
            } }, { key: "template", value: function() {
              return "<div class='elf--direction-editor' ref='$body'></div>";
            } }, { key: Object(V.SUBSCRIBE)("changeBorderRadius"), value: function(t3, e3) {
              var n3 = this;
              t3 === "all" && Fo.forEach(function(t4) {
                n3.state[t4.key] = e3.clone(), n3.children["$".concat(t4.key)].setValue(e3.clone());
              }), this.updateData(M()({}, t3, e3));
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = this, e3 = this.state.isAll ? "all" : "partitial", n3 = this.state.all, r2 = e3 === "all" ? "display:none" : "display:block";
              return '\n      <div class="property-item direction-item">\n        <div class="radius-selector" data-selected-value="'.concat(e3, '" ref="$selector">\n          <button type="button" data-value="all">').concat(D.a.border_all, '</button>\n          <button type="button" data-value="partitial">\n            ').concat(D.a.border_inner, `
          </button>
        </div>
        <div class="radius-value">
          <object refClass="RangeEditor"  ref='$all' key='all' value="`).concat(n3, `" onchange='changeBorderRadius' />
        </div>
      </div>
      <div
        class="property-item full direction-item"
        ref="$partitialSetting"
        style="`).concat(r2, '"\n      >\n        <div class="radius-setting-box">\n          ').concat(Fo.map(function(e4) {
                var n4 = t3.state[e4.key];
                return `
              <div>
                  <object refClass="RangeEditor"  ref='$`.concat(e4.key, "' label='").concat(e4.title, "' key='").concat(e4.key, `' value="`).concat(n4, `" onchange='changeBorderRadius' />
              </div>  
            `);
              }).join(""), "\n        </div>\n      </div>\n    ");
            } }, { key: "updateData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.setState(t3, false);
              var e3 = [];
              e3 = this.state.isAll ? [1, this.state.all, this.state.all, this.state.all, this.state.all] : [4, this.state.top, this.state.right, this.state.bottom, this.state.left], this.parent.trigger(this.props.onchange, e3);
            } }, { key: Object(V.CLICK)("$selector button"), value: function(t3) {
              var e3 = t3.$dt.attr("data-value");
              this.refs.$selector.attr("data-selected-value", e3), e3 === "all" ? this.refs.$partitialSetting.hide() : this.refs.$partitialSetting.show("grid"), this.updateData({ isAll: e3 === "all" });
            } }]), n2;
          }(J.a), No = n(41);
          n(203);
          function _o(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Uo(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? _o(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : _o(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Go(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Ho = { blur: No.a.spec, grayscale: No.f.spec, "hue-rotate": No.g.spec, invert: No.h.spec, brightness: No.b.spec, contrast: No.c.spec, "drop-shadow": No.d.spec, opacity: No.i.spec, saturate: No.j.spec, sepia: No.k.spec, svg: No.l.spec }, Ko = function(t2) {
            s()(n2, t2);
            var e2 = Go(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { hideLabel: this.props["hide-label"] === "true", filters: No.e.parseStyle(this.props.value) };
            } }, { key: "template", value: function() {
              var t3 = this.state.hideLabel ? "hide" : "";
              return "\n      <div class='elf--filter-editor filter-list'>\n          <div class='label ".concat(t3, "' >\n              <label>").concat(this.props.title || "", `</label>
              <div class='tools'>
                <select ref="$filterSelect"></select>
                <button type="button" ref="$add" title="add Filter">`).concat(D.a.add, "</button>\n              </div>\n          </div>\n          <div class='filter-list' ref='$filterList'></div>\n      </div>");
            } }, { key: Object(V.LOAD)("$filterSelect"), value: function() {
              var t3 = In.b.map(function(t4) {
                return { title: t4, value: t4 };
              }), e3 = this.getSVGFilterList();
              return (e3.length ? [].concat(ht()(t3), [{ title: "-------", value: "" }], ht()(e3)) : ht()(t3)).map(function(t4) {
                var e4 = t4.title, n3 = t4.value;
                return "<option value='".concat(n3, "'>").concat(e4, "</option>");
              });
            } }, { key: "getSpec", value: function(t3) {
              return Ho[t3];
            } }, { key: "makeDropShadowFilterTemplate", value: function(t3, e3, n3) {
              var r2 = this;
              return '\n      <div class="filter-item">\n        <div class="title drop-shadow" draggable="true" data-index="'.concat(n3, '">\n          <label>').concat(this.$i18n("filter.property.drop-shadow"), '</label>\n          <div class="filter-menu">\n            <button type="button" class="del" data-index="').concat(n3, '">\n              ').concat(D.a.remove2, '\n            </button>\n          </div>\n        </div>\n\n        <div class="filter-ui drop-shadow-color">\n          <object refClass="ColorViewEditor" \n            label="').concat(this.$i18n("filter.property.drop-shadow.color"), `" 
            ref='$dropShadowColorView`).concat(n3, `' 
            params="`).concat(n3, '" \n            value="').concat(e3.color, '" \n            on-change-value="changeDropShadowColor" />\n        </div>\n\n        ').concat(["offsetX", "offsetY", "blurRadius"].map(function(i2) {
                return `        
            <div class="filter-ui drop-shadow">
                <object refClass="RangeEditor"  
                  ref='$`.concat(i2).concat(n3, `' 
                  label="`).concat(r2.$i18n("filter.property.drop-shadow.".concat(i2)), '"\n                  key="').concat(n3, '" \n                  min="').concat(t3[i2].min, '"\n                  min="').concat(t3[i2].max, '"\n                  params="').concat(i2, '" \n                  value="').concat(e3[i2].value, '" units="').concat(t3[i2].units.join(","), '" onchange="changeRangeEditor" />\n            </div>');
              }).join(""), "\n      </div>\n    ");
            } }, { key: "getSVGFilterList", value: function() {
              var t3 = this.$selection.currentProject, e3 = [];
              return t3 && (e3 = t3.svgfilters.map(function(t4) {
                return { title: "svg - #".concat(t4.id), value: t4.id };
              })), e3;
            } }, { key: "makeOneFilterEditor", value: function(t3, e3, n3) {
              if (e3.type === "svg") {
                var r2 = "", i2 = this.$selection.currentProject;
                return i2 && (r2 = i2.svgfilters.map(function(t4) {
                  return { value: t4.id };
                })), `
      <object refClass="SelectEditor"  
        ref='$select`.concat(t3, `' 
        key="`).concat(t3, '" \n        label="SVG Filter"\n        value="').concat(e3.value, '" \n        options=').concat(this.variable([""].concat(ht()(r2))), '\n        onchange="changeRangeEditor"  />');
              }
              return `
      <object refClass="RangeEditor"  
        ref='$range`.concat(t3, "_").concat(e3.type, `' 
        key="`).concat(t3, `" 
        min='`).concat(n3.min, "'\n        max='").concat(n3.max, `'
        value="`).concat(e3.value, '" \n        units="').concat(n3.units.join(","), '"   \n        onchange="changeRangeEditor" />\n      ');
            } }, { key: "makeOneFilterTemplate", value: function(t3, e3, n3) {
              var r2 = e3.type === "svg", i2 = "".concat(this.$i18n("filter.property." + e3.type));
              return '\n      <div class="filter-item" data-index="'.concat(n3, '">\n        <div class="title" >\n          <label draggable="true" data-index="').concat(n3, '" title="').concat(r2 ? "" : i2, '">').concat(i2, "</label>\n          ").concat(e3.type != "svg" ? '\n          <div class="filter-ui">\n            '.concat(this.makeOneFilterEditor(n3, e3, t3), "\n          </div>\n        ") : `
          <div>
            <span class='svg-filter-edit' data-index="`.concat(n3, '">').concat(e3.value, "</span>\n          </div>\n        "), '          \n          <div class="filter-menu">\n            <button type="button" class="del" data-index="').concat(n3, '">\n              ').concat(D.a.remove2, "\n            </button>\n          </div>\n        </div>\n      </div>\n    ");
            } }, { key: "makeFilterTemplate", value: function(t3, e3) {
              return t3.type === "drop-shadow" ? this.makeDropShadowFilterTemplate(this.getSpec(t3.type), t3, e3) : this.makeOneFilterTemplate(this.getSpec(t3.type), t3, e3);
            } }, { key: Object(V.LOAD)("$filterList"), value: function() {
              var t3 = this;
              return this.state.filters.map(function(e3, n3) {
                return t3.makeFilterTemplate(e3, n3.toString());
              });
            } }, { key: Object(V.DRAGSTART)("$filterList .filter-item .title label"), value: function(t3) {
              this.startIndex = +t3.$dt.attr("data-index");
            } }, { key: Object(V.DRAGOVER)("$filterList .filter-item .title label") + V.PREVENT, value: function(t3) {
            } }, { key: "sortItem", value: function(t3, e3, n3) {
              t3.splice.apply(t3, [n3 + (e3 < n3 ? -1 : 0), 0].concat(ht()(t3.splice(e3, 1))));
            } }, { key: "sortFilter", value: function(t3, e3) {
              this.sortItem(this.state.filters, t3, e3);
            } }, { key: Object(V.DROP)("$filterList .filter-item") + V.PREVENT, value: function(t3) {
              var e3 = +t3.$dt.attr("data-index");
              this.$selection.current && (this.sortFilter(this.startIndex, e3), this.refresh(), this.modifyFilter());
            } }, { key: "modifyFilter", value: function() {
              var t3 = this.state.filters.join(" ");
              this.parent.trigger(this.props.onchange, this.props.key, t3, this.props.params);
            } }, { key: "makeFilter", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              return No.e.parse(Uo(Uo({}, e3), {}, { type: t3 }));
            } }, { key: Object(V.CLICK)("$filterList .svg-filter-edit"), value: function(t3) {
              var e3 = +t3.$dt.attr("data-index"), n3 = this.state.filters[e3], r2 = this.$selection.currentProject;
              if (r2) {
                var i2, a2, o2 = r2.getSVGFilterIndex((i2 = n3.value) === null || i2 === void 0 || (a2 = i2.value) === null || a2 === void 0 ? void 0 : a2.replace("#", ""));
                this.trigger("openSVGFilterPopup", o2);
              }
            } }, { key: Object(V.SUBSCRIBE)("openSVGFilterPopup"), value: function(t3) {
              var e3 = this, n3 = (this.$selection.currentProject || { svgfilters: [] }).svgfilters[t3];
              this.emit("showSVGFilterPopup", { changeEvent: function(t4) {
                var n4 = e3.$selection.currentProject;
                n4 && (n4.setSVGFilterValue(t4.index, { filters: t4.filters }), e3.emit("refreshSVGFilterAssets"), e3.emit("refreshSVGArea"));
              }, index: t3, preview: false, filters: n3.filters });
            } }, { key: Object(V.SUBSCRIBE)("add"), value: function(t3) {
              var e3 = this;
              t3 === "svg" ? this.emit("addSVGFilterAssetItem", function(n3, r2) {
                e3.state.filters.push(e3.makeFilter(t3, { value: r2 })), e3.refresh(), e3.modifyFilter(), e3.trigger("openSVGFilterPopup", n3);
              }) : (this.state.filters.push(this.makeFilter(t3)), this.refresh(), this.modifyFilter());
            } }, { key: Object(V.CLICK)("$add"), value: function() {
              var t3 = this.refs.$filterSelect.value;
              this.trigger("add", t3);
            } }, { key: Object(V.CLICK)("$filterList .filter-menu .del"), value: function(t3) {
              var e3 = +t3.$dt.attr("data-index");
              this.state.filters.splice(e3, 1), this.refresh(), this.modifyFilter();
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeDropShadowColor"), value: function(t3, e3, n3) {
              var r2 = +n3;
              this.state.filters[r2].reset({ color: e3 }), this.modifyFilter();
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeRangeEditor"), value: function(t3, e3, n3) {
              n3 ? this.state.filters[+t3].reset(M()({}, n3, e3)) : this.state.filters[+t3].reset({ value: e3 }), this.modifyFilter();
            } }, { key: Object(V.SUBSCRIBE)("refreshSVGArea") + Object(V.DEBOUNCE)(1e3), value: function() {
              this.load("$filterSelect"), this.load("$filterList");
            } }]), n2;
          }(J.a);
          function Yo(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Xo(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Yo(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Yo(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Wo(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Zo = ["", "Arial", "Arial Black", "Times New Roman", "Times", "Courier New", "Courier", "Verdana", "Georgia", "Palatino", "Garamond", "Bookman", "Tahoma", "Trebuchet MS", "Impact", "Comic Sans MS", "serif", "sans-serif", "monospace", "cursive", "fantasy", "system-ui"], qo = function(t2) {
            s()(n2, t2);
            var e2 = Wo(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getFontList", value: function() {
              return Zo.map(function(t3) {
                return { value: t3 };
              });
            } }, { key: "initState", value: function() {
              return Xo(Xo({}, A()(h()(n2.prototype), "initState", this).call(this)), {}, { options: this.getFontList() });
            } }]), n2;
          }($a);
          n(204);
          function Jo(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Qo = ["circle", "circle closest-side", "circle closest-corner", "circle farthest-side", "circle farthest-corner", "ellipse", "ellipse closest-side", "ellipse closest-corner", "ellipse farthest-side", "ellipse farthest-corner"], tc = ["static-gradient", "linear-gradient", "repeating-linear-gradient", "radial-gradient", "repeating-radial-gradient", "conic-gradient", "repeating-conic-gradient", "image-resource"], ec = { "image-resource": D.a.photo }, nc = { "radial-gradient": true, "repeating-radial-gradient": true, "conic-gradient": true, "repeating-conic-gradient": true }, rc = { top: ["50%", "0%"], "top left": ["0%", "0%"], "top right": ["100%", "0%"], left: ["0%", "50%"], right: ["100%", "50%"], bottom: ["50%", "100%"], "bottom left": ["0%", "100%"], "bottom right": ["100%", "100%"] }, ic = function(t2) {
            s()(n2, t2);
            var e2 = Jo(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { index: +(this.props.index || 0), value: this.props.value, image: mt.a.parseImage(this.props.value || "") || { type: "", colorsteps: [] } };
            } }, { key: "setValue", value: function(t3) {
              this.setState({ image: mt.a.parseImage(t3) }, false), this.refresh(), this.parent.trigger("changeTabType", this.state.image.type);
            } }, { key: "template", value: function() {
              var t3 = this.state.image, e3 = (t3 = t3 || {}).type || "static-gradient";
              return e3 === "url" && (e3 = "image-resource"), "\n        <div class='elf--gradient-editor' data-selected-editor='".concat(e3, "'>\n            <div class='gradient-preview'>\n              <div class='gradient-view' ref='$gradientView' title='").concat(this.$i18n("gradient.editor.drag.message"), "'></div>\n              <div class='drag-pointer' ref='$dragPosition'></div>\n              <div class='preset-position'>\n                <div data-value='top' title='top'>").concat(D.a.chevron_right, "</div>\n                <div data-value='right' title='right'>").concat(D.a.chevron_right, "</div>\n                <div data-value='left' title='left'>").concat(D.a.chevron_right, "</div>\n                <div data-value='bottom' title='bottom'>").concat(D.a.chevron_right, "</div>\n                <div data-value='top left' title='top left'>").concat(D.a.chevron_right, "</div>\n                <div data-value='top right' title='top right'>").concat(D.a.chevron_right, "</div>\n                <div data-value='bottom left' title='bottom left'>").concat(D.a.chevron_right, "</div>\n                <div data-value='bottom right' title='bottom right'>").concat(D.a.chevron_right, `</div>                
              </div>
              <div data-editor='image-loader'>
                <input type='file' accept="image/*" ref='$file' />
              </div>              
            </div>
            <div class="picker-tab">
              <div class="picker-tab-list" ref="$tab">
                `).concat(tc.map(function(t4) {
                return "<span class='picker-tab-item ".concat(t4, "' data-editor='").concat(t4, "'><span class='icon'>").concat(ec[t4] || "", "</span></span>");
              }).join(""), `
              </div>
            </div>
            <div class='gradient-steps' data-editor='gradient'>
                <div class="hue-container" ref="$back"></div>            
                <div class="hue" ref="$steps">
                    <div class='step-list' ref="$stepList" ></div>
                </div>
            </div>
            <div class='tools' data-editor='tools'>
              <label>Offset</label>
              <object refClass='InputRangeEditor' ref='$range' calc="false" key='length' onchange='changeColorStepOffset' />
            </div>
            <div class='tools' data-editor='tools'>
              <label for='gradientConnected`).concat(this.id, "'>connected </label>\n              <input type='checkbox'  id='gradientConnected").concat(this.id, `' ref='$cut' checked />
            </div>
            <div class='sub-editor' ref='$subEditor'> 
              <div data-editor='angle'>
                <object refClass="RangeEditor" label='Angle' ref='$angle' calc="false" units="deg" min="-720" max="720" key='angle' onchange='changeKeyValue' />
              </div>
              <div data-editor='centerX'>
                <object refClass="RangeEditor" label='Center X' ref='$radialPositionX' calc="false" value="50%"  key='radialPositionX' onchange='changeKeyValue' />
              </div>                
              <div data-editor='centerY'>                      
                <object refClass="RangeEditor" label='Center Y' ref='$radialPositionY' calc="false" value="50%" key='radialPositionY' onchange='changeKeyValue' />
              </div>                
              <div data-editor='radialType'>              
                <object refClass="SelectEditor" label='Radial Type' ref='$radialType' value="" options="`).concat(this.variable(Qo), `" key='radialType' onchange='changeKeyValue' />
              </div>

            </div>            
        </div>
      `);
            } }, { key: Object(V.CHANGE)("$file"), value: function(t3) {
              var e3 = this;
              this.$selection.currentProject && ht()(t3.target.files).forEach(function(t4) {
                e3.emit("updateImageAssetItem", t4, function(t5) {
                  e3.trigger("setImageUrl", t5);
                });
              });
            } }, { key: Object(V.CLICK)("$el .preset-position [data-value]"), value: function(t3) {
              var e3 = t3.$dt.attr("data-value");
              rc[e3] && (this.state.image.radialPosition = Object(X.clone)(rc[e3]), this.refresh(), this.updateData());
            } }, { key: Object(V.DOUBLECLICK)("$gradientView") + V.PREVENT, value: function(t3) {
              this.state.image.radialPosition = ["50%", "50%"], this.refresh(), this.updateData();
            } }, { key: Object(V.POINTERSTART)("$gradientView") + Object(V.MOVE)("moveDragPosition"), value: function(t3) {
              var e3 = this.refs.$dragPosition.parent();
              this.containerRect = e3.rect(), this.startXY = t3.xy;
            } }, { key: "moveDragPosition", value: function(t3, e3) {
              var n3 = this.startXY.x + t3, r2 = this.startXY.y + e3;
              this.containerRect.x > n3 ? n3 = this.containerRect.x : this.containerRect.x + this.containerRect.width < n3 && (n3 = this.containerRect.x + this.containerRect.width), this.containerRect.y > r2 ? r2 = this.containerRect.y : this.containerRect.y + this.containerRect.height < r2 && (r2 = this.containerRect.y + this.containerRect.height);
              var i2 = F.a.percent((n3 - this.containerRect.x) / this.containerRect.width * 100), a2 = F.a.percent((r2 - this.containerRect.y) / this.containerRect.height * 100);
              this.state.image.radialPosition = [i2, a2], this.bindData("$dragPosition"), this.bindData("$gradientView"), this.children.$radialPositionX.setValue(i2), this.children.$radialPositionY.setValue(a2), this.updateData();
            } }, { key: Object(V.CLICK)("$tab .picker-tab-item"), value: function(t3) {
              var e3 = t3.$dt.attr("data-editor");
              this.$el.attr("data-selected-editor", e3), this.parent.trigger("changeTabType", e3);
              var n3 = e3 === "image-resource" ? this.state.image.url : this.state.url;
              this.state.image = mt.a.changeImageType({ type: e3, url: n3, colorsteps: this.state.image.colorsteps || [], angle: F.a.parse(this.children.$angle.getValue()).value, radialType: this.children.$radialType.getValue(), radialPosition: [this.children.$radialPositionX.getValue(), this.children.$radialPositionY.getValue()] }), this.refresh(), this.updateData(), this.sendMessage();
            } }, { key: "sendMessage", value: function(t3) {
              (t3 = this.$el.attr("data-selected-editor")) === "linear-gradient" || t3 === "repeating-linear-gradient" ? this.emit("addStatusBarMessage", "") : this.emit("addStatusBarMessage", "Drag if you want to move center position");
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeKeyValue"), value: function(t3, e3) {
              t3 === "angle" && (e3 = e3.value), this.state.image[t3] = e3, t3 !== "radialPositionX" && t3 !== "radialPositionY" || (this.state.image.radialPosition = [this.state.image.radialPositionX || "50%", this.state.image.radialPositionY || "50%"]), this.bindData("$gradientView"), this.updateData();
            } }, { key: Object(V.SUBSCRIBE)("changeColorStepOffset"), value: function(t3, e3) {
              this.currentStep && (this.currentStep.percent = e3.value, this.state.image.sortColorStep(), this.refresh(), this.updateData());
            } }, { key: Object(V.CLICK)("$back"), value: function(t3) {
              var e3 = this.refs.$stepList.rect(), n3 = e3.x, r2 = e3.right, i2 = t3.xy.x;
              i2 < n3 ? i2 = n3 : i2 > r2 && (i2 = r2);
              var a2 = (i2 - n3) / e3.width * 100;
              this.state.image.insertColorStep(a2), this.state.image.sortColorStep(), this.refresh(), this.updateData();
            } }, { key: Object(V.BIND)("$el"), value: function() {
              var t3 = this.state.image.type;
              return t3 === "url" && (t3 = "image-resource"), this.parent.trigger("changeTabType", t3), { "data-selected-editor": t3 };
            } }, { key: Object(V.BIND)("$stepList"), value: function() {
              return { "data-selected-index": this.state.index.toString(), style: { "background-image": this.getLinearGradient() } };
            } }, { key: Object(V.BIND)("$gradientView"), value: function() {
              var t3 = this.state.image.type, e3 = "auto";
              return t3 !== "url" && t3 !== "image-resource" || (e3 = "cover"), { style: { "background-image": this.state.image.toString(), "background-size": e3, "background-repeat": "no-repeat" } };
            } }, { key: Object(V.BIND)("$dragPosition"), value: function() {
              var t3 = "50%", e3 = "50%";
              if (nc[this.state.image.type]) {
                var n3 = be()(this.state.image.radialPosition, 2);
                t3 = n3[0], e3 = n3[1];
              }
              return { style: { left: t3, top: e3 } };
            } }, { key: Object(V.LOAD)("$stepList"), value: function() {
              var t3 = this;
              return (this.state.image.colorsteps || []).map(function(e3, n3) {
                var r2 = t3.$selection.isSelectedColorStep(e3.id) ? "selected" : "";
                return "\n      <div class='step ".concat(r2, "' data-id='").concat(e3.id, "' data-cut='").concat(e3.cut, "' style='left: ").concat(e3.toLength(), `;'>
        <div class='color-view' style="background-color: `).concat(e3.color, `"></div>
        <div class='arrow' style="background-color: `).concat(e3.color, '"></div>\n      </div>');
              });
            } }, { key: Object(V.CLICK)("$cut"), value: function() {
              this.currentStep && (this.currentStep.cut = this.refs.$cut.checked(), this.refresh(), this.updateData());
            } }, { key: "removeStep", value: function(t3) {
              this.state.image.removeColorStep(t3), this.refresh(), this.updateData();
            } }, { key: "selectStep", value: function(t3) {
              var e3 = this;
              this.state.id = t3, this.$selection.selectColorStep(t3), this.state.image.colorsteps && (this.currentStep = this.state.image.colorsteps.find(function(t4) {
                return e3.$selection.isSelectedColorStep(t4.id);
              }), this.refs.$cut.checked(this.currentStep.cut), this.children.$range.setValue(F.a.percent(this.currentStep.percent)), this.parent.trigger("selectColorStep", this.currentStep.color)), this.refresh();
            } }, { key: Object(V.POINTERSTART)("$stepList .step") + Object(V.MOVE)(), value: function(t3) {
              var e3 = t3.$dt.attr("data-id");
              if (t3.altKey)
                return this.removeStep(e3), false;
              this.selectStep(e3), this.startXY = t3.xy, this.cachedStepListRect = this.refs.$stepList.rect();
            } }, { key: "getStepListRect", value: function() {
              return this.cachedStepListRect;
            } }, { key: "move", value: function(t3, e3) {
              var n3 = this.getStepListRect(), r2 = n3.x, i2 = n3.right, a2 = this.startXY.x + t3;
              a2 < r2 ? a2 = r2 : a2 > i2 && (a2 = i2);
              var o2 = (a2 - r2) / n3.width * 100;
              this.currentStep.setValue(o2, n3.width), this.children.$range.setValue(F.a.percent(o2)), this.state.image.sortColorStep(), this.refresh(), this.updateData();
            } }, { key: "refresh", value: function() {
              this.load();
            } }, { key: "getLinearGradient", value: function() {
              var t3 = this.state.image;
              return "linear-gradient(to right, ".concat(yr.a.toColorString(t3.colorsteps), ")");
            } }, { key: Object(V.SUBSCRIBE)("setColorStepColor"), value: function(t3) {
              this.state.image.type === "static-gradient" ? (this.state.image.colorsteps[0].color = t3, this.refresh(), this.updateData()) : this.currentStep && (this.currentStep.color = t3, this.refresh(), this.updateData());
            } }, { key: Object(V.SUBSCRIBE)("setImageUrl"), value: function(t3) {
              this.state.image && (this.state.url = t3, this.state.image.reset({ url: t3 }), this.refresh(), this.updateData());
            } }, { key: "updateData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.setState(t3, false), this.parent.trigger(this.props.onchange, this.state.image.toString());
            } }]), n2;
          }(J.a);
          n(205);
          function ac(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var oc = function(t2) {
            s()(n2, t2);
            var e2 = ac(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { value: this.props.value };
            } }, { key: "template", value: function() {
              return "<div class='select-editor elf--list-view-editor' ref='$body'></div>";
            } }, { key: Object(V.BIND)("$body"), value: function() {
              return { "data-column": this.props.column || 1 };
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = this;
              return Object.keys(D.a).map(function(e3) {
                var n3 = D.a[e3], r2 = e3 === t3.state.value ? "selected" : "";
                return "<div class='list-view-item ".concat(r2, "'  data-key='").concat(e3, "'>").concat(n3, "</div>");
              });
            } }, { key: "getValue", value: function() {
              return this.state.value;
            } }, { key: "setValue", value: function(t3) {
              this.state.value = t3, this.refresh();
            } }, { key: Object(V.CLICK)("$body .list-view-item"), value: function(t3) {
              var e3 = t3.$dt.attr("data-key");
              t3.$dt.onlyOneClass("selected"), this.updateData({ value: e3 });
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.parent.trigger(this.props.onchange, this.props.key, this.state.value, this.props.params);
            } }]), n2;
          }(J.a);
          function cc(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var sc = function(t2) {
            s()(n2, t2);
            var e2 = cc(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { values: this.props.values.split(" ").map(function(t3) {
                return +t3;
              }), column: this.props.column };
            } }, { key: "template", value: function() {
              return "<div class='small-editor input-array-editor' ref='$body' ></div>";
            } }, { key: Object(V.BIND)("$body"), value: function() {
              return { cssText: "\n                display: grid;\n                grid-template-columns: repeat(".concat(this.state.column, ", 1fr);\n                grid-column-gap: 2px;\n                grid-row-gap: 2px;\n            ") };
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              return this.state.values.map(function(t3, e3) {
                return `
                <div class='number-editor'>
                    <input type="number" value="`.concat(t3, '" step="0.01" data-index="').concat(e3, '" />\n                </div>\n            ');
              });
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.parent.trigger(this.props.onchange, this.props.key, this.state.values, this.props.params);
            } }, { key: Object(V.INPUT)("$body input"), value: function(t3) {
              var e3 = t3.$dt, n3 = +e3.attr("data-index"), r2 = +e3.value;
              this.state.values[n3] = r2, this.updateData();
            } }]), n2;
          }(J.a);
          n(206);
          function uc(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var lc = function(t2) {
            s()(n2, t2);
            var e2 = uc(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              var t3 = this.props.units || "px,em,%", e3 = F.a.parse(this.props.value || F.a.z()), n3 = this.props.label || "";
              return D.a[n3] && (n3 = D.a[n3]), { removable: this.props.removable === "true", label: n3, compact: this.props.compact === "true", min: +this.props.min || 0, max: +this.props.max || 100, step: +this.props.step || 1, key: this.props.key, params: this.props.params || "", layout: this.props.layout || "", units: t3, value: e3 };
            } }, { key: "template", value: function() {
              return "<div class='small-editor' ref='$body'></div>";
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = this.state, e3 = t3.min, n3 = t3.max, r2 = t3.step, i2 = t3.label, a2 = t3.compact, o2 = t3.removable, c2 = t3.layout, s2 = +this.state.value.value.toString();
              isNaN(s2) && (s2 = 0);
              var u2 = c2, l2 = (+s2).toString();
              return '\n        <div \n            ref="$range",\n            class="'.concat(Object(X.OBJECT_TO_CLASS)(M()({ "elf--input-range-editor": true, "has-label": !!i2, compact: !!a2, "is-removable": o2 }, u2, true)), '"\n        >\n            ').concat(i2 ? "<label>".concat(i2, "</label>") : "", `
            <div class='range--editor-type' data-type='range'>
                <div class='area'>
                    <input type='number' ref='$propertyNumber' value="`).concat(l2, '" min="').concat(e3, '" max="').concat(n3, '" step="').concat(r2, `" tabIndex="1" />
                    
                    <object refClass="SelectEditor"  ref='$unit' key='unit' value="`).concat(this.state.selectedUnit || this.state.value.unit, '" options="').concat(this.state.units, `" onchange='changeUnit' />
                    
                </div>
            </div>
            <button type='button' class='remove' ref='$remove' title='Remove'>`).concat(D.a.remove, "</button>\n        </div>\n    ");
            } }, { key: "getValue", value: function() {
              return this.state.value.clone();
            } }, { key: "setValue", value: function(t3) {
              this.setState({ value: F.a.parse(t3) }, false), this.refs.$propertyNumber.val(this.state.value.value), this.refs.$unit.val(this.state.value.unit);
            } }, { key: Object(V.FOCUS)("$propertyNumber"), value: function(t3) {
              this.refs.$range.addClass("focused");
            } }, { key: Object(V.BLUR)("$propertyNumber"), value: function(t3) {
              this.refs.$range.removeClass("focused");
            } }, { key: Object(V.CLICK)("$remove"), value: function(t3) {
              this.updateData({ value: "" });
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.parent.trigger(this.props.onchange, this.props.key, this.state.value, this.props.params);
            } }, { key: "initValue", value: function() {
              this.state.value == "" && (this.state.value = new F.a(0, this.children.$unit.getValue()));
            } }, { key: Object(V.INPUT)("$propertyNumber"), value: function(t3) {
              var e3 = +this.getRef("$propertyNumber").value;
              this.initValue(), this.updateData({ value: new F.a(e3, this.children.$unit.getValue()) });
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeUnit"), value: function(t3, e3) {
              this.initValue(), this.updateData({ value: this.state.value.toUnit(e3) });
            } }]), n2;
          }(J.a);
          n(207);
          function fc(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var hc = function(t2) {
            s()(n2, t2);
            var e2 = fc(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              var t3 = this.props.units || "px,em,%", e3 = F.a.parse(this.props.value || F.a.z());
              return { removable: this.props.removable === "true", calc: this.props.calc === "true", compact: this.props.compact === "true", label: this.props.label || "", min: +this.props.min || 0, max: +this.props.max || 100, step: +this.props.step || 1, key: this.props.key, params: this.props.params || "", layout: this.props.layout || "", units: t3, value: e3 };
            } }, { key: "template", value: function() {
              return "<div class='small-editor' ref='$body'></div>";
            } }, { key: "refresh", value: function() {
              this.load();
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = this.state, e3 = t3.min, n3 = t3.max, r2 = t3.step, i2 = t3.label, a2 = t3.removable, o2 = t3.layout, c2 = t3.compact, s2 = +this.state.value.value.toString();
              isNaN(s2) && (s2 = 0);
              var u2 = o2, l2 = (+s2).toString(), f2 = this.state.units.split(",").map(function(t4) {
                var e4 = t4;
                return e4 === "number" && (e4 = ""), { value: t4, text: e4 };
              });
              return '\n        <div \n            ref="$range"\n            class="'.concat(Object(X.OBJECT_TO_CLASS)(M()({ "elf--range--editor": true, "has-label": !!i2, compact: !!c2, "is-removable": a2 }, u2, true)), '"\n        >\n            ').concat(i2 ? '<label title="'.concat(i2, '">').concat(i2, "</label>") : "", `
            <div class='range--editor-type' data-type='range'>
                <input type='range' ref='$property' value="`).concat(l2, '" min="').concat(e3, '" max="').concat(n3, '" step="').concat(r2, `" /> 
                <div class='area' ref='$rangeArea'>
                    <input type='number' ref='$propertyNumber' value="`).concat(l2, '" min="').concat(e3, '" max="').concat(n3, '" step="').concat(r2, `" tabIndex="1" />
                    <object refClass="SelectEditor"  ref='$unit' key='unit' value="`).concat(this.state.selectedUnit || this.state.value.unit, '" options=').concat(this.variable(f2), " onchange='changeUnit' />\n                </div>\n            </div>\n            <button type='button' class='remove thin' ref='$remove' title='Remove'>").concat(D.a.remove, "</button>\n        </div>\n    ");
            } }, { key: "getValue", value: function() {
              return this.state.value.clone();
            } }, { key: "setValue", value: function(t3) {
              this.setState({ value: F.a.parse(t3) });
            } }, { key: Object(V.FOCUS)("$propertyNumber"), value: function(t3) {
              this.refs.$rangeArea.addClass("focused");
            } }, { key: Object(V.BLUR)("$propertyNumber"), value: function(t3) {
              this.refs.$rangeArea.removeClass("focused");
            } }, { key: Object(V.CLICK)("$remove"), value: function(t3) {
              this.updateData({ value: "" });
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.parent.trigger(this.props.onchange, this.props.key, this.state.value, this.props.params);
            } }, { key: "initValue", value: function() {
              this.state.value == "" && (this.state.value = new F.a(0, this.children.$unit.getValue()));
            } }, { key: Object(V.INPUT)("$propertyNumber"), value: function(t3) {
              var e3 = +this.getRef("$propertyNumber").value;
              this.getRef("$property").val(e3), this.initValue(), this.updateData({ value: new F.a(e3, this.children.$unit.getValue()) });
            } }, { key: Object(V.INPUT)("$property"), value: function(t3) {
              this.trigger("changeRangeValue");
            } }, { key: Object(V.POINTERSTART)("$property") + Object(V.END)(), value: function() {
            } }, { key: "end", value: function() {
              this.trigger("changeRangeValue");
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeRangeValue"), value: function() {
              var t3 = +this.getRef("$property").value;
              this.refs.$propertyNumber.val(t3), this.initValue(), this.updateData({ value: new F.a(t3, this.children.$unit.getValue()) });
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeUnit"), value: function(t3, e3) {
              this.initValue(), this.updateData({ value: this.state.value.toUnit(e3) });
            } }]), n2;
          }(J.a);
          function pc(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function dc(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? pc(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : pc(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function vc(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var yc = function(t2) {
            s()(n2, t2);
            var e2 = vc(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              var t3 = this.props.value;
              t3 = t3 === "infinite" ? new F.a(0, "infinite") : F.a.number(t3.split("normal")[0]);
              var e3 = this.props.units || "px,em,%";
              return dc(dc({}, A()(h()(n2.prototype), "initState", this).call(this)), { key: this.props.key, params: this.props.params || "", units: e3, value: t3 });
            } }]), n2;
          }(hc);
          n(208);
          function gc(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var mc = function(t2) {
            s()(n2, t2);
            var e2 = gc(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              var t3 = (this.props.value || "").split(":"), e3 = be()(t3, 3);
              return { start: +(e3[0] || 0), end: +(e3[1] || 1), duration: +(e3[2] || 1) };
            } }, { key: "refresh", value: function() {
              this.load(), this.children.$s.setValue(this.state.start * this.state.duration), this.children.$e.setValue(this.state.end * this.state.duration), this.children.$s.setMax(this.state.duration), this.children.$e.setMax(this.state.duration);
            } }, { key: "template", value: function() {
              var t3 = this.state, e3 = t3.start, n3 = t3.end, r2 = t3.duration;
              return `
            <div class='elf--media-progress-editor'>
                <div class='drag-area'>
                    <div class='progress-bar' ref='$progress'></div>
                    <div class='bar' ref='$bar'></div>                
                    <div class='drag-item start' ref='$start'></div>
                    <div class='drag-item end' ref='$end'></div>
                </div>
                <div class='item'>
                    <object refClass="NumberRangeEditor"  
                        ref='$s' 
                        label='Start' 
                        key='start' 
                        min="0" 
                        max="`.concat(r2, '" \n                        step="0.001" \n                        value="').concat(e3 * r2, `" 
                        onchange="changeValue" 
                    />
                </div>
                <div class='item'>
                    <object refClass="NumberRangeEditor"  
                        ref='$e' 
                        label='End' 
                        key='end' 
                        min="0" 
                        max="`).concat(r2, '" \n                        step="0.001" \n                        value="').concat(n3 * r2, '" \n                        onchange="changeValue" \n                    />\n                </div>                \n            </div>\n        ');
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeValue"), value: function(t3, e3) {
              this.updateData(M()({}, t3, e3 / this.state.duration), true);
            } }, { key: Object(V.POINTERSTART)("$start") + Object(V.MOVE)("moveStart"), value: function(t3) {
              this.rect = this.refs.$progress.rect(), this.pos = F.a.parse(this.refs.$start.css("left")).toPx(this.rect.width), this.max = F.a.parse(this.refs.$end.css("left")).toPx(this.rect.width);
            } }, { key: "moveStart", value: function(t3, e3) {
              var n3 = Math.min(this.max.value, Math.max(0, this.pos.value + t3));
              this.state.start = n3 / this.rect.width, this.children.$s.setValue(this.state.start * this.state.duration), this.refresh(), this.updateData();
            } }, { key: Object(V.BIND)("$start"), value: function() {
              return { "data-info": this.state.start, style: { left: F.a.percent(100 * (this.state.start || 0)) } };
            } }, { key: Object(V.POINTERSTART)("$end") + Object(V.MOVE)("moveStartForEnd"), value: function(t3) {
              this.rect = this.refs.$progress.rect(), this.pos = F.a.parse(this.refs.$end.css("left")).toPx(this.rect.width), this.min = F.a.parse(this.refs.$start.css("left")).toPx(this.rect.width), this.max = F.a.px(this.rect.width);
            } }, { key: "moveStartForEnd", value: function(t3, e3) {
              var n3 = Math.max(this.min.value, Math.min(this.max.value, this.pos.value + t3));
              this.state.end = n3 / this.rect.width, this.children.$e.setValue(this.state.end * this.state.duration), this.refresh(), this.updateData();
            } }, { key: Object(V.BIND)("$end"), value: function() {
              return { "data-info": this.state.end, style: { left: F.a.percent(100 * (this.state.end || 1)) } };
            } }, { key: Object(V.BIND)("$bar"), value: function() {
              var t3 = this.state.start || 0, e3 = this.state.end || 1;
              return { style: { left: F.a.percent(100 * t3), width: F.a.percent(100 * (e3 - t3)) } };
            } }, { key: "getValue", value: function() {
              var t3 = this.state, e3 = t3.start, n3 = t3.end, r2 = t3.duration;
              return "".concat(e3, ":").concat(n3, ":").concat(r2);
            } }, { key: "setValue", value: function(t3) {
              var e3 = t3.split(":"), n3 = be()(e3, 3), r2 = n3[0], i2 = n3[1], a2 = n3[2];
              this.setState({ start: Number(r2), end: Number(i2), duration: Number(a2) });
            } }, { key: "updateData", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, e3 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
              this.setState(t3, e3), this.parent.trigger(this.props.onchange, this.props.key, this.getValue(), this.props.params);
            } }]), n2;
          }(J.a);
          n(209);
          function bc(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var kc = function(t2) {
            s()(n2, t2);
            var e2 = bc(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              var t3 = F.a.parse(this.props.value || F.a.number(0));
              t3 = t3.toUnit("number");
              var e3 = this.props.label || "";
              return D.a[e3] && (e3 = D.a[e3]), { label: e3, compact: this.props.compact === "true", min: +this.props.min || 0, max: +this.props.max || 100, step: +this.props.step || 1, key: this.props.key, params: this.props.params || "", layout: this.props.layout || "", value: t3 };
            } }, { key: "template", value: function() {
              return "<div class='small-editor' ref='$body'></div>";
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = this.state, e3 = t3.min, n3 = t3.max, r2 = t3.step, i2 = t3.label, a2 = t3.type, o2 = t3.layout, c2 = t3.compact, s2 = +this.state.value.value.toString();
              isNaN(s2) && (s2 = 0);
              var u2 = i2 ? "has-label" : "", l2 = c2 ? "compact" : "", f2 = o2, h2 = (+s2).toString();
              return "\n        <div class='elf--number-input-editor ".concat(u2, " ").concat(l2, " ").concat(f2, "' data-selected-type='").concat(a2, "'>\n            ").concat(i2 ? "<label>".concat(i2, "</label>") : "", `
            <div class='range--editor-type' data-type='range'>
                <div class='area'>
                    <input type='number' ref='$propertyNumber' value="`).concat(h2, '" min="').concat(e3, '" max="').concat(n3, '" step="').concat(r2, '" />\n                </div>\n            </div>\n        </div>\n    ');
            } }, { key: "getValue", value: function() {
              return this.state.value || 0;
            } }, { key: "setValue", value: function(t3) {
              this.setState({ value: F.a.parse(t3) }, false), this.refs.$propertyNumber.val(this.state.value.value);
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.parent.trigger(this.props.onchange, this.props.key, this.state.value, this.props.params);
            } }, { key: Object(V.INPUT)("$propertyNumber"), value: function(t3) {
              var e3 = +this.getRef("$propertyNumber").value;
              this.updateData({ value: this.state.value.set(e3) });
            } }]), n2;
          }(J.a);
          n(210);
          function Oc(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var xc = function(t2) {
            s()(n2, t2);
            var e2 = Oc(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              var t3 = F.a.parse(this.props.value || F.a.number(0));
              return t3 = t3.toUnit("number"), { removable: this.props.removable === "true", clamp: this.props.clamp === "true", label: this.props.label || "", min: +this.props.min || 0, max: +this.props.max || 100, step: +this.props.step || 1, key: this.props.key, params: this.props.params || "", layout: this.props.layout || "", value: t3 };
            } }, { key: "template", value: function() {
              return "<div class='small-editor' ref='$body'></div>";
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = this.state, e3 = t3.min, n3 = t3.max, r2 = t3.step, i2 = t3.label, a2 = t3.type, o2 = t3.removable, c2 = t3.layout, s2 = +this.state.value.value.toString();
              isNaN(s2) && (s2 = 0);
              var u2 = i2 ? "has-label" : "", l2 = o2 ? "is-removable" : "", f2 = c2, h2 = (+s2).toString();
              return "\n        <div class='elf--number-range-editor ".concat(u2, " ").concat(l2, " ").concat(f2, "' data-selected-type='").concat(a2, "'>\n            ").concat(i2 ? '<label title="'.concat(i2, '">').concat(i2, "</label>") : "", `
            <div class='range--editor-type' data-type='range'>
                <div class='area'>
                    <input type='range' ref='$property' value="`).concat(h2, '" min="').concat(e3, '" max="').concat(n3, '" step="').concat(r2, `" />
                    <input type='number' ref='$propertyNumber' value="`).concat(h2, '" min="').concat(e3, '" max="').concat(n3, '" step="').concat(r2, `" tabIndex="1" />
                </div>
            </div>
            <button type='button' class='remove' ref='$remove' title='Remove'>`).concat(D.a.remove, "</button>\n        </div>\n    ");
            } }, { key: "setMin", value: function(t3) {
              this.setState({ min: F.a.parse(t3) });
            } }, { key: "setMax", value: function(t3) {
              this.setState({ max: F.a.parse(t3) });
            } }, { key: "getValue", value: function() {
              return this.state.clamp ? this.state.value.clamp(this.state.min, this.state.max) : this.state.value;
            } }, { key: "setValue", value: function(t3) {
              this.setState({ value: F.a.parse(t3) });
            } }, { key: Object(V.FOCUS)("$propertyNumber"), value: function(t3) {
              this.refs.$propertyNumber.addClass("focused");
            } }, { key: Object(V.BLUR)("$propertyNumber"), value: function(t3) {
              this.refs.$propertyNumber.removeClass("focused");
            } }, { key: Object(V.CLICK)("$remove"), value: function(t3) {
              this.updateData({ value: "" });
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.parent.trigger(this.props.onchange, this.props.key, this.getValue(), this.props.params);
            } }, { key: Object(V.INPUT)("$propertyNumber"), value: function(t3) {
              var e3 = +this.getRef("$propertyNumber").value;
              this.getRef("$property").val(e3), this.updateData({ value: this.state.value.set(e3) });
            } }, { key: Object(V.INPUT)("$property"), value: function() {
              this.trigger("changeRangeValue");
            } }, { key: Object(V.POINTERSTART)("$property") + Object(V.END)("moveRange"), value: function() {
            } }, { key: "moveRange", value: function() {
              this.trigger("changeRangeValue");
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeRangeValue"), value: function() {
              var t3 = +this.getRef("$property").value;
              this.getRef("$propertyNumber").val(t3), this.state.value === "" && (this.state.value = F.a.number(0)), this.updateData({ value: this.state.value.set(t3) });
            } }]), n2;
          }(J.a);
          n(211);
          function jc(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Sc(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Pc = function(t2) {
            s()(n2, t2);
            var e2 = Sc(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { parser: new $n.a(this.props.value || "") };
            } }, { key: "makeSegments", value: function() {
              return this.refs.$data.$$(".segment").map(function(t3) {
                var e3 = t3.$(".command"), n3 = e3.attr("data-command");
                return n3 === "Z" && e3.attr("data-toggle") === "false" ? null : { command: n3, values: t3.$$(".values input[type=number]").map(function(t4) {
                  return +t4.value;
                }) };
              }).filter(function(t3) {
                return t3;
              });
            } }, { key: "updateData", value: function() {
              var t3 = this.makeSegments();
              this.state.parser.resetSegments(t3), this.modifyPathData();
            } }, { key: "modifyPathData", value: function() {
              this.parent.trigger(this.props.onchange, this.props.key, this.getValue(), this.props.params);
            } }, { key: "setValue", value: function(t3) {
              this.setState({ parser: new $n.a(t3) });
            } }, { key: "getValue", value: function() {
              return this.state.parser.joinPath();
            } }, { key: "template", value: function() {
              return "\n            <div class='elf--path-data-editor'>\n                <div class='data' ref='$data'></div>\n            </div>\n        ";
            } }, { key: Object(V.LOAD)("$data"), value: function() {
              var t3 = this, e3 = [];
              this.state.parser.segments.forEach(function(n4, r3) {
                var i2 = function(t4) {
                  for (var e4 = 1; e4 < arguments.length; e4++) {
                    var n5 = arguments[e4] != null ? arguments[e4] : {};
                    e4 % 2 ? jc(Object(n5), true).forEach(function(e5) {
                      M()(t4, e5, n5[e5]);
                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(n5)) : jc(Object(n5)).forEach(function(e5) {
                      Object.defineProperty(t4, e5, Object.getOwnPropertyDescriptor(n5, e5));
                    });
                  }
                  return t4;
                }({}, n4);
                e3.push(i2);
                var a2 = t3.state.parser.segments[r3 + 1];
                a2 && a2.command === "M" && (i2.command !== "Z" ? e3.push({ command: "Z", toggle: false, values: [] }) : i2.toggle = true);
              });
              var n3 = this.state.parser.segments[this.state.parser.segments.length - 1];
              n3 && n3.command !== "Z" && e3.push({ command: "Z", toggle: false, values: [] });
              var r2 = e3.map(function(t4) {
                var e4 = t4.command === "M" ? "m" : "";
                return "\n                <div class='segment ".concat(e4, "'>\n                    <div class='command' data-command='").concat(t4.command, `' data-toggle="`).concat(t4.toggle, `" title='Toggle'>`).concat(t4.command, "</div>\n                    <div class='values'>\n                        ").concat(t4.values.map(function(t5) {
                  return '<input type="number" value="'.concat(t5, '" />');
                }).join(""), "\n\n                        ").concat(t4.command === "Z" ? t4.toggle === false ? "opened" : "closed" : "", "\n                    </div>\n                </div>\n            ");
              });
              return r2.unshift("\n            <div class='segment-empty'>\n                <div class='command'></div>\n                <div class='values'>\n                    <span>X</span>\n                    <span>Y</span>\n                </div>\n            </div>\n        "), r2;
            } }, { key: Object(V.INPUT)("$data input[type=number]") + Object(V.DEBOUNCE)(300), value: function(t3) {
              this.updateData();
            } }, { key: Object(V.CLICK)("$data .command[data-toggle]"), value: function(t3) {
              var e3 = t3.$dt.attrs("data-command", "data-toggle"), n3 = be()(e3, 2), r2 = n3[0], i2 = n3[1];
              r2 === "Z" && (i2 = i2 !== "false" ? "false" : "true", t3.$dt.attr("data-toggle", i2), this.updateData());
            } }]), n2;
          }(J.a), wc = n(64);
          n(212);
          function Rc(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Cc = function(t2) {
            s()(n2, t2);
            var e2 = Rc(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { parser: new wc.a(this.props.value || "") };
            } }, { key: "makeSegments", value: function() {
              return this.refs.$data.$$(".segment").map(function(t3) {
                return { x: +t3.$('[data-key="x"]').value, y: +t3.$('[data-key="y"]').value };
              });
            } }, { key: "updateData", value: function() {
              var t3 = this.makeSegments();
              this.state.parser.resetSegments(t3), this.modifyPolygonData();
            } }, { key: "modifyPolygonData", value: function() {
              this.parent.trigger(this.props.onchange, this.props.key, this.getValue(), this.props.params);
            } }, { key: "setValue", value: function(t3) {
              this.setState({ parser: new wc.a(t3 || "") });
            } }, { key: "getValue", value: function() {
              return this.state.parser.joinPoints();
            } }, { key: "template", value: function() {
              return "\n            <div class='elf--polygon-data-editor'>\n                <div class='data' ref='$data'></div>\n            </div>\n        ";
            } }, { key: Object(V.LOAD)("$data"), value: function() {
              return this.state.parser.segments.map(function(t3) {
                return `
                <div class='segment'>
                    <div class='values'>
                        <label>X <input type="number" data-key="x" value="`.concat(t3.x, '" /></label>\n                        <label>Y <input type="number" data-key="y" value="').concat(t3.y, '" /></label>\n                    </div>\n                </div>\n            ');
              });
            } }, { key: Object(V.INPUT)("$data input[type=number]") + Object(V.DEBOUNCE)(300), value: function(t3) {
              this.updateData();
            } }]), n2;
          }(J.a);
          n(213);
          function Ec(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var $c = function(t2) {
            s()(n2, t2);
            var e2 = Ec(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              var t3 = this.props.split || ",", e3 = Object(X.isArray)(this.props.options) ? this.props.options.map(function(t4) {
                return Object(X.isString)(t4) ? { value: t4 } : t4;
              }) : (this.props.options || "").split(t3).map(function(t4) {
                return t4.trim();
              }).map(function(t4) {
                var e4 = t4.split(":"), n4 = be()(e4, 2);
                return { value: n4[0], text: n4[1] };
              }), n3 = (this.props.icons || "").split(t3).map(function(t4) {
                return t4.trim();
              }), r2 = (this.props.colors || "").split(t3).map(function(t4) {
                return t4.trim();
              }), i2 = this.props.value || "";
              return { label: this.props.label || "", compact: this.props.compact === "true", options: e3, icons: n3, colors: r2, value: i2 };
            } }, { key: "template", value: function() {
              var t3 = this.state, e3 = t3.label, n3 = t3.compact ? "compact" : "";
              return "\n            <div class='elf--select-icon-editor ".concat(e3 ? "has-label" : "", "'>\n                ").concat(e3 ? '<label title="'.concat(e3, '">').concat(e3, "</label>") : "", "\n                <div class='items ").concat(n3, "' ref='$options'></div>\n            </div>\n        ");
            } }, { key: Object(V.CLICK)("$close"), value: function() {
              this.updateData({ value: "" }), this.refresh();
            } }, { key: "getValue", value: function() {
              return this.state.value || "";
            } }, { key: "setValue", value: function(t3) {
              this.setState({ value: t3 });
            } }, { key: Object(V.LOAD)("$options") + V.DOMDIFF, value: function() {
              var t3 = this;
              return this.state.options.map(function(e3, n3) {
                var r2 = e3.value, i2 = e3.text, a2 = e3.text, o2 = "", c2 = r2 === t3.state.value, s2 = c2 ? "selected" : "";
                if (e3.value === "") {
                  i2 = D.a.close;
                  a2 = "close";
                } else {
                  var u2 = t3.state.icons[n3];
                  D.a[u2] && (o2 = "icon"), a2 = i2, i2 = D.a[u2] || i2 || u2 || e3.text || e3.value;
                }
                var l2 = t3.state.colors[n3], f2 = {};
                return c2 && l2 && (f2["background-color"] = l2), "<div class='select-icon-item ".concat(s2, " ").concat(o2, "' style='").concat(Object(X.CSS_TO_STRING)(f2), `' data-value="`).concat(r2, `" title='`).concat(a2, "'>").concat(i2, "</div>");
              });
            } }, { key: Object(V.CLICK)("$options .select-icon-item"), value: function(t3) {
              var e3 = t3.$dt.attr("data-value");
              this.updateData({ value: e3 }), this.refresh();
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.parent.trigger(this.props.onchange, this.props.key, this.getValue(), this.props.params);
            } }]), n2;
          }(J.a);
          n(214);
          function Ic(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Tc = function(t2) {
            s()(n2, t2);
            var e2 = Ic(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              var t3 = this.generateValue(this.props.value || "");
              return { label: this.props.label || "", value: t3 };
            } }, { key: "template", value: function() {
              var t3 = this.state.label, e3 = !!t3;
              return "\n      <div class='elf--stroke-dasharray-editor'>\n        <div class='tools ".concat(e3 ? "has-label" : "", "'>\n          ").concat(e3 ? "<label class='label'>".concat(t3, "</label>") : "", "\n          <label ref='$add'>").concat(D.a.add, " ").concat(this.$i18n("stroke.dasharray.editor.add"), "</label>\n        </div>      \n        <div ref='$body'></div>\n      </div>\n    ");
            } }, { key: "toStringValue", value: function() {
              return this.state.value.join(" ");
            } }, { key: "getValue", value: function() {
              return this.toStringValue();
            } }, { key: "generateValue", value: function(t3) {
              return t3.split(" ").filter(Boolean).map(function(t4) {
                return +t4;
              });
            } }, { key: "setValue", value: function(t3) {
              Object(X.isArray)(t3) || (t3 = this.generateValue(t3)), this.setState({ value: t3 });
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              return this.state.value.map(function(t3, e3) {
                var n3 = e3 + 1;
                return `
        <div class='dasharray-item'>
          <object refClass="NumberRangeEditor"  
            ref='$`.concat(n3, "' \n            label='").concat(n3, "'\n            key='").concat(e3, `' 
            value="`).concat(t3, '" \n            min="0"\n            max="100"\n            step="1"\n            onchange="changeRangeEditor" \n          />\n          <button type="button" data-index="').concat(e3, `" class='delete'>`).concat(D.a.remove2, "</button>\n        </div>\n      ");
              });
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeRangeEditor"), value: function(t3, e3) {
              var n3 = +t3;
              this.state.value[n3] = e3, this.modifyStrokeDashArray();
            } }, { key: Object(V.CLICK)("$add"), value: function() {
              this.setState({ value: [].concat(ht()(this.state.value), [0]) });
            } }, { key: Object(V.CLICK)("$body .delete"), value: function(t3) {
              var e3 = +t3.$dt.attr("data-index");
              this.state.value.splice(e3, 1), this.refresh(), this.modifyStrokeDashArray();
            } }, { key: "modifyStrokeDashArray", value: function() {
              this.parent.trigger(this.props.onchange, this.props.key, this.toStringValue(), this.props.params);
            } }]), n2;
          }(J.a);
          n(215);
          function Bc(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Mc = function(t2) {
            s()(n2, t2);
            var e2 = Bc(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              var t3 = this.props.value;
              return { label: this.props.label || "", height: F.a.px(100), value: t3 };
            } }, { key: "template", value: function() {
              var t3 = this.state, e3 = t3.label, n3 = t3.height, r2 = t3.value;
              return "\n            <div class='elf--text-area-editor ".concat(e3 ? "has-label" : "", "'>\n                ").concat(e3 ? "<label>".concat(e3, "</label>") : "", "\n                <textarea ref='$text' style='height:").concat(n3, "'>").concat(r2, "</textarea>\n            </div>\n        ");
            } }, { key: "getValue", value: function() {
              return this.refs.$options.value;
            } }, { key: "setValue", value: function(t3, e3) {
              this.setState({ value: t3 }, false), e3 && this.setState({ height: e3 }, false), this.refresh();
            } }, { key: Object(V.BIND)("$text"), value: function() {
              return { text: this.state.value || "", style: { height: this.state.height } };
            } }, { key: Object(V.INPUT)("$text"), value: function() {
              this.updateData({ value: this.refs.$text.value });
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3), this.parent.trigger(this.props.onchange, this.props.key, this.state.value, this.props.params);
            } }]), n2;
          }(J.a);
          n(216);
          function Vc(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Dc = function(t2) {
            s()(n2, t2);
            var e2 = Vc(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              var t3 = this.props.value;
              return { label: this.props.label || "", value: t3 };
            } }, { key: "template", value: function() {
              var t3 = this.state, e3 = t3.label, n3 = t3.value;
              return "\n            <div class='elf--text-editor ".concat(e3 ? "has-label" : "", "'>\n                ").concat(e3 ? "<label>".concat(e3, "</label>") : "", `
                <div>
                    <input type='text' ref='$text' value="`).concat(n3, '" />\n                </div>\n            </div>\n        ');
            } }, { key: "getValue", value: function() {
              return this.refs.$text.value;
            } }, { key: "setValue", value: function(t3) {
              this.refs.$text.val(t3), this.setState({ value: t3 }, false);
            } }, { key: Object(V.BIND)("$text"), value: function() {
              return { value: this.state.value };
            } }, { key: Object(V.INPUT)("$text"), value: function() {
              this.updateData({ value: this.refs.$text.value });
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.parent.trigger(this.props.onchange, this.props.key, this.getValue(), this.props.params);
            } }]), n2;
          }(J.a);
          n(217);
          function Lc(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Ac = function(t2) {
            s()(n2, t2);
            var e2 = Lc(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              var t3 = this.props.value.split(";").filter(function(t4) {
                return t4.trim();
              }).map(function(t4) {
                var e3 = t4.split(":"), n3 = be()(e3, 2), r2 = n3[0], i2 = n3[1];
                return { key: r2 = r2.replace("--", ""), value: i2 };
              });
              return { hideLabel: this.props["hide-label"] == "true", params: this.props.params || "", values: t3 };
            } }, { key: "template", value: function() {
              var t3 = this.state.hideLabel ? "hide" : "";
              return "\n        <div class='elf--var-editor var-list'>\n            <div class='label ".concat(t3, "' >\n                <label>").concat(this.props.title || "", `</label>
                <div class='tools'>
                    <button type="button" ref="$add" title="add Var">`).concat(D.a.add, "</button>\n                </div>\n            </div>\n            <div class='var-list' ref='$varList'></div>\n        </div>");
            } }, { key: Object(V.SUBSCRIBE)("add"), value: function() {
              this.state.values.push({ key: "", value: "" }), this.refresh(), this.updateData();
            } }, { key: Object(V.CLICK)("$add"), value: function() {
              this.trigger("add");
            } }, { key: Object(V.LOAD)("$varList"), value: function() {
              return this.state.values.map(function(t3, e3) {
                return `
                <div class='var-item' >
                    <div>
                        <input type="text" data-type="key" value="`.concat(t3.key, '" data-index="').concat(e3, '"  placeholder="variable" />\n                    </div>\n                    <div>\n                        <input type="text" data-type="value" value="').concat(t3.value, '" data-index="').concat(e3, '"  placeholder="value" />\n                    </div>\n                    <div class="tools">\n                        <button type="button" class="del" data-index="').concat(e3, '">\n                        ').concat(D.a.remove2, "\n                        </button>\n                    </div>\n                </div>\n            ");
              });
            } }, { key: Object(V.CLICK)("$varList .del"), value: function(t3) {
              var e3 = +t3.$dt.attr("data-index");
              this.state.values.splice(e3, 1), this.refresh(), this.updateData();
            } }, { key: Object(V.INPUT)("$varList input"), value: function(t3) {
              var e3 = +t3.$dt.attr("data-index"), n3 = t3.$dt.attr("data-type");
              this.state.values[e3][n3] = t3.$dt.value, this.updateData();
            } }, { key: "updateData", value: function(t3) {
              var e3 = this.state.values.map(function(t4) {
                return "".concat(t4.key, ":").concat(t4.value);
              }).join(";");
              this.parent.trigger(this.props.onchange, e3, this.props.params);
            } }]), n2;
          }(J.a), Fc = (n(32), [/\(/gi, /\)/gi]), zc = "grayscale,matrix,rotateZ,blur,sepia,linear-gradient,radial-gradient,conic-gradient,circle,inset,polygon,rgb".split(",").map(function(t2) {
            return new RegExp(t2, "gi");
          }), Nc = "butt,miter,start,at,black,repeat,lighten,multiply,solid,border-box,visible,absolute,relative,auto".split(",").map(function(t2) {
            return new RegExp(t2, "gi");
          });
          function _c(t2) {
            return Nc.forEach(function(e2) {
              t2 = t2.replace(e2, function(t3) {
                return '<span class="keyword">'.concat(t3, "</span>");
              });
            }), zc.forEach(function(e2) {
              t2 = t2.replace(e2, function(t3) {
                return '<span class="function">'.concat(t3, "</span>");
              });
            }), Fc.forEach(function(e2) {
              t2 = t2.replace(e2, function(t3) {
                return '<span class="char">'.concat(t3, "</span>");
              });
            }), t2;
          }
          function Uc(t2) {
            return t2.split(";").filter(function(t3) {
              return t3.trim();
            }).map(function(t3) {
              var e2 = (t3 = t3.trim()).split(":").map(function(t4) {
                return t4.trim();
              }), n2 = be()(e2, 2), r2 = n2[0], i2 = n2[1];
              return i2 === "" ? "" : '<div class="block"><strong>'.concat(r2, '</strong><span>:&nbsp;</span><span class="value">').concat(_c(i2), "</span><span>;</span></div>");
            }).join("").trim();
          }
          var Gc = function() {
            function t2(e2) {
              i()(this, t2), this.editor = e2;
            }
            return o()(t2, [{ key: "getDefaultRendererInstance", value: function() {
              return this.editor.getRendererInstance("html", "rect");
            } }, { key: "getRendererInstance", value: function(t3) {
              return this.editor.getRendererInstance("html", t3.itemType) || this.getDefaultRendererInstance() || t3;
            } }, { key: "render", value: function(t3, e2) {
              if (t3) {
                var n2 = this.getRendererInstance(t3);
                return n2 ? n2.render(t3, e2 || this) : void 0;
              }
            } }, { key: "renderSVG", value: function(t3, e2) {
              var n2 = this.getRendererInstance(t3);
              return Object(X.isFunction)(n2.renderSVG) ? n2.renderSVG(t3, e2 || this) : this.getDefaultRendererInstance().renderSVG(t3, e2 || this);
            } }, { key: "to", value: function(t3, e2) {
              var n2 = this.getRendererInstance(e2);
              if (Object(X.isFunction)(n2[t3]))
                return n2[t3].call(n2, e2);
              var r2 = this.getDefaultRendererInstance();
              return Object(X.isFunction)(r2[t3]) ? r2[t3].call(r2, e2) : void 0;
            } }, { key: "toCSS", value: function(t3) {
              return this.to("toCSS", t3);
            } }, { key: "toNestedCSS", value: function(t3) {
              return this.to("toNestedCSS", t3);
            } }, { key: "toTransformCSS", value: function(t3) {
              return this.to("toTransformCSS", t3);
            } }, { key: "toGridLayoutCSS", value: function(t3) {
              return this.to("toGridLayoutCSS", t3);
            } }, { key: "toLayoutItemCSS", value: function(t3) {
              return this.to("toLayoutItemCSS", t3);
            } }, { key: "toStyle", value: function(t3, e2) {
              var n2 = this.getRendererInstance(t3);
              return Object(X.isFunction)(n2.toStyle) ? n2.toStyle(t3, e2 || this) : this.getDefaultRendererInstance().toStyle(t3, e2 || this);
            } }, { key: "update", value: function(t3, e2, n2) {
              var r2 = this.getRendererInstance(t3);
              return Object(X.isFunction)(r2.update) ? r2.update(t3, e2, n2) : this.getDefaultRendererInstance().update(t3, e2, n2);
            } }, { key: "codeview", value: function(t3) {
              if (!t3)
                return "";
              var e2 = t3.top, n2 = Uc(e2 ? e2.toKeyframeString() : "").replace(/;/gi, ";\n").trim(), r2 = e2 ? Object(X.CSS_TO_STRING)(e2.toRootVariableCSS()) : "", i2 = t3, a2 = Uc(i2 ? Object(X.TAG_TO_STRING)(Object(X.CSS_TO_STRING)(this.toCSS(i2))) : ""), o2 = i2 ? this.toNestedCSS(i2).map(function(t4) {
                var e3 = t4.cssText ? t4.cssText : Object(X.CSS_TO_STRING)(t4.css);
                return "".concat(t4.selector, " { \n    ").concat(Uc(Object(X.TAG_TO_STRING)(e3), "&nbsp;&nbsp;"), "\n    }");
              }) : [], c2 = i2 ? i2.selectors : [];
              return "\n<div class=''>\n\n".concat(a2 && "<div><pre title='CSS'>".concat(a2, "</pre></div>"), "\n\n").concat(o2.map(function(t4) {
                return "<div><pre title='CSS'>".concat(t4, "</pre></div>");
              }).join(""), "\n\n").concat((c2 || []).length ? "<div>\n    ".concat(c2.map(function(t4) {
                return "<pre title='".concat(t4.selector, "'>").concat(t4.toPropertyString(), "</pre>");
              }).join(""), "\n    \n    </div>") : "", "\n\n").concat(n2 && "<div><pre title='Keyframe'>".concat(n2, "</pre></div>"), "\n\n").concat(r2 ? "<div>\n    <label>:root</label>\n    <pre>".concat(r2, "</pre>\n    </div>") : "", "\n\n</div>\n        ");
            } }]), t2;
          }(), Hc = n(56);
          function Kc(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Yc = function(t2) {
            s()(n2, t2);
            var e2 = Kc(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "render", value: function(t3, e3) {
              var n3 = t3.elementType, r2 = t3.id, i2 = (t3.name, t3.itemType, n3 || "div");
              return "    \n      <".concat(i2, ' class="element-item artboard" data-id="').concat(r2, '">\n        ').concat(this.toDefString(t3), "\n        ").concat(t3.layers.map(function(t4) {
                return e3.render(t4, e3);
              }).join("\n	"), "\n      </").concat(i2, ">\n    ");
            } }, { key: "toBorderCSS", value: function(t3) {
              return {};
            } }]), n2;
          }(Hc.a);
          function Xc(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Wc = function(t2) {
            s()(n2, t2);
            var e2 = Xc(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return n2;
          }(oi.a);
          function Zc(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function qc(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Zc(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Zc(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Jc(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Qc = ["front", "back", "left", "right", "top", "bottom"], ts = function(t2) {
            s()(n2, t2);
            var e2 = Jc(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "toDefaultCSS", value: function(t3) {
              var e3 = {};
              return t3.x && (e3.left = t3.x), t3.y && (e3.top = t3.y), e3.visibility = t3.visible ? "visible" : "hidden", qc(qc({}, e3), this.toKeyListCSS(t3, ["position", "right", "bottom", "width", "height", "transform-origin", "transform", "transform-style", "perspective", "perspective-origin", "animation", "transition"]));
            } }, { key: "toCSS", value: function(t3) {
              return qc(qc(qc(qc(qc({}, this.toVariableCSS(t3)), this.toDefaultCSS(t3)), this.toWebkitCSS(t3)), this.toBoxModelCSS(t3)), this.toLayoutItemCSS(t3));
            } }, { key: "toNestedCSS", value: function(t3) {
              var e3 = t3.rate.value, n3 = t3.width, r2 = t3.height, i2 = n3.value / 2, a2 = r2.value / 2, o2 = t3["backface-visibility"], c2 = qc(qc(qc(qc({}, this.toKeyListCSS(t3, ["filter", "mix-blend-mode", "border-radius", "background-color", "opacity", "color"])), this.toClipPathCSS(t3)), this.toBackgroundImageCSS(t3)), this.toBorderCSS(t3));
              return [{ selector: "div", cssText: "\n          position: absolute;\n          left: 0px;\n          top: 0px;\n          bottom: 0px;\n          right: 0px;\n          opacity: 1;\n          pointer-events: none;\n          ".concat(Object(X.CSS_TO_STRING)(c2), "\n        ").trim() }, { selector: ".front", cssText: "\n          transform:rotateY(0deg) translateZ(".concat(i2 * e3, "px);\n          width: ").concat(n3, ";\n          height: ").concat(r2, ";     \n          backface-visibility: ").concat(o2, ";          \n          ").concat(t3["front.color"] ? "background-color: ".concat(t3["front.color"], ";") : "", "\n          ").concat(t3["front.background"] ? "".concat(t3["front.background"], ";") : "", "\n\n        ").trim() }, { selector: ".back", cssText: "\n          transform: rotateY(180deg) translateZ(".concat(i2 * e3, "px);\n          width: ").concat(n3, ";\n          height: ").concat(r2, ";        \n          backface-visibility: ").concat(o2, ";              \n          ").concat(t3["back.color"] ? "background-color: ".concat(t3["back.color"], ";") : "", "                  \n          ").concat(t3["back.background"] ? "".concat(t3["back.background"], ";") : "", "\n        ").trim() }, { selector: ".left", cssText: "\n          transform: rotateY(-90deg) translateZ(".concat(i2 * e3, "px);\n          width: ").concat(n3, ";\n          height: ").concat(r2, ";    \n          backface-visibility: ").concat(o2, ";          \n          ").concat(t3["left.color"] ? "background-color: ".concat(t3["left.color"], ";") : "", "                          \n          ").concat(t3["left.background"] ? "".concat(t3["left.background"], ";") : "", "\n        ").trim() }, { selector: ".right", cssText: "\n          transform: rotateY(90deg) translateZ(".concat(i2 * e3, "px);\n          width: ").concat(n3, ";\n          height: ").concat(r2, ";      \n          backface-visibility: ").concat(o2, ";          \n          ").concat(t3["right.color"] ? "background-color: ".concat(t3["right.color"], ";") : "", "                        \n          ").concat(t3["right.background"] ? "".concat(t3["right.background"], ";") : "", "          \n        ").trim() }, { selector: ".top", cssText: "\n          transform: rotateX(90deg) translateZ(".concat(a2 * e3, "px);\n          top: ").concat(a2 - i2, "px;\n          width: ").concat(n3, ";\n          height: ").concat(n3, ";\n          backface-visibility: ").concat(o2, ";          \n          ").concat(t3["top.color"] ? "background-color: ".concat(t3["top.color"], ";") : "", "      \n          ").concat(t3["top.background"] ? "".concat(t3["top.background"], ";") : "", "              \n        ").trim() }, { selector: ".bottom", cssText: "\n          transform: rotateX(-90deg) translateZ(".concat(a2 * e3, "px);\n          top: ").concat(a2 - i2, "px;          \n          width: ").concat(n3, ";\n          height: ").concat(n3, ";    \n          backface-visibility: ").concat(o2, ";          \n          ").concat(t3["bottom.color"] ? "background-color: ".concat(t3["bottom.color"], ";") : "", "\n          ").concat(t3["bottom.background"] ? "".concat(t3["bottom.background"], ";") : "", "                          \n        ").trim() }];
            } }, { key: "render", value: function(t3) {
              var e3 = t3.id;
              return `
      <div class='element-item cube' data-id="`.concat(e3, '">\n        ').concat(this.toDefString(t3), "\n        ").concat(Qc.map(function(t4) {
                return "<div class='".concat(t4, "'></div>");
              }).join(""), "\n      </div>");
            } }]), n2;
          }(oi.a);
          function es(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var ns = function(t2) {
            s()(n2, t2);
            var e2 = es(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "toNestedCSS", value: function(t3) {
              return [{ selector: "img", cssText: "\n                width: 100%;\n                height: 100%;\n                pointer-events: none;\n                ".trim() }];
            } }, { key: "getUrl", value: function(t3) {
              var e3 = t3.src;
              return t3.project.getImageValueById(e3) || e3;
            } }, { key: "render", value: function(t3) {
              var e3 = t3.id;
              return `
          <div class='element-item image' data-id="`.concat(e3, '">\n            ').concat(this.toDefString(t3), "\n            <img src='").concat(this.getUrl(t3), "' />\n          </div>");
            } }, { key: "update", value: function(t3, e3) {
              var r2 = e3.$("img");
              r2 && r2.attr("src", this.getUrl(t3)), A()(h()(n2.prototype), "update", this).call(this, t3, e3);
            } }]), n2;
          }(oi.a);
          function rs(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function is(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? rs(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : rs(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function as(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var os = "SourceGraphic,SourceAlpha,BackgroundImage,BackgroundAlpha,FillPaint,StrokePaint".split(","), cs = { xChannelSelector: true, yChannelSelector: true }, ss = function(t2) {
            s()(n2, t2);
            var e2 = as(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "hasLight", value: function() {
              return false;
            } }, { key: "isLight", value: function() {
              return false;
            } }, { key: "isSource", value: function() {
              return false;
            } }, { key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, e3 = Object(Vo.uuidShort)();
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, is({ itemType: "svgfilter", id: e3, in: [], bound: { x: 100, y: 100, targetX: 0, targetY: 0 }, connected: [] }, t3));
            } }, { key: "getInCount", value: function() {
              return 0;
            } }, { key: "setIn", value: function(t3, e3) {
              this.json.in[t3] = { id: e3.id, type: e3.type };
            } }, { key: "setConnected", value: function(t3) {
              this.json.connected.filter(function(e3) {
                return e3.id === t3.id;
              }).length === 0 && this.json.connected.push({ id: t3.id });
            } }, { key: "convert", value: function(t3) {
              return Object(X.isString)(t3.in) && (t3.in = JSON.parse(t3.in)), Object(X.isString)(t3.bound) && (t3.bound = JSON.parse(t3.bound)), Object(X.isString)(t3.connected) && (t3.connected = JSON.parse(t3.connected)), t3;
            } }, { key: "toCloneObject", value: function() {
              return is(is({}, A()(h()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("id", "in", "bound", "connected"));
            } }, { key: "getDefaultAttribute", value: function() {
              var t3 = this, e3 = [];
              return this.json.connected.length && e3.push('result="'.concat(this.json.id, 'result"')), Object.keys(cs).filter(function(e4) {
                return !!t3.json[e4];
              }).forEach(function(n3) {
                e3.push("".concat(n3, '="').concat(t3.json[n3], '"'));
              }), e3.join(" ") + " " + this.getSourceInAttribute();
            } }, { key: "hasInIndex", value: function() {
              return false;
            } }, { key: "getSourceInAttribute", value: function(t3) {
              var e3 = this;
              return (t3 || this.json.in).map(function(t4, n3) {
                if (!t4)
                  return "";
                var r2 = n3 === 0 ? "" : n3 + 1 + "";
                return e3.hasInIndex() || (r2 = ""), os.includes(t4.type) ? "in".concat(r2, '="').concat(t4.type, '"') : "in".concat(r2, '="').concat(t4.id, 'result"');
              }).join(" ");
            } }, { key: "toString", value: function() {
              var t3 = this.json, e3 = t3.type, n3 = t3.value;
              return "<fe".concat(e3, ' value="').concat(n3, '" ').concat(this.getDefaultAttribute(), " />");
            } }], [{ key: "parse", value: function(t3) {
              return new (0, Cu[t3.type])(t3);
            } }]), n2;
          }(z.a);
          function us(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var ls = function(t2) {
            s()(n2, t2);
            var e2 = us(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "RotaMatrix", hueRotate: n2.spec.hueRotate.defaultValue });
            } }, { key: "convert", value: function(t3) {
              return t3.hueRotate = F.a.parse(t3.hueRotate), t3;
            } }, { key: "toString", value: function() {
              var t3 = this.json, e3 = t3.id, n3 = t3.hueRotate;
              return '\n      <feColorMatrix type="hueRotate" result="romatrix-'.concat(e3, '"  values="').concat(n3, '"/>\n      <feColorMatrix type="matrix" in="romatrix-').concat(e3, '" in2="SourceGraphic"  ').concat(this.getDefaultAttribute(), ' values="-1 2 -3 0 -.5 2 1 0 0 0 0 3 1 0 0 0 0 1 1 0"/>\n    ');
            } }]), n2;
          }(ss);
          function fs(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          ls.spec = { hueRotate: { title: "hue-rotate", inputType: "number-range", min: 0, max: 360, step: 1, defaultValue: F.a.number(0) } };
          var hs = function(t2) {
            s()(n2, t2);
            var e2 = fs(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "Merge" });
            } }, { key: "getInCount", value: function() {
              return 3;
            } }, { key: "getDefaultAttribute", value: function() {
              var t3 = [];
              return this.json.connected.length && t3.push('result="'.concat(this.json.id, 'result"')), t3.join(" ");
            } }, { key: "toString", value: function() {
              var t3 = this, e3 = this.json.in;
              return "\n    <feMerge  ".concat(this.getDefaultAttribute(), " >\n      ").concat(e3.map(function(e4) {
                return "<feMergeNode ".concat(t3.getSourceInAttribute([e4]), " />");
              }).join(""), "\n    </feMerge>");
            } }]), n2;
          }(ss);
          function ps(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          hs.spec = {};
          var ds = function(t2) {
            s()(n2, t2);
            var e2 = ps(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "Composite", operator: n2.spec.operator.defaultValue, k1: n2.spec.k1.defaultValue, k2: n2.spec.k2.defaultValue, k3: n2.spec.k3.defaultValue, k4: n2.spec.k4.defaultValue });
            } }, { key: "getInCount", value: function() {
              return 2;
            } }, { key: "toString", value: function() {
              var t3 = this.json, e3 = t3.operator, n3 = t3.k1, r2 = t3.k2, i2 = t3.k3, a2 = t3.k4, o2 = "";
              return e3 === "arithmetic" && (o2 = ' k1="'.concat(n3, '" k2="').concat(r2, '" k3="').concat(i2, '" k4="').concat(a2, '" ')), '<feComposite operator="'.concat(e3, '" ').concat(o2, "  ").concat(this.getDefaultAttribute(), " />");
            } }, { key: "hasInIndex", value: function() {
              return true;
            } }]), n2;
          }(ss);
          function vs(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          ds.spec = { operator: { title: "operator", inputType: "select", options: "over,in,out,atop,xor,arithmetic", defaultValue: "over" }, k1: { title: "k1", inputType: "number-range", min: 0, max: 1, step: 0.01, defaultValue: F.a.number(0) }, k2: { title: "k2", inputType: "number-range", min: 0, max: 1, step: 0.01, defaultValue: F.a.number(0) }, k3: { title: "k3", inputType: "number-range", min: 0, max: 1, step: 0.01, defaultValue: F.a.number(0) }, k4: { title: "k4", inputType: "number-range", min: 0, max: 1, step: 0.01, defaultValue: F.a.number(0) } };
          var ys = function(t2) {
            s()(n2, t2);
            var e2 = vs(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "Morphology", operator: n2.spec.operator.defaultValue, radius: n2.spec.radius.defaultValue });
            } }, { key: "getInCount", value: function() {
              return 1;
            } }, { key: "toString", value: function() {
              var t3 = this.json, e3 = t3.operator, n3 = t3.radius;
              return '<feMorphology operator="'.concat(e3, '" radius="').concat(n3, '"  ').concat(this.getDefaultAttribute(), " />");
            } }]), n2;
          }(ss);
          function gs(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          ys.spec = { operator: { title: "Operator", inputType: "select", options: "erode,dilate", defaultValue: "erode" }, radius: { title: "Radius", inputType: "number-range", min: 0, max: 100, step: 1, defaultValue: F.a.number(0) } };
          var ms = function(t2) {
            s()(n2, t2);
            var e2 = gs(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "Turbulence", filterType: n2.spec.filterType.defaultValue, baseFrequency: n2.spec.baseFrequency.defaultValue, numOctaves: n2.spec.numOctaves.defaultValue, seed: n2.spec.seed.defaultValue });
            } }, { key: "convert", value: function(t3) {
              return t3.baseFrequency = F.a.parse(t3.baseFrequency), t3.numOctaves = F.a.parse(t3.numOctaves), t3.seed = F.a.parse(t3.seed), t3;
            } }, { key: "toString", value: function() {
              var t3 = this.json, e3 = t3.filterType, n3 = t3.baseFrequency, r2 = t3.numOctaves, i2 = t3.seed;
              return "<feTurbulence ".concat(Object(X.OBJECT_TO_PROPERTY)({ type: e3, baseFrequency: n3, numOctaves: r2, seed: i2 }), "   ").concat(this.getDefaultAttribute(), " />");
            } }]), n2;
          }(ss);
          function bs(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          ms.spec = { filterType: { title: "Type", inputType: "select", options: "fractalNoise,turbulence", defaultValue: "turbulence" }, baseFrequency: { title: "Frequency", inputType: "number-range", min: 0, max: 1, step: 0.01, defaultValue: F.a.number(0) }, numOctaves: { title: "Octaves", inputType: "number-range", min: 1, max: 10, step: 1, defaultValue: F.a.number(1) }, seed: { title: "Seed", inputType: "number-range", min: 0, max: 1e4, step: 1, defaultValue: F.a.number(0) } };
          var ks = function(t2) {
            s()(n2, t2);
            var e2 = bs(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "DisplacementMap", scale: n2.spec.scale.defaultValue });
            } }, { key: "getInCount", value: function() {
              return 2;
            } }, { key: "convert", value: function(t3) {
              return t3.scale = F.a.parse(t3.scale), t3;
            } }, { key: "toString", value: function() {
              var t3 = this.json.scale, e3 = t3.value ? 'scale="'.concat(t3, '"') : "";
              return "<feDisplacementMap ".concat(e3, "  ").concat(this.getDefaultAttribute(), " />");
            } }, { key: "hasInIndex", value: function() {
              return true;
            } }]), n2;
          }(ss);
          function Os(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          ks.spec = { scale: { title: "scale", inputType: "number-range", min: 0, max: 5e3, step: 1, defaultValue: F.a.number(0) } };
          var xs = function(t2) {
            s()(n2, t2);
            var e2 = Os(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "ColorMatrix", values: n2.spec.values.defaultValue });
            } }, { key: "getInCount", value: function() {
              return 1;
            } }, { key: "toString", value: function() {
              var t3 = this.json.values.join(" ");
              return '<feColorMatrix type="matrix" values="'.concat(t3, '"  ').concat(this.getDefaultAttribute(), " />");
            } }]), n2;
          }(ss);
          function js(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          xs.spec = { values: { title: "values", inputType: "color-matrix", column: 5, defaultValue: [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0] } };
          var Ss = function(t2) {
            s()(n2, t2);
            var e2 = js(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "ConvolveMatrix", kernelMatrix: n2.spec.kernelMatrix.defaultValue });
            } }, { key: "getInCount", value: function() {
              return 1;
            } }, { key: "toString", value: function() {
              var t3 = this.json.kernelMatrix.join(" ");
              return '<feConvolveMatrix kernelMatrix="'.concat(t3, '"  ').concat(this.getDefaultAttribute(), " />");
            } }]), n2;
          }(ss);
          function Ps(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          Ss.spec = { kernelMatrix: { title: "kernelMatrix", inputType: "input-array", column: 3, defaultValue: [1, 0, 0, 0, 1, 0, 0, 0, 1] } };
          var ws = function(t2) {
            s()(n2, t2);
            var e2 = Ps(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "GaussianBlur", stdDeviationX: n2.spec.stdDeviationX.defaultValue, stdDeviationY: n2.spec.stdDeviationY.defaultValue, edgeMode: n2.spec.edgeMode.defaultValue });
            } }, { key: "getInCount", value: function() {
              return 1;
            } }, { key: "convert", value: function(t3) {
              return t3.stdDeviationX = F.a.parse(t3.stdDeviationX), t3.stdDeviationY = F.a.parse(t3.stdDeviationY), t3;
            } }, { key: "toString", value: function() {
              var t3 = this.json, e3 = t3.stdDeviationX, n3 = t3.stdDeviationY, r2 = t3.edgeMode, i2 = "".concat(e3, " ").concat(n3);
              return e3 === n3 && (i2 = e3), '<feGaussianBlur  stdDeviation="'.concat(i2, '" edgeMode="').concat(r2, '"  ').concat(this.getDefaultAttribute(), " />");
            } }]), n2;
          }(ss);
          function Rs(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          ws.spec = { stdDeviationX: { title: "X", inputType: "number-range", min: 0, max: 100, step: 1, defaultValue: F.a.number(0) }, stdDeviationY: { title: "Y", inputType: "number-range", min: 0, max: 100, step: 1, defaultValue: F.a.number(0) }, edgeMode: { title: "edge", inputType: "select", options: "none,duplicate,wrap", defaultValue: "none" } };
          var Cs = function(t2) {
            s()(n2, t2);
            var e2 = Rs(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "Flood", x: n2.spec.x.defaultValue, y: n2.spec.y.defaultValue, width: n2.spec.width.defaultValue, height: n2.spec.height.defaultValue, color: n2.spec.color.defaultValue, opacity: n2.spec.opacity.defaultValue });
            } }, { key: "convert", value: function(t3) {
              return t3.x = F.a.parse(t3.x), t3.y = F.a.parse(t3.y), t3.width = F.a.parse(t3.width), t3.height = F.a.parse(t3.height), t3;
            } }, { key: "toString", value: function() {
              var t3 = this.json, e3 = t3.opacity, n3 = t3.color, r2 = t3.x, i2 = t3.y, a2 = t3.width, o2 = t3.height;
              return "<feFlood ".concat(Object(X.OBJECT_TO_PROPERTY)({ x: r2, y: i2, width: a2, height: o2 }), ' flood-opacity="').concat(e3, '" flood-color="').concat(n3, '" ').concat(this.getDefaultAttribute(), " />");
            } }]), n2;
          }(ss);
          function Es(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          Cs.spec = { x: { title: "X", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, y: { title: "Y", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, width: { title: "width", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, height: { title: "height", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, opacity: { title: "opacity", inputType: "number-range", min: 0, max: 1, step: 0.01, defaultValue: F.a.number(0) }, color: { title: "color", inputType: "color", defaultValue: "rgba(0, 0, 0, 1)" } };
          var $s = function(t2) {
            s()(n2, t2);
            var e2 = Es(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "ComponentTransfer", r: n2.spec.r.defaultValue, g: n2.spec.g.defaultValue, b: n2.spec.b.defaultValue, a: n2.spec.a.defaultValue });
            } }, { key: "getInCount", value: function() {
              return 1;
            } }, { key: "parse", value: function(t3) {
              var e3 = t3.split(" "), n3 = Ai()(e3), r2 = n3[0], i2 = n3.slice(1);
              if (r2 === "table" || r2 === "discrete")
                return { type: r2, tableValues: i2.join(" ") };
              if (r2 === "linear") {
                var a2 = be()(i2, 2);
                return { type: r2, slop: a2[0], intercept: a2[1] };
              }
              if (r2 === "gamma") {
                var o2 = be()(i2, 3);
                return { type: r2, amplitude: o2[0], exponent: o2[1], offset: o2[2] };
              }
              return { type: r2 };
            } }, { key: "toString", value: function() {
              var t3 = this.json, e3 = t3.r, n3 = t3.g, r2 = t3.b, i2 = t3.a;
              return e3 = this.parse(e3), n3 = this.parse(n3), r2 = this.parse(r2), i2 = this.parse(i2), "<feComponentTransfer ".concat(this.getDefaultAttribute(), " >\n      ").concat(e3 && "<feFuncR ".concat(Object(X.OBJECT_TO_PROPERTY)(e3), " />"), "\n      ").concat(n3 && "<feFuncG ".concat(Object(X.OBJECT_TO_PROPERTY)(n3), " />"), "\n      ").concat(r2 && "<feFuncB ".concat(Object(X.OBJECT_TO_PROPERTY)(r2), " />"), "\n      ").concat(i2 && "<feFuncA ".concat(Object(X.OBJECT_TO_PROPERTY)(i2), " />"), "\n    </feComponentTransfe>");
            } }]), n2;
          }(ss);
          function Is(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          $s.spec = { r: { title: "R", inputType: "FuncFilter", defaultValue: "identity" }, g: { title: "G", inputType: "FuncFilter", defaultValue: "identity" }, b: { title: "B", inputType: "FuncFilter", defaultValue: "identity" }, a: { title: "A", inputType: "FuncFilter", defaultValue: "identity" } };
          var Ts = function(t2) {
            s()(n2, t2);
            var e2 = Is(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "DistantLight", azimuth: n2.spec.azimuth.defaultValue, elevation: n2.spec.elevation.defaultValue });
            } }, { key: "isLight", value: function() {
              return true;
            } }, { key: "toString", value: function() {
              return "";
            } }, { key: "toLightString", value: function() {
              var t3 = this.json, e3 = t3.azimuth, n3 = t3.elevation;
              return "<feDistantLight ".concat(Object(X.OBJECT_TO_PROPERTY)({ azimuth: e3, elevation: n3 }), " />");
            } }]), n2;
          }(ss);
          function Bs(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          Ts.spec = { azimuth: { title: "azimuth", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, elevation: { title: "elevation", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) } };
          var Ms = function(t2) {
            s()(n2, t2);
            var e2 = Bs(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "PointLight", x: n2.spec.x.defaultValue, y: n2.spec.y.defaultValue, z: n2.spec.z.defaultValue });
            } }, { key: "isLight", value: function() {
              return true;
            } }, { key: "toString", value: function() {
              return "";
            } }, { key: "toLightString", value: function() {
              var t3 = this.json, e3 = t3.x, n3 = t3.y, r2 = t3.z;
              return "<fePointLight ".concat(Object(X.OBJECT_TO_PROPERTY)({ x: e3, y: n3, z: r2 }), " />");
            } }]), n2;
          }(ss);
          function Vs(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          Ms.spec = { x: { title: "x", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, y: { title: "y", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, z: { title: "z", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) } };
          var Ds = function(t2) {
            s()(n2, t2);
            var e2 = Vs(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "SpotLight", x: n2.spec.x.defaultValue, y: n2.spec.x.defaultValue, z: n2.spec.x.defaultValue, pointsAtX: n2.spec.pointsAtX.defaultValue, pointsAtY: n2.spec.pointsAtY.defaultValue, pointsAtZ: n2.spec.pointsAtZ.defaultValue, specularExponent: n2.spec.specularExponent.defaultValue, limitingConeAngle: n2.spec.limitingConeAngle.defaultValue });
            } }, { key: "isLight", value: function() {
              return true;
            } }, { key: "toString", value: function() {
            } }, { key: "toLightString", value: function() {
              var t3 = this.json, e3 = t3.x, n3 = t3.y, r2 = t3.z, i2 = t3.pointsAtX, a2 = t3.pointsAtY, o2 = t3.pointsAtZ, c2 = t3.specularExponent, s2 = t3.limitingConeAngle;
              return "<feSpotLight ".concat(Object(X.OBJECT_TO_PROPERTY)({ x: e3, y: n3, z: r2, pointsAtX: i2, pointsAtY: a2, pointsAtZ: o2, specularExponent: c2, limitingConeAngle: s2 }), " />");
            } }]), n2;
          }(ss);
          function Ls(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function As(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Ls(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Ls(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Fs(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          Ds.spec = { x: { title: "x", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, y: { title: "y", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, z: { title: "z", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, pointsAtX: { title: "pointsAtX", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, pointsAtY: { title: "pointsAtY", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, pointsAtZ: { title: "pointsAtZ", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, specularExponent: { title: "specularExponent", inputType: "number-range", min: 0, max: 100, step: 1, defaultValue: F.a.number(1) }, limitingConeAngle: { title: "limitingConeAngle", inputType: "number-range", min: 0, max: 100, step: 1, defaultValue: F.a.number(1) } };
          var zs = function(t2) {
            s()(n2, t2);
            var e2 = Fs(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "DiffuseLighting", surfaceScale: n2.spec.surfaceScale.defaultValue, lightingColor: n2.spec.lightingColor.defaultValue, diffuseConstant: n2.spec.diffuseConstant.defaultValue, lightInfo: "" });
            } }, { key: "toCloneObject", value: function() {
              return As(As({}, A()(h()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("surfaceScale", "lightingColor", "diffuseConstant", "lightInfo"));
            } }, { key: "hasLight", value: function() {
              return true;
            } }, { key: "getInCount", value: function() {
              return 1;
            } }, { key: "toString", value: function() {
              var t3 = this.json, e3 = t3.surfaceScale, n3 = t3.diffuseConstant, r2 = t3.lightingColor;
              return "<feDiffuseLighting ".concat(Object(X.OBJECT_TO_PROPERTY)({ surfaceScale: e3, diffuseConstant: n3, "lighting-color": r2 }), "  ").concat(this.getDefaultAttribute(), " >\n      ").concat(this.json.lightInfo, "\n    </feDiffuseLighting>");
            } }]), n2;
          }(ss);
          function Ns(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function _s(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Ns(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Ns(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Us(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          zs.spec = { surfaceScale: { title: "surfaceScale", inputType: "number-range", min: 0, max: 100, step: 1, defaultValue: F.a.number(1) }, diffuseConstant: { title: "diffuseConstant", inputType: "number-range", min: 0, max: 100, step: 1, defaultValue: F.a.number(1) }, lightingColor: { title: "Lighting Color", inputType: "color", defaultValue: "rgba(0, 0, 0, 1)" } };
          var Gs = function(t2) {
            s()(n2, t2);
            var e2 = Us(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "SpecularLighting", surfaceScale: n2.spec.surfaceScale.defaultValue, lightingColor: n2.spec.lightingColor.defaultValue, specularConstant: n2.spec.specularConstant.defaultValue, specularExponent: n2.spec.specularExponent.defaultValue, lightInfo: "" });
            } }, { key: "toCloneObject", value: function() {
              return _s(_s({}, A()(h()(n2.prototype), "toCloneObject", this).call(this)), this.attrs("surfaceScale", "lightingColor", "specularConstant", "specularExponent", "lightInfo"));
            } }, { key: "hasLight", value: function() {
              return true;
            } }, { key: "getInCount", value: function() {
              return 1;
            } }, { key: "toString", value: function() {
              var t3 = this.json, e3 = t3.surfaceScale, n3 = t3.specularConstant, r2 = t3.specularExponent, i2 = t3.lightingColor;
              return "<feSpecularLighting ".concat(Object(X.OBJECT_TO_PROPERTY)({ surfaceScale: e3, specularConstant: n3, specularExponent: r2, "lighting-color": i2 }), "  ").concat(this.getDefaultAttribute(), " >\n      ").concat(this.json.lightInfo, "\n    </feSpecularLighting>");
            } }, { key: "getSourceInAttribute", value: function() {
              return "";
            } }]), n2;
          }(ss);
          function Hs(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          Gs.spec = { surfaceScale: { title: "surfaceScale", inputType: "number-range", min: 0, max: 100, step: 1, defaultValue: F.a.number(1) }, specularConstant: { title: "Constant", inputType: "number-range", min: 0, max: 100, step: 1, defaultValue: F.a.number(1) }, specularExponent: { title: "Exponent", inputType: "number-range", min: 0, max: 100, step: 1, defaultValue: F.a.number(1) }, lightingColor: { title: "Lighting Color", inputType: "color", defaultValue: "rgba(0, 0, 0, 1)" } };
          var Ks = function(t2) {
            s()(n2, t2);
            var e2 = Hs(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "Offset", dx: n2.spec.dx.defaultValue, dy: n2.spec.dy.defaultValue });
            } }, { key: "getInCount", value: function() {
              return 1;
            } }, { key: "toString", value: function() {
              var t3 = this.json, e3 = t3.dx, n3 = t3.dy;
              return "<feOffset \n      ".concat(Object(X.OBJECT_TO_PROPERTY)({ dx: e3, dy: n3 }), "  ").concat(this.getDefaultAttribute(), " />");
            } }]), n2;
          }(ss);
          function Ys(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          Ks.spec = { dx: { title: "dx", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, dy: { title: "dy", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) } };
          var Xs = function(t2) {
            s()(n2, t2);
            var e2 = Ys(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "Blend", mode: n2.spec.mode.defaultValue });
            } }, { key: "getInCount", value: function() {
              return 2;
            } }, { key: "toString", value: function() {
              var t3 = this.json.mode;
              return "<feBlend ".concat(Object(X.OBJECT_TO_PROPERTY)({ mode: t3 }), " ").concat(this.getDefaultAttribute(), " />");
            } }, { key: "hasInIndex", value: function() {
              return true;
            } }]), n2;
          }(ss);
          function Ws(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Zs(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Ws(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Ws(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function qs(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          Xs.spec = { mode: { title: "mode", inputType: "blend", defaultValue: "normal" } };
          var Js = function(t2) {
            s()(n2, t2);
            var e2 = qs(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, Zs({ type: "Source" }, t3));
            } }, { key: "isSource", value: function() {
              return true;
            } }, { key: "toString", value: function() {
              return "";
            } }]), n2;
          }(ss);
          function Qs(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var tu = function(t2) {
            s()(n2, t2);
            var e2 = Qs(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "SourceGraphic" });
            } }]), n2;
          }(Js);
          function eu(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var nu = function(t2) {
            s()(n2, t2);
            var e2 = eu(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "SourceAlpha" });
            } }]), n2;
          }(Js);
          function ru(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var iu = function(t2) {
            s()(n2, t2);
            var e2 = ru(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "BackgroundImage" });
            } }]), n2;
          }(Js);
          function au(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var ou = function(t2) {
            s()(n2, t2);
            var e2 = au(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "BackgroundAlpha" });
            } }]), n2;
          }(Js);
          function cu(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var su = function(t2) {
            s()(n2, t2);
            var e2 = cu(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "FillPaint" });
            } }]), n2;
          }(Js);
          function uu(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var lu = function(t2) {
            s()(n2, t2);
            var e2 = uu(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "StrokePaint" });
            } }]), n2;
          }(Js);
          function fu(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var hu = function(t2) {
            s()(n2, t2);
            var e2 = fu(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "DropShadow", dx: n2.spec.dx.defaultValue, dy: n2.spec.dy.defaultValue, stdDeviation: n2.spec.stdDeviation.defaultValue, color: n2.spec.color.defaultValue, opacity: n2.spec.opacity.defaultValue });
            } }, { key: "getInCount", value: function() {
              return 1;
            } }, { key: "toString", value: function() {
              var t3 = this.json, e3 = t3.dx, n3 = t3.dy, r2 = t3.stdDeviation, i2 = t3.color, a2 = t3.opacity;
              return "<feDropShadow ".concat(Object(X.OBJECT_TO_PROPERTY)({ dx: e3, dy: n3, stdDeviation: r2, "flood-color": i2, "flood-opacity": a2 }), "  ").concat(this.getDefaultAttribute(), " />");
            } }]), n2;
          }(ss);
          function pu(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          hu.spec = { dx: { title: "dx", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, dy: { title: "dy", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, stdDeviation: { title: "stdDeviation", inputType: "number-range", min: 0, max: 1e3, step: 0.1, defaultValue: F.a.number(0) }, opacity: { title: "opacity", inputType: "number-range", min: 0, max: 1, step: 0.01, defaultValue: F.a.number(1) }, color: { title: "color", inputType: "color", defaultValue: "rgba(0, 0, 0, 1)" } };
          var du = function(t2) {
            s()(n2, t2);
            var e2 = pu(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "Saturate", values: n2.spec.values.defaultValue });
            } }, { key: "getInCount", value: function() {
              return 1;
            } }, { key: "toString", value: function() {
              var t3 = this.json.values;
              return '<feColorMatrix type="saturate" values="'.concat(t3, '"  ').concat(this.getDefaultAttribute(), " />");
            } }]), n2;
          }(ss);
          function vu(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          du.spec = { values: { title: "values", inputType: "number-range", min: -1, max: 1, step: 0.01, defaultValue: F.a.number(0) } };
          var yu = function(t2) {
            s()(n2, t2);
            var e2 = vu(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "HueRotate", values: n2.spec.values.defaultValue });
            } }, { key: "getInCount", value: function() {
              return 1;
            } }, { key: "toString", value: function() {
              var t3 = this.json.values;
              return '<feColorMatrix type="hueRotate" values="'.concat(t3, '"  ').concat(this.getDefaultAttribute(), " />");
            } }]), n2;
          }(ss);
          function gu(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          yu.spec = { values: { title: "values", inputType: "number-range", min: 0, max: 360, step: 0.1, defaultValue: F.a.number(0) } };
          var mu = function(t2) {
            s()(n2, t2);
            var e2 = gu(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "LuminanceAlpha" });
            } }, { key: "getInCount", value: function() {
              return 1;
            } }, { key: "toString", value: function() {
              return '<feColorMatrix type="luminanceToAlpha" '.concat(this.getDefaultAttribute(), " />");
            } }]), n2;
          }(ss);
          function bu(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          mu.spec = {};
          var ku = function(t2) {
            s()(n2, t2);
            var e2 = bu(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "Tile", x: n2.spec.x.defaultValue, y: n2.spec.y.defaultValue, width: n2.spec.width.defaultValue, height: n2.spec.height.defaultValue });
            } }, { key: "getInCount", value: function() {
              return 1;
            } }, { key: "convert", value: function(t3) {
              return t3.x = F.a.parse(t3.x), t3.y = F.a.parse(t3.y), t3.width = F.a.parse(t3.width), t3.height = F.a.parse(t3.height), t3;
            } }, { key: "toString", value: function() {
              var t3 = this.json, e3 = t3.x, n3 = t3.y, r2 = t3.width, i2 = t3.height;
              return "<feTile ".concat(Object(X.OBJECT_TO_PROPERTY)({ x: e3, y: n3, width: r2, height: i2 }), " ").concat(this.getDefaultAttribute(), " />");
            } }]), n2;
          }(ss);
          function Ou(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          ku.spec = { x: { title: "X", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, y: { title: "Y", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, width: { title: "width", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, height: { title: "height", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) } };
          var xu = function(t2) {
            s()(n2, t2);
            var e2 = Ou(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, { type: "Image", x: n2.spec.x.defaultValue, y: n2.spec.y.defaultValue, width: n2.spec.width.defaultValue, height: n2.spec.height.defaultValue, src: n2.spec.src.defaultValue, alignment: n2.spec.alignment.defaultValue, scaleing: n2.spec.scaleing.defaultValue });
            } }, { key: "convert", value: function(t3) {
              return t3.x = F.a.parse(t3.x), t3.y = F.a.parse(t3.y), t3.width = F.a.parse(t3.width), t3.height = F.a.parse(t3.height), t3;
            } }, { key: "toString", value: function() {
              var t3 = this.json, e3 = t3.src, n3 = t3.x, r2 = t3.y, i2 = t3.width, a2 = t3.height, o2 = t3.alignment, c2 = t3.scaleing;
              return "<feImage ".concat(Object(X.OBJECT_TO_PROPERTY)({ x: n3, y: r2, width: i2, height: a2, "xlink:href": e3, preserveAspectRatio: "".concat(o2, " ").concat(c2) }), " ").concat(this.getDefaultAttribute(), " />");
            } }]), n2;
          }(ss);
          function ju(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Su(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? ju(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : ju(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Pu(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          xu.spec = { x: { title: "X", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, y: { title: "Y", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, width: { title: "width", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, height: { title: "height", inputType: "number-range", min: 0, max: 1e3, step: 1, defaultValue: F.a.number(0) }, alignment: { title: "alignment", inputType: "select", options: "xMinYMin,xMidYMin,xMaxYMin,xMinYMid,xMidYMid,xMaxYMid,xMinYMax,xMidYMax,xMaxYMax", defaultValue: "xMidYMid" }, scaleing: { title: "scaleing", inputType: "select", options: "meet,slice", defaultValue: "meet" }, src: { title: "Image", inputType: "ImageSelectEditor", defaultValue: "" } };
          var wu = ["result"], Ru = function(t2) {
            s()(n2, t2);
            var e2 = Pu(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              return A()(h()(n2.prototype), "getDefaultObject", this).call(this, Su({ itemType: "svgfilter", result: "" }, t3));
            } }, { key: "getDefaultAttribute", value: function() {
              var t3 = this;
              return wu.map(function(e3) {
                return "".concat(e3, '="').concat(t3.json[e3], '"');
              }).join(" ");
            } }, { key: "toString", value: function() {
              var t3 = this.json, e3 = t3.type, n3 = t3.value;
              return "<fe".concat(e3, ' value="').concat(n3, '" ').concat(this.getDefaultAttribute(), " />");
            } }], [{ key: "parse", value: function(t3) {
              return new (0, Cu[t3.type])(t3);
            } }]), n2;
          }(z.a), Cu = { Image: xu, Tile: ku, Saturate: du, HueRotate: yu, LuminanceAlpha: mu, DropShadow: hu, SourceGraphic: tu, SourceAlpha: nu, BackgroundImage: iu, BackgroundAlpha: ou, FillPaint: su, StrokePaint: lu, ComponentTransfer: $s, DistantLight: Ts, PointLight: Ms, SpotLight: Ds, DiffuseLighting: zs, SpecularLighting: Gs, Blend: Xs, Offset: Ks, RotaMatrix: ls, GaussianBlur: ws, Flood: Cs, Merge: hs, Composite: ds, Morphology: ys, Turbulence: ms, DisplacementMap: ks, ColorMatrix: xs, ConvolveMatrix: Ss }, Eu = { Image: xu.spec, Tile: ku.spec, DropShadow: hu.spec, Saturate: du.spec, HueRotate: yu.spec, LuminanceAlpha: mu.spec, Offset: Ks.spec, ComponentTransfer: $s.spec, SpecularLighting: Gs.spec, SpotLight: Ds.spec, PointLight: Ms.spec, DistantLight: Ts.spec, DiffuseLighting: zs.spec, Blend: Xs.spec, RotaMatrix: ls.spec, Merge: hs.spec, GaussianBlur: ws.spec, Flood: Cs.spec, Morphology: ys.spec, Composite: ds.spec, Turbulence: ms.spec, DisplacementMap: ks.spec, ColorMatrix: xs.spec, ConvolveMatrix: Ss.spec };
          function $u(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Iu = function(t2) {
            s()(n2, t2);
            var e2 = $u(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "toRootVariableCSS", value: function(t3) {
              var e3 = {};
              return t3.rootVariable.split(";").filter(function(t4) {
                return t4.trim();
              }).forEach(function(t4) {
                var n3 = t4.split(":"), r2 = be()(n3, 2), i2 = r2[0], a2 = r2[1];
                e3["--".concat(i2)] = a2;
              }), e3;
            } }, { key: "toCSS", value: function(t3) {
              return Object.assign.apply(Object, [{}].concat(ht()(this.toRootVariableCSS(t3))));
            } }, { key: "toStyle", value: function(t3) {
              var e3 = t3.toKeyframeString(), n3 = this.toRootVariableCSS(t3);
              return `
<style type='text/css' data-renderer-type="html" data-id='`.concat(t3.id, "'>\n    :root {\n        ").concat(Object(X.CSS_TO_STRING)(n3), "\n    }\n    /* keyframe */\n    ").concat(e3, "\n</style>\n        ");
            } }, { key: "render", value: function(t3, e3) {
              return t3.layers.map(function(t4) {
                return e3.render(t4);
              }).join("");
            } }, { key: "renderSVGFilter", value: function(t3) {
              return t3.svgfilters.map(function(t4) {
                var e3 = t4.filters.map(function(t5) {
                  return Ru.parse(t5);
                });
                return "<filter id='".concat(t4.id, "'>").concat(e3.join("\n"), "</filter>");
              }).join("\n\n");
            } }, { key: "renderSVG", value: function(t3, e3) {
              var n3 = this.renderSVGFilter(t3);
              return '\n<svg width="0" height="0">\n    <title>SVG Properties</title>\n    '.concat(n3, "\n</svg>\n");
            } }]), n2;
          }(Hc.a);
          function Tu(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Bu = function(t2) {
            s()(n2, t2);
            var e2 = Tu(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return n2;
          }(oi.a);
          function Mu(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Vu(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Mu(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Mu(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Du(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Lu = function(t2) {
            s()(n2, t2);
            var e2 = Du(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "updateDefString", value: function(t3, e3) {
              var n3 = e3.$("defs");
              if (n3)
                n3.updateSVGDiff("<defs>".concat(this.toDefInnerString(t3), "</defs>"));
              else {
                var r2 = this.toDefString(t3).trim();
                e3.prepend(Pe.a.createByHTML(r2));
              }
            } }, { key: "toDefInnerString", value: function(t3) {
              return "\n            ".concat(this.toFillSVG(t3), "\n            ").concat(this.toStrokeSVG(t3), "\n        ");
            } }, { key: "toDefString", value: function(t3) {
              var e3 = this.toDefInnerString(t3).trim();
              return "\n            <defs>\n            ".concat(e3, "\n            </defs>\n        ");
            } }, { key: "fillId", value: function(t3) {
              return this.getInnerId(t3, "fill");
            } }, { key: "strokeId", value: function(t3) {
              return this.getInnerId(t3, "stroke");
            } }, { key: "cachedStroke", value: function(t3) {
              return t3.computed("stroke", function(t4) {
                return gr.a.parseImage(t4 || "black");
              });
            } }, { key: "cachedFill", value: function(t3) {
              return t3.computed("fill", function(t4) {
                return gr.a.parseImage(t4 || "black");
              });
            } }, { key: "toFillSVG", value: function(t3) {
              var e3, n3 = this.cachedFill(t3);
              return n3 == null || (e3 = n3.toSVGString) === null || e3 === void 0 ? void 0 : e3.call(n3, this.fillId(t3));
            } }, { key: "toStrokeSVG", value: function(t3) {
              var e3, n3 = this.cachedStroke(t3);
              return n3 == null || (e3 = n3.toSVGString) === null || e3 === void 0 ? void 0 : e3.call(n3, this.strokeId(t3));
            } }, { key: "toFillValue", value: function(t3) {
              var e3, n3 = this.cachedFill(t3);
              return n3 == null || (e3 = n3.toFillValue) === null || e3 === void 0 ? void 0 : e3.call(n3, this.fillId(t3));
            } }, { key: "toFillOpacityValue", value: function(t3) {
              return Bt.a.parse(t3.fill || "transparent").a;
            } }, { key: "toStrokeValue", value: function(t3) {
              var e3, n3 = this.cachedStroke(t3);
              return n3 == null || (e3 = n3.toFillValue) === null || e3 === void 0 ? void 0 : e3.call(n3, this.strokeId(t3));
            } }, { key: "toFilterValue", value: function(t3) {
              return t3.svgfilter ? "url(#".concat(t3.svgfilter, ")") : "";
            } }, { key: "toLayoutCSS", value: function(t3) {
              return {};
            } }, { key: "toDefaultCSS", value: function(t3) {
              return Vu(Vu({}, A()(h()(n2.prototype), "toDefaultCSS", this).call(this, t3)), this.toKeyListCSS(t3, ["stroke-width", "stroke-linecap", "stroke-linejoin", "stroke-dasharray", "stroke-dashoffset", "fill-opacity", "fill-rule", "text-anchor"]));
            } }, { key: "toSVGAttribute", value: function(t3) {
              return this.toDefaultCSS(t3);
            } }]), n2;
          }(oi.a);
          function Au(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Fu = function(t2) {
            s()(n2, t2);
            var e2 = Au(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "update", value: function(t3, e3) {
              if (e3) {
                var n3 = e3.$("path");
                n3 && (t3.hasChangedField("width", "height", "d") && n3.setAttrNS({ d: t3.d }), t3.hasChangedField("fill") && n3.setAttrNS({ fill: this.toFillValue(t3) }), t3.hasChangedField("stroke") && n3.setAttrNS({ stroke: this.toStrokeValue(t3) }), t3.hasChangedField("filter") && n3.setAttrNS({ filter: this.toFilterValue(t3) }), t3.hasChangedField("fill-rule") && n3.setAttrNS({ "fill-rule": t3["fill-rule"] || "nonezero" })), this.updateDefString(t3, e3);
              }
            } }, { key: "render", value: function(t3) {
              return `
        <svg 
          class='element-item path'  
          xmlns="http://www.w3.org/2000/svg"
          data-id="`.concat(t3.id, '"\n        >\n            ').concat(this.toDefString(t3), '\n            <path \n              class="svg-path-item"\n              d="').concat(t3.d, '"\n              fill-rule="').concat(t3["fill-rule"], '"\n              filter="').concat(this.toFilterValue(t3), '"\n              fill="').concat(this.toFillValue(t3), '"\n              stroke="').concat(this.toStrokeValue(t3), '"\n            />\n        </svg>\n    ');
            } }]), n2;
          }(Lu);
          function zu(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Nu = function(t2) {
            s()(n2, t2);
            var e2 = zu(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "update", value: function(t3, e3) {
              var n3 = e3.$("path.svg-path-item");
              n3 && t3.hasChangedField("width", "height", "d") && n3.attr("d", t3.d);
              var r2 = e3.$("path.guide");
              r2 && t3.hasChangedField("width", "height", "d") && r2.attr("d", t3.d);
              var i2 = e3.$("textPath");
              i2 && (t3.hasChangedField("text") && i2.text(t3.text), t3.hasChangedField("textLength", "lengthAdjust", "startOffset") && i2.setAttrNS({ textLength: t3.textLength, lengthAdjust: t3.lengthAdjust, startOffset: t3.startOffset }), t3.hasChangedField("fill") && i2.setAttrNS({ fill: this.toFillValue(t3) }), t3.hasChangedField("stroke") && i2.setAttrNS({ stroke: this.toStrokeValue(t3) }), t3.hasChangedField("filter") && i2.setAttrNS({ filter: this.toFilterValue(t3) })), this.updateDefString(t3, e3), t3.totalLength = n3.totalLength;
            } }, { key: "toDefInnerString", value: function(t3) {
              return "\n        ".concat(this.toPathSVG(t3), "\n        ").concat(this.toFillSVG(t3), "\n        ").concat(this.toStrokeSVG(t3), "\n    ");
            } }, { key: "toPathId", value: function(t3) {
              return this.getInnerId(t3, "path");
            } }, { key: "toPathSVG", value: function(t3) {
              return '\n    <path class="svg-path-item" id="'.concat(this.toPathId(t3), '" d="').concat(t3.d, '" fill="none" />\n    ');
            } }, { key: "render", value: function(t3) {
              var e3 = t3.id, n3 = t3.textLength, r2 = t3.lengthAdjust, i2 = t3.startOffset, a2 = "#".concat(this.toPathId(t3));
              return `
      <svg class='element-item textpath' data-id="`.concat(e3, '">\n        ').concat(this.toDefString(t3), '\n        <text class="svg-textpath-item">\n          <textPath \n            xlink:href="').concat(a2, '"\n            textLength="').concat(n3, '"\n            lengthAdjust="').concat(r2, '"\n            startOffset="').concat(i2, '"\n          >').concat(t3.text, '</textPath>\n          <use href="').concat(a2, '" stroke-width="1" stroke="black" />\n        </text>\n        <path class="guide" d="').concat(t3.d, '" stroke="rgba(0, 0, 0, 0.5)" fill="none"/>\n      </svg>\n    ');
            } }]), n2;
          }(Lu);
          function _u(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Uu = function(t2) {
            s()(n2, t2);
            var e2 = _u(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "update", value: function(t3, e3) {
              e3.$("text") && (t3.hasChangedField("text") && $textPath.text(t3.text), t3.hasChangedField("textLength", "lengthAdjust", "startOffset") && $textPath.setAttrNS({ textLength: t3.textLength, lengthAdjust: t3.lengthAdjust, startOffset: t3.startOffset }), t3.hasChangedField("fill") && $textPath.setAttrNS({ fill: this.toFillValue(t3) }), t3.hasChangedField("stroke") && $textPath.setAttrNS({ stroke: this.toStrokeValue(t3) }), t3.hasChangedField("filter") && $textPath.setAttrNS({ filter: this.toFilterValue(t3) })), this.updateDefString(t3, e3);
            } }, { key: "shapeInsideId", value: function(t3) {
              return this.getInnerId(t3, "shape-inside");
            } }, { key: "render", value: function(t3) {
              var e3 = t3.id, n3 = t3.textLength, r2 = t3.lengthAdjust;
              return `
  <svg class='element-item textpath' data-id="`.concat(e3, '">\n    ').concat(this.toDefString(t3), '\n      <text class="svg-text-item" textLength="').concat(n3, '" lengthAdjust="').concat(r2, '">').concat(t3.text, "</text>\n  </svg>");
            } }]), n2;
          }(Lu), Gu = { dom: function() {
            function t2() {
              i()(this, t2);
            }
            return o()(t2, null, [{ key: "compile", value: function(t3) {
              return t3;
            } }]), t2;
          }() }, Hu = function() {
            function t2() {
              i()(this, t2);
            }
            return o()(t2, null, [{ key: "compile", value: function(t3, e2) {
              var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], r2 = Gu[t3] || Gu.dom;
              return r2.compile(e2, n2);
            } }]), t2;
          }();
          function Ku(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Yu = function(t2) {
            s()(n2, t2);
            var e2 = Ku(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "update", value: function(t3, e3) {
              if (t3.hasChangedField("x", "y", "width", "height") === false) {
                var r2 = this.compile(t3), i2 = e3.$(".inner-html");
                i2 && i2.updateDiff(r2);
              }
              A()(h()(n2.prototype), "update", this).call(this, t3, e3);
            } }, { key: "compile", value: function(t3) {
              return Hu.compile("dom", t3.template, t3.params);
            } }, { key: "render", value: function(t3) {
              var e3 = t3.id, n3 = this.compile(t3);
              return `
      <div class='element-item template' data-id="`.concat(e3, '">\n        ').concat(this.toDefString(t3), '\n        <style id="style-').concat(e3, '">\n          [data-id="').concat(e3, '"] .inner-html {\n            width: 100%; \n            height: 100%;\n            position:relative;\n            display:block;\n            pointer-events: none; \n          }\n\n          [data-id="').concat(e3, '"] .inner-html > * {\n            width: 100%; \n            height: 100%;\n          }          \n        </style>\n        <div class="inner-html" data-domdiff-pass="true">\n          ').concat(n3, "\n        </div>\n      </div>");
            } }]), n2;
          }(oi.a);
          function Xu(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Wu = function(t2) {
            s()(n2, t2);
            var e2 = Xu(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "toCSS", value: function(t3) {
              var e3 = A()(h()(n2.prototype), "toCSS", this).call(this, t3);
              return e3.margin = e3.margin || "0px", e3;
            } }, { key: "update", value: function(t3, e3) {
              var r2 = e3.$(".text-content");
              if (r2) {
                var i2 = t3.content;
                r2.updateDiff(i2);
              }
              A()(h()(n2.prototype), "update", this).call(this, t3, e3);
            } }, { key: "render", value: function(t3) {
              var e3 = t3.id, n3 = t3.content;
              return `
            <div class='element-item text' data-id="`.concat(e3, '">\n                ').concat(this.toDefString(t3), '\n                <div class="text-content" tabIndex="-1" data-id="').concat(e3, '">').concat(n3, "</div>\n            </div>\n        ");
            } }]), n2;
          }(oi.a);
          function Zu(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var qu = function(t2) {
            s()(n2, t2);
            var e2 = Zu(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "toNestedCSS", value: function(t3) {
              return [{ selector: "video", cssText: "\n                width: 100%;\n                height: 100%;\n                pointer-events: none;\n                ".trim() }];
            } }, { key: "getUrl", value: function(t3) {
              var e3 = t3.src;
              return t3.project.getVideoValueById(e3);
            } }, { key: "render", value: function(t3) {
              var e3 = t3.id, n3 = t3.controls, r2 = t3.muted, i2 = t3.poster, a2 = t3.loop, o2 = t3.crossorigin, c2 = t3.autoplay;
              return `
        <div class='element-item video' data-id="`.concat(e3, '">\n            ').concat(this.toDefString(t3), '\n            <video \n                controls="').concat(n3, '"\n                src="').concat(this.getUrl(t3), '\n                muted="').concat(r2, '"\n                poster="').concat(i2, '"\n                loop="').concat(a2, '"\n                crossorigin="').concat(o2, '"\n                autoplay="').concat(c2, `"
            >
                Sorry, your browser doesn't support embedded videos.
            </video>
        </div>`);
            } }, { key: "update", value: function(t3, e3) {
              var r2 = t3.currentTime, i2 = t3.playbackRate, a2 = t3.volume, o2 = e3.$("video");
              o2 && o2.setProp({ currentTime: r2, playbackRate: i2, volume: a2 }), A()(h()(n2.prototype), "update", this).call(this, t3, e3);
            } }]), n2;
          }(oi.a), Ju = n(18), Qu = n.n(Ju), tl = n(16), el = n.n(tl), nl = function() {
            function t2(e3) {
              i()(this, t2), this.editor = e3;
            }
            var e2, n2;
            return o()(t2, [{ key: "getDefaultRendererInstance", value: function() {
              return this.editor.getRendererInstance("json", "rect");
            } }, { key: "getRendererInstance", value: function(t3) {
              return this.editor.getRendererInstance("json", t3.itemType) || this.getDefaultRendererInstance() || t3;
            } }, { key: "render", value: (n2 = Qu()(el.a.mark(function t3(e3, n3) {
              var r2;
              return el.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      if (e3) {
                        t4.next = 2;
                        break;
                      }
                      return t4.abrupt("return");
                    case 2:
                      if (!(r2 = this.getRendererInstance(e3))) {
                        t4.next = 7;
                        break;
                      }
                      return t4.next = 6, r2.render(e3, n3 || this);
                    case 6:
                      return t4.abrupt("return", t4.sent);
                    case 7:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3, e3) {
              return n2.apply(this, arguments);
            }) }, { key: "getResourceDataURI", value: (e2 = Qu()(el.a.mark(function t3(e3, n3) {
              return el.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                    case "end":
                      return t4.stop();
                  }
              }, t3);
            })), function(t3, n3) {
              return e2.apply(this, arguments);
            }) }]), t2;
          }(), rl = function() {
            function t2() {
              i()(this, t2);
            }
            var e2, n2;
            return o()(t2, [{ key: "render", value: (n2 = Qu()(el.a.mark(function t3(e3, n3) {
              return el.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.next = 2, this.toCloneObject(e3, n3);
                    case 2:
                      return t4.abrupt("return", t4.sent);
                    case 3:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3, e3) {
              return n2.apply(this, arguments);
            }) }, { key: "toCloneObject", value: (e2 = Qu()(el.a.mark(function t3(e3, n3) {
              var r2, i2, a2, o2;
              return el.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      (r2 = e3.attrs("itemType", "name", "elementType", "type", "visible", "lock", "selected")).referenceId = e3.id, r2.newTargetId = Object(Vo.uuid)(), i2 = [], a2 = 0, o2 = e3.layers.length;
                    case 5:
                      if (!(a2 < o2)) {
                        t4.next = 14;
                        break;
                      }
                      return t4.t0 = i2, t4.next = 9, n3.render(e3.layers[a2], n3);
                    case 9:
                      t4.t1 = t4.sent, t4.t0.push.call(t4.t0, t4.t1);
                    case 11:
                      a2++, t4.next = 5;
                      break;
                    case 14:
                      return r2.layers = i2, t4.abrupt("return", r2);
                    case 16:
                    case "end":
                      return t4.stop();
                  }
              }, t3);
            })), function(t3, n3) {
              return e2.apply(this, arguments);
            }) }]), t2;
          }();
          function il(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function al(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? il(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : il(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function ol(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          function cl(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function sl(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? cl(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : cl(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function ul(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var ll = function(t2) {
            s()(r2, t2);
            var e2, n2 = ul(r2);
            function r2() {
              return i()(this, r2), n2.apply(this, arguments);
            }
            return o()(r2, [{ key: "toCloneObject", value: (e2 = Qu()(el.a.mark(function t3(e3, n3) {
              return el.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.t0 = sl, t4.t1 = sl, t4.t2 = sl, t4.t3 = {}, t4.next = 6, A()(h()(r2.prototype), "toCloneObject", this).call(this, e3, n3);
                    case 6:
                      return t4.t4 = t4.sent, t4.t5 = (0, t4.t2)(t4.t3, t4.t4), t4.t6 = e3.attrs("position", "right", "bottom", "rootVariable", "variable", "transform", "filter", "backdrop-filter", "background-color", "background-image", "text-clip", "border-radius", "border", "box-shadow", "text-shadow", "clip-path", "color", "font-size", "font-stretch", "line-height", "text-align", "text-transform", "text-decoration", "letter-spacing", "word-spacing", "text-indent", "perspective-origin", "transform-origin", "transform-style", "perspective", "mix-blend-mode", "overflow", "opacity", "rotate", "flex-layout", "grid-layout", "animation", "transition"), t4.t7 = (0, t4.t1)(t4.t5, t4.t6), t4.t8 = {}, t4.t9 = { selectors: e3.selectors.map(function(t5) {
                        return t5.clone();
                      }), svg: e3.svg.map(function(t5) {
                        return t5.clone();
                      }) }, t4.abrupt("return", (0, t4.t0)(t4.t7, t4.t8, t4.t9));
                    case 13:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3, n3) {
              return e2.apply(this, arguments);
            }) }]), r2;
          }(function(t2) {
            s()(r2, t2);
            var e2, n2 = ol(r2);
            function r2() {
              return i()(this, r2), n2.apply(this, arguments);
            }
            return o()(r2, [{ key: "toCloneObject", value: (e2 = Qu()(el.a.mark(function t3(e3, n3) {
              return el.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.t0 = al, t4.t1 = al, t4.t2 = {}, t4.next = 5, A()(h()(r2.prototype), "toCloneObject", this).call(this, e3, n3);
                    case 5:
                      return t4.t3 = t4.sent, t4.t4 = (0, t4.t1)(t4.t2, t4.t3), t4.t5 = e3.attrs("x", "y", "width", "height"), t4.abrupt("return", (0, t4.t0)(t4.t4, t4.t5));
                    case 9:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3, n3) {
              return e2.apply(this, arguments);
            }) }]), r2;
          }(rl));
          function fl(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function hl(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? fl(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : fl(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function pl(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var dl = function(t2) {
            s()(r2, t2);
            var e2, n2 = pl(r2);
            function r2() {
              return i()(this, r2), n2.apply(this, arguments);
            }
            return o()(r2, [{ key: "toCloneObject", value: (e2 = Qu()(el.a.mark(function t3(e3, n3) {
              return el.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.t0 = hl, t4.t1 = hl, t4.t2 = {}, t4.next = 5, A()(h()(r2.prototype), "toCloneObject", this).call(this, e3, n3);
                    case 5:
                      return t4.t3 = t4.sent, t4.t4 = (0, t4.t1)(t4.t2, t4.t3), t4.t5 = e3.attrs("name"), t4.abrupt("return", (0, t4.t0)(t4.t4, t4.t5));
                    case 9:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3, n3) {
              return e2.apply(this, arguments);
            }) }]), r2;
          }(ll);
          function vl(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function yl(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? vl(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : vl(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function gl(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var ml = function(t2) {
            s()(r2, t2);
            var e2, n2 = gl(r2);
            function r2() {
              return i()(this, r2), n2.apply(this, arguments);
            }
            return o()(r2, [{ key: "toCloneObject", value: (e2 = Qu()(el.a.mark(function t3(e3, n3) {
              return el.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.t0 = yl, t4.t1 = yl, t4.t2 = {}, t4.next = 5, A()(h()(r2.prototype), "toCloneObject", this).call(this, e3, n3);
                    case 5:
                      return t4.t3 = t4.sent, t4.t4 = (0, t4.t1)(t4.t2, t4.t3), t4.t5 = e3.attrs("tagName"), t4.abrupt("return", (0, t4.t0)(t4.t4, t4.t5));
                    case 9:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3, n3) {
              return e2.apply(this, arguments);
            }) }]), r2;
          }(ll);
          function bl(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var kl = function(t2) {
            s()(n2, t2);
            var e2 = bl(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return n2;
          }(ml);
          function Ol(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function xl(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Ol(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Ol(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function jl(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Sl = function(t2) {
            s()(r2, t2);
            var e2, n2 = jl(r2);
            function r2() {
              return i()(this, r2), n2.apply(this, arguments);
            }
            return o()(r2, [{ key: "toCloneObject", value: (e2 = Qu()(el.a.mark(function t3(e3, n3) {
              return el.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.t0 = xl, t4.t1 = xl, t4.t2 = {}, t4.next = 5, A()(h()(r2.prototype), "toCloneObject", this).call(this, e3, n3);
                    case 5:
                      return t4.t3 = t4.sent, t4.t4 = (0, t4.t1)(t4.t2, t4.t3), t4.t5 = e3.attrs("src"), t4.abrupt("return", (0, t4.t0)(t4.t4, t4.t5));
                    case 9:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3, n3) {
              return e2.apply(this, arguments);
            }) }]), r2;
          }(ml);
          function Pl(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function wl(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Pl(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Pl(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Rl(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Cl = function(t2) {
            s()(r2, t2);
            var e2, n2 = Rl(r2);
            function r2() {
              return i()(this, r2), n2.apply(this, arguments);
            }
            return o()(r2, [{ key: "toCloneObject", value: (e2 = Qu()(el.a.mark(function t3(e3, n3) {
              var i2, a2, o2;
              return el.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return i2 = e3.project, a2 = i2.imageKeys[e3.src], o2 = a2.original, t4.t0 = wl, t4.t1 = wl, t4.t2 = {}, t4.next = 8, A()(h()(r2.prototype), "toCloneObject", this).call(this, e3, n3);
                    case 8:
                      return t4.t3 = t4.sent, t4.t4 = (0, t4.t1)(t4.t2, t4.t3), t4.t5 = {}, t4.t6 = { src: o2 }, t4.abrupt("return", (0, t4.t0)(t4.t4, t4.t5, t4.t6));
                    case 13:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3, n3) {
              return e2.apply(this, arguments);
            }) }]), r2;
          }(ml);
          function El(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function $l(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? El(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : El(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Il(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          function Tl(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Bl(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Tl(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Tl(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Ml(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          function Vl(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Dl(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Vl(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Vl(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Ll(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Al = function(t2) {
            s()(r2, t2);
            var e2, n2 = Ll(r2);
            function r2() {
              return i()(this, r2), n2.apply(this, arguments);
            }
            return o()(r2, [{ key: "toCloneObject", value: (e2 = Qu()(el.a.mark(function t3(e3, n3) {
              return el.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.t0 = Dl, t4.t1 = Dl, t4.t2 = {}, t4.next = 5, A()(h()(r2.prototype), "toCloneObject", this).call(this, e3, n3);
                    case 5:
                      return t4.t3 = t4.sent, t4.t4 = (0, t4.t1)(t4.t2, t4.t3), t4.t5 = e3.attrs("name", "description", "rootVariable"), t4.abrupt("return", (0, t4.t0)(t4.t4, t4.t5));
                    case 9:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3, n3) {
              return e2.apply(this, arguments);
            }) }]), r2;
          }(function(t2) {
            s()(r2, t2);
            var e2, n2 = Ml(r2);
            function r2() {
              return i()(this, r2), n2.apply(this, arguments);
            }
            return o()(r2, [{ key: "toCloneObject", value: (e2 = Qu()(el.a.mark(function t3(e3, n3) {
              return el.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.t0 = Bl, t4.t1 = Bl, t4.t2 = {}, t4.next = 5, A()(h()(r2.prototype), "toCloneObject", this).call(this, e3, n3);
                    case 5:
                      return t4.t3 = t4.sent, t4.t4 = (0, t4.t1)(t4.t2, t4.t3), t4.t5 = e3.attrs("timeline"), t4.abrupt("return", (0, t4.t0)(t4.t4, t4.t5));
                    case 9:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3, n3) {
              return e2.apply(this, arguments);
            }) }]), r2;
          }(function(t2) {
            s()(r2, t2);
            var e2, n2 = Il(r2);
            function r2() {
              return i()(this, r2), n2.apply(this, arguments);
            }
            return o()(r2, [{ key: "toCloneObject", value: (e2 = Qu()(el.a.mark(function t3(e3, n3) {
              return el.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.t0 = $l, t4.t1 = $l, t4.t2 = {}, t4.next = 5, A()(h()(r2.prototype), "toCloneObject", this).call(this, e3, n3);
                    case 5:
                      return t4.t3 = t4.sent, t4.t4 = (0, t4.t1)(t4.t2, t4.t3), t4.t5 = e3.attrs("colors", "gradients", "svgfilters", "svgimages", "images", "keyframes"), t4.abrupt("return", (0, t4.t0)(t4.t4, t4.t5));
                    case 9:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3, n3) {
              return e2.apply(this, arguments);
            }) }]), r2;
          }(rl)));
          function Fl(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var zl = function(t2) {
            s()(n2, t2);
            var e2 = Fl(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return n2;
          }(ml);
          function Nl(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function _l(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Nl(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Nl(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Ul(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Gl = function(t2) {
            s()(r2, t2);
            var e2, n2 = Ul(r2);
            function r2() {
              return i()(this, r2), n2.apply(this, arguments);
            }
            return o()(r2, [{ key: "toCloneObject", value: (e2 = Qu()(el.a.mark(function t3(e3, n3) {
              return el.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.t0 = _l, t4.t1 = _l, t4.t2 = {}, t4.next = 5, A()(h()(r2.prototype), "toCloneObject", this).call(this, e3, n3);
                    case 5:
                      return t4.t3 = t4.sent, t4.t4 = (0, t4.t1)(t4.t2, t4.t3), t4.t5 = e3.attrs("overflow", "stroke", "stroke-width", "svgfilter", "fill", "fill-rule", "fill-opacity", "stroke-linecap", "stroke-linejoin", "stroke-dashoffset", "stroke-dasharray", "text-anchor"), t4.abrupt("return", (0, t4.t0)(t4.t4, t4.t5));
                    case 9:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3, n3) {
              return e2.apply(this, arguments);
            }) }]), r2;
          }(ml);
          function Hl(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Kl(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Hl(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Hl(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Yl(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Xl = function(t2) {
            s()(r2, t2);
            var e2, n2 = Yl(r2);
            function r2() {
              return i()(this, r2), n2.apply(this, arguments);
            }
            return o()(r2, [{ key: "toCloneObject", value: (e2 = Qu()(el.a.mark(function t3(e3, n3) {
              return el.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.t0 = Kl, t4.t1 = Kl, t4.t2 = {}, t4.next = 5, A()(h()(r2.prototype), "toCloneObject", this).call(this, e3, n3);
                    case 5:
                      return t4.t3 = t4.sent, t4.t4 = (0, t4.t1)(t4.t2, t4.t3), t4.t5 = e3.attrs("d"), t4.abrupt("return", (0, t4.t0)(t4.t4, t4.t5));
                    case 9:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3, n3) {
              return e2.apply(this, arguments);
            }) }]), r2;
          }(Gl);
          function Wl(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Zl(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Wl(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Wl(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function ql(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Jl = function(t2) {
            s()(r2, t2);
            var e2, n2 = ql(r2);
            function r2() {
              return i()(this, r2), n2.apply(this, arguments);
            }
            return o()(r2, [{ key: "toCloneObject", value: (e2 = Qu()(el.a.mark(function t3(e3, n3) {
              return el.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.t0 = Zl, t4.t1 = Zl, t4.t2 = {}, t4.next = 5, A()(h()(r2.prototype), "toCloneObject", this).call(this, e3, n3);
                    case 5:
                      return t4.t3 = t4.sent, t4.t4 = (0, t4.t1)(t4.t2, t4.t3), t4.t5 = e3.attrs("totalLength", "d", "text", "textLength", "lengthAdjust", "startOffset"), t4.abrupt("return", (0, t4.t0)(t4.t4, t4.t5));
                    case 9:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3, n3) {
              return e2.apply(this, arguments);
            }) }]), r2;
          }(Gl);
          function Ql(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function tf(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Ql(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Ql(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function ef(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var nf = function(t2) {
            s()(r2, t2);
            var e2, n2 = ef(r2);
            function r2() {
              return i()(this, r2), n2.apply(this, arguments);
            }
            return o()(r2, [{ key: "toCloneObject", value: (e2 = Qu()(el.a.mark(function t3(e3, n3) {
              return el.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.t0 = tf, t4.t1 = tf, t4.t2 = {}, t4.next = 5, A()(h()(r2.prototype), "toCloneObject", this).call(this, e3, n3);
                    case 5:
                      return t4.t3 = t4.sent, t4.t4 = (0, t4.t1)(t4.t2, t4.t3), t4.t5 = e3.attrs("totalLength", "text", "textLength", "lengthAdjust", "shape-inside"), t4.abrupt("return", (0, t4.t0)(t4.t4, t4.t5));
                    case 9:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3, n3) {
              return e2.apply(this, arguments);
            }) }]), r2;
          }(Gl);
          function rf(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function af(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? rf(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : rf(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function of(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var cf = function(t2) {
            s()(r2, t2);
            var e2, n2 = of(r2);
            function r2() {
              return i()(this, r2), n2.apply(this, arguments);
            }
            return o()(r2, [{ key: "toCloneObject", value: (e2 = Qu()(el.a.mark(function t3(e3, n3) {
              return el.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.t0 = af, t4.t1 = af, t4.t2 = {}, t4.next = 5, A()(h()(r2.prototype), "toCloneObject", this).call(this, e3, n3);
                    case 5:
                      return t4.t3 = t4.sent, t4.t4 = (0, t4.t1)(t4.t2, t4.t3), t4.t5 = e3.attrs("engine", "template", "params"), t4.abrupt("return", (0, t4.t0)(t4.t4, t4.t5));
                    case 9:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3, n3) {
              return e2.apply(this, arguments);
            }) }]), r2;
          }(ml);
          function sf(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function uf(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? sf(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : sf(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function lf(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var ff = function(t2) {
            s()(r2, t2);
            var e2, n2 = lf(r2);
            function r2() {
              return i()(this, r2), n2.apply(this, arguments);
            }
            return o()(r2, [{ key: "toCloneObject", value: (e2 = Qu()(el.a.mark(function t3(e3, n3) {
              return el.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.t0 = uf, t4.t1 = uf, t4.t2 = {}, t4.next = 5, A()(h()(r2.prototype), "toCloneObject", this).call(this, e3, n3);
                    case 5:
                      return t4.t3 = t4.sent, t4.t4 = (0, t4.t1)(t4.t2, t4.t3), t4.t5 = e3.attrs("content"), t4.abrupt("return", (0, t4.t0)(t4.t4, t4.t5));
                    case 9:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3, n3) {
              return e2.apply(this, arguments);
            }) }]), r2;
          }(ml);
          function hf(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function pf(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? hf(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : hf(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function df(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var vf = function(t2) {
            s()(r2, t2);
            var e2, n2 = df(r2);
            function r2() {
              return i()(this, r2), n2.apply(this, arguments);
            }
            return o()(r2, [{ key: "toCloneObject", value: (e2 = Qu()(el.a.mark(function t3(e3, n3) {
              return el.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.t0 = pf, t4.t1 = pf, t4.t2 = {}, t4.next = 5, A()(h()(r2.prototype), "toCloneObject", this).call(this, e3, n3);
                    case 5:
                      return t4.t3 = t4.sent, t4.t4 = (0, t4.t1)(t4.t2, t4.t3), t4.t5 = e3.attrs("src"), t4.abrupt("return", (0, t4.t0)(t4.t4, t4.t5));
                    case 9:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3, n3) {
              return e2.apply(this, arguments);
            }) }]), r2;
          }(ml), yf = function() {
            function t2(e2) {
              i()(this, t2), this.editor = e2;
            }
            return o()(t2, [{ key: "getDefaultRendererInstance", value: function() {
              return this.editor.getRendererInstance("svg", "rect");
            } }, { key: "getRendererInstance", value: function(t3) {
              return this.editor.getRendererInstance("svg", t3.itemType) || this.getDefaultRendererInstance() || t3;
            } }, { key: "render", value: function(t3, e2) {
              if (!t3)
                return "";
              var n2 = this.getRendererInstance(t3);
              return n2 ? n2.render(t3, e2 || this) : void 0;
            } }, { key: "toCSS", value: function(t3) {
              var e2 = this.getRendererInstance(t3);
              if (e2)
                return e2.toCSS(t3);
            } }, { key: "toTransformCSS", value: function(t3) {
              var e2 = this.getRendererInstance(t3);
              if (e2)
                return e2.toTransformCSS(t3);
            } }, { key: "toStyle", value: function(t3, e2) {
              var n2 = this.getRendererInstance(t3);
              if (n2)
                return n2.toStyle(t3, e2 || this);
            } }, { key: "update", value: function(t3, e2) {
              var n2 = this.getRendererInstance(t3);
              if (n2)
                return n2.update(t3, e2);
            } }, { key: "codeview", value: function(t3) {
              if (!t3)
                return "";
              var e2 = this.render(t3);
              return e2 = e2.replace(/\</g, "&lt;").replace(/\>/g, "&gt;"), "\n<div class='svg-code'>\n".concat(e2 && "<div><pre title='SVG'>".concat(e2, "</pre></div>"), "\n</div>\n        ");
            } }]), t2;
          }();
          function gf(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function mf(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? gf(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : gf(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function bf(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var kf = function(t2) {
            s()(n2, t2);
            var e2 = bf(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "toDefaultCSS", value: function(t3) {
              return mf({ overflow: "visible" }, this.toKeyListCSS(t3, ["font-size", "font-stretch", "line-height", "font-weight", "font-family", "font-style", "text-align", "text-transform", "text-decoration", "letter-spacing", "word-spacing", "text-indent", "background-color", "border-radius", "transform-style"]));
            } }, { key: "toCSS", value: function(t3) {
              var e3 = Object.assign({}, this.toVariableCSS(t3), this.toDefaultCSS(t3), this.toClipPathCSS(t3), this.toWebkitCSS(t3), this.toTextClipCSS(t3), this.toTransformCSS(t3), this.toLayoutItemCSS(t3), this.toBorderCSS(t3), this.toBackgroundImageCSS(t3), this.toLayoutCSS(t3));
              return delete e3.left, delete e3.top, delete e3.width, delete e3.height, delete e3.position, e3;
            } }, { key: "toSVGAttribute", value: function(t3) {
              return mf(mf({}, this.toDefaultCSS(t3)), this.toKeyListCSS(t3, ["stroke-width", "stroke-linecap", "stroke-linejoin", "stroke-dasharray", "stroke-dashoffset", "fill-opacity", "fill-rule", "text-anchor"]));
            } }, { key: "wrappedRender", value: function(t3, e3) {
              var n3 = t3.id, r2 = t3.x, i2 = t3.y, a2 = t3.width, o2 = t3.height, c2 = t3.itemType;
              return "\n\n<svg class='svg-element-item ".concat(c2, `'
    xmlns="http://www.w3.org/2000/svg"
    data-id="`).concat(n3, '"\n    x="').concat(r2.value, '"\n    y="').concat(i2.value, '"\n    width="').concat(a2.value, '"\n    height="').concat(o2.value, '"\n    overflow="visible"\n>\n    ').concat(this.toDefString(t3), "\n    ").concat(Object(X.isFunction)(e3) && e3(), "\n</svg>\n        ");
            } }, { key: "render", value: function(t3, e3) {
              var n3 = t3.width, r2 = t3.height, i2 = t3.elementType || "div", a2 = this.toCSS(t3);
              return this.wrappedRender(t3, function() {
                return '\n<foreignObject \n    width="'.concat(n3.value, '"\n    height="').concat(r2.value, '"\n    overflow="visible"\n>\n    <').concat(i2, ' xmlns="http://www.w3.org/1999/xhtml" style="').concat(Object(X.CSS_TO_STRING)(a2), ';width:100%;height:100%;"></').concat(i2, ">\n</foreignObject>    \n").concat(t3.layers.map(function(t4) {
                  return e3.render(t4, e3);
                }).join(""), "\n            ");
              });
            } }]), n2;
          }(Hc.a);
          function Of(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var xf = function(t2) {
            s()(n2, t2);
            var e2 = Of(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "toCSS", value: function(t3) {
              var e3 = Object.assign({}, this.toDefaultCSS(t3), this.toClipPathCSS(t3), this.toWebkitCSS(t3), this.toTextClipCSS(t3), this.toBackgroundImageCSS(t3));
              return delete e3.left, delete e3.top, delete e3.width, delete e3.height, delete e3.position, e3;
            } }, { key: "render", value: function(t3, e3) {
              var n3 = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2], r2 = (t3.x, t3.y, t3.width), i2 = t3.height, a2 = this.toCSS(t3);
              return "\n".concat(n3 ? '<?xml version="1.0"?>' : "", '\n<svg \n    xmlns="http://www.w3.org/2000/svg"\n    width="').concat(r2.value, '"\n    height="').concat(i2.value, '"\n    viewBox="0 0 ').concat(r2.value, " ").concat(i2.value, '"\n    style="').concat(Object(X.CSS_TO_STRING)(a2), '"\n>\n    ').concat(this.toDefString(t3), "\n    ").concat(t3.layers.map(function(t4) {
                return e3.render(t4, e3);
              }).join(""), "\n</svg>      \n        ");
            } }]), n2;
          }(kf);
          function jf(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Sf = function(t2) {
            s()(n2, t2);
            var e2 = jf(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return n2;
          }(kf);
          function Pf(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var wf = function(t2) {
            s()(n2, t2);
            var e2 = Pf(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return n2;
          }(Sf);
          function Rf(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Cf = function(t2) {
            s()(n2, t2);
            var e2 = Rf(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "update", value: function(t3, e3) {
              var r2 = e3.$("iframe");
              r2 && r2.attr("src", t3.url || "about:blank"), A()(h()(n2.prototype), "update", this).call(this, t3, e3);
            } }, { key: "render", value: function(t3) {
              var e3 = t3.width, n3 = t3.height, r2 = (t3.id, t3.url), i2 = r2 === void 0 ? "about:blank" : r2, a2 = this.toCSS(t3);
              return this.wrappedRender(t3, function() {
                return '\n  <foreignObject\n      width="'.concat(e3.value, '"\n      height="').concat(n3.value, '"\n  >\n      <iframe \n          xmlns="http://www.w3.org/1999/xhtml"\n          width="100%" \n          height="100%" \n          style="border:0px;width:100%;height:100%;pointer-events:none; ').concat(Object(X.CSS_TO_STRING)(a2), '" \n          src="').concat(i2, '"\n      ></iframe>\n  </foreignObject>              \n          ');
              });
            } }]), n2;
          }(Sf);
          function Ef(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var $f = function(t2) {
            s()(n2, t2);
            var e2 = Ef(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getUrl", value: function(t3) {
              var e3 = t3.src;
              return t3.project.getImageValueById(e3);
            } }, { key: "render", value: function(t3) {
              var e3 = this, n3 = t3.width, r2 = t3.height, i2 = this.toCSS(t3);
              return this.wrappedRender(t3, function() {
                return '\n            <foreignObject\n                width="'.concat(n3.value, '"\n                height="').concat(r2.value, `"
            >
                <div xmlns="http://www.w3.org/1999/xhtml">
                    <img src='`).concat(e3.getUrl(t3), `' style="width:100%;height:100%; `).concat(Object(X.CSS_TO_STRING)(i2), '"  />\n                </div>\n            </foreignObject>              \n          ');
              });
            } }, { key: "update", value: function(t3, e3) {
              var r2 = e3.$("img");
              r2 && r2.attr("src", this.getUrl(t3)), A()(h()(n2.prototype), "update", this).call(this, t3, e3);
            } }]), n2;
          }(Sf);
          function If(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Tf = function(t2) {
            s()(n2, t2);
            var e2 = If(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "render", value: function(t3, e3) {
              return t3.artboards.map(function(t4) {
                return e3.render(t4, e3);
              });
            } }]), n2;
          }(kf);
          function Bf(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Mf = function(t2) {
            s()(n2, t2);
            var e2 = Bf(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return n2;
          }(Sf);
          function Vf(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Df = function(t2) {
            s()(n2, t2);
            var e2 = Vf(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "updateDefString", value: function(t3, e3) {
              var n3 = e3.$("defs");
              if (n3)
                n3.html(this.toDefInnerString(t3));
              else {
                var r2 = this.toDefString(t3).trim();
                e3.prepend(Pe.a.createByHTML(r2));
              }
            } }, { key: "toDefInnerString", value: function(t3) {
              return "\n            ".concat(this.toFillSVG(t3), "\n            ").concat(this.toStrokeSVG(t3), "\n        ");
            } }, { key: "toDefString", value: function(t3) {
              var e3 = this.toDefInnerString(t3).trim();
              return "\n            <defs>\n            ".concat(e3, "\n            </defs>\n        ");
            } }, { key: "fillId", value: function(t3) {
              return this.getInnerId(t3, "fill");
            } }, { key: "strokeId", value: function(t3) {
              return this.getInnerId(t3, "stroke");
            } }, { key: "toFillSVG", value: function(t3) {
              return gr.a.parseImage(t3.fill || "transparent").toSVGString(this.fillId(t3));
            } }, { key: "toStrokeSVG", value: function(t3) {
              return gr.a.parseImage(t3.stroke || "black").toSVGString(this.strokeId(t3));
            } }, { key: "toFillValue", value: function(t3) {
              return gr.a.parseImage(t3.fill || "transparent").toFillValue(this.fillId(t3));
            } }, { key: "toFillOpacityValue", value: function(t3) {
              return Bt.a.parse(t3.fill || "transparent").a;
            } }, { key: "toStrokeValue", value: function(t3) {
              return gr.a.parseImage(t3.stroke || "black").toFillValue(this.strokeId(t3));
            } }, { key: "toFilterValue", value: function(t3) {
              return t3.svgfilter ? "url(#".concat(t3.svgfilter, ")") : "";
            } }, { key: "toLayoutCSS", value: function(t3) {
              return {};
            } }]), n2;
          }(Sf);
          function Lf(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Af(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Lf(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Lf(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Ff(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var zf = function(t2) {
            s()(n2, t2);
            var e2 = Ff(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "update", value: function(t3, e3) {
              if (e3) {
                var n3 = e3.$("path");
                n3 && (n3.setAttr({ d: t3.d, filter: this.toFilterValue(t3), fill: this.toFillValue(t3), stroke: this.toStrokeValue(t3) }), t3.totalLength = n3.totalLength), this.updateDefString(t3, e3);
              }
            } }, { key: "render", value: function(t3) {
              var e3 = this, n3 = t3.d;
              return this.wrappedRender(t3, function() {
                return "\n<path ".concat(Object(X.OBJECT_TO_PROPERTY)(Af(Af({ class: "svg-path-item", d: n3, filter: e3.toFilterValue(t3), fill: e3.toFillValue(t3), stroke: e3.toStrokeValue(t3) }, e3.toSVGAttribute(t3)), {}, { style: Object(X.CSS_TO_STRING)(e3.toCSS(t3)) })), " />\n    ");
              });
            } }]), n2;
          }(Df);
          function Nf(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function _f(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Nf(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Nf(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Uf(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Gf = function(t2) {
            s()(n2, t2);
            var e2 = Uf(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "update", value: function(t3, e3) {
              var n3 = e3.$("path");
              n3 && n3.attr("d", t3.d);
              var r2 = e3.$("textPath");
              r2 && (r2.text(t3.text), r2.setAttr({ filter: this.toFilterValue(t3), fill: this.toFillValue(t3), stroke: this.toStrokeValue(t3), textLength: t3.textLength, lengthAdjust: t3.lengthAdjust, startOffset: t3.startOffset })), this.updateDefString(t3, e3), t3.totalLength = n3.totalLength;
            } }, { key: "toDefInnerString", value: function(t3) {
              return "\n      ".concat(this.toPathSVG(t3), "\n      ").concat(this.toFillSVG(t3), "\n      ").concat(this.toStrokeSVG(t3), "\n    ");
            } }, { key: "toPathId", value: function(t3) {
              return this.getInnerId(t3, "path");
            } }, { key: "toPathSVG", value: function(t3) {
              return '\n      <path \n        class="svg-path-item"\n        id="'.concat(this.toPathId(t3), '"\n        d="').concat(t3.d, '"\n        fill="none"\n      />\n    ');
            } }, { key: "render", value: function(t3) {
              var e3 = this;
              return this.wrappedRender(t3, function() {
                var n3 = t3.textLength, r2 = t3.lengthAdjust, i2 = t3.startOffset;
                return "\n        <textPath ".concat(Object(X.OBJECT_TO_PROPERTY)(_f(_f({ "xlink:href": "#".concat(e3.toPathId(t3)), textLength: n3, lengthAdjust: r2, startOffset: i2, filter: e3.toFilterValue(t3), fill: e3.toFillValue(t3), stroke: e3.toStrokeValue(t3) }, e3.toSVGAttribute(t3)), {}, { style: Object(X.CSS_TO_STRING)(e3.toCSS(t3)) })), " >").concat(t3.text, "</textPath>\n      ");
              });
            } }]), n2;
          }(Df);
          function Hf(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Kf(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Hf(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Hf(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Yf(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Xf = function(t2) {
            s()(n2, t2);
            var e2 = Yf(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "update", value: function(t3, e3) {
              var n3 = e3.$("text");
              n3 && (n3.text(t3.text), n3.setAttr({ filter: this.toFilterValue(t3), fill: this.toFillValue(t3), stroke: this.toStrokeValue(t3), textLength: t3.textLength, lengthAdjust: t3.lengthAdjust })), this.updateDefString(t3, e3);
            } }, { key: "shapeInsideId", value: function(t3) {
              return this.getInnerId(t3, "shape-inside");
            } }, { key: "render", value: function(t3) {
              var e3 = this, n3 = (t3.id, t3.textLength), r2 = t3.lengthAdjust;
              return this.wrappedRender(t3, function() {
                return "\n        <text ".concat(Object(X.OBJECT_TO_PROPERTY)(Kf(Kf({ class: "svg-text-item", textLength: n3, lengthAdjust: r2, filter: e3.toFilterValue(t3), fill: e3.toFillValue(t3), stroke: e3.toStrokeValue(t3) }, e3.toSVGAttribute(t3)), {}, { style: Object(X.CSS_TO_STRING)(e3.toCSS(t3)) })), " >").concat(t3.text, "</text>\n      ");
              });
            } }]), n2;
          }(Df);
          function Wf(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Zf = function(t2) {
            s()(n2, t2);
            var e2 = Wf(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "update", value: function(t3, e3) {
              var r2 = this.compile(t3), i2 = e3.$(".inner-html");
              i2 && i2.updateDiff(r2), A()(h()(n2.prototype), "update", this).call(this, t3, e3);
            } }, { key: "compile", value: function(t3) {
              return Hu.compile("dom", t3.template, t3.params);
            } }, { key: "render", value: function(t3) {
              var e3 = t3.id, n3 = t3.width, r2 = t3.height, i2 = this.compile(t3);
              return this.wrappedRender(t3, function() {
                return '\n            <foreignObject\n                width="'.concat(n3.value, '"\n                height="').concat(r2.value, '"\n            >\n                <div  xmlns="http://www.w3.org/1999/xhtml" style="width: 100%;height:100%;">\n                    <style id="style-').concat(e3, '">\n                    [data-id="').concat(e3, '"] .inner-html {\n                        width: 100%; \n                        height: 100%;\n                        position:relative;\n                        display:block;\n                        pointer-events: none; \n                    }\n\n                    [data-id="').concat(e3, '"] .inner-html > * {\n                        width: 100%; \n                        height: 100%;\n                    }          \n                    </style>\n                    <div class="inner-html">\n                    ').concat(i2, "\n                    </div>\n                </div>\n            </foreignObject>              \n          ");
              });
            } }]), n2;
          }(Sf);
          function qf(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Jf = function(t2) {
            s()(n2, t2);
            var e2 = qf(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "toCSS", value: function(t3) {
              var e3 = A()(h()(n2.prototype), "toCSS", this).call(this, t3);
              return e3.margin = e3.margin || "0px", e3;
            } }, { key: "render", value: function(t3) {
              var e3 = t3.content, n3 = t3.width, r2 = t3.height, i2 = this.toCSS(t3);
              return this.wrappedRender(t3, function() {
                return '\n            <foreignObject width="'.concat(n3.value, '" height="').concat(r2.value, '">\n                <p xmlns="http://www.w3.org/1999/xhtml" style="').concat(Object(X.CSS_TO_STRING)(i2), '">').concat(e3, "</p>\n            </foreignObject>              \n          ");
              });
            } }, { key: "update", value: function(t3, e3) {
              var n3 = t3.content;
              e3.updateDiff(n3);
            } }]), n2;
          }(Sf);
          function Qf(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var th = function(t2) {
            s()(n2, t2);
            var e2 = Qf(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getUrl", value: function(t3) {
              var e3 = t3.src;
              return t3.project.getVideoValueById(e3);
            } }, { key: "render", value: function(t3, e3) {
              var n3 = this, r2 = t3.width, i2 = t3.height, a2 = t3.controls, o2 = t3.muted, c2 = t3.poster, s2 = t3.loop, u2 = t3.crossorigin, l2 = t3.autoplay, f2 = this.toCSS(t3);
              return this.wrappedRender(t3, function() {
                return '\n            <foreignObject \n                width="'.concat(r2.value, '"\n                height="').concat(i2.value, '"\n                overflow="visible"\n            >\n                <video \n                    xmlns="http://www.w3.org/1999/xhtml"\n                    controls="').concat(a2, '"\n                    src="').concat(n3.getUrl(t3), '"\n                    muted="').concat(o2, '"\n                    poster="').concat(c2, '"\n                    loop="').concat(s2, '"\n                    crossorigin="').concat(u2, '"\n                    autoplay="').concat(l2, '"\n                    style="').concat(Object(X.CSS_TO_STRING)(f2), ';width:100%;height:100%;"></video>\n            </foreignObject>    \n            ');
              });
            } }]), n2;
          }(Sf);
          n(218);
          function eh(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var nh = function(t2) {
            s()(n2, t2);
            var e2 = eh(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("selector.popup.title");
            } }, { key: "initState", value: function() {
              return { selector: "", properties: [] };
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.emit("changeSelectorPopup", this.state);
            } }, { key: "getBody", value: function() {
              return `
    <div class='elf--selector-popup' ref='$popup'>
      <div class="box">
        `.concat(this.templateForSelector(), "\n        ").concat(this.templateForProperty(), "        \n      </div>\n    </div>");
            } }, { key: "templateForProperty", value: function() {
              return `<object refClass="CSSPropertyEditor" ref='$propertyEditor' onchange='changePropertyEditor' />`;
            } }, { key: "templateForSelector", value: function() {
              return "\n      <div class='name'>\n        <label>".concat(this.$i18n("selector.popup.selector"), "</label>\n        <div class='input grid-1'>\n          <input type='text' value='").concat(this.state.selector, "' ref='$selector'/>\n        </div>\n      </div>\n    ");
            } }, { key: Object(V.INPUT)("$selector"), value: function(t3) {
              if (!this.refs.$selector.value.match(/^[a-zA-Z0-9\:\_\-\.\b]+$/))
                return t3.preventDefault(), t3.stopPropagation(), false;
              this.updateData({ selector: this.refs.$selector.value });
            } }, { key: "refresh", value: function() {
              A()(h()(n2.prototype), "refresh", this).call(this), this.refs.$selector.val(this.state.selector), this.children.$propertyEditor.trigger("showCSSPropertyEditor", this.state.properties);
            } }, { key: Object(V.SUBSCRIBE)("changePropertyEditor"), value: function(t3) {
              this.updateData({ properties: t3 });
            } }, { key: Object(V.SUBSCRIBE)("showSelectorPopup"), value: function(t3) {
              this.setState(t3), this.refresh(), this.show(250);
            } }]), n2;
          }(tt), rh = n(82);
          n(219);
          function ih(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var ah = ["", ":hover", ":active", ":before", ":after", ":first-child", ":last-child", ":link", ":active", ":focus"].map(function(t2) {
            return { value: t2 };
          }), oh = function(t2) {
            s()(n2, t2);
            var e2 = ih(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("selector.property.title");
            } }, { key: "getBody", value: function() {
              return "<div class='elf--selector-list' ref='$selectorList'></div>";
            } }, { key: "getTools", value: function() {
              return `
      <div style='display:inline-block;'>
        <object refClass="SelectEditor"  ref='$select' key='selector' icon="true" none-value="selector" options=`.concat(this.variable(ah), ' />\n      </div>\n      <button type="button" ref="$add" title="add Selector">').concat(D.a.add, "</button>\n    ");
            } }, { key: "makeSelectorTemplate", value: function(t3, e3) {
              return e3 = e3.toString(), "\n      <div class='selector-item' draggable='true' ref='$selectorIndex".concat(e3, "' data-index='").concat(e3, "'>\n        <div class='title'>\n          <div class='name'>\n            <span>").concat(t3.selector || "&lt;".concat(this.$i18n("selector.property.none"), "&gt;"), `</span>
          </div>
          <div class='tools'>
              <button type="button" class="del" data-index="`).concat(e3, '">').concat(D.a.remove2, "</button>\n          </div>\n        </div>\n      </div>\n    ");
            } }, { key: Object(V.CLICK)("$selectorList .selector-item .name"), value: function(t3) {
              var e3 = +t3.$dt.closest("selector-item").attr("data-index");
              this.$selection.current && this.viewSelectorPicker(e3);
            } }, { key: Object(V.CLICK)("$selectorList .selector-item .del") + V.PREVENT + V.STOP, value: function(t3) {
              var e3 = t3.$dt.attr("data-index"), n3 = this.$selection.current;
              n3 && (n3.removeSelector(e3), this.emit("refreshElement", n3), this.refresh());
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.DEBOUNCE)(100), value: function() {
              this.refreshShowIsNot(["project", "svg-path", "svg-brush", "svg-textpath", "svg-text"]);
            } }, { key: Object(V.LOAD)("$selectorList"), value: function() {
              var t3 = this, e3 = this.$selection.current;
              if (!e3)
                return "";
              var n3 = e3.selector ? rh.a.parseStyle(e3) : e3.selectors;
              return e3.selector = "", e3.selectors = n3, (n3 || []).map(function(e4, n4) {
                return t3.makeSelectorTemplate(e4, n4);
              });
            } }, { key: Object(V.DRAGSTART)("$selectorList .selector-item .title"), value: function(t3) {
              this.startIndex = +t3.$dt.attr("data-index");
            } }, { key: Object(V.DRAGOVER)("$selectorList .selector-item") + V.PREVENT, value: function(t3) {
            } }, { key: Object(V.DROP)("$selectorList .selector-item") + V.PREVENT, value: function(t3) {
              var e3 = +t3.$dt.attr("data-index"), n3 = this.$selection.current;
              n3 && (n3.sortSelector(this.startIndex, e3), this.emit("refreshElement", n3), this.refresh());
            } }, { key: Object(V.CLICK)("$add"), value: function() {
              var t3 = this.$selection.current;
              t3 && (t3.createSelector({ selector: this.children.$select.getValue() }), this.emit("refreshElement", t3)), this.refresh();
            } }, { key: "viewSelectorPicker", value: function(t3) {
              typeof this.selectedIndex == "number" && this.selectItem(this.selectedIndex, false), this.selectedIndex = +t3, this.selectItem(this.selectedIndex, true), this.current = this.$selection.current, this.current && (this.currentSelector = this.current.selectors[this.selectedIndex], this.viewSelectorPropertyPopup());
            } }, { key: "selectItem", value: function(t3) {
              var e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1];
              e3 ? this.getRef("$selectorIndex", t3).addClass("selected") : this.getRef("$selectorIndex", t3).removeClass("selected"), this.current && this.current.selectors.forEach(function(e4, n3) {
                e4.selected = n3 === t3;
              });
            } }, { key: "viewSelectorPropertyPopup", value: function(t3) {
              if (this.current = this.$selection.current, this.current) {
                this.currentSelector = this.current.selectors[this.selectedIndex];
                var e3 = this.currentSelector, n3 = e3.selector, r2 = e3.properties;
                this.emit("showSelectorPopup", { position: t3, selector: n3, properties: r2 });
              }
            } }, { key: Object(V.SUBSCRIBE)("changeSelectorPopup"), value: function(t3) {
              this.current = this.$selection.current, this.current && (this.currentselector = this.current.selectors[this.selectedIndex], this.currentSelector && this.currentSelector.reset(t3), this.refresh(), this.emit("refreshElement", this.current));
            } }]), n2;
          }($.a);
          n(220);
          function ch(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var sh = function(t2) {
            s()(n2, t2);
            var e2 = ch(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("svgfilter.asset.property.title");
            } }, { key: "initState", value: function() {
              return { mode: "grid" };
            } }, { key: "getClassName", value: function() {
              return "elf--svgfilter-assets-property";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.DEBOUNCE)(100), value: function() {
              this.show();
            } }, { key: "getBody", value: function() {
              return "\n      <div class='property-item svgfilter-assets'>\n        <div class='svgfilter-list' ref='$svgfilterList' data-view-mode='".concat(this.state.mode, "'></div>\n      </div>\n    ");
            } }, { key: Object(V.LOAD)("$svgfilterList"), value: function() {
              var t3 = (this.$selection.currentProject || { svgfilters: [] }).svgfilters.map(function(t4, e3) {
                var n3 = t4.filters.map(function(t5) {
                  return Ru.parse(t5);
                });
                return `
        <div class='svgfilter-item' data-index="`.concat(e3, `">
          <div class='preview' data-index="`).concat(e3, '">\n            <svg width="0" height="0">\n              <filter id="svgfilter-').concat(e3, '">\n                ').concat(n3.join(""), " \n              </filter>\n            </svg>\n            <div class='svgfilter-view' style='filter: url(#svgfilter-").concat(e3, ");'></div>\n          </div>\n          <div class='title'>\n            <div>\n              <input type='text' class='id' data-key='id' value='").concat(t4.id, `' placeholder="id" />
            </div>
          </div>
          <div class='tools'>
            <button type="button" class='copy'>`).concat(D.a.copy, `</button>          
            <button type="button" class='remove'>`).concat(D.a.remove, "</button>\n          </div>\n        </div>\n      ");
              });
              return t3.push(`<div class='add-svgfilter-item'><button type="button">`.concat(D.a.add, "</button></div>")), t3;
            } }, { key: "executeSVGFilter", value: function(t3) {
              var e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1], n3 = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2], r2 = this.$selection.currentProject;
              r2 ? (t3 && t3(r2), e3 && this.refresh(), n3 && this.emit("refreshSVGFilterAssets")) : alert("Please select a project.");
            } }, { key: Object(V.CLICK)("$svgfilterList .add-svgfilter-item"), value: function() {
              this.executeSVGFilter(function(t3) {
                t3.createSVGFilter({ id: Object(Vo.uuidShort)(), filters: [] });
              });
            } }, { key: Object(V.CLICK)("$svgfilterList .remove"), value: function(t3) {
              var e3 = +t3.$dt.closest("svgfilter-item").attr("data-index");
              this.executeSVGFilter(function(t4) {
                t4.removeSVGFilter(e3);
              });
            } }, { key: Object(V.CLICK)("$svgfilterList .copy"), value: function(t3) {
              var e3 = +t3.$dt.closest("svgfilter-item").attr("data-index");
              this.executeSVGFilter(function(t4) {
                t4.copySVGFilter(e3);
              });
            } }, { key: Object(V.INPUT)("$svgfilterList input"), value: function(t3) {
              var e3 = this, n3 = +t3.$dt.closest("svgfilter-item").attr("data-index"), r2 = t3.$dt.attrKeyValue("data-key");
              this.executeSVGFilter(function(t4) {
                t4.setSVGFilterValue(n3, r2), e3.emit("refreshSVGArea");
              }, false);
            } }, { key: Object(V.CLICK)("$svgfilterList .preview"), value: function(t3) {
              var e3 = t3.$dt.closest("svgfilter-item"), n3 = +e3.attr("data-index");
              this.state.$item = e3, this.state.$el = t3.$dt.$(".svgfilter-view");
              var r2 = (this.$selection.currentProject || { svgfilters: [] }).svgfilters[n3];
              this.emit("showSVGFilterPopup", { changeEvent: "changeSVGFilterAssets", id: this.id, index: n3, filters: r2.filters });
            } }, { key: Object(V.SUBSCRIBE)("updateSVGFilterAssets"), value: function(t3) {
              var e3 = this;
              this.executeSVGFilter(function(n3) {
                n3.setSVGFilterValue(t3.index, { filters: t3.filters }), e3.state.$item.$("filter").html(t3.filters.join("\n")), e3.emit("refreshSVGArea");
              }, false);
            } }, { key: Object(V.SUBSCRIBE)("changeSVGFilterAssets"), value: function(t3) {
              t3.id === this.id && this.trigger("updateSVGFilterAssets", t3);
            } }, { key: Object(V.SUBSCRIBE)("refreshSVGFilterAssets"), value: function() {
              this.refresh();
            } }]), n2;
          }($.a), uh = { red: "\n1   0   0   0   0\n0   0   0   0   0\n0   0   0   0   0\n0   0   0   1   0\n", green: "\n0   0   0   0   0\n0   1   0   0   0\n0   0   0   0   0\n0   0   0   1   0 \n", blue: "\n0   0   0   0   0\n0   0   0   0   0\n0   0   1   0   0\n0   0   0   1   0 \n", yellow: "\n1   0   0   0   0\n0   1   0   0   0\n0   0   0   0   0\n0   0   0   1   0 \n", magenta: "\n1   0   0   0   0\n0   0   0   0   0\n0   0   1   0   0\n0   0   0   1   0 \n", cyan: "\n0   0   0   0   0\n0   1   0   0   0\n0   0   1   0   0\n0   0   0   1   0 \n", alpha: "\n1   0   0   0   0\n0   1   0   0   0\n0   0   1   0   0\n0   0   0   .5  0 \n", BlueMagenta2: "\n1   0   0   0   0\n0   0   0   0   0\n0   0   1  .5   0\n0   0   0   1   0 \n", BlueShadowMagentHightlight: "\n1   0   0   0   0\n0   0   0   0   0\n0   0   1   1   0\n0   0   0   1   0 \n", darken: "\n.5   0   0   0   0\n0  .5   0   0   0\n0   0  .5   0   0\n0   0   0   1   0 \n", ElimBlue: "\n1   0   0   0   0\n0   1   0   0   0\n0   0   1   0   0\n0   0   -2   1   0 \n", GrayOnDark: "\n0   0   1   0   0\n0   0   1   0   0\n0   0   1   0   0\n0   0   0   1   0  \n", GrayOnLight: "\n1   0   0   0   0\n1   0   0   0   0\n1   0   0   0   0\n0   0   0   1   0 \n", GrayOnMid: "\n0   1   0   0   0\n0   1   0   0   0\n0   1   0   0   0\n0   0   0   1   0 \n", HardGreen: "\n1   0   0   0   0\n0   1   0   1   0\n0   0   1   0   0\n0   0   0   1   0 \n", HardYellow: "\n1   0   0   1   0\n0   1   0   1   0\n0   0   1   0   0\n0   0   0   1   0 \n", IdenticalRedOverlay: "\n1   0   0   0   0\n0   0   0   0   0\n0   0   0   0   0\n0   0   0   1   0 \n", lighten: "\n1.5   0   0   0   0\n0   1.5   0   0   0\n0   0   1.5   0   0\n0   0   0   1   0 \n", lime: "\n1   0   0   0   0\n0   2   0   0   0\n0   0   0  .5   0\n0   0   0   1   0 \n", NoGreenMagenta: "\n1   1   0   0   0\n0   0   0   0   0\n0   1   1   0   0\n0   0   0   1   0 \n", NoGreenRed: "\n1   1   0   0   0\n0   0   0   0   0\n0   0   1   0   0\n0   0   0   1   0 \n", peachy: "\n1   0   0   0   0\n0  .5   0   0   0\n0   0   0  .5   0\n0   0   0   1   0 \n", RedOverlay: "\n1   0   0   0   0\n0   0   0   0   0\n0   0   1  -1   0\n0   0   0   1   0 \n", YesGreenColorizedMagenta: "\n1   1   0   0   0\n0   1   0   0   0\n0   1   1   0   0\n0   0   0   1   0 \n" };
          n(221);
          function lh(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var fh = Object.keys(uh).map(function(t2) {
            return { title: t2, values: uh[t2] };
          }), hh = function(t2) {
            s()(n2, t2);
            var e2 = lh(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { values: Object(Vo.normalize)(this.props.values) };
            } }, { key: "template", value: function() {
              return "\n            <div class='elf--color-matrix-editor' >\n                <div ref='$body'></div>\n                <div class='title'> Mix Color Template </div>\n                <div class='color-matrix-template' ref='$sample'></div>\n            </div>\n        ";
            } }, { key: Object(V.BIND)("$body"), value: function() {
              return { cssText: "\n                display: grid;\n                grid-template-columns: repeat(".concat(6, ", 1fr);\n                grid-column-gap: 2px;\n                grid-row-gap: 2px;\n                text-align: left; \n            ") };
            } }, { key: Object(V.LOAD)("$sample"), value: function() {
              return fh.map(function(t3, e3) {
                return "<div class='sample-item' title='".concat(t3.title, `' data-index="`).concat(e3, '">').concat(t3.title, "</div>");
              });
            } }, { key: Object(V.CLICK)("$sample .sample-item"), value: function(t3) {
              var e3 = +t3.$dt.attr("data-index"), n3 = fh[e3];
              this.updateData({ values: Object(Vo.normalize)(n3.values) }), this.load("$body");
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = this.state.values, e3 = ["R", "G", "B", "A"];
              return "\n            <div></div>\n            <div>R</div>\n            <div>G</div>\n            <div>B</div>\n            <div>A</div>\n            <div>M</div>\n        " + t3.map(function(t4, n3) {
                var r2 = "";
                return n3 % 5 == 0 && (r2 = "<div>".concat(e3[Math.floor(n3 / 5)], "</div>")), "\n                ".concat(r2, `
                <div class='number-editor'>
                    <input type="number" value="`).concat(t4, '" step="0.01" data-index="').concat(n3, '" />\n                </div>\n            ');
              });
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.parent.trigger(this.props.onchange, this.props.key, this.state.values, this.props.params);
            } }, { key: Object(V.INPUT)("$body input"), value: function(t3) {
              var e3 = t3.$dt, n3 = +e3.attr("data-index"), r2 = +e3.value;
              this.state.values[n3] = r2, this.updateData();
            } }]), n2;
          }(J.a);
          n(222);
          function ph(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function dh(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? ph(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : ph(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function vh(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var yh = function(t2) {
            s()(n2, t2);
            var e2 = vh(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return dh({ label: this.props.label || "" }, this.parse(this.props.value));
            } }, { key: "parse", value: function(t3) {
              var e3 = t3.split(" "), n3 = Ai()(e3), r2 = n3[0], i2 = n3.slice(1);
              if (r2 === "linear")
                var a2 = be()(i2, 2), o2 = a2[0], c2 = a2[1];
              else if (r2 === "gamma")
                var s2 = be()(i2, 3), u2 = s2[0], l2 = s2[1], f2 = s2[2];
              return { type: r2, values: i2, slop: o2, intercept: c2, amplitude: u2, exponent: l2, offset: f2 };
            } }, { key: "template", value: function() {
              return "<div class='small-editor func-filter' ref='$body'></div>";
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = this, e3 = this.state, n3 = e3.type, r2 = e3.label, i2 = r2 ? "has-label" : "";
              return '\n        <object refClass="SelectEditor"  \n            label="'.concat(r2, '" \n            key="type" \n            value="').concat(this.state.type, '" \n            options=').concat(this.variable(["identity", "table", "discrete", "linear", "gamma"]), ` 
            onchange="changeType" />
        <div class='elf--func-filter-editor `).concat(i2, "' ref='$container' data-selected-type='").concat(n3, "'>\n            ").concat(r2 ? "<label></label>" : "", `
            <div data-type='identity'>
            </div>
            <div data-type='table'>
                <object refClass="TextEditor" 
                    label='tableValues' 
                    ref='$values' 
                    key='values' 
                    value="`).concat(this.state.values.join(" "), '" \n                    onchange=').concat(this.subscribe(function(e4, n4) {
                t3.updateData(M()({}, e4, n4.split(" ")));
              }), " />\n            </div>\n            <div data-type='linear'>\n                ").concat(["slop", "intercept"].map(function(e4) {
                return `
                        <div>
                            <object refClass="NumberRangeEditor"  
                                label='`.concat(e4, "' \n                                ref='$").concat(e4, "' \n                                key='").concat(e4, `' 
                                value="`).concat(t3.state[e4], '" \n                                onchange=').concat(t3.subscribe(function(e5, n4) {
                  t3.updateData(M()({}, e5, n4));
                }), "\n                            />\n                        </div>                    \n                    ");
              }).join(""), "\n            </div>\n            <div data-type='gamma'>\n                ").concat(["amplitude", "exponent", "offset"].map(function(e4) {
                return `
                        <div>
                            <object refClass="NumberRangeEditor"  
                                label='`.concat(e4, "' \n                                ref='$").concat(e4, "' \n                                key='").concat(e4, `' 
                                value="`).concat(t3.state[e4], '" \n                                onchange=').concat(t3.subscribe(function(e5, n4) {
                  t3.updateData(M()({}, e5, n4));
                }), "\n                                />\n                        </div>                    \n                    ");
              }).join(""), "            \n            </div>                                                \n        </div>\n    ");
            } }, { key: Object(V.SUBSCRIBE)("changeType"), value: function(t3, e3) {
              this.updateData({ type: e3 }), this.refresh();
            } }, { key: "getValue", value: function() {
              switch (this.state.type) {
                case "table":
                case "discrete":
                  return [this.state.type].concat(ht()(this.state.values)).join(" ");
                case "linear":
                  return [this.state.type, this.state.slop, this.state.intercept].join(" ");
                case "gamma":
                  return [this.state.type, this.state.amplitude, this.state.exponent, this.state.offset].join(" ");
              }
              return "identity";
            } }, { key: "setValue", value: function(t3) {
              this.setState(dh({}, this.parse(t3)));
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.parent.trigger(this.props.onchange, this.props.key, this.getValue(), this.props.params);
            } }]), n2;
          }(J.a), gh = n(35), mh = { dancingStroke: [{ type: "SourceAlpha", id: "strokeSource", bound: { x: 100, y: 100 }, connected: [{ id: "morphology" }] }, { type: "Morphology", id: "morphology", operator: "dilate", radius: "3 3", bound: { x: 100, y: 200 }, in: [{ id: "strokeSource" }], connected: [{ id: "composite" }] }, { type: "Flood", id: "flood", bound: { x: 100, y: 200 }, color: "#30597E", opacity: 1, connected: [{ id: "composite" }] }, { type: "Composite", id: "composite", bound: { x: 400, y: 150 }, in: [{ id: "flood" }, { id: "morphology" }], operator: "in", connected: [{ id: "composite2" }] }, { type: "SourceAlpha", id: "strokeSourceAlpha2", bound: { x: 400, y: 200 }, connected: [{ id: "composite2" }] }, { type: "Composite", id: "composite2", bound: { x: 400, y: 150 }, in: [{ id: "composite" }, { id: "strokeSourceAlpha2" }], operator: "out", connected: [{ id: "displacementMap" }] }, { type: "Turbulence", id: "turbulence", filterType: "fractalNoise", baseFrequency: "0.01 0.02", numOctaves: 1, seed: 0, stitchTiles: "stitch", bound: { x: 400, y: 200 }, connected: [{ id: "displacementMap" }] }, { type: "DisplacementMap", id: "displacementMap", scale: 17, xChannelSelector: "A", yChannelSelector: "A", bound: { x: 400, y: 200 }, in: [{ id: "composite2" }, { id: "turbulence" }], connected: [{ id: "merge" }] }, { type: "SourceGraphic", id: "strokeSourceGraphic", bound: { x: 400, y: 200 }, connected: [{ id: "merge" }] }, { type: "Merge", id: "merge", bound: { x: 500, y: 150 }, in: [{ id: "strokeSourceGraphic" }, { id: "displacementMap" }] }], stroke: [{ type: "SourceAlpha", id: "strokeSource", bound: { x: 100, y: 100 }, connected: [{ id: "morphology" }] }, { type: "Morphology", id: "morphology", operator: "dilate", radius: "3 3", bound: { x: 100, y: 200 }, in: [{ id: "strokeSource" }], connected: [{ id: "composite" }] }, { type: "Flood", id: "flood", bound: { x: 100, y: 200 }, color: "#30597E", opacity: 1, connected: [{ id: "composite" }] }, { type: "Composite", id: "composite", bound: { x: 400, y: 150 }, in: [{ id: "flood" }, { id: "morphology" }], operator: "in", connected: [{ id: "merge" }] }, { type: "SourceGraphic", id: "strokeSourceGraphic", bound: { x: 400, y: 200 }, connected: [{ id: "merge" }] }, { type: "Merge", id: "merge", bound: { x: 500, y: 150 }, in: [{ id: "composite" }, { id: "strokeSourceGraphic" }] }], grayscale: [{ type: "Saturate", values: "0" }], shadow: [{ type: "SourceAlpha", id: "shadowSource", bound: { x: 100, y: 100 }, connected: [{ id: "offset" }] }, { type: "Offset", id: "offset", bound: { x: 200, y: 100 }, dx: 10, dy: 10, in: [{ id: "shadowSource" }], connected: [{ id: "blur" }] }, { type: "GaussianBlur", id: "blur", bound: { x: 300, y: 100 }, stdDeviationX: 5, stdDeviationY: 5, in: [{ id: "offset" }], connected: [{ id: "composite" }] }, { type: "Flood", id: "flood", bound: { x: 100, y: 200 }, color: "black", opacity: 0.7, connected: [{ id: "composite" }] }, { type: "Composite", id: "composite", bound: { x: 400, y: 150 }, in: [{ id: "flood" }, { id: "blur" }], operator: "in", connected: [{ id: "merge" }] }, { type: "SourceAlpha", id: "shadowSource2", bound: { x: 400, y: 200 }, connected: [{ id: "merge" }] }, { type: "Merge", id: "merge", bound: { x: 500, y: 150 }, in: [{ id: "composite" }, { id: "shadowSource2" }] }], innerShadow: [{ type: "Flood", id: "flood", bound: { x: 100, y: 200 }, color: "black", opacity: 1, connected: [{ id: "composite1" }] }, { type: "SourceAlpha", id: "shadowSource", bound: { x: 100, y: 100 }, connected: [{ id: "composite1" }] }, { type: "Composite", id: "composite1", bound: { x: 200, y: 150 }, in: [{ id: "flood" }, { id: "shadowSource" }], operator: "out", connected: [{ id: "offset" }] }, { type: "Offset", id: "offset", bound: { x: 300, y: 150 }, dx: 4, dy: 4, in: [{ id: "composite1" }], connected: [{ id: "blur" }] }, { type: "GaussianBlur", id: "blur", bound: { x: 400, y: 150 }, stdDeviationX: 4, stdDeviationY: 4, edge: "none", in: [{ id: "offset" }], connected: [{ id: "composite2" }] }, { type: "SourceAlpha", id: "shadowSource2", bound: { x: 400, y: 250 }, connected: [{ id: "composite2" }] }, { type: "Composite", id: "composite2", bound: { x: 500, y: 150 }, in: [{ id: "blur" }, { id: "shadowSource2" }], operator: "out", connected: [{ id: "merge" }] }, { type: "SourceGraphic", id: "shadowSource3", bound: { x: 500, y: 250 }, connected: [{ id: "merge" }] }, { type: "Merge", id: "merge", bound: { x: 600, y: 150 }, in: [{ id: "composite2" }, { id: "shadowSource3" }] }] };
          n(223);
          function bh(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function kh(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? bh(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : bh(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Oh(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var xh = [{ label: "GRAPHIC REFERENCES", items: [{ label: "Source Graphic", value: "SourceGraphic" }, { label: "Source Alpha", value: "SourceAlpha" }, { label: "Background Image", value: "BackgroundImage" }, { label: "Background Alpha", value: "BackgroundAlpha" }, { label: "Fill Paint", value: "FillPaint" }, { label: "Stroke Paint", value: "StrokePaint" }] }, { label: "SOURCES", items: [{ label: "Flood", value: "Flood" }, { label: "Turbulence", value: "Turbulence" }, { label: "Image", value: "Image" }] }, { label: "MODIFIER", items: [{ label: "Color Matrix", value: "ColorMatrix" }, { label: "Saturate", value: "Saturate" }, { label: "HueRotate", value: "HueRotate" }, { label: "LuminanceToAlpha", value: "LuminanceAlpha" }, { label: "Drop Shadow", value: "DropShadow" }, { label: "Morphology", value: "Morphology" }, { label: "Convolve Matrix", value: "ConvolveMatrix" }, { label: "Offset", value: "Offset" }, { label: "Gaussian Blur", value: "GaussianBlur" }, { label: "Tile", value: "Tile" }] }, { label: "LIGHTING", items: [{ label: "Specular Lighting", value: "SpecularLighting" }, { label: "Diffuse Lighting", value: "DiffuseLighting" }, { label: "Point Light", value: "PointLight" }, { label: "Spot Light", value: "SpotLight" }, { label: "Distant Light", value: "DistantLight" }] }, { label: "COMBINERS", items: [{ label: "Blend", value: "Blend" }, { label: "Composite", value: "Composite" }, { label: "Merge", value: "Merge" }, { label: "DisplacementMap", value: "DisplacementMap" }] }], jh = [{ label: "Template", items: [{ label: "Grayscale", value: "grayscale" }, { label: "Shadow", value: "shadow" }, { label: "Inner Shadow", value: "innerShadow" }, { label: "Stroke", value: "stroke" }, { label: "Dancing Stroke", value: "dancingStroke" }] }];
          function Sh(t2) {
            switch (t2) {
              case "SpecularLighting":
                return D.a.specular;
              case "DiffuseLighting":
                return D.a.diffuse;
              case "SourceGraphic":
              case "SourceAlpha":
                return D.a.image;
              case "BackgroundImage":
              case "BackgroundAlpha":
                return D.a.outline_image;
              case "Flood":
                return D.a.palette;
              case "Image":
                return D.a.landscape;
              case "GaussianBlur":
                return D.a.blur;
              case "ColorMatrix":
                return D.a.blur_linear;
              case "Turbulence":
                return D.a.waves;
              case "Saturate":
                return D.a.vintage;
              case "HueRotate":
                return D.a.looks;
              case "LuminanceAlpha":
                return D.a.opacity;
              case "DropShadow":
                return D.a.shadow;
              case "Morphology":
                return D.a.broken_image;
              case "ConvolveMatrix":
                return D.a.camera_roll;
              case "Offset":
                return D.a.transform;
              case "Tile":
                return D.a.view_comfy;
              case "Blend":
                return D.a.gradient;
              case "Composite":
                return D.a.merge;
              case "Merge":
                return D.a.settings_input_component;
              case "DisplacementMap":
                return D.a.texture;
            }
            return "";
          }
          function Ph(t2) {
            switch (t2) {
              case "SourceGraphic":
              case "SourceAlpha":
              case "BackgroundImage":
              case "BackgroundAlpha":
              case "FillPaint":
              case "StrokePaint":
                return "graphic";
              case "Flood":
              case "Turbulence":
              case "Image":
                return "source";
              case "GaussianBlur":
              case "ColorMatrix":
              case "Saturate":
              case "HueRotate":
              case "LuminanceAlpha":
              case "DropShadow":
              case "Morphology":
              case "ConvolveMatrix":
              case "Offset":
              case "Tile":
                return "modifier";
              case "SpecularLighting":
              case "DiffuseLighting":
              case "SpotLight":
              case "PointLight":
              case "DistantLight":
                return "lighting";
              case "Blend":
              case "Composite":
              case "Merge":
              case "DisplacementMap":
                return "combiner";
            }
            return "";
          }
          var wh = [45], Rh = [20], Ch = { 1: [-7], 2: [-7], 3: [-7], 4: [-7], 5: [-7] }, Eh = { 1: [0], 2: [-7, 7], 3: [-14, 0, 14], 4: [-21, -7, 7, 21], 5: [-28, -14, 0, 14, 28] };
          Object.keys(Eh).forEach(function(t2) {
            Eh[t2] = Eh[t2].map(function(t3) {
              return t3 + 20;
            });
          });
          var $h = function(t2) {
            s()(n2, t2);
            var e2 = Oh(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "makeFilterSelect", value: function() {
              var t3 = this;
              return `
  
    <div class='filter-item-list' ref="$filterSelect">
  
      `.concat(Object(X.mapjoin)(xh, function(e3) {
                return `
          <div class='group' label="`.concat(t3.$i18n(e3.label), '">\n            ').concat(Object(X.mapjoin)(e3.items, function(e4) {
                  return `
                <div class='item' draggable="true" value="`.concat(e4.value, `">
                  <span class='icon'>`).concat(Sh(e4.value), "</span>\n                  ").concat(t3.$i18n(e4.label), "\n                </div>\n                ");
                }), "\n          </div>\n        ");
              }), "\n    </div>\n    ");
            } }, { key: "makeFilterTemplateSelect", value: function() {
              var t3 = this;
              return `
  
    <div class='filter-item-list' ref="$filterTemplateSelect">
  
      `.concat(Object(X.mapjoin)(jh, function(e3) {
                return `
          <div class='group' label="`.concat(t3.$i18n(e3.label), '">\n            ').concat(Object(X.mapjoin)(e3.items, function(e4) {
                  return ` <div class='item' draggable="true" value="`.concat(e4.value, '">').concat(t3.$i18n(e4.label), "</div>");
                }), "\n          </div>\n        ");
              }), "\n    </div>\n    ");
            } }, { key: "initState", value: function() {
              return { filters: this.parseFilter(this.props.value || []), selectedTabIndex: 1, selectedIndex: -1, selectedFilter: null };
            } }, { key: "template", value: function() {
              return `
      <div class='elf--svg-filter-editor filter-list'>
        <div class='left'>
          <div class="tab number-tab" ref="$tab">
            <div class="tab-header full" ref="$header">
              <div class="tab-item selected" data-value="1" title='Item'>
                <label class='icon'>`.concat(this.$i18n("svg.filter.editor.tab.filter"), `</label>
              </div>
              <div class="tab-item" data-value="2" title="Preset">
                <label class='icon'>`).concat(this.$i18n("svg.filter.editor.tab.preset"), `</label>
              </div>
              <div class="tab-item" data-value="3" title="Asset">
                <label class='icon'>`).concat(this.$i18n("svg.filter.editor.tab.asset"), '</label>\n              </div>\n            </div>\n            <div class="tab-body">\n              <div class="tab-content scrollbar selected" data-value="1">\n                ').concat(this.makeFilterSelect(), '\n              </div>\n              <div class="tab-content  scrollbar" data-value="2">\n                ').concat(this.makeFilterTemplateSelect(), `
              </div>
                     
            </div>
          </div>
        </div>
        <div  class='center'>
          <div class='graph'>
            <div class='drag-line-panel' ref='$dragLinePanel'></div>          
            <div class='connected-line-panel' ref='$connectedLinePanel'></div>
            <div class='graph-panel' ref='$graphPanel' droppable="true"></div>
          </div>
        </div>
        <div class='right'>
          <div class='filter-list' ref='$filterList'></div>
        </div>
      </div>`);
            } }, { key: Object(V.CLICK)("$header .tab-item:not(.empty-item)"), value: function(t3) {
              var e3 = +t3.$dt.attr("data-value");
              this.state.selectedTabIndex !== e3 && (this.$el.$$('[data-value="'.concat(this.state.selectedTabIndex, '"]')).forEach(function(t4) {
                return t4.removeClass("selected");
              }), this.$el.$$('[data-value="'.concat(e3, '"]')).forEach(function(t4) {
                return t4.addClass("selected");
              }), this.setState({ selectedTabIndex: e3 }, false));
            } }, { key: Object(V.DRAGSTART)("$filterSelect .item"), value: function(t3) {
              var e3 = t3.$dt.attr("value");
              t3.dataTransfer.setData("filter/type", e3);
            } }, { key: Object(V.DRAGOVER)("$connectedLinePanel") + V.PREVENT, value: function() {
            } }, { key: Object(V.DROP)("$connectedLinePanel") + V.PREVENT, value: function(t3) {
              var e3 = { x: t3.offsetX, y: t3.offsetY }, n3 = t3.dataTransfer.getData("filter/type");
              this.makeFilterNode(n3, { bound: e3 });
            } }, { key: "makeFilterNode", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              this.state.filters.push(this.makeFilter(t3, e3)), this.state.selectedIndex = this.state.filters.length - 1, this.state.selectedFilter = this.state.filters[this.state.selectedIndex], this.refresh(), this.modifyFilter();
            } }, { key: "applyTemplate", value: function(t3) {
              var e3 = mh[t3];
              e3 && (this.setState({ selectedIndex: -1, selectedFilter: null, filters: this.parseFilter(e3) }, false), this.refresh(), this.modifyFilter());
            } }, { key: "getSpec", value: function(t3) {
              return Eu[t3];
            } }, { key: "makeFilterEditorTemplate", value: function(t3, e3, n3) {
              var r2 = this, i2 = "".concat(e3.type).concat(n3).concat(this.state.selectedIndex).concat(Date.now());
              if (t3.inputType === "color-matrix")
                return `
        <div>
          <object refClass="ColorMatrixEditor" 
            ref='$colorMatrix`.concat(i2, `' 
            label="`).concat(t3.title, '"\n            key="').concat(n3, `"       
            column='`).concat(t3.column, "' \n            values='").concat(e3[n3].join(" "), `' 
            onchange="changeRangeEditor"
          />
        </div>
        `);
              if (t3.inputType === "input-array")
                return `
        <div>
          <object refClass="InputArrayEditor" 
            ref='$inputArray`.concat(i2, `' 
            label="`).concat(t3.title, '"\n            key="').concat(n3, `"       
            column-label="R,G,B,A,M",
            row-label="R,G,B,A",
            column='`).concat(t3.column, "' \n            values='").concat(e3[n3].join(" "), `' 
            onchange="changeRangeEditor"
          />
        </div>
        `);
              if (t3.inputType === "blend")
                return `
        <div>
          <object refClass="BlendSelectEditor" 
            ref='$blend`.concat(i2, `' 
            label="`).concat(t3.title, '"\n            key="').concat(n3, `"
            value='`).concat(e3[n3].toString(), `' 
            onchange="changeRangeEditor"             
          />
        </div>
        `);
              if (t3.inputType === "select") {
                var a2 = t3.options;
                return Object(X.isFunction)(t3.options) && (a2 = t3.options(this.state.filters)), `
          <div>
            <object refClass="SelectEditor"  
              ref='$select`.concat(i2, `' 
              label="`).concat(t3.title, `"
              options='`).concat(a2, `' 
              key="`).concat(n3, `"
              value='`).concat(e3[n3].toString(), `' 
              onchange="changeRangeEditor"             
            />
          </div>
          `);
              }
              return t3.inputType === "text" ? `
        <div>
          <object refClass="TextEditor" 
            ref='$text`.concat(i2, `' 
            label="`).concat(t3.title, '"\n            key="').concat(n3, `"
            value='`).concat(e3[n3].toString(), `' 
            onchange="changeTextEditor"
          />
        </div>
        `) : t3.inputType === "number-range" ? ` 
        <div>
          <object refClass="NumberRangeEditor"  
            ref='$numberrange`.concat(i2, `' 
            label="`).concat(t3.title, `" 
            layout='block'             
            min="`).concat(t3.min, '"\n            max="').concat(t3.max, '"\n            step="').concat(t3.step, '"\n            key="').concat(n3, '" \n            value="').concat(e3[n3].toString(), '" \n            onchange="changeRangeEditor" \n          />\n        </div>\n      ') : t3.inputType === "color" ? `
        <div>
          <object refClass="ColorViewEditor" 
            ref='$colorview`.concat(i2, `' 
            label="`).concat(t3.title, '" \n            key="').concat(n3, '"\n            value="').concat(e3[n3].toString(), '" \n            onchange=').concat(this.subscribe(function(t4, e4, n4) {
                r2.trigger("changeRangeEditor", t4, e4, n4);
              }), "\n          />\n        </div>\n      ") : t3.inputType === "FuncFilter" ? `
        <div>
          <object refClass="FuncFilterEditor" 
            ref='$funcFilter`.concat(i2, `' 
            label="`).concat(t3.title, '" \n            key="').concat(n3, '"\n            value="').concat(e3[n3].toString(), '" \n            onchange="changeFuncFilterEditor" \n          />\n        </div>\n      ') : t3.inputType === "ImageSelectEditor" ? `
        <div>
          <object refClass="ImageSelectEditor" 
            ref='$imageSelect`.concat(i2, `' 
            label="`).concat(t3.title, '" \n            key="').concat(n3, '"\n            value="').concat(e3[n3].toString(), '" \n            onchange="changeRangeEditor" \n          />\n        </div>\n      ') : `
      <div>
        <object refClass="RangeEditor"  
          ref='$range`.concat(i2, `' 
          layout='block' 
          calc='false' 
          label="`).concat(t3.title, '" \n          min="').concat(t3.min, '"\n          max="').concat(t3.max, '"\n          step="').concat(t3.step, '"\n          key="').concat(n3, '" \n          value="').concat(e3[n3].toString(), '" \n          units="').concat(t3.units.join(","), '" \n          onchange="changeRangeEditor" \n        />\n      </div>\n    ');
            } }, { key: "makeOneFilterTemplate", value: function(t3, e3) {
              var n3 = this;
              return '\n    <div class="filter-item">\n      <div class="title">\n        <label>'.concat(e3.type, '</label>\n        <div class="filter-menu">\n          <button type="button" class="del">').concat(D.a.remove, '</button>\n        </div>\n      </div>\n      <div class="filter-ui">\n        ').concat(Object(X.keyMapJoin)(t3, function(t4, r2) {
                return n3.makeFilterEditorTemplate(r2, e3, t4);
              }), "\n\n      </div>\n    </div>\n  ");
            } }, { key: "makeFilterTemplate", value: function(t3) {
              return this.makeOneFilterTemplate(this.getSpec(t3.type), t3);
            } }, { key: Object(V.LOAD)("$filterList"), value: function() {
              return this.state.selectedFilter && this.state.selectedFilter.isSource() === false ? this.makeFilterTemplate(this.state.selectedFilter) : "";
            } }, { key: "modifyFilter", value: function() {
              var t3 = this;
              this.state.filters.forEach(function(e3) {
                e3.isLight() && e3.connected.length && e3.connected.forEach(function(n3) {
                  t3.state.filters.filter(function(t4) {
                    return t4.id === n3.id;
                  }).forEach(function(t4) {
                    t4.reset({ lightInfo: e3.toLightString() });
                  });
                });
              }), this.parent.trigger(this.props.onchange, this.props.key, this.state.filters);
            } }, { key: "parseFilter", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
              return t3.map(function(t4) {
                return Ru.parse(t4);
              });
            } }, { key: "makeFilter", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              return Ru.parse(kh(kh({}, e3), {}, { type: t3 }));
            } }, { key: Object(V.CLICK)("$filterSelect .item[value]"), value: function(t3) {
              var e3 = t3.$dt.attr("value");
              this.makeFilterNode(e3);
            } }, { key: Object(V.CLICK)("$filterTemplateSelect .item[value]"), value: function(t3) {
              var e3 = t3.$dt.attr("value");
              this.applyTemplate(e3);
            } }, { key: Object(V.CLICK)("$filterList .filter-menu .del"), value: function(t3) {
              this.removeFilter(this.state.selectedFilter.id);
            } }, { key: Object(V.LOAD)("$graphPanel"), value: function() {
              return this.makeGraphPanel();
            } }, { key: "selectFilter", value: function(t3) {
              this.setState({ selectedIndex: t3, selectedFilter: this.state.filters[t3] }, false), this.load("$filterList");
            } }, { key: Object(V.POINTERSTART)("$graphPanel .filter-node") + Object(V.MOVE)() + Object(V.END)(), value: function(t3) {
              this.$target = t3.$dt, this.$point = null, this.pointType = "object", this.pointIndex = 0;
              var e3 = this.refs.$graphPanel.rect();
              this.rect = e3;
              var n3 = +this.$target.attr("data-index");
              this.selectFilter(n3), this.$target.onlyOneClass("selected");
              var r2 = Pe.a.create(t3.target);
              if (r2.hasClass("out"))
                this.$point = r2, this.pointType = "out", this.pointIndex = 0;
              else if (r2.hasClass("in"))
                this.$point = r2, this.pointType = "in", this.pointIndex = +r2.attr("data-index");
              else {
                var i2 = this.state.selectedFilter;
                this.startXY = Object(X.clone)(i2.bound);
              }
              if (this.pointType === "in" || this.pointType === "out") {
                var a2 = r2.rect(), o2 = a2.x - e3.x, c2 = a2.y - e3.y, s2 = o2 + a2.width / 2, u2 = c2 + a2.height / 2;
                this.startXY = { x: s2, y: u2 };
              }
              this.startXY.dx = 0, this.startXY.dy = 0, this.load("$dragLinePanel");
            } }, { key: Object(V.LOAD)("$dragLinePanel"), value: function() {
              if (this.pointType === "in" || this.pointType === "out") {
                var t3 = this.startXY, e3 = t3.x, n3 = t3.y, r2 = t3.dx, i2 = t3.dy;
                return '\n      <svg>\n        <path \n          class="drag-line"\n          fill="transparent"\n          stroke-width="1"\n          d="\n            M'.concat(e3, ",").concat(n3, "\n            L").concat(e3 + r2, ",").concat(n3 + i2, ' \n            Z\n          "\n        />\n      </svg>\n      ');
              }
              return "";
            } }, { key: "makeConnectedPath", value: function(t3) {
              var e3 = new gh.a(), n3 = t3[0], r2 = t3[t3.length - 1];
              if (!n3)
                return "";
              if (!r2)
                return "";
              var i2 = Math.abs(n3.x - r2.x) / 2;
              return e3.M(n3).C({ x: n3.x + i2, y: n3.y }, { x: r2.x - i2, y: r2.y }, r2), e3.d;
            } }, { key: "createPath", value: function(t3, e3) {
              if (e3.path)
                return e3.path;
              var n3 = t3.bound.x + wh[0], r2 = t3.bound.y + Rh[0], i2 = this.state.filters.map(function(t4, e4) {
                return { it: t4, index: e4 };
              }).find(function(t4) {
                return !!t4 && (!!t4.it && (t4 && t4.it.id === e3.id));
              }), a2 = "".concat(i2.it.getInCount()), o2 = i2.it.in.map(function(t4, e4) {
                return { it: t4, index: e4 };
              }).find(function(e4) {
                return !!e4 && (!!e4.it && e4.it.id === t3.id);
              });
              if (!o2)
                return [];
              var c2 = o2.index;
              return [{ x: n3, y: r2 }, { x: i2.it.bound.x + Ch[a2][0], y: i2.it.bound.y + Eh[a2][c2] }];
            } }, { key: Object(V.LOAD)("$connectedLinePanel"), value: function() {
              var t3 = this;
              return "\n      <svg>\n        ".concat(this.state.filters.map(function(e3) {
                return e3.connected.map(function(n3) {
                  var r2 = t3.createPath(e3, n3), i2 = Ph(e3.type);
                  return '\n              <path \n                class="connected-line"\n                data-source-type="'.concat(i2, '"\n                d="').concat(t3.makeConnectedPath(r2), '"\n              />\n\n              ').concat(r2.length && '\n                <circle \n                  data-source-type="'.concat(i2, '"\n                  data-target-id="').concat(n3.id, '"\n                  data-source-id="').concat(e3.id, '"\n                  class="connected-remove-circle"\n                  cx="').concat((r2[0].x + r2[1].x) / 2, '"\n                  cy="').concat((r2[0].y + r2[1].y) / 2, '"\n                />\n              '), "\n              \n            ");
                }).join("");
              }).join(""), "\n      </svg>\n    ");
            } }, { key: Object(V.CLICK)("$connectedLinePanel .connected-remove-circle"), value: function(t3) {
              var e3 = t3.$dt.attrs("data-target-id", "data-source-id"), n3 = be()(e3, 2), r2 = n3[0], i2 = n3[1], a2 = this.state.filters;
              a2.filter(function(t4) {
                return t4.id === i2;
              }).forEach(function(t4) {
                t4.connected = t4.connected.filter(function(t5) {
                  return t5.id != r2;
                });
              }), a2.filter(function(t4) {
                return t4.id === r2;
              }).forEach(function(t4) {
                t4.in = t4.in.map(function(t5) {
                  return t5 && t5.id == i2 ? null : t5;
                });
              }), this.refresh(), this.modifyFilter();
            } }, { key: "getCenterXY", value: function(t3) {
              var e3 = t3.rect(), n3 = e3.x - this.rect.x, r2 = e3.y - this.rect.y;
              return { x: n3 + e3.width / 2, y: r2 + e3.height / 2 };
            } }, { key: "end", value: function(t3, e3) {
              if (this.pointType === "in" || this.pointType === "out") {
                this.startXY.dx = t3, this.startXY.dy = e3;
                var n3 = this.state.selectedFilter, r2 = this.$config.get("bodyEvent"), i2 = Pe.a.create(r2.target), a2 = i2.closest("filter-node");
                if (this.pointType === "out") {
                  if (i2.hasClass("in")) {
                    if (c2 = this.state.filters[+a2.attr("data-index")])
                      if (!c2.hasLight() && n3.isLight())
                        ;
                      else {
                        var o2 = +i2.attr("data-index");
                        c2.in[o2] || (c2.setIn(o2, n3), n3.setConnected(c2));
                      }
                  }
                } else if (this.pointType === "in") {
                  var c2;
                  if (i2.hasClass("out"))
                    (c2 = this.state.filters[+a2.attr("data-index")]) && (n3.hasLight() && !c2.isLight() || n3.in[this.pointIndex] || (n3.setIn(this.pointIndex, c2), c2.setConnected(n3)));
                }
                this.pointType = "";
              }
              this.load("$dragLinePanel"), this.load("$connectedLinePanel"), this.modifyFilter();
            } }, { key: "move", value: function(t3, e3) {
              var n3 = this.state.selectedFilter;
              n3 && (this.startXY.dx = t3, this.startXY.dy = e3, this.pointType === "in" || this.pointType === "out" ? this.load("$dragLinePanel") : (n3.reset({ bound: { x: this.startXY.x + t3, y: this.startXY.y + e3 } }), this.$target.css({ left: F.a.px(n3.bound.x), top: F.a.px(n3.bound.y) }), this.load("$connectedLinePanel")));
            } }, { key: "makeGraphPanel", value: function() {
              var t3 = this;
              return this.state.filters.map(function(e3, n3) {
                return "\n        <div class='filter-node ".concat(Object(X.OBJECT_TO_CLASS)({ selected: n3 === t3.state.selectedIndex }), `' data-type="`).concat(e3.type, '" data-index="').concat(n3, '" data-filter-id="').concat(e3.id, `" style='left: `).concat(e3.bound.x, "px;top: ").concat(e3.bound.y, "px;'>\n          <div class='label'>").concat(t3.$i18n(e3.type), "</div>\n          <div class='remove'>").concat(D.a.close, `</div>
          <div class='preview' data-source-type="`).concat(Ph(e3.type), `" data-filter-type='`).concat(e3.type, "'>").concat(Sh(e3.type), "</div>\n          <div class='in-list'>\n            ").concat(Object(X.repeat)(e3.getInCount()).map(function(t4, e4) {
                  return "<div class='in' data-index='".concat(e4, "'></div>");
                }).join(""), `
          </div>
          
          <div class='out' data-index="0">`).concat(D.a.chevron_right, "</div>\n          ").concat(e3.hasLight() ? `<div class='light'  data-index="0"></div>` : "", "\n        </div>\n      ");
              });
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeFuncFilterEditor"), value: function(t3, e3) {
              var n3 = this.state.selectedFilter;
              n3 && n3.reset(M()({}, t3, e3)), this.modifyFilter();
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeRangeEditor"), value: function(t3, e3) {
              var n3 = this.state.selectedFilter;
              n3 && n3.reset(M()({}, t3, e3)), this.modifyFilter();
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeTextEditor"), value: function(t3, e3) {
              var n3 = this.state.selectedFilter;
              n3 && n3.reset(M()({}, t3, e3)), this.modifyFilter();
            } }, { key: "removeFilter", value: function(t3) {
              var e3 = this.state.filters.filter(function(e4) {
                return e4.id != t3;
              });
              e3.forEach(function(e4) {
                e4.connected = e4.connected.filter(function(e5) {
                  return e5.id != t3;
                }), e4.in = e4.in.filter(function(e5) {
                  return e5.id != t3;
                });
              }), this.state.selectedFilter.id === t3 && (this.state.selectedFilter = null, this.state.selectedIndex = -1), this.setState({ filters: e3 }), this.modifyFilter();
            } }, { key: Object(V.CLICK)("$graphPanel .filter-node .remove"), value: function(t3) {
              var e3 = +t3.$dt.closest("filter-node").attr("data-index"), n3 = this.state.filters[e3];
              this.removeFilter(n3.id);
            } }]), n2;
          }(J.a);
          n(224);
          function Ih(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Th = function(t2) {
            s()(n2, t2);
            var e2 = Ih(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("svgfilter.popup.title");
            } }, { key: "getClassName", value: function() {
              return "transparent";
            } }, { key: "initState", value: function() {
              return { changeEvent: "changeSVGFilterPopup", id: "", preview: true, filters: [] };
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.emit(this.state.changeEvent, this.state);
            } }, { key: "getBody", value: function() {
              return `
    <div class='elf--svg-filter-popup' ref='$popup'>
      <div class="box">
        <div class='editor' ref='$editor'></div>
      </div>
    </div>`;
            } }, { key: Object(V.LOAD)("$editor"), value: function() {
              var t3 = this;
              return `
      <object refClass="SVGFilterEditor" ref='$filter' title='Filter Type' key="filter" onchange=`.concat(this.subscribe(function(e3, n3) {
                t3.updateData({ filters: n3 });
              }), '>\n        <property name="value" valueType="json">').concat(JSON.stringify(this.state.filters), "</property>\n      </div>\n    ");
            } }, { key: Object(V.SUBSCRIBE)("showSVGFilterPopup"), value: function(t3) {
              t3.filters = t3.filters.map(function(t4) {
                return Ru.parse(t4);
              }), t3.preview = !Object(X.isNotUndefined)(t3.preview) || t3.preview, this.setState(t3), this.show(1e3);
            } }, { key: Object(V.SUBSCRIBE)("hideSVGFilterPopup"), value: function() {
              this.$el.hide();
            } }]), n2;
          }(tt);
          n(225);
          function Bh(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Mh = function(t2) {
            s()(n2, t2);
            var e2 = Bh(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              var t3 = this.props.value;
              return { options: [], label: this.props.label || "", value: t3 };
            } }, { key: "template", value: function() {
              var t3 = this.state.label;
              return "\n            <div class='elf--svg-filter-select-editor ".concat(t3 ? "has-label" : "", "'>\n                ").concat(t3 ? "<label>".concat(t3, "</label>") : "", "\n                <select ref='$options'></select>\n                <button type='button' class='open thin' ref='$open' title='Open SVG Filter Editor'>").concat(D.a.fullscreen, "</button>\n                <button type='button' class='remove thin' ref='$remove' title='Remove'>").concat(D.a.remove, "</button>\n            </div>\n        ");
            } }, { key: Object(V.CLICK)("$remove"), value: function(t3) {
              this.updateData({ value: "" });
            } }, { key: Object(V.CLICK)("$open"), value: function(t3) {
              var e3 = this.state.value;
              if (e3.includes("id")) {
                var n3 = this.$selection.currentProject.getSVGFilterIndex(e3);
                n3 > -1 && this.trigger("openSVGFilterPopup", n3);
              }
            } }, { key: "getValue", value: function() {
              return this.state.value;
            } }, { key: "setValue", value: function(t3) {
              this.setState({ value: t3 });
            } }, { key: "refresh", value: function() {
              this.load();
            } }, { key: Object(V.BIND)("$options"), value: function() {
              return { "data-count": this.state.options.length.toString() };
            } }, { key: Object(V.LOAD)("$options"), value: function() {
              var t3 = this, e3 = this.$selection.currentProject, n3 = "";
              return e3 && (n3 = (n3 = e3.svgfilters.map(function(t4) {
                return t4.id;
              })).length ? "," + n3.join(",") : ""), (n3 = (n3 += ",-,new").split(",")).map(function(e4) {
                var n4 = e4;
                if ((a2 = e4).includes(":")) {
                  var r2 = a2.split(":"), i2 = be()(r2, 2), a2 = i2[0];
                  n4 = i2[1];
                }
                n4 === "" ? n4 = t3.props["none-value"] ? t3.props["none-value"] : "" : n4 === "-" && (n4 = "----------", a2 = "");
                var o2 = a2 === t3.state.value ? "selected" : "";
                return "<option ".concat(o2, ' value="').concat(a2, '">').concat(n4, "</option>");
              });
            } }, { key: "setOptions", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
              this.setState({ options: t3.split(this.state.splitChar).map(function(t4) {
                return t4.trim();
              }) });
            } }, { key: "sendMessage", value: function(t3) {
              t3 === "new" ? this.emit("addStatusBarMessage", this.$i18n("svgfilter.select.editor.message.create")) : t3 === "-" ? this.emit("addStatusBarMessage", this.$i18n("svgfilter.select.editor.message.select")) : this.emit("addStatusBarMessage", "");
            } }, { key: Object(V.CHANGE)("$options"), value: function() {
              var t3 = this, e3 = this.refs.$options.value;
              e3 == "new" ? this.emit("addSVGFilterAssetItem", function(e4, n3) {
                t3.updateData({ value: n3 }), t3.refresh(), t3.trigger("openSVGFilterPopup", e4);
              }) : e3 === "-" || this.updateData({ value: e3 });
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.parent.trigger(this.props.onchange, this.props.key, this.state.value, this.props.params);
            } }, { key: Object(V.SUBSCRIBE)("refreshSVGArea") + Object(V.DEBOUNCE)(1e3), value: function() {
              this.load("$options");
            } }, { key: Object(V.SUBSCRIBE)("openSVGFilterPopup"), value: function(t3) {
              this.emit("refreshSVGFilterAssets"), this.emit("refreshSVGArea");
              var e3 = (this.$selection.currentProject || { svgfilters: [] }).svgfilters[t3];
              this.emit("showSVGFilterPopup", { changeEvent: "changeSVGFilterEditorRealUpdate", preview: false, index: t3, filters: e3.filters });
            } }, { key: Object(V.SUBSCRIBE)("changeSVGFilterEditorRealUpdate"), value: function(t3) {
              var e3 = this.$selection.currentProject;
              e3 && (e3.setSVGFilterValue(t3.index, { filters: t3.filters }), this.emit("refreshSVGFilterAssets"), this.emit("refreshSVGArea"));
            } }]), n2;
          }(J.a);
          function Vh(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Dh = function(t2) {
            s()(n2, t2);
            var e2 = Vh(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("svg.item.property.title");
            } }, { key: "getClassName", value: function() {
              return "item";
            } }, { key: "editableProperty", get: function() {
              return "svg-item";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.IF)("checkShow"), value: function() {
              var t3 = this.$selection.current;
              t3 && (this.children.$fill.setValue(t3.fill || "rgba(0, 0, 0, 0)"), this.children.$stroke.setValue(t3.stroke || "rgba(0, 0, 0, 1)"), this.children.$fillOpacity.setValue(t3["fill-opacity"] || F.a.number(1)), this.children.$strokeWidth.setValue(t3["stroke-width"] || F.a.number(1)), this.children.$fillRule.setValue(t3["fill-rule"] || "nonzero"), this.children.$strokeDashOffset.setValue(t3["stroke-dashoffset"] || F.a.number(0)), this.children.$strokeDashArray.setValue(t3["stroke-dasharray"] || " "), this.children.$strokeLineCap.setValue(t3["stroke-linecap"] || "butt"), this.children.$strokeLineJoin.setValue(t3["stroke-linejoin"] || "miter"), this.children.$mixBlend.setValue(t3["mix-blend-mode"]));
            } }, { key: "refresh", value: function() {
            } }, { key: "getBody", value: function() {
              this.$selection.current;
              return `
      <div ref='$svgProperty'>
        <div class='property-item animation-property-item'>
          <div class='group'>        
            <span class='add-timeline-property' data-property='fill'></span>
          </div>
          <object refClass="FillSingleEditor" ref='$fill' label='`.concat(this.$i18n("svg.item.property.fill"), `' key='fill' onchange="changeValue" />
        </div>

        <div class='property-item animation-property-item'>
          <div class='group'>        
            <span class='add-timeline-property' data-property='fill-opacity'></span>
          </div>            
          <object refClass="NumberRangeEditor"  
            ref='$fillOpacity' 
            label='`).concat(this.$i18n("svg.item.property.fillOpacity"), `' 
            key='fill-opacity' 
            value="1" 
            min="0"
            max="1"
            step="0.01"
            onchange="changeValue" 
            />
        </div>   


        <div class='property-item animation-property-item'>
          <div class='group'>        
            <span class='add-timeline-property' data-property='fill-rule'></span>
          </div>
          <object refClass="SelectIconEditor" 
            ref='$fillRule' 
            label='`).concat(this.$i18n("svg.item.property.fillRule"), `' 
            key="fill-rule" 
            options=`).concat(this.variable(["nonzero", "evenodd"]), `
            onchange="changeValue" />
        </div>            

        <div class='property-item animation-property-item'>
          <div class='group'>        
            <span class='add-timeline-property' data-property='stroke'></span>
          </div>
          <object refClass="FillSingleEditor" ref='$stroke' label='`).concat(this.$i18n("svg.item.property.stroke"), `' key='stroke' onchange="changeValue" />
        </div>      

        <div class='property-item animation-property-item'>
          <div class='group'>        
            <span class='add-timeline-property' data-property='stroke-width'></span>
          </div>
          <object refClass="RangeEditor"  
            ref='$strokeWidth' 
            label='`).concat(this.$i18n("svg.item.property.strokeWidth"), `' 
            key="stroke-width" 
            onchange="changeValue" />
        </div>
        <!--<div class='property-item animation-property-item'>
          <div class='group'>        
            <span class='add-timeline-property' data-property='stroke-dasharray'></span>      
          </div>          
          <label>`).concat(this.$i18n("svg.item.property.dashArray"), `</label>
        </div>-->
        <div class='property-item'>
          <object refClass="StrokeDashArrayEditor" label="`).concat(this.$i18n("svg.item.property.dashArray"), `" ref='$strokeDashArray' key='stroke-dasharray' onchange="changeValue" />
        </div>

        <div class='property-item animation-property-item'>
          <div class='group'>        
            <span class='add-timeline-property' data-property='stroke-dashoffset'></span>      
          </div>          
          <object refClass="NumberRangeEditor"  
            ref='$strokeDashOffset' 
            key='stroke-dashoffset' 
            label='`).concat(this.$i18n("svg.item.property.dashOffset"), `'
            value="0" 
            min="-1000"
            max="1000"
            step="1"
            onchange="changeValue" 
            />
        </div>         

        <div class='property-item animation-property-item'>
          <div class='group'>        
            <span class='add-timeline-property' data-property='stroke-linecap'></span>      
          </div>          
          <object refClass="SelectIconEditor" 
            ref='$strokeLineCap' 
            label='`).concat(this.$i18n("svg.item.property.lineCap"), `' 
            key="stroke-linecap" 
            options=`).concat(this.variable(["butt", "round", "square"]), ` 
            onchange="changeValue" 
          />
        </div> 
        <div class='property-item animation-property-item'>
          <div class='group'>        
            <span class='add-timeline-property' data-property='stroke-linejoin'></span>      
          </div>          
          <object refClass="SelectIconEditor" 
            ref='$strokeLineJoin' 
            label='`).concat(this.$i18n("svg.item.property.lineJoin"), `'             
            key="stroke-linejoin" 
            options=`).concat(this.variable(["miter", "bevel", "round"]), ` 
            onchange="changeValue" 
          />
        </div>       
        <div class='property-item animation-property-item'>
          <div class='group'>
            <span class='add-timeline-property' data-property='mix-blend-mode'></span>
          </div>
          <object refClass="BlendSelectEditor" 
            label='`).concat(this.$i18n("background.color.property.blend"), `'
            ref='$mixBlend' 
            removable='true'
            key='mix-blend-mode' 
            icon="true" 
            tabIndex="1"
            onchange="changeSelect" />
        </div>                 
        <!--div class='property-item animation-property-item'>
          <div class='group'>        
            <span class='add-timeline-property' data-property='svgfilter'></span>      
          </div>
          <object refClass="SVGFilterSelectEditor" 
            ref='$svgFilter' 
            label='`).concat(this.$i18n("svg.item.property.filter"), `' 
            key="svgfilter" 
            onchange="changeValue" 
          />
        </div-->         
      </div>
   
    `);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeValue"), value: function(t3, e3, n3) {
              this.command("setAttributeForMulti", "change svg item property : ".concat(t3), this.$selection.packByValue(M()({}, t3, e3)));
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeSelect"), value: function(t3, e3) {
              this.command("setAttributeForMulti", "change attribute : ".concat(t3), this.$selection.packByValue(M()({}, t3, e3)));
            } }]), n2;
          }($.a);
          function Lh(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Ah = function(t2) {
            s()(n2, t2);
            var e2 = Lh(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("svg.text.property.title");
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection"), value: function() {
              this.refreshShow(["svg-textpath", "svg-text", "svg-tspan"]);
            } }, { key: "refresh", value: function() {
              this.$selection.current && this.setAllValue(["lengthAdjust", "textLength", "startOffset", "text-anchor", "text"]);
            } }, { key: "setAllValue", value: function() {
              var t3 = this, e3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], n3 = this.$selection.current;
              n3 && e3.forEach(function(e4) {
                t3.children["$".concat(e4)].setValue(n3[e4]);
              });
            } }, { key: "getBody", value: function() {
              return `
      <div class='property-item animation-property-item'>
        <div class='group'>
          <span class='add-timeline-property' data-property='text'></span>
        </div>
        <object refClass="TextAreaEditor" 
          ref='$text' 
          label='`.concat(this.$i18n("svg.text.property.textarea"), `' 
          key="text"
          onchange="changeTextValue" />
      </div>        
      <div class='property-item'>
        <object refClass="SelectIconEditor" 
          ref='$text-anchor' 
          label='`).concat(this.$i18n("svg.text.property.anchor"), `' 
          key="text-anchor" 
          options=`).concat(this.variable(["start", "middle", "end"]), ` 
          onchange="changeTextValue" />
      </div>            
      <div class='property-item animation-property-item'>
        <div class='group'>
          <span class='add-timeline-property' data-property='lengthAdjust'></span>
        </div>
        <object refClass="SelectEditor"  
          ref='$lengthAdjust' 
          label='`).concat(this.$i18n("svg.text.property.length.adjust"), "' \n          key='lengthAdjust' \n          value='spacing' \n          options=").concat(this.variable(["spacing", "spacingAndGlyphs"]), ` 
          onchange='changeTextValue' />        
      </div>        
      <div class='property-item animation-property-item'>
        <div class='group'>
          <span class='add-timeline-property' data-property='textLength'></span>
        </div>
        <object refClass="RangeEditor"  
          ref='$textLength' 
          label='`).concat(this.$i18n("svg.text.property.text.length"), `' 
          key='textLength'
          min="0"
          max='1000'
          step="0.1"
          onchange='changeTextValue' />                
      </div>        
      <div class='property-item animation-property-item'>
        <div class='group'>
          <span class='add-timeline-property' data-property='startOffset'></span>
        </div>
        <object refClass="RangeEditor"  
          ref='$startOffset' 
          label='`).concat(this.$i18n("svg.text.property.start.offset"), `' 
          key='startOffset' 
          min="0"
          max='1000'
          step="0.1"          
          onchange='changeTextValue' />        
      </div>                    
    `);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeTextValue"), value: function(t3, e3) {
              this.command("setAttributeForMulti", "change svg text property: ".concat(t3), this.$selection.packByValue(M()({}, t3, e3)));
            } }]), n2;
          }($.a);
          function Fh(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var zh = "none,uppercase:AG,lowercase:ag,capitalize:Ag".split(",").map(function(t2) {
            var e2 = t2.split(":"), n2 = be()(e2, 2);
            return { value: n2[0], text: n2[1] };
          }), Nh = "none,underline,overline:O,line-through".split(",").map(function(t2) {
            var e2 = t2.split(":"), n2 = be()(e2, 2);
            return { value: n2[0], text: n2[1] };
          }), _h = function(t2) {
            s()(n2, t2);
            var e2 = Fh(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("text.property.title");
            } }, { key: "editableProperty", get: function() {
              return "text-style";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }, { key: "refresh", value: function() {
              var t3 = this.$selection.current;
              t3 && (this.children.$align.setValue(t3["text-align"]), this.children.$transform.setValue(t3["text-transform"]), this.children.$decoration.setValue(t3["text-decoration"]));
            } }, { key: "getBody", value: function() {
              return `
      <div class="property-item">
        <object refClass="SelectIconEditor" 
          ref='$align' 
          label='`.concat(this.$i18n("text.property.align"), "' \n          key='text-align' \n          value='left' \n          options=").concat(this.variable(["left", "center", "right", "justify"]), ` 
          icons="align_left,align_center,align_right,align_justify" 
          onchange='changeTextValue' />        
      </div>        
      <div class="property-item">
        <object refClass="SelectIconEditor" 
          ref='$transform' 
          label='`).concat(this.$i18n("text.property.transform"), "' \n          key='text-transform' \n          options=").concat(this.variable(zh), `
          icons="horizontal_rule"
          onchange='changeTextValue' />                
      </div>        
      <div class="property-item">
        <object refClass="SelectIconEditor" 
          ref='$decoration' 
          label='`).concat(this.$i18n("text.property.decoration"), "' \n          key='text-decoration' \n          options=").concat(this.variable(Nh), `
          icons="horizontal_rule,underline,O,strikethrough"
          onchange='changeTextValue' />        
      </div>                    
    `);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeTextValue"), value: function(t3, e3) {
              this.command("setAttributeForMulti", "change text property : ".concat(t3), this.$selection.packByValue(M()({}, t3, e3)));
            } }]), n2;
          }($.a);
          function Uh(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Gh = function(t2) {
            s()(n2, t2);
            var e2 = Uh(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("text.clip.property.title");
            } }, { key: "isFirstShow", value: function() {
              return false;
            } }, { key: "getClassName", value: function() {
              return "item";
            } }, { key: "getTools", value: function() {
              return "<div ref='$textClip'></div>";
            } }, { key: Object(V.LOAD)("$textClip"), value: function() {
              var t3 = (this.$selection.current || {})["text-clip"] || "";
              return `
      <object refClass="SelectEditor"  ref='$1' key='text-clip' icon="true" value="`.concat(t3, '" options=').concat(this.variable(["", "text"]), ' onchange="changeSelect" />\n    ');
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeSelect"), value: function(t3, e3) {
              this.emit("setAttributeForMulti", this.$selection.packByValue(M()({}, t3, e3)));
            } }, { key: "editableProperty", get: function() {
              return "text-clip";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }]), n2;
          }($.a);
          function Hh(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Kh = function(t2) {
            s()(n2, t2);
            var e2 = Hh(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("text.fill.property.title");
            } }, { key: "editableProperty", get: function() {
              return "text-fill";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }, { key: "refresh", value: function() {
              var t3 = this.$selection.current;
              t3 && (this.children.$fillColor.setValue(t3["text-fill-color"] || "rgba(0, 0, 0, 1)"), this.children.$strokeColor.setValue(t3["text-stroke-color"] || "rgba(0, 0, 0, 1)"), this.children.$width.setValue(t3["text-stroke-width"] || "0px"));
            } }, { key: "getBody", value: function() {
              return `
      <div class='property-item animation-property-item'>
        <div class='group'>
          <span class='add-timeline-property' data-property='text-fill-color'></span>
        </div>
        <object refClass="ColorViewEditor" ref='$fillColor' label='`.concat(this.$i18n("text.fill.property.fill"), `' key='text-fill-color' onchange="changeColor" />
      </div>           
      <div class='property-item animation-property-item'>
        <div class='group'>
          <span class='add-timeline-property' data-property='text-stroke-color'></span>
        </div>
        <object refClass="ColorViewEditor" ref='$strokeColor' label='`).concat(this.$i18n("text.fill.property.stroke"), `' key='text-stroke-color' onchange="changeColor" />
      </div>                 

      <div class='property-item animation-property-item'>
        <div class='group'>
          <span class='add-timeline-property' data-property='text-stroke-width'></span>
        </div>
        <object refClass="RangeEditor"  
          ref='$width' 
          label='`).concat(this.$i18n("text.fill.property.strokeWidth"), `' 
          key="text-stroke-width" 
          
          max="50"
          onchange="changeRangeEditor" />
      </div>
    
    `);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeColor"), value: function(t3, e3, n3) {
              this.trigger("changeRangeEditor", t3, e3);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeRangeEditor"), value: function(t3, e3) {
              this.command("setAttributeForMulti", "change text fill", this.$selection.packByValue(M()({}, t3, e3)));
            } }]), n2;
          }($.a), Yh = n(50);
          n(226);
          function Xh(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Wh = function(t2) {
            s()(n2, t2);
            var e2 = Xh(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { hideLabel: this.props["hide-label"] === "true", selectedIndex: -1, textShadows: this.props.value };
            } }, { key: "template", value: function() {
              var t3 = this.state.hideLabel ? "hide" : "";
              return `
      <div class="elf--text-shadow-editor" >
        <div class='label `.concat(t3, "' >\n            <label>").concat(this.props.title || "", `</label>        
            <div class='tools'>
              <button type="button" ref="$add" title="add Text Shadow">`).concat(D.a.add, "</button>\n            </div>\n        </div>\n        <div class='text-shadow-list' ref='$shadowList'></div>\n      </div>\n    ");
            } }, { key: Object(V.LOAD)("$shadowList"), value: function() {
              var t3 = this.state.textShadows.map(function(t4, e3) {
                return '\n        <div class="shadow-item real" data-index="'.concat(e3, `">
          <div class="color">
            <div class='color-view' style="background-color: `).concat(t4.color, '">\n            </div>\n          </div>\n          <div class="offset-x">').concat(t4.offsetX, '</div>\n          <div class="offset-y">').concat(t4.offsetY, '</div>\n          <div class="blur-radius">').concat(t4.blurRadius, '</div>\n          <div class="tools">\n            <button type="button" class="remove" data-index="').concat(e3, '">\n              ').concat(D.a.remove2, "\n            </button>\n          </div>\n        </div>\n      ");
              });
              return t3.length && t3.push('\n      <div class="shadow-item desc">\n            <div class="color"></div>\n            <div class="offset-x">X</div>\n            <div class="offset-y">Y</div>\n            <div class="blur-radius">Blur</div>\n            <div class="tools">\n            </div>\n          </div>\n      '), t3.join("");
            } }, { key: "modifyTextShadow", value: function() {
              var t3 = this.state.textShadows.join(", ");
              this.parent.trigger(this.props.onchange, t3);
            } }, { key: Object(V.SUBSCRIBE)("add"), value: function() {
              this.state.textShadows.push(new Yh.a()), this.refresh(), this.modifyTextShadow();
            } }, { key: Object(V.CLICK)("$add"), value: function() {
              this.trigger("add");
            } }, { key: Object(V.CLICK)("$shadowList .remove"), value: function(t3) {
              var e3 = +t3.$dt.attr("data-index");
              this.state.textShadows.splice(e3, 1), this.refresh(), this.modifyTextShadow();
            } }, { key: Object(V.CLICK)("$shadowList .shadow-item.real > div:not(.tools)"), value: function(t3) {
              var e3 = +t3.$dt.closest("shadow-item").attr("data-index"), n3 = this.state.textShadows[e3];
              this.viewShadowPopup(n3, e3);
            } }, { key: "viewShadowPopup", value: function(t3, e3) {
              this.setState({ selectedIndex: e3 }, false), this.viewTextShadowPropertyPopup(t3);
            } }, { key: "viewTextShadowPropertyPopup", value: function(t3) {
              this.emit("showTextShadowPropertyPopup", { changeEvent: "changeTextShadowEditorPopup", color: t3.color, offsetX: t3.offsetX, offsetY: t3.offsetY, blurRadius: t3.blurRadius }, { id: this.id });
            } }, { key: Object(V.SUBSCRIBE)("changeTextShadowEditorPopup"), value: function(t3, e3) {
              e3.id === this.id && (this.state.textShadows[this.state.selectedIndex].reset(t3), this.refresh(), this.modifyTextShadow());
            } }]), n2;
          }(J.a);
          function Zh(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var qh = function(t2) {
            s()(n2, t2);
            var e2 = Zh(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("text.shadow.property.title");
            } }, { key: "getBody", value: function() {
              return '\n      <div class="full text-shadow-item" ref="$shadowList"></div>\n    ';
            } }, { key: "hasKeyframe", value: function() {
              return true;
            } }, { key: "getKeyframeProperty", value: function() {
              return "text-shadow";
            } }, { key: "getTools", value: function() {
              return `<button type="button" ref='$add'>`.concat(D.a.add, "</button>");
            } }, { key: Object(V.CLICK)("$add"), value: function() {
              this.children.$textshadow.trigger("add");
            } }, { key: Object(V.LOAD)("$shadowList"), value: function() {
              var t3 = this, e3 = this.$selection.current || {};
              return `
      <object refClass="TextShadowEditor" 
        ref='$textshadow' 
        value="`.concat(this.variable(Yh.a.parseStyle(e3["text-shadow"])), '" \n        hide-label="true" \n        onChange=').concat(this.subscribe(function(e4) {
                t3.command("setAttributeForMulti", "change text shadow", t3.$selection.packByValue({ "text-shadow": e4 }));
              }), "\n      />\n    ");
            } }, { key: "editableProperty", get: function() {
              return "text-shadow";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }]), n2;
          }($.a);
          n(227);
          function Jh(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Qh = function(t2) {
            s()(n2, t2);
            var e2 = Jh(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return "Text Shadow Editor";
            } }, { key: "initState", value: function() {
              return { color: "rgba(0, 0, 0, 1)", offsetX: F.a.z(), offsetY: F.a.z(), blurRadius: F.a.z() };
            } }, { key: "updateData", value: function(t3) {
              this.setState(t3, false), this.emit(this.changeEvent, t3, this.params);
            } }, { key: "getBody", value: function() {
              return "<div class='elf--text-shadow-property-popup' ref='$popup'></div>";
            } }, { key: Object(V.LOAD)("$popup"), value: function() {
              return `
      <div class='box'>
        <div class="drag-board" ref="$dragBoard">
          <div
            class="pointer"
            ref="$pointer"
            style="left: `.concat(this.state.offsetX, ";top: ").concat(this.state.offsetY, `"
          ></div>
        </div>
        <div class='popup-item'>
          <object refClass="RangeEditor"  ref='$offsetX' label='Offset X' key='offsetX' min="-100" max='100' value='`).concat(this.state.offsetX, `' onchange='changeShadow' />
        </div>
        <div class='popup-item'>
          <object refClass="RangeEditor"  ref='$offsetY' label="Offset Y" key='offsetY' min="-100" max='100' value='`).concat(this.state.offsetY, `' onchange='changeShadow' />
        </div>
        <div class='popup-item'>
          <object refClass="RangeEditor"  ref='$blurRadius' label="Blur Radius" key='blurRadius' value='`).concat(this.state.blurRadius, `' onchange='changeShadow' />
        </div>
        <div class='popup-item'>
          <object refClass="ColorViewEditor" 
              ref='$foreColor' 
              label="color" 
              key='color' 
              value="`).concat(this.state.color, '"\n              onchange="changeShadow" />\n        </div>        \n      </div>\n    ');
            } }, { key: Object(V.SUBSCRIBE)("changeShadow"), value: function(t3, e3) {
              this.updateData(M()({}, t3, e3)), t3 !== "offsetX" && t3 !== "offsetY" || this.refreshPointer();
            } }, { key: Object(V.POINTERSTART)("$popup .drag-board") + Object(V.MOVE)("movePointer"), value: function(t3) {
              this.offsetX = t3.offsetX, this.offsetY = t3.offsetY;
              var e3 = this.getRef("$dragBoard").rect();
              this.boardWidth = e3.width, this.boardHeight = e3.height;
            } }, { key: "refreshPointer", value: function() {
              this.getRef("$pointer").css({ left: this.state.offsetX, top: this.state.offsetY });
            } }, { key: "movePointer", value: function(t3, e3) {
              var n3 = this.offsetX + t3, r2 = this.offsetY + e3, i2 = this.boardWidth / 2, a2 = this.boardHeight / 2, o2 = n3 - i2, c2 = r2 - a2;
              o2 < -i2 ? o2 = -i2 : o2 > i2 && (o2 = i2), c2 < -a2 ? c2 = -a2 : c2 > a2 && (c2 = a2), o2 = Math.floor(o2), c2 = Math.floor(c2), this.updateData({ offsetX: F.a.px(o2), offsetY: F.a.px(c2) }), this.children.$offsetX.setValue(this.state.offsetX), this.children.$offsetY.setValue(this.state.offsetY), this.refreshPointer();
            } }, { key: Object(V.SUBSCRIBE)("showTextShadowPropertyPopup"), value: function(t3, e3) {
              this.changeEvent = t3.changeEvent || "changeTextShadowPropertyPopup", this.params = e3, this.setState(t3, false), this.refresh(), this.show(432);
            } }, { key: Object(V.SUBSCRIBE)("hideTextShadowPropertyPopup"), value: function() {
              this.hide();
            } }]), n2;
          }(tt);
          n(228);
          function tp(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var ep = ["top-left", "top", "top-right", "left", "right", "bottom-left", "bottom", "bottom-right"], np = { top: "0", "top-right": "45", right: "90", "bottom-right": "135", bottom: "180", "bottom-left": "225", left: "270", "top-left": "315" }, rp = function(t2) {
            s()(n2, t2);
            var e2 = tp(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              return "\n            <div class='elf--rotate-editor-view'>            \n                <div class='rotate-area' ref='$rotateArea'>\n                    <div class='rotate-container' ref='$rotateContainer'>\n                        <div class='rotate-item rotate-x'></div>\n                        <div class='rotate-item rotate-y'></div>\n                    </div>\n                </div>\n                <div class='direction-area' ref='$directionArea'>\n                    ".concat(ep.map(function(t3) {
                return "<div class='direction' data-value='".concat(t3, "'></div>");
              }).join(""), "\n                </div>                \n                <div class='rotate-z' ref='$rotateZ'>\n                    <div class='handle-line'></div>                \n                    <div class='handle icon' ref='$handle'>").concat(D.a.gps_fixed, "</div>\n                </div>                \n            </div>\n        ");
            } }, { key: Object(V.CLICK)("$directionArea .direction"), value: function(t3) {
              var e3 = t3.$dt.attr("data-value"), n3 = F.a.deg(np[e3] || 0);
              this.$selection.each(function(t4) {
                var e4 = Pa.a.replace(t4.transform, { type: "rotateZ", value: [n3] });
                t4.reset({ transform: e4 });
              }), this.bindData("$rotateZ"), this.command("setAttributeForMulti", "change direction", this.$selection.pack("transform")), this.emit("refreshSelectionTool", false);
            } }, { key: Object(V.BIND)("$rotateContainer"), value: function() {
              var t3 = this.$selection.current || { transform: "" };
              return { style: { transform: Pa.a.filter(t3.transform || "", function(t4) {
                return t4.type === "rotateX" || t4.type === "rotateY";
              }) } };
            } }, { key: Object(V.BIND)("$rotateZ"), value: function() {
              var t3 = this.$selection.current || { transform: "" };
              return { style: { transform: Pa.a.filter(t3.transform || "", function(t4) {
                return t4.type === "rotate" || t4.type === "rotateZ";
              }) } };
            } }, { key: Object(V.DOUBLECLICK)("$rotateArea"), value: function() {
              this.$selection.reset(this.$selection.packByValue({ transform: function(t3) {
                return Pa.a.remove(t3.transform, ["rotateX", "rotateY"]);
              } })), this.command("setAttributeForMulti", "change direction", this.$selection.pack("transform")), this.emit("refreshSelectionTool"), this.bindData("$rotateContainer");
            } }, { key: Object(V.POINTERSTART)("$rotateArea") + Object(V.MOVE)("moveRotateXY") + Object(V.END)("moveEndRotateXY"), value: function() {
              this.state.rotateCache = this.$selection.map(function(t3) {
                var e3 = Pa.a.get(t3.transform, "rotateX"), n3 = Pa.a.get(t3.transform, "rotateY");
                return { item: t3, rotateX: e3 ? e3[0] : F.a.deg(0), rotateY: n3 ? n3[0] : F.a.deg(0) };
              });
            } }, { key: "moveRotateXY", value: function(t3, e3) {
              var n3 = F.a.deg(-e3), r2 = F.a.deg(t3);
              this.state.rotateCache.forEach(function(t4) {
                var e4 = t4.item.transform;
                e4 = Pa.a.rotateX(e4, F.a.deg(t4.rotateX.value + n3.value)), e4 = Pa.a.rotateY(e4, F.a.deg(t4.rotateY.value + r2.value)), t4.item.reset({ transform: e4 });
              }), this.bindData("$rotateContainer"), this.command("setAttributeForMulti", "change rotate", this.$selection.pack("transform")), this.emit("refreshSelectionTool");
            } }, { key: "moveEndRotateXY", value: function(t3, e3) {
              this.command("setAttributeForMulti", "change rotate", this.$selection.pack("transform")), this.emit("refreshSelectionTool");
            } }, { key: Object(V.DOUBLECLICK)("$handle"), value: function() {
              this.$selection.reset(this.$selection.packByValue({ transform: function(t3) {
                return Pa.a.remove(t3.transform, ["rotateZ", "rotate"]);
              } })), this.bindData("$rotateZ"), this.command("setAttributeForMulti", "change rotate handle", this.$selection.pack("transform")), this.emit("refreshSelectionTool");
            } }, { key: Object(V.POINTERSTART)("$handle") + Object(V.MOVE)() + Object(V.END)(), value: function() {
              var t3 = this.refs.$handle.rect(), e3 = this.refs.$rotateZ.rect();
              this.rotateZCenter = { x: e3.x + e3.width / 2, y: e3.y + e3.height / 2 }, this.rotateZStart = { x: t3.x + t3.width / 2, y: t3.y + t3.height / 2 }, this.state.rotateCache = this.$selection.map(function(t4) {
                var e4 = Pa.a.get(t4.transform, "rotateZ");
                return { item: t4, rotateZ: e4 ? e4[0] : F.a.deg(0) };
              });
            } }, { key: "move", value: function(t3, e3) {
              this.modifyRotateZ(t3, e3), this.bindData("$rotateZ"), this.command("setAttributeForMulti", "change rotate handle", this.$selection.pack("transform")), this.emit("refreshSelectionTool");
            } }, { key: "end", value: function() {
              this.command("setAttributeForMulti", "change rotate handle", this.$selection.pack("transform")), this.emit("refreshSelectionTool");
            } }, { key: "modifyRotateZ", value: function(t3, e3) {
              this.$config.get("bodyEvent");
              var n3 = F.a.deg(Math.floor(Object(Vo.calculateAnglePointDistance)(this.rotateZStart, this.rotateZCenter, { dx: t3, dy: e3 })));
              this.state.rotateCache.forEach(function(t4) {
                var e4 = t4.item.transform;
                e4 = Pa.a.rotateZ(e4, F.a.deg(t4.rotateZ.value + n3.value)), t4.item.transform = e4;
              });
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection"), value: function() {
              this.refresh();
            } }, { key: Object(V.SUBSCRIBE)("refreshSelectionStyleView"), value: function() {
              this.$selection.hasChangedField("transform") && this.refresh();
            } }]), n2;
          }(J.a);
          n(229);
          function ip(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function ap(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? ip(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : ip(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function op(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var cp = ["perspective", "rotate", "rotateX", "rotateY", "rotateZ", "rotate3d", "skew", "skewX", "skewY", "translate", "translateX", "translateY", "translateZ", "translate3d", "scale", "scaleX", "scaleY", "scaleZ", "scale3d", "matrix", "matrix3d"], sp = { scale: ["X", "Y"], skew: ["X", "Y"], translate: ["X", "Y"], translate3d: ["tx", "ty", "tz"], matrix: ["a", "b", "c", "d", "tx", "ty"], matrix3d: ["a1", "b1", "c1", "d1", "a2", "b2", "c2", "d2", "a3", "b3", "c3", "d3", "a4", "b4", "c4", "d4"] }, up = function(t2) {
            s()(n2, t2);
            var e2 = op(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { hideLabel: this.props["hide-label"] === "true", transforms: Pa.a.parseStyle(this.props.value) };
            } }, { key: "template", value: function() {
              var t3 = this, e3 = this.state.hideLabel ? "hide" : "";
              return "\n      <div class='elf--transform-editor transform-list'>\n          <div class='label ".concat(e3, `' >
              <label>Transform</label>
              <div class='tools'>
                <select ref="$transformSelect">
                  `).concat(cp.map(function(e4) {
                var n3 = t3.$i18n("css.item." + e4);
                return "<option value='".concat(e4, "'>").concat(n3, "</option>");
              }).join(""), '\n                </select>\n                <button type="button" ref="$add" title="add Transform">').concat(D.a.add, "</button>\n              </div>\n          </div>\n          <div class='transform-list' ref='$transformList'></div>\n      </div>");
            } }, { key: "getLabel", value: function(t3, e3) {
              switch (t3) {
                case "scale":
                case "translate":
                case "translate3d":
                case "matrix":
                case "matrix3d":
                case "skew":
                  return sp[t3][e3];
              }
              return "";
            } }, { key: "isMultiValue", value: function(t3) {
              switch (t3) {
                case "translate3d":
                case "matrix":
                case "matrix3d":
                case "skew":
                  return true;
              }
              return false;
            } }, { key: "getRange", value: function(t3) {
              switch (t3) {
                case "translateX":
                case "translateY":
                case "translateZ":
                case "translate":
                case "translate3d":
                  return { min: -100, max: 100, step: 1, units: "px,%,em" };
                case "matrix":
                case "matrix3d":
                  return { min: -100, max: 100, step: 0.01, units: "number" };
                case "rotateX":
                case "rotateY":
                case "rotateZ":
                case "rotate":
                case "skew":
                case "skewY":
                case "skewX":
                  return { min: -360, max: 360, step: 0.1, units: "deg,turn,rad", editorType: "RangeEditor" };
                case "perspective":
                  return { min: 0, max: 1e4, step: 1, units: "px,%,em" };
                case "scale":
                case "scaleX":
                case "scaleY":
                  return { min: 0, max: 10, step: 0.1, units: "number" };
              }
              return { min: 0, max: 100, step: 1, units: "px,%,em" };
            } }, { key: "makeOneTransformTemplate", value: function(t3, e3, n3) {
              var r2 = this;
              return '\n      <div class="transform-item" data-index="'.concat(n3, '">\n        <div class="title" data-index="').concat(n3, '">\n          <label draggable="true" >').concat(this.$i18n("css.item." + t3), '</label>\n          <div class="transform-menu">\n            <button type="button" class="del" data-index="').concat(n3, '">\n              ').concat(D.a.remove2, '\n            </button>\n          </div>\n        </div>\n        <div class="transform-ui ').concat(t3, '">\n        ').concat(e3.value.map(function(e4, i2) {
                var a2 = r2.getLabel(t3, i2), o2 = r2.getRange(t3), c2 = o2.min, s2 = o2.max, u2 = o2.step, l2 = o2.units;
                return `
            <div>
              <object refClass="RangeEditor"  
                    ref='$range_`.concat(t3, "_").concat(n3, "_").concat(i2, `' 
                    min="`).concat(c2, '" \n                    max="').concat(s2, '" \n                    step="').concat(u2, '" \n                    label="').concat(a2, '"\n                    key="').concat(n3, `" 
                    params='`).concat(i2, `' 
                    value="`).concat(e4, '" \n                    units="').concat(l2, '" \n                    onchange="changeRangeEditor" />\n            </div>');
              }).join(""), "      \n      </div>        \n\n      </div>\n    ");
            } }, { key: "makeMultiTransformTemplate", value: function(t3, e3, n3) {
              var r2 = this;
              return '\n      <div class="transform-item" data-index="'.concat(n3, '">\n        <div class="title" data-index="').concat(n3, '">\n          <label draggable="true" >').concat(this.$i18n("css.item." + t3), '</label>\n          <div></div>\n          <div class="transform-menu">\n            <button type="button" class="del" data-index="').concat(n3, '">\n              ').concat(D.a.remove2, '\n            </button>\n          </div>\n        </div>\n        <div class="transform-ui ').concat(t3, '">\n\n          ').concat(t3 === "translate3d" ? "\n            <pre>\n  1 | 0 | 0 | tx\n  0 | 1 | 0 | ty	\n  0 | 0 | 1 | tz	\n  0 | 0 | 0 | 1</pre>\n          " : "", "\n\n          ").concat(t3 === "matrix" ? "\n            <pre>\n  a | c | tx	\n  b | d | ty	\n  0 | 0 | 1</pre>\n          " : "", "    \n          \n          ").concat(t3 === "matrix3d" ? "\n            <pre>\n  a1 | a2 | a3 | a4	\n  b1 | b2 | b3 | b4	\n  c1 | c2 | c3 | c4	\n  d1 | d2 | d3 | d4</pre>\n          " : "", "     \n          \n          <div class='").concat(t3, "'>\n          ").concat(e3.value.map(function(e4, i2) {
                var a2 = r2.getLabel(t3, i2), o2 = r2.getRange(t3), c2 = o2.min, s2 = o2.max, u2 = o2.step, l2 = o2.units, f2 = o2.editorType;
                return '\n              <div>\n                <object refClass="'.concat(f2 === void 0 ? "NumberInputEditor" : f2, `"  
                      ref='$range_`).concat(t3, "_").concat(n3, "_").concat(i2, `' 
                      min="`).concat(c2, '" \n                      max="').concat(s2, '" \n                      step="').concat(u2, '" \n                      label="').concat(a2, '"\n                      key="').concat(n3, `" 
                      params='`).concat(i2, `' 
                      value="`).concat(e4, '" \n                      units="').concat(l2, '" \n                      onchange="changeRangeEditor" />\n              </div>');
              }).join(""), "   \n          </div>       \n        </div>\n      </div>\n    ");
            } }, { key: "makeTransformTemplate", value: function(t3, e3) {
              return this.isMultiValue(t3.type) ? this.makeMultiTransformTemplate(t3.type, t3, e3) : this.makeOneTransformTemplate(t3.type, t3, e3);
            } }, { key: Object(V.LOAD)("$transformList") + V.DOMDIFF, value: function() {
              var t3 = this;
              return this.state.transforms.map(function(e3, n3) {
                return t3.makeTransformTemplate(e3, n3.toString());
              });
            } }, { key: "setValue", value: function(t3) {
              this.setState({ transforms: Pa.a.parseStyle(t3) });
            } }, { key: Object(V.DRAGSTART)("$transformList .transform-item .title label"), value: function(t3) {
              this.startIndex = +t3.$dt.parent().attr("data-index");
            } }, { key: Object(V.DRAGOVER)("$transformList .transform-item") + V.PREVENT, value: function(t3) {
            } }, { key: "sortItem", value: function(t3, e3, n3) {
              t3.splice.apply(t3, [n3 + (e3 < n3 ? -1 : 0), 0].concat(ht()(t3.splice(e3, 1))));
            } }, { key: "sortTransform", value: function(t3, e3) {
              this.sortItem(this.state.transforms, t3, e3);
            } }, { key: Object(V.DROP)("$transformList .transform-item") + V.PREVENT, value: function(t3) {
              var e3 = +t3.$dt.attr("data-index");
              this.$selection.current && (this.sortTransform(this.startIndex, e3), this.refresh(), this.modifyTransform());
            } }, { key: "modifyTransform", value: function() {
              var t3 = this.state.transforms.join(" ");
              this.parent.trigger(this.props.onchange, t3);
            } }, { key: "getDefaultValue", value: function(t3) {
              switch (t3) {
                case "translateX":
                case "translateY":
                case "translateZ":
                  return [F.a.z()];
                case "rotateX":
                case "rotateY":
                case "rotateZ":
                case "rotate":
                case "skewY":
                case "skewX":
                case "perspective":
                  return [F.a.deg(0)];
                case "translate":
                  return [F.a.z(), F.a.z()];
                case "translate3d":
                  return [F.a.z(), F.a.z(), F.a.z()];
                case "scale":
                  return [F.a.number(1), F.a.number(1)];
                case "skew":
                  return [F.a.deg(0), F.a.deg(0)];
                case "scaleX":
                case "scaleY":
                  return [F.a.number(1)];
                case "matrix":
                  return [F.a.number(1), F.a.number(0), F.a.number(0), F.a.number(1), F.a.number(0), F.a.number(0)];
                case "matrix3d":
                  return [F.a.number(1), F.a.number(0), F.a.number(0), F.a.number(0), F.a.number(0), F.a.number(1), F.a.number(0), F.a.number(0), F.a.number(0), F.a.number(0), F.a.number(1), F.a.number(0), F.a.number(0), F.a.number(0), F.a.number(0), F.a.number(1)];
              }
              return [F.a.number(0)];
            } }, { key: "makeTransform", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n3 = this.getDefaultValue(t3);
              return Pa.a.parse(ap(ap({}, e3), {}, { type: t3, value: n3 }));
            } }, { key: Object(V.SUBSCRIBE_SELF)("add"), value: function(t3) {
              this.state.transforms.push(this.makeTransform(t3)), this.refresh(), this.modifyTransform();
            } }, { key: Object(V.CLICK)("$add"), value: function() {
              var t3 = this.refs.$transformSelect.value;
              this.trigger("add", t3);
            } }, { key: Object(V.CLICK)("$transformList .transform-menu .del"), value: function(t3) {
              var e3 = +t3.$dt.attr("data-index");
              this.state.transforms.splice(e3, 1), this.refresh(), this.modifyTransform();
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeRangeEditor"), value: function(t3, e3, n3) {
              Object(X.isNotUndefined)(n3) ? this.state.transforms[+t3].value[+n3] = e3 : this.state.transforms[+t3].reset({ value: e3 }), this.modifyTransform();
            } }]), n2;
          }(J.a);
          function lp(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var fp = ["rotate", "rotateX", "rotateY", "rotateZ", "rotate3d", "skew", "skewX", "skewY", "translate", "translateX", "translateY", "translateZ", "translate3d", "perspective", "scale", "scaleX", "scaleY", "scaleZ", "scale3d", "matrix", "matrix3d"], hp = function(t2) {
            s()(n2, t2);
            var e2 = lp(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "isFirstShow", value: function() {
              return true;
            } }, { key: "getTitle", value: function() {
              return this.$i18n("transform.property.title");
            } }, { key: "getBody", value: function() {
              return `
      <object refClass="RotateEditorView" />
      <div class='full transform-property' ref='$body'></div>
    `;
            } }, { key: "hasKeyframe", value: function() {
              return true;
            } }, { key: "getKeyframeProperty", value: function() {
              return "transform";
            } }, { key: "getTools", value: function() {
              var t3 = this;
              return '\n      <select ref="$transformSelect">\n      '.concat(fp.map(function(e3) {
                var n3 = t3.$i18n("css.item." + e3);
                return "<option value='".concat(e3, "'>").concat(n3, "</option>");
              }).join(""), '\n      </select>\n      <button type="button" ref="$add" title="add Filter">').concat(D.a.add, "</button>\n    ");
            } }, { key: Object(V.CLICK)("$add"), value: function() {
              var t3 = this.refs.$transformSelect.value;
              this.children.$transformEditor.trigger("add", t3);
            } }, { key: Object(V.LOAD)("$body") + V.DOMDIFF, value: function() {
              var t3 = (this.$selection.current || {}).transform;
              return `
      <object refClass="TransformEditor" ref='$transformEditor' value='`.concat(t3, `' hide-label="true" onchange='changeTransformEditor' />
    `);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeTransformEditor"), value: function(t3) {
              var e3 = this;
              this.command("setAttributeForMulti", "change transform property", this.$selection.packByValue({ transform: t3 })), this.nextTick(function() {
                e3.emit("refreshSelectionTool", false);
              });
            } }, { key: "refresh", value: function() {
              this.children.$transformEditor.setValue(this.$selection.current.transform);
            } }, { key: "editableProperty", get: function() {
              return "transform";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }, { key: Object(V.SUBSCRIBE)("refreshSelectionStyleView") + Object(V.DEBOUNCE)(100), value: function() {
              var t3 = this.$selection.current;
              t3 && t3.hasChangedField("transform") && this.refresh();
            } }]), n2;
          }($.a);
          n(230);
          function pp(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var dp = [{ key: "transform-origin-x", title: "X" }, { key: "transform-origin-y", title: "Y" }, { key: "transform-origin-z", title: "Z" }], vp = dp.map(function(t2) {
            return t2.key;
          }), yp = { top: "50% 0%", "top left": "0% 0%", "top right": "100% 0%", left: "0% 50%", center: "50% 50%", right: "100% 50%", bottom: "50% 100%", "bottom left": "0% 100%", "bottom right": "100% 100%" }, gp = function(t2) {
            s()(n2, t2);
            var e2 = pp(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              var t3 = this.props.value.split(" "), e3 = { isAll: false, "transform-origin": F.a.percent(50), "transform-origin-x": F.a.percent(50), "transform-origin-y": F.a.percent(50) };
              return this.props.value && (t3.length === 1 ? (e3.isAll = true, e3["transform-origin"] = F.a.parse(t3[0]), e3["transform-origin-x"] = F.a.parse(t3[0]), e3["transform-origin-y"] = F.a.parse(t3[0])) : t3.length == 2 && (e3.isAll = false, e3["transform-origin-x"] = F.a.parse(t3[0]), e3["transform-origin-y"] = F.a.parse(t3[1]))), e3;
            } }, { key: "template", value: function() {
              return "\n      <div class='elf--transform-origin-editor'>\n        <div class='direction' ref='$direction'>\n          <div class='pos' data-value='top left'></div>        \n          <div class='pos' data-value='top'></div>\n          <div class='pos' data-value='top right'></div>\n          <div class='pos' data-value='left'></div>\n          <div class='pos' data-value='center'></div>\n          <div class='pos' data-value='right'></div>\n          <div class='pos' data-value='bottom left'></div>                   \n          <div class='pos' data-value='bottom'></div>\n          <div class='pos' data-value='bottom right'></div>\n        </div>\n        <div ref='$body'></div>\n      </div>\n    ";
            } }, { key: Object(V.CLICK)("$direction .pos"), value: function(t3) {
              var e3 = t3.$dt.attr("data-value");
              this.state.isAll = false;
              var n3 = yp[e3].split(" "), r2 = be()(n3, 2), i2 = r2[0], a2 = r2[1];
              this.state["transform-origin-x"] = F.a.parse(i2), this.state["transform-origin-y"] = F.a.parse(a2), this.refresh(), this.modifyTransformOrigin();
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeTransformOrigin"), value: function(t3, e3) {
              var n3 = this;
              t3 === "transform-origin" && vp.forEach(function(t4) {
                n3.children["$".concat(t4)].setValue(e3.toString());
              }), t3 === "transform-origin-z" && (this.state[t3] = e3), this.setTransformOrigin();
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = this;
              return '\n      <div class="full transform-origin-item" ref="$partitialSetting" >\n        <div class="radius-setting-box" ref="$radiusSettingBox">\n          '.concat(dp.map(function(e3) {
                return `
              <div>
                  <object refClass="RangeEditor"  ref='$`.concat(e3.key, `' compact="true" label='`).concat(e3.title, "' key='").concat(e3.key, `' value="`).concat(t3.state[e3.key], `" onchange='changeTransformOrigin' />
              </div>  
            `);
              }).join(""), "\n        </div>\n      </div>\n    ");
            } }, { key: "setTransformOrigin", value: function() {
              var t3 = this;
              this.refs.$selector.attr("data-selected-value") === "all" ? (this.state.isAll = true, this.state["transform-origin"] = this.children.$all.getValue()) : (this.state.isAll = false, vp.forEach(function(e3) {
                t3.state[e3] = t3.children["$".concat(e3)].getValue();
              })), this.modifyTransformOrigin();
            } }, { key: "modifyTransformOrigin", value: function() {
              var t3 = "".concat(this.state["transform-origin-x"], " ").concat(this.state["transform-origin-y"], " ").concat(this.state["transform-origin-z"] || "0px");
              this.parent.trigger(this.props.onchange, this.props.key, t3);
            } }, { key: Object(V.CLICK)("$selector button"), value: function(t3) {
              var e3 = t3.$dt.attr("data-value");
              this.refs.$selector.attr("data-selected-value", e3), e3 === "all" ? this.refs.$partitialSetting.hide() : this.refs.$partitialSetting.show("grid"), this.setTransformOrigin();
            } }]), n2;
          }(J.a);
          function mp(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var bp = function(t2) {
            s()(n2, t2);
            var e2 = mp(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("transform.origin.property.title");
            } }, { key: "hasKeyframe", value: function() {
              return true;
            } }, { key: "getKeyframeProperty", value: function() {
              return "transform-origin";
            } }, { key: Object(V.CLICK)("$remove"), value: function() {
              this.trigger("changeTransformOrigin", "");
            } }, { key: "getBody", value: function() {
              return `
      <div class="property-item full transform-origin-item" ref='$body'></div>
    `;
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = (this.$selection.current || {})["transform-origin"] || "";
              return `<object refClass="TransformOriginEditor" ref='$1' value='`.concat(t3, "' onchange='changeTransformOrigin' />");
            } }, { key: "editableProperty", get: function() {
              return "transform-origin";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.DEBOUNCE)(100) + Object(V.IF)("checkShow"), value: function() {
              this.refresh();
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeTransformOrigin"), value: function(t3, e3) {
              this.command("setAttributeForMulti", "change transform-origin", this.$selection.packByValue({ "transform-origin": e3 }));
            } }]), n2;
          }($.a);
          function kp(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Op = /((cubic-bezier|steps)\(([^\)]*)\))/gi, xp = function(t2) {
            s()(n2, t2);
            var e2 = kp(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getDefaultObject", value: function() {
              return { name: "all", duration: F.a.second(0), timingFunction: "linear", delay: F.a.second(0) };
            } }, { key: "toCloneObject", value: function() {
              return { name: this.json.name, duration: this.json.duration + "", timingFunction: this.json.timingFunction, delay: this.json.delay + "" };
            } }, { key: "toCSS", value: function() {
              return { transition: this.toString() };
            } }, { key: "toString", value: function() {
              var t3 = this.json;
              return [t3.name, t3.duration, t3.timingFunction, t3.delay].join(" ");
            } }], [{ key: "parse", value: function(t3) {
              return new n2(t3);
            } }, { key: "join", value: function(t3) {
              return t3.map(function(t4) {
                return new n2(t4).toString();
              }).join(",");
            } }, { key: "add", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r2 = n2.parseStyle(t3);
              return r2.push(n2.parse(e3)), n2.join(r2);
            } }, { key: "remove", value: function(t3, e3) {
              return n2.filter(t3, function(t4, n3) {
                return e3 != n3;
              });
            } }, { key: "filter", value: function(t3, e3) {
              return n2.join(n2.parseStyle(t3).filter(function(t4) {
                return e3(t4);
              }));
            } }, { key: "replace", value: function(t3, e3, r2) {
              var i2 = n2.parseStyle(t3);
              return i2[e3] ? i2[e3] = r2 : i2.push(r2), n2.join(i2);
            } }, { key: "get", value: function(t3, e3) {
              return n2.parseStyle(t3)[e3];
            } }, { key: "parseStyle", value: function(t3) {
              var e3 = [];
              if (!t3)
                return e3;
              var r2 = _(t3, Op);
              return (e3 = r2.str.split(",").map(function(t4) {
                var e4 = t4.split(" ").filter(Boolean);
                return e4.length >= 4 ? { name: e4[0], duration: F.a.parse(e4[1]), timingFunction: U(e4[2], r2.matches), delay: F.a.parse(e4[3]) } : e4.length >= 3 ? { name: e4[0], duration: F.a.parse(e4[1]), delay: F.a.parse(e4[2]) } : e4.length >= 1 ? { name: e4[0], duration: F.a.parse(e4[1]) } : {};
              })).map(function(t4) {
                return n2.parse(t4);
              });
            } }]), n2;
          }(z.a);
          n(231);
          function jp(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Sp(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Pp = function(t2) {
            s()(n2, t2);
            var e2 = Sp(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return this.$i18n("transition.property.title");
            } }, { key: "getBody", value: function() {
              return "<div class='elf--transition-list' ref='$transitionList'></div>";
            } }, { key: "getTools", value: function() {
              return '\n        <button type="button" ref="$add" title="add Transition">'.concat(D.a.add, "</button>\n    ");
            } }, { key: "isFirstShow", value: function() {
              return true;
            } }, { key: Object(V.LOAD)("$transitionList") + V.DOMDIFF, value: function() {
              var t3 = this, e3 = this.$selection.current;
              return e3 ? xp.parseStyle(e3.transition).map(function(e4, n3) {
                var r2 = t3.state.selectedIndex === n3 ? "selected" : "", i2 = Object(X.curveToPath)(e4.timingFunction, 30, 30);
                return "\n      <div class='transition-group-item'>\n        <div class='transition-item ".concat(r2, "' data-index='").concat(n3, `' ref="transitionIndex`).concat(n3, `">
            <div class='timing preview' data-index='`).concat(n3, "' ref='$preview").concat(n3, `'>
              <svg class='item-canvas' width="30" height="30" viewBox="0 0 30 30">
                <path d="`).concat(i2, `" stroke="white" stroke-width="1" fill='none' />
              </svg>
            </div>
            <div class='name'>
              <div class='labels'>
                <span class='property-name' title='Property'>`).concat(e4.name, "</span>\n                <span class='duration' title='Duration'><small>Duration: ").concat(e4.duration, "</small></span>\n                <span class='delay' title='Delay'><small>Delay: ").concat(e4.delay, `</small></span>
              </div>
            </div>
            <div class='tools'>
                <button type="button" class="del" data-index="`).concat(n3, '">\n                  ').concat(D.a.remove2, "\n                </button>\n            </div>\n        </div>\n      </div>        \n      ");
              }) : "";
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection"), value: function() {
              this.refreshShowIsNot([]);
            } }, { key: Object(V.CLICK)("$add"), value: function(t3) {
              var e3 = this;
              this.$selection.current ? (this.command("setAttributeForMulti", "add transition", this.$selection.packByValue({ transition: function(t4) {
                return xp.add(t4.transition);
              } })), this.nextTick(function() {
                setTimeout(function() {
                  e3.refresh();
                }, 100);
              })) : alert("Select a layer");
            } }, { key: "getCurrentTransition", value: function() {
              return this.current.transitions[this.selectedIndex];
            } }, { key: Object(V.CLICK)("$transitionList .tools .del"), value: function(t3) {
              var e3 = t3.$dt.attr("data-index"), n3 = this.$selection.current;
              n3 && (n3.reset({ transition: xp.remove(n3.transition, e3) }), this.emit("refreshElement", n3), this.refresh());
            } }, { key: "selectItem", value: function(t3) {
              var e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1];
              e3 ? this.refs["transitionIndex".concat(t3)].addClass("selected") : this.refs["transitionIndex".concat(t3)].removeClass("selected");
            } }, { key: "viewTransitionPicker", value: function(t3) {
              typeof this.selectedIndex == "number" && this.selectItem(this.selectedIndex, false), this.selectedIndex = +t3.attr("data-index"), this.current = this.$selection.current, this.current && (this.currentTransition = xp.get(this.current.transition, this.selectedIndex), this.viewTransitionPropertyPopup());
            } }, { key: "viewTransitionPropertyPopup", value: function() {
              if (this.currentTransition) {
                var t3 = this.currentTransition;
                this.emit("showTransitionPropertyPopup", { changeEvent: "changeTransitionPropertyPopup", data: t3.toCloneObject(), instance: this });
              }
            } }, { key: Object(V.CLICK)("$transitionList .preview"), value: function(t3) {
              this.viewTransitionPicker(t3.$dt);
            } }, { key: "getRef", value: function() {
              for (var t3 = arguments.length, e3 = new Array(t3), n3 = 0; n3 < t3; n3++)
                e3[n3] = arguments[n3];
              return this.refs[e3.join("")];
            } }, { key: Object(V.SUBSCRIBE)("changeTransitionPropertyPopup"), value: function(t3) {
              this.currentTransition && (this.currentTransition.reset(function(t4) {
                for (var e3 = 1; e3 < arguments.length; e3++) {
                  var n3 = arguments[e3] != null ? arguments[e3] : {};
                  e3 % 2 ? jp(Object(n3), true).forEach(function(e4) {
                    M()(t4, e4, n3[e4]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(n3)) : jp(Object(n3)).forEach(function(e4) {
                    Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(n3, e4));
                  });
                }
                return t4;
              }({}, t3)), this.current && (this.current.reset({ transition: xp.replace(this.current.transition, this.selectedIndex, this.currentTransition) }), this.emit("refreshElement", this.current), this.refresh()));
            } }]), n2;
          }($.a);
          n(232);
          function wp(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Rp(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? wp(Object(n2), true).forEach(function(e3) {
                M()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : wp(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Cp(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Ep = ["none", "all", "background-color", "background-position", "background-size", "border", "border-color", "border-width", "border-bottom", "border-bottom-color", "border-bottom-left-radius", "border-bottom-right-radius", "border-bottom-width", "border-left", "border-left-color", "border-left-width", "border-radius", "border-right", "border-right-color", "border-right-width", "border-spacing", "border-top", "border-top-color", "border-top-left-radius", "border-top-right-radius", "border-top-width", "bottom", "box-shadow", "color", "filter", "font-size", "font-size-adjust", "font-stretch", "font-weight", "height", "left", "letter-spacing", "line-height", "margin", "margin-bottom", "margin-left", "margin-right", "margin-top", "max-height", "max-width", "min-height", "min-width", "opacity", "padding", "padding-bottom", "padding-left", "padding-right", "padding-top", "perspective", "perspective-origin", "right", "text-decoration", "text-decoration-color", "text-indent", "text-shadow", "top", "transform", "vertical-align", "visibility", "width", "word-spacing", "z-index"].map(function(t2) {
            return { value: t2, text: t2 };
          }), $p = function(t2) {
            s()(n2, t2);
            var e2 = Cp(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getTitle", value: function() {
              return "Transition";
            } }, { key: "initState", value: function() {
              return { changeEvent: "", instance: {}, data: { timingFunction: "linear", duration: "0s", delay: "0s", name: "all" } };
            } }, { key: "updateData", value: function(t3) {
              this.state.data = Rp(Rp({}, this.state.data), t3), this.state.instance && this.state.instance.trigger(this.state.changeEvent, this.state.data);
            } }, { key: "getBody", value: function() {
              return "<div class='elf--transition-property-popup' ref='$popup'></div>";
            } }, { key: Object(V.LOAD)("$popup"), value: function() {
              return '\n      <div class="box">\n        '.concat(this.templateForProperty(), "\n        ").concat(this.templateForTimingFunction(), "\n        ").concat(this.templateForDelay(), "\n        ").concat(this.templateForDuration(), "\n      </div>\n    ");
            } }, { key: "templateForTimingFunction", value: function() {
              return `
    <div class='timing-function'>
      <label>Timing function</label>
      <object refClass="CubicBezierEditor" ref='$cubicBezierEditor' key="timingFunction" value="`.concat(this.state.data.timingFunction || "linear", `" onChange='changeCubicBezier' />
    </div>
    `);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeTransition"), value: function(t3, e3) {
              this.updateData(M()({}, t3, e3));
            } }, { key: "templateForProperty", value: function() {
              return `
      <div class='name'>
        <object refClass="SelectEditor"  
          ref='$property' 
          icon="true" 
          label="Property" 
          key='name' 
          value="`.concat(this.state.data.name, '" \n          options=').concat(this.variable(Ep), " \n          onChange='changeTransition' \n        /> \n      </div>\n    ");
            } }, { key: "templateForDelay", value: function() {
              return `
    <div class='delay'>
      <object refClass="RangeEditor"  ref='$delay' label='Delay' calc='false' key='delay' value='`.concat(this.state.data.delay, `' units='s,ms' onChange="changeRangeEditor" />
    </div>
    `);
            } }, { key: "templateForDuration", value: function() {
              return `
    <div class='duration'>
      <object refClass="RangeEditor"  ref='$duration' label='Duration'  calc='false' key='duration' value='`.concat(this.state.data.duration, `' units='s,ms' onChange="changeRangeEditor" />
    </div>
    `);
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeRangeEditor"), value: function(t3, e3) {
              this.updateData(M()({}, t3, e3));
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeCubicBezier"), value: function(t3, e3) {
              this.updateData(M()({}, t3, e3));
            } }, { key: Object(V.SUBSCRIBE)("showTransitionPropertyPopup"), value: function(t3) {
              this.setState(t3), this.show(250), this.children.$cubicBezierEditor.trigger("showCubicBezierEditor", t3.data.timingFunction);
            } }, { key: Object(V.SUBSCRIBE)("hideTransitionPropertyPopup"), value: function() {
              this.$el.hide();
            } }]), n2;
          }(tt);
          n(233);
          function Ip(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Tp = function(t2) {
            s()(n2, t2);
            var e2 = Ip(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getClassName", value: function() {
              return "item elf--video-property";
            } }, { key: "getTitle", value: function() {
              return this.$i18n("video.property.title");
            } }, { key: "initState", value: function() {
              return { $video: { el: {} }, status: "play", volume: 1 };
            } }, { key: "getBody", value: function() {
              return "<div ref='$body' style='padding-top: 3px;'></div>";
            } }, { key: "video", get: function() {
              return this.state.$video.el;
            } }, { key: "volumeStatus", get: function() {
              return this.state.volume === 0 ? "muted" : this.state.volume > 0.5 ? "up" : "down";
            } }, { key: "play", value: function() {
              this.video && this.video.play();
            } }, { key: "pause", value: function() {
              this.video && this.video.pause();
            } }, { key: Object(V.LOAD)("$body"), value: function() {
              var t3 = this.$selection.current || { playTime: "0:1:1" }, e3 = t3.currentTime || 0, n3 = (t3.playTime || "0:1:1").split(":").pop();
              return `
        <div ref='$tools' class='play-control' data-selected-value="`.concat(this.state.status, '">\n          <button type="button" data-value="play" >').concat(D.a.play, " ").concat(this.$i18n("video.property.play"), '</button>\n          <button type="button" data-value="pause">').concat(D.a.pause, "  ").concat(this.$i18n("video.property.pause"), `</button>      
          <div>
            <object refClass="NumberRangeEditor"  ref='$currentTime' min="0" max="`).concat(n3, '" value="').concat(e3, `" step="0.001" onchange="changeCurrentTime" />
          </div>
        </div>    
        <div class='property-item animation-property-item has-label'>        
          <div class='group'>
            <span class='add-timeline-property' data-property='volume'></span>
            `).concat(this.$i18n("video.property.volume"), "\n          </div>\n          <div ref='$volume_control' class='volume-control' data-selected-value='").concat(this.volumeStatus, "'>\n            <span data-value='muted'>").concat(D.a.volume_off, "</span>\n            <span data-value='down'>").concat(D.a.volume_down, "</span>\n            <span data-value='up'>").concat(D.a.volume_up, `</span>
            <input type="range" ref='$volume' min="0" max="1" step="0.001" value="`).concat(this.state.volume, `" />
          </div>          
        </div>
        <div class='property-item animation-property-item has-label'>        
          <div class='group'>
            <span class='add-timeline-property' data-property='playbackRate'></span>
            `).concat(this.$i18n("video.property.playbackRate"), `
          </div>
          <div>
            <object refClass="NumberRangeEditor"  ref='$playbackRate' min="0.1" max="10" clamp="true" value="`).concat(this.state.playbackRate, `" step="0.001" onchange="changePlaybackRate" />
          </div>
        </div>        
        <div class='property-item animation-property-item full'>
          <div class='group'>
            <span class='add-timeline-property' data-property='playTime'></span>
            `).concat(this.$i18n("video.property.playTime"), `
          </div>
          <object refClass="MediaProgressEditor" ref='$progress'  key='playTime' value="`).concat(t3.playTime, '" onchange="changeSelect" />\n        </div>\n      ');
            } }, { key: Object(V.SUBSCRIBE)("changeCurrentTime"), value: function(t3, e3) {
              this.setState({ currentTime: e3 }, false), this.command("setAttributeForMulti", "change video property", this.$selection.packByValue({ currentTime: e3 }));
            } }, { key: Object(V.SUBSCRIBE)("changePlaybackRate"), value: function(t3, e3) {
              this.setState({ playbackRate: e3 }, false), this.command("setAttributeForMulti", "change video property", this.$selection.packByValue({ playbackRate: e3 }));
            } }, { key: Object(V.CHANGEINPUT)("$volume"), value: function(t3) {
              var e3 = Number(this.refs.$volume.value);
              this.setState({ volume: e3 }, false), this.bindData("$volume_control"), this.command("setAttributeForMulti", "change video property", this.$selection.packByValue({ volume: e3 }));
            } }, { key: Object(V.BIND)("$volume_control"), value: function() {
              return { "data-selected-value": this.volumeStatus };
            } }, { key: Object(V.BIND)("$tools"), value: function() {
              return { "data-selected-value": this.state.status };
            } }, { key: Object(V.CLICK)("$tools button"), value: function(t3) {
              switch (t3.$dt.attr("data-value")) {
                case "play":
                  this.setState({ status: "pause" }, false), this.play();
                  break;
                case "pause":
                  this.setState({ status: "play" }, false), this.pause();
              }
              this.bindData("$tools");
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeValue") + Object(V.DEBOUNCE)(100), value: function(t3, e3) {
              this.state.$video && this.command("setAttributeForMulti", "change video property", this.$selection.packByValue(M()({}, t3, e3)));
            } }, { key: Object(V.SUBSCRIBE_SELF)("changeSelect"), value: function(t3, e3) {
              this.command("setAttributeForMulti", "change video property", this.$selection.packByValue(M()({}, t3, e3)));
            } }, { key: Object(V.SUBSCRIBE_SELF)("updateVideoEvent"), value: function(t3) {
              this.video.paused && (this.setState({ status: "play", currentTime: this.video.currentTime }, false), this.bindData("$tools")), this.children.$currentTime.setValue(this.video.currentTime);
            } }, { key: Object(V.SUBSCRIBE)("refreshSelection") + Object(V.DEBOUNCE)(100), value: function() {
              var t3 = this, e3 = this.$selection.current;
              this.refreshShow(["video"]), e3 && e3.is("video") && this.emit("refElement", e3.id, function(n3) {
                var r2 = n3.$("video");
                t3.state.$video = r2, t3.setState({ volume: e3.volume, currentTime: e3.currentTime, playbackRate: e3.playbackRate }, false), t3.video.ontimeupdate = function(e4) {
                  t3.trigger("updateVideoEvent", e4);
                }, t3.video.onprogress = function(e4) {
                  t3.trigger("updateVideoEvent", e4);
                }, t3.load("$body");
              });
            } }]), n2;
          }($.a);
          e.a = [function(t2) {
            dn.forEach(function(e2) {
              t2.registerConfig(e2);
            });
          }, function(t2) {
            Object.keys(or).forEach(function(e2) {
              t2.registerI18nMessage(e2, or[e2]);
            });
          }, function(t2) {
            t2.registerItem("project", Pn.a), t2.registerItem("artboard", vn.a), t2.registerItem("rect", En), t2.registerItem("circle", kn), t2.registerItem("image", Sn), t2.registerItem("text", ar), t2.registerItem("svg-path", zn), t2.registerItem("svg-text", Gn), t2.registerItem("svg-textpath", Xn), t2.registerItem("template", tr);
          }, function(t2) {
            t2.registerRendererType("html", new Gc(t2)), t2.registerRenderer("html", "project", new Iu()), t2.registerRenderer("html", "artboard", new Yc()), t2.registerRenderer("html", "rect", new Bu()), t2.registerRenderer("html", "circle", new Wc()), t2.registerRenderer("html", "image", new ns()), t2.registerRenderer("html", "text", new Wu()), t2.registerRenderer("html", "video", new qu()), t2.registerRenderer("html", "svg-path", new Fu()), t2.registerRenderer("html", "svg-text", new Uu()), t2.registerRenderer("html", "svg-textpath", new Nu()), t2.registerRenderer("html", "cube", new ts()), t2.registerRenderer("html", "template", new Yu());
          }, function(t2) {
            t2.registerRendererType("json", new nl(t2)), t2.registerRenderer("json", "project", new Al()), t2.registerRenderer("json", "artboard", new dl()), t2.registerRenderer("json", "rect", new zl()), t2.registerRenderer("json", "circle", new kl()), t2.registerRenderer("json", "image", new Cl()), t2.registerRenderer("json", "template", new cf()), t2.registerRenderer("json", "iframe", new Sl()), t2.registerRenderer("json", "text", new ff()), t2.registerRenderer("json", "video", new vf()), t2.registerRenderer("json", "svg-path", new Xl()), t2.registerRenderer("json", "svg-text", new nf()), t2.registerRenderer("json", "svg-textpath", new Jl());
          }, function(t2) {
            t2.registerRendererType("svg", new yf(t2)), t2.registerRenderer("svg", "project", new Tf()), t2.registerRenderer("svg", "artboard", new xf()), t2.registerRenderer("svg", "rect", new Mf()), t2.registerRenderer("svg", "circle", new wf()), t2.registerRenderer("svg", "image", new $f()), t2.registerRenderer("svg", "template", new Zf()), t2.registerRenderer("svg", "iframe", new Cf()), t2.registerRenderer("svg", "video", new th()), t2.registerRenderer("svg", "text", new Jf()), t2.registerRenderer("svg", "svg-path", new zf()), t2.registerRenderer("svg", "svg-text", new Xf()), t2.registerRenderer("svg", "svg-textpath", new Gf());
          }, function(t2) {
            t2.registerElement({ IconListViewEditor: oc, TextAreaEditor: Mc, TextEditor: Dc, ColorSingleEditor: Eo, CubicBezierEditor: Lo, ClipPathEditor: La, ColorViewEditor: Io, VarEditor: Ac, PathDataEditor: Pc, PolygonDataEditor: Cc, InputArrayEditor: sc, StrokeDashArrayEditor: Tc, NumberInputEditor: kc, NumberRangeEditor: xc, MediaProgressEditor: mc, SelectIconEditor: $c, CSSPropertyEditor: Bo, DirectionEditor: zo, IterationCountEditor: yc, GradientEditor: ic, FilterEditor: Ko, SelectEditor: $a, BlendSelectEditor: Va, RangeEditor: hc, InputRangeEditor: lc, ColorAssetsEditor: Ro, FontSelectEditor: qo });
          }, function(t2) {
            t2.registerElement({ ColorPickerEditor: nn, EmbedColorPicker: cn }), t2.registerMenuItem("popup", { ColorPickerPopup: an });
          }, function(t2) {
            t2.registerElement({ FillSingleEditor: Fr, FillEditor: wr, GradientSingleEditor: _r }), t2.registerMenuItem("popup", { FillPickerPopup: Lr, GradientPickerPopup: Br });
          }, function(t2) {
            t2.registerMenuItem("inspector.tab.style", { SVGTextProperty: Ah });
          }, function(t2) {
            t2.registerMenuItem("inspector.tab.style", { FontProperty: pr });
          }, function(t2) {
            t2.registerMenuItem("inspector.tab.style", { TextProperty: _h });
          }, function(t2) {
            t2.registerElement({ TextShadowEditor: Wh }), t2.registerMenuItem("inspector.tab.style", { TextShadowProperty: qh }), t2.registerMenuItem("popup", { TextShadowPropertyPopup: Qh });
          }, function(t2) {
            t2.registerMenuItem("inspector.tab.style", { FontSpacingProperty: vr });
          }, function(t2) {
            t2.registerElement({ ContentProperty: pn });
          }, function(t2) {
            t2.registerMenuItem("inspector.tab.style", { TextFillProperty: Kh });
          }, function(t2) {
            t2.registerMenuItem("inspector.tab.style", { TextClipProperty: Gh });
          }, function(t2) {
            t2.registerElement({ AlignmentProperty: T });
          }, function(t2) {
            t2.registerMenuItem("inspector.tab.style", { ArtBoardSizeProperty: lt });
          }, function(t2) {
            t2.registerElement({ FlexLayoutEditor: Ii, FlexLayoutItemEditor: Mi, GridLayoutEditor: Yi, GridLayoutItemEditor: Zi, GridBoxEditor: Ni, GridGapEditor: Ui }), t2.registerMenuItem("inspector.tab.style", { LayoutProperty: ta, GridLayoutItemProperty: Ji, FlexLayoutItemProperty: Di });
          }, function(t2) {
            t2.registerElement({ AppearanceProperty: ct });
          }, function(t2) {
            t2.registerMenuItem("inspector.tab.style", { ComponentProperty: fn });
          }, function(t2) {
            t2.registerElement({ BackgroundImageEditor: St, BackgroundPositionEditor: Tt }), t2.registerMenuItem("inspector.tab.style", { BackgroundImageProperty: Ct }), t2.registerMenuItem("popup", { BackgroundImagePositionPopup: wt });
          }, function(t2) {
            t2.registerElement({ BorderEditor: Ft, BorderValueEditor: Gt }), t2.registerMenuItem("inspector.tab.style", { BorderProperty: Nt });
          }, function(t2) {
            t2.registerElement({ BorderRadiusEditor: ne }), t2.registerMenuItem("inspector.tab.style", { BorderRadiusProperty: ie });
          }, function(t2) {
            t2.registerMenuItem("inspector.tab.style", { VideoProperty: Tp });
          }, function(t2) {
            t2.registerElement({ ImageSelectEditor: di }), t2.registerMenuItem("inspector.tab.style", { ImageProperty: hi }), t2.registerMenuItem("popup", { ImageSelectPopup: yi });
          }, function(t2) {
            t2.registerElement({ PatternEditor: oa, PatternSizeEditor: va, PatternAssetsProperty: ia }), t2.registerMenuItem("inspector.tab.style", { PatternProperty: fa }), t2.registerMenuItem("popup", { PatternInfoPopup: sa });
          }, function(t2) {
            t2.registerElement({ SVGFilterAssetsProperty: sh });
          }, function(t2) {
            t2.registerElement({ ColorMatrixEditor: hh, FuncFilterEditor: yh, SVGFilterSelectEditor: Mh, SVGFilterEditor: $h }), t2.registerMenuItem("inspector.tab.style", { SVGItemProperty: Dh }), t2.registerMenuItem("popup", { SVGFilterPopup: Th });
          }, function(t2) {
            t2.registerElement({ LayerTreeProperty: Ri });
          }, function(t2) {
            t2.registerElement({ BackgroundClipProperty: gt });
          }, function(t2) {
            t2.registerElement({ BorderImageProperty: qt });
          }, function(t2) {
            t2.registerMenuItem("inspector.tab.style", { FilterProperty: fr });
          }, function(t2) {
            t2.registerMenuItem("inspector.tab.style", { BackdropFilterProperty: vt });
          }, function(t2) {
            t2.registerElement({ BoxShadowEditor: le }), t2.registerMenuItem("inspector.tab.style", { BoxShadowProperty: he }), t2.registerMenuItem("popup", { BoxShadowPropertyPopup: ye });
          }, function(t2) {
            t2.registerMenuItem("inspector.tab.style", { ClipPathProperty: Le }), t2.registerMenuItem("popup", { ClipPathPopup: Me });
          }, function(t2) {
            t2.registerMenuItem("inspector.tab.style", { BoxModelProperty: ce });
          }, function(t2) {
            t2.registerElement({ PositionProperty: Ca });
          }, function(t2) {
            t2.registerElement({ GradientAssetsProperty: Jr });
          }, function(t2) {
            t2.registerElement({ RotateEditorView: rp, TransformEditor: up }), t2.registerMenuItem("inspector.tab.style", { TransformProperty: hp });
          }, function(t2) {
            t2.registerElement({ TransformOriginEditor: gp }), t2.registerMenuItem("inspector.tab.style", { TransformOriginProperty: bp });
          }, function(t2) {
            t2.registerMenuItem("inspector.tab.style", { PerspectiveProperty: ga });
          }, function(t2) {
            t2.registerElement({ PerspectiveOriginEditor: xa }), t2.registerMenuItem("inspector.tab.style", { PerspectiveOriginProperty: Sa });
          }, function(t2) {
            t2.registerMenuItem("inspector.tab.style", { ExportProperty: sr });
          }, function(t2) {
            t2.registerMenuItem("inspector.tab.transition", { TransitionProperty: Pp }), t2.registerMenuItem("popup", { TransitionPropertyPopup: $p });
          }, function(t2) {
            t2.registerElement({ OffsetEditor: Si }), t2.registerMenuItem("inspector.tab.transition", { KeyframeProperty: Oi }), t2.registerMenuItem("popup", { KeyframePopup: mi });
          }, function(t2) {
            t2.registerMenuItem("inspector.tab.transition", { AnimationProperty: q }), t2.registerMenuItem("popup", { AnimationPropertyPopup: it });
          }, function(t2) {
            t2.registerMenuItem("inspector.tab.transition", { SelectorProperty: oh }), t2.registerMenuItem("popup", { SelectorPopup: nh });
          }, function(t2) {
            t2.registerMenuItem("inspector.tab.code", { CodeViewProperty: Fe });
          }, function(t2) {
            t2.registerMenuItem("inspector.tab.history", { HistoryProperty: ti });
          }];
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return fe;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f), p = n(53), d = n.n(p), v = n(0), y2 = n(13), g = n(68);
          n(134);
          function m(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var b = [], k = function(t2) {
            s()(n2, t2);
            var e2 = m(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              return `
            <div class="elf--horizontal-ruler">
                <div class='horizontal-ruler-container' ref='$layerRuler'></div>                            
                <div class='horizontal-ruler-container' ref='$ruler'></div>
            </div>
        `;
            } }, { key: "afterRender", value: function() {
              this.refreshCanvasSize();
            } }, { key: "refreshCanvasSize", value: function() {
              this.state.rect = this.$el.rect();
            } }, { key: "makeLine", value: function(t3, e3, n3, r2, i2, a2) {
              var o2 = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : 3, c2 = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : 30, s2 = arguments.length > 8 && arguments[8] !== void 0 ? arguments[8] : 10, u2 = n3 - n3 % e3, l2 = r2 + r2 % e3, f2 = (u2 - n3) / i2 * a2, h2 = (u2 + e3 - n3) / i2 * a2;
              if (!(Math.abs(h2 - f2) < o2)) {
                for (var p2 = u2; p2 < l2; p2 += e3)
                  if (p2 == 0 || p2 % s2 != 0) {
                    var d2 = Math.floor((p2 - n3) / i2 * a2);
                    t3[t3.length] = "M ".concat(d2, " ").concat(30 - c2, " L ").concat(d2, " 30 ");
                  }
              }
            } }, { key: "makeLineText", value: function(t3, e3, n3, r2, i2) {
              var a2 = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : 3, o2 = [], c2 = e3 - e3 % t3, s2 = n3 + n3 % t3, u2 = (c2 - e3) / r2 * i2, l2 = (c2 + t3 - e3) / r2 * i2;
              if (!(Math.abs(l2 - u2) < a2)) {
                for (var f2 = c2; f2 < s2; f2 += t3) {
                  var h2 = Math.floor((f2 - e3) / r2 * i2);
                  o2[o2.length] = '<text x="'.concat(h2, '" y="', 0, '" dx="0" dy="8" text-anchor="middle" alignment-baseline="bottom" >').concat(f2, "</text>");
                }
                return o2.join("");
              }
            } }, { key: "makeRulerForCurrentArtboard", value: function() {
              var t3 = this.$selection.current;
              if (!t3)
                return "";
              var e3 = t3.artboard;
              if (!e3)
                return "";
              var n3 = e3.verties, r2 = this.$viewport, i2 = r2.minX, a2 = (r2.maxX, r2.width), o2 = this.state.rect.width, c2 = (n3[0][0] - i2) / a2 * o2, s2 = (n3[2][0] - i2) / a2 * o2;
              return "\n            M ".concat(c2, " 20 \n            L ").concat(c2, " 30 \n            L ").concat(s2, " 30 \n            L ").concat(s2, " 20 \n            Z\n        ");
            } }, { key: "makeRulerForCurrent", value: function() {
              if (!this.$selection.current)
                return "";
              var t3 = this.$selection.verties.map(function(t4) {
                return t4[0];
              }), e3 = Math.min.apply(Math, t3), n3 = Math.max.apply(Math, t3), r2 = this.$viewport, i2 = r2.minX, a2 = r2.width, o2 = this.state.rect.width, c2 = (e3 - i2) / a2 * o2, s2 = (n3 - i2) / a2 * o2;
              return "\n            M ".concat(c2, " 15 \n            L ").concat(c2, " 20 \n            L ").concat(s2, " 20 \n            L ").concat(s2, " 15 \n            Z\n        ");
            } }, { key: "makeRuler", value: function() {
              var t3 = this.$viewport, e3 = t3.minX, n3 = t3.maxX, r2 = t3.width, i2 = this.state.rect.width;
              return b = [], this.makeLine(b, 200, e3, n3, r2, i2, 10, 20, 1e4), this.makeLine(b, 100, e3, n3, r2, i2, 10, 20, 200), this.makeLine(b, 50, e3, n3, r2, i2, 10, 20, 100), this.makeLine(b, 10, e3, n3, r2, i2, 10, 18, 50), this.makeLine(b, 5, e3, n3, r2, i2, 10, 15, 10), this.makeLine(b, 1, e3, n3, r2, i2, 10, 13, 5), b.join("");
            } }, { key: "makeRulerText", value: function() {
              var t3 = this.$viewport, e3 = t3.minX, n3 = t3.maxX, r2 = t3.width, i2 = this.state.rect.width, a2 = Math.abs(n3 - e3);
              return [a2 > 3e3 ? this.makeLineText(500, e3, n3, r2, i2, 20) : "", 1e3 < a2 && a2 < 3e3 ? this.makeLineText(100, e3, n3, r2, i2, 20) : "", 800 < a2 && a2 < 1e3 ? this.makeLineText(100, e3, n3, r2, i2, 20) : "", 500 < a2 && a2 < 800 ? this.makeLineText(100, e3, n3, r2, i2, 20) : "", 500 < a2 && a2 < 800 ? this.makeLineText(50, e3, n3, r2, i2, 20) : "", 200 < a2 && a2 < 500 ? this.makeLineText(50, e3, n3, r2, i2, 20) : "", 50 < a2 && a2 < 200 ? this.makeLineText(10, e3, n3, r2, i2, 20) : "", 15 < a2 && a2 < 50 ? this.makeLineText(5, e3, n3, r2, i2, 20) : "", 0 < a2 && a2 < 15 ? this.makeLineText(1, e3, n3, r2, i2, 20) : ""].join("");
            } }, { key: Object(v.LOAD)("$ruler") + v.DOMDIFF, value: function() {
              return this.state.rect && this.state.rect.width != 0 || (this.state.rect = this.$el.rect()), '\n            <svg width="100%" width="100%" overflow="hidden">\n                <path d="'.concat(this.makeRuler(), '" fill="transparent" stroke-width="0.5" stroke="white" transform="translate(0.5, 0)" />\n                ').concat(this.makeRulerText(), "                \n            </svg>\n        ");
            } }, { key: Object(v.LOAD)("$layerRuler") + v.DOMDIFF, value: function() {
              return this.state.rect && this.state.rect.width != 0 || (this.state.rect = this.$el.rect()), '\n            <svg width="100%" width="100%" overflow="hidden">\n                <path d="'.concat(this.makeRulerForCurrent(), '" fill="rgba(100, 255, 255, 0.5)" />\n            </svg>\n        ');
            } }, { key: "refresh", value: function() {
              this.$config.get("show.ruler") && this.load();
            } }, { key: Object(v.SUBSCRIBE)("updateViewport", "refreshSelection"), value: function() {
              this.refresh();
            } }, { key: Object(v.SUBSCRIBE)("refreshSelectionStyleView") + Object(v.THROTTLE)(10), value: function() {
              this.$selection.current && (this.$selection.current.hasChangedField("x", "y", "width", "height", "transform", "rotateZ", "rotate") && this.refresh());
            } }, { key: Object(v.SUBSCRIBE)("resize.window", "resizeCanvas"), value: function() {
              this.refreshCanvasSize();
            } }]), n2;
          }(y2.a);
          n(135);
          function O(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var x2 = [], j = function(t2) {
            s()(n2, t2);
            var e2 = O(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              return `
            <div class="elf--vertical-ruler">
                <div class='vertical-ruler-container' ref='$layerRuler'></div>                                        
                <div class='vertical-ruler-container' ref='$body'></div>
            </div>
        `;
            } }, { key: "afterRender", value: function() {
              this.refreshCanvasSize();
            } }, { key: "refreshCanvasSize", value: function() {
              this.state.rect = this.$el.rect();
            } }, { key: "makeLine", value: function(t3, e3, n3, r2, i2, a2) {
              var o2 = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : 3, c2 = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : 30, s2 = arguments.length > 8 && arguments[8] !== void 0 ? arguments[8] : 10, u2 = n3 - n3 % e3, l2 = r2 + r2 % e3, f2 = (u2 - n3) / i2 * a2, h2 = (u2 + e3 - n3) / i2 * a2;
              if (!(Math.abs(h2 - f2) < o2)) {
                for (var p2 = u2; p2 < l2; p2 += e3)
                  if (p2 == 0 || p2 % s2 != 0) {
                    var d2 = Math.floor((p2 - n3) / i2 * a2);
                    t3[t3.length] = "M ".concat(30 - c2, " ").concat(d2, " L 30 ").concat(d2);
                  }
              }
            } }, { key: "makeLineText", value: function(t3, e3, n3, r2, i2) {
              var a2 = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : 3, o2 = [], c2 = e3 - e3 % t3, s2 = n3 + n3 % t3, u2 = (c2 - e3) / r2 * i2, l2 = (c2 + t3 - e3) / r2 * i2;
              if (!(Math.abs(l2 - u2) < a2)) {
                for (var f2 = c2; f2 < s2; f2 += t3) {
                  var h2 = Math.floor((f2 - e3) / r2 * i2);
                  o2[o2.length] = '<text x="'.concat(1, '" y="', h2, '" dy="6" dominant-baseline="central" transform="rotate(-90, 1, ').concat(h2, ')">').concat(f2, "</text>");
                }
                return o2.join("");
              }
            } }, { key: "makeRulerForCurrentArtboard", value: function() {
              var t3 = this.$selection.current;
              if (!t3)
                return "";
              var e3 = t3.artboard;
              if (!e3)
                return "";
              var n3 = e3.verties, r2 = this.$viewport, i2 = r2.minY, a2 = (r2.maxY, r2.height), o2 = this.state.rect.height, c2 = (n3[0][1] - i2) / a2 * o2, s2 = (n3[2][1] - i2) / a2 * o2;
              return "\n            M 20 ".concat(c2, "\n            L 30 ").concat(c2, "\n            L 30 ").concat(s2, "\n            L 20 ").concat(s2, "\n            Z\n        ");
            } }, { key: "makeRulerForCurrent", value: function() {
              if (!this.$selection.current)
                return "";
              var t3 = this.$viewport, e3 = t3.minY, n3 = t3.height, r2 = this.state.rect.height, i2 = this.$selection.verties.map(function(t4) {
                return t4[1];
              }), a2 = (Math.min.apply(Math, i2) - e3) / n3 * r2, o2 = (Math.max.apply(Math, i2) - e3) / n3 * r2;
              return "\n            M 15 ".concat(a2, "\n            L 20 ").concat(a2, "\n            L 20 ").concat(o2, "\n            L 15 ").concat(o2, "\n            Z\n        ");
            } }, { key: "makeRuler", value: function() {
              var t3 = this.$viewport, e3 = t3.minY, n3 = t3.maxY, r2 = t3.height, i2 = this.state.rect.height;
              return x2 = [], this.makeLine(x2, 200, e3, n3, r2, i2, 10, 18, 1e4), this.makeLine(x2, 100, e3, n3, r2, i2, 10, 18, 200), this.makeLine(x2, 50, e3, n3, r2, i2, 10, 18, 100), this.makeLine(x2, 10, e3, n3, r2, i2, 10, 18, 50), this.makeLine(x2, 5, e3, n3, r2, i2, 10, 15, 10), this.makeLine(x2, 1, e3, n3, r2, i2, 10, 14, 5), x2.join("");
            } }, { key: "makeRulerText", value: function() {
              var t3 = this.$viewport, e3 = t3.minY, n3 = t3.maxY, r2 = t3.height, i2 = this.state.rect.height, a2 = Math.abs(n3 - e3);
              return [a2 > 3e3 ? this.makeLineText(500, e3, n3, r2, i2, 20) : "", 1e3 < a2 && a2 < 3e3 ? this.makeLineText(100, e3, n3, r2, i2, 20) : "", 800 < a2 && a2 < 1e3 ? this.makeLineText(100, e3, n3, r2, i2, 20) : "", 500 < a2 && a2 < 800 ? this.makeLineText(100, e3, n3, r2, i2, 20) : "", 500 < a2 && a2 < 800 ? this.makeLineText(50, e3, n3, r2, i2, 20) : "", 200 < a2 && a2 < 500 ? this.makeLineText(50, e3, n3, r2, i2, 20) : "", 50 < a2 && a2 < 200 ? this.makeLineText(10, e3, n3, r2, i2, 20) : "", 15 < a2 && a2 < 50 ? this.makeLineText(5, e3, n3, r2, i2, 20) : "", 0 < a2 && a2 < 15 ? this.makeLineText(1, e3, n3, r2, i2, 20) : ""].join("");
            } }, { key: Object(v.LOAD)("$body") + v.DOMDIFF, value: function() {
              return this.state.rect && this.state.rect.width != 0 || (this.state.rect = this.$el.rect()), '\n            <svg width="100%" height="100%" overflow="hidden">\n                <path d="'.concat(this.makeRuler(), '" fill="transparent" stroke-width="0.5" stroke="white" transform="translate(0, 0.5)" />\n                ').concat(this.makeRulerText(), "\n            </svg>\n        ");
            } }, { key: Object(v.LOAD)("$layerRuler") + v.DOMDIFF, value: function() {
              return this.state.rect && this.state.rect.width != 0 || (this.state.rect = this.$el.rect()), '\n            <svg width="100%" height="100%" overflow="hidden">\n                <path d="'.concat(this.makeRulerForCurrent(), '" fill="rgba(100, 255, 255, 0.5)" />\n            </svg>\n        ');
            } }, { key: "refresh", value: function() {
              this.$config.get("show.ruler") && this.load();
            } }, { key: Object(v.SUBSCRIBE)("updateViewport"), value: function() {
              this.refresh();
            } }, { key: Object(v.SUBSCRIBE)("refreshSelectionStyleView") + Object(v.THROTTLE)(10), value: function() {
              var t3 = this.$selection.current;
              t3 && t3.hasChangedField("x", "y", "width", "height", "transform", "rotateZ", "rotate") && this.refresh();
            } }, { key: Object(v.SUBSCRIBE)("refreshSelection"), value: function() {
              this.load("$layerRuler");
            } }, { key: Object(v.SUBSCRIBE)("resize.window", "resizeCanvas"), value: function() {
              this.refreshCanvasSize();
            } }]), n2;
          }(y2.a), S = n(12), P = n.n(S), w = n(18), R = n.n(w), C = n(15), E = n.n(C), $ = n(16), I = n.n($), T = n(9), B = n(47), M = n(49), V = n(19), D = n(2), L = n(8), A = n(10), F = n.n(A), z = n(59);
          function N(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var _ = V.a.create("div"), U = function(t2) {
            s()(n2, t2);
            var e2 = N(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              return "\n    <div class='style-view' style='pointer-events: none; position: absolute;display:inline-block;left:-1000px;'>\n      <div ref='$svgArea'></div>\n      <style type='text/css' ref='$styleView'></style>\n    </div>\n    ";
            } }, { key: "initialize", value: function() {
              F()(h()(n2.prototype), "initialize", this).call(this), this.refs.$head = V.a.create(document.head);
            } }, { key: "makeStyle", value: function(t3) {
              return this.$editor.html.toStyle(t3);
            } }, { key: "refreshStyleHead", value: function() {
              var t3 = this, e3 = this.$selection.currentProject || new z.a();
              this.refs.$head.$$('style[data-renderer-type="html"]').forEach(function(t4) {
                return t4.remove();
              }), this.changeStyleHead(e3), e3.layers.forEach(function(e4) {
                return t3.changeStyleHead(e4);
              });
            } }, { key: "changeStyleHead", value: function(t3) {
              var e3 = this, n3 = V.a.create("div"), r2 = this.makeStyle(t3);
              n3.html(r2).children().forEach(function(t4) {
                e3.refs.$head.append(t4);
              });
            } }, { key: "refreshStyleHeadOne", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1], n3 = [t3];
              e3 || (n3 = t3.allLayers);
              var r2 = n3.map(function(t4) {
                return 'style[data-renderer-type="html"][data-id="'.concat(t4.id, '"]');
              }).join(","), i2 = false;
              this.refs.$head.$$(r2).forEach(function(e4) {
                t3.isChanged(e4.attr("data-timestamp")) && (i2 = true, e4.remove());
              }), i2 && this.changeStyleHead(t3);
            } }, { key: Object(v.LOAD)("$svgArea") + v.DOMDIFF, value: function() {
              var t3 = this.$selection.currentProject || {};
              return this.$editor.html.renderSVG(t3);
            } }, { key: Object(v.SUBSCRIBE)("refreshStyleView", "moveTimeline", "playTimeline"), value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
              t3 ? (this.load(), this.refreshStyleHeadOne(t3, e3)) : this.refresh();
            } }, { key: Object(v.SUBSCRIBE)("refreshSVGArea"), value: function() {
              this.load("$svgArea");
            } }, { key: Object(v.SUBSCRIBE)("refreshSelection"), value: function() {
              var t3 = this.$selection.items.map(function(t4) {
                return '[data-id="'.concat(t4.id, '"]');
              }).join(","), e3 = this.$selection.isMany ? "\n      ".concat(t3, " {\n        box-shadow: 0 0 0 1px #66baff;\n      }\n    ") : "";
              this.refs.$styleView.html(e3);
            } }, { key: Object(v.SUBSCRIBE)("refreshSelectionStyleView"), value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, e3 = t3;
              Object(L.isArray)(t3) ? e3 = t3 : t3 !== null && (e3 = [t3]);
              for (var n3 = [], r2 = [], i2 = [], a2 = 0, o2 = (n3 = e3 ? Object(L.isString)(e3[0]) ? this.$selection.itemsByIds(e3) : e3 : this.$selection.items).length; a2 < o2; a2++) {
                var c2 = n3[a2], s2 = c2.allLayers.map(function(t4) {
                  return 'style[data-renderer-type="html"][data-id="'.concat(t4.id, '"]');
                }).join(",");
                i2.push(s2), r2.push(this.makeStyle(c2));
              }
              i2.length && this.refs.$head.$$(i2).forEach(function(t4) {
                t4.remove();
              });
              var u2 = _.html(r2.join("")).createChildrenFragment();
              this.refs.$head.append(u2);
            } }, { key: "refresh", value: function() {
              this.load(), this.refreshStyleHead();
            } }]), n2;
          }(y2.a);
          n(136);
          function G(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var H = function(t2) {
            s()(n2, t2);
            var e2 = G(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "components", value: function() {
              return { StyleView: U };
            } }, { key: "initState", value: function() {
              return { mode: "selection", x: D.a.z(), y: D.a.z(), width: D.a.px(1e4), height: D.a.px(1e4), cachedCurrentElement: {}, html: "" };
            } }, { key: "template", value: function() {
              return "\n            <div class='elf--element-view' ref='$body'>\n                <object refClass='StyleView' ref='$styleView' />\n                <div class='canvas-view' ref='$view'></div>\n                ".concat(this.$menuManager.generate("render.view"), "\n            </div>\n        ");
            } }, { key: Object(v.SUBSCRIBE)("afterChangeMode"), value: function() {
              this.$el.attr("data-mode", this.$editor.mode);
            } }, { key: Object(v.SUBSCRIBE)("refElement"), value: function(t3, e3) {
              Object(L.isFunction)(e3) && e3(this.getElement(t3));
            } }, { key: "clearElementAll", value: function() {
              var t3 = this;
              this.$selection.each(function(e3) {
                t3.clearElement(e3.id);
              });
            } }, { key: "clearElement", value: function(t3) {
              this.state.cachedCurrentElement[t3] = void 0;
            } }, { key: "getElement", value: function(t3) {
              return this.state.cachedCurrentElement[t3] || (this.state.cachedCurrentElement[t3] = this.refs.$view.$('[data-id="'.concat(t3, '"]'))), this.state.cachedCurrentElement[t3];
            } }, { key: Object(v.DOUBLECLICK)("$view .element-item.text .text-content"), value: function(t3) {
              t3.$dt.addClass("focused"), t3.$dt.attr("contenteditable", "true"), t3.$dt.focus(), t3.$dt.select();
            } }, { key: Object(v.FOCUSOUT)("$view .element-item.text .text-content"), value: function(t3) {
              t3.$dt.removeAttr("contenteditable"), t3.$dt.removeClass("focused");
            } }, { key: Object(v.KEYUP)("$view .element-item.text .text-content"), value: function(t3) {
              var e3 = t3.$dt.html(), n3 = t3.$dt.text(), r2 = t3.$dt.parent().attr("data-id"), i2 = [];
              this.$selection.items.filter(function(t4) {
                return t4.id === r2;
              }).forEach(function(t4) {
                t4.reset({ content: e3, text: n3 }), i2.push({ id: t4.id, content: e3, text: n3 });
              }), this.emit("refreshContent", i2), this.emit("refreshSelectionTool", false);
            } }, { key: "checkEditMode", value: function(t3) {
              if (this.$config.get("set.tool.hand"))
                return false;
              var e3 = this.$shortcuts.getGeneratedKeyCode(B.a.space);
              if (this.$keyboardManager.check(e3))
                return false;
              var n3 = this.$viewport.getWorldPosition(t3);
              if (this.$selection.hasPoint(n3))
                return true;
              var r2 = V.a.create(t3.target);
              if (r2.hasClass("canvas-view"))
                return false;
              var i2 = r2.closest("element-item");
              if (!i2)
                return !!this.$editor.isSelectionMode();
              if (i2.hasClass("focused"))
                return false;
              var a2 = i2.attr("data-id");
              if (t3.altKey === false) {
                var o2 = this.$selection.currentProject.searchById(a2);
                if (o2.is("artboard") && o2.hasChildren())
                  return this.$config.set("set.dragarea.mode", true), true;
              }
              return this.$editor.isSelectionMode();
            } }, { key: Object(v.DOUBLECLICK)("$view"), value: function(t3) {
              var e3 = V.a.create(t3.target).closest("element-item").attr("data-id"), n3 = this.$selection.get(e3);
              this.$selection.isOne && n3 && (this.emit("openEditor"), this.emit("removeGuideLine"));
            } }, { key: Object(v.POINTERSTART)("$view") + Object(v.IF)("checkEditMode") + Object(v.MOVE)("calculateMovedElement") + Object(v.END)("calculateEndedElement"), value: function(t3) {
              if (this.initMousePoint = this.$viewport.getWorldPosition(t3), this.$config.get("set.dragarea.mode"))
                this.emit("startDragAreaView");
              else {
                var e3 = this.$selection.hasPoint(this.initMousePoint), n3 = V.a.create(t3.target);
                if (n3.hasClass("canvas-view"))
                  return this.$selection.select(), this.initializeDragSelection(), this.emit("history.refreshSelection"), false;
                var r2 = n3.closest("element-item"), i2 = r2 && r2.attr("data-id");
                if (e3 && r2 && r2.hasClass("artboard") === false && (e3 = false), t3.altKey)
                  e3 || this.$selection.check({ id: i2 }) === false && this.$selection.selectById(i2), this.$selection.isEmpty === false && (this.$selection.selectAfterCopy(), this.trigger("refreshAllCanvas"), this.emit("refreshLayerTreeView"), this.initializeDragSelection(), this.emit("history.refreshSelection"));
                else {
                  if (e3)
                    ;
                  else if (t3.shiftKey)
                    this.$selection.toggleById(i2);
                  else if (this.$selection.check({ id: i2 }) === false) {
                    var a2 = this.$selection.currentProject.searchById(i2);
                    a2 && a2.is("artboard") && a2.hasChildren() || this.$selection.selectById(i2);
                  }
                  this.initializeDragSelection(), this.emit("history.refreshSelection");
                }
              }
            } }, { key: "initializeDragSelection", value: function() {
              this.$selection.reselect(), this.$snapManager.clear(), this.emit("refreshSelectionTool", true);
            } }, { key: "calculateMovedElement", value: function() {
              if (this.$config.get("set.dragarea.mode"))
                this.emit("moveDragAreaView");
              else if (!this.$selection.isLayoutItem) {
                var t3 = this.$viewport.getWorldPosition(), e3 = T.d.floor([], T.d.subtract([], t3, this.initMousePoint));
                this.moveTo(e3), this.$selection.changeArtBoard() && (this.initMousePoint = t3, this.$selection.reselect(), this.$snapManager.clear(), this.clearElementAll(), this.trigger("refreshAllCanvas"), this.emit("refreshLayerTreeView")), this.emit("setAttributeForMulti", this.$selection.pack("x", "y")), this.emit("refreshSelectionTool", true);
              }
            } }, { key: "moveTo", value: function(t3) {
              t3 = T.d.floor([], t3);
              var e3 = this.$snapManager.check(this.$selection.cachedRectVerties.map(function(e4) {
                return T.d.add([], e4, t3);
              }), 3), n3 = T.d.add([], e3, t3), r2 = {};
              this.$selection.cachedItemVerties.forEach(function(t4) {
                r2[t4.id] = { x: D.a.px(t4.x + n3[0]).round(1e3), y: D.a.px(t4.y + n3[1]).round(1e3) };
              }), this.$selection.reset(r2);
            } }, { key: Object(v.SUBSCRIBE)("selectionToolView.moveTo"), value: function(t3) {
              this.moveTo(t3), this.emit("refreshSelectionTool", true);
            } }, { key: "calculateEndedElement", value: function(t3, e3) {
              var n3 = this.$viewport.getWorldPosition(), r2 = T.d.dist(n3, this.initMousePoint);
              if (this.$config.get("set.dragarea.mode"))
                return this.emit("endDragAreaView"), void this.$config.set("set.dragarea.mode", false);
              r2 < 1 ? this.$selection.current : (this.$selection.reselect(), this.$snapManager.clear(), this.command("setAttributeForMulti", "move item", this.$selection.pack("x", "y"))), this.emit("refreshSelectionTool", true);
            } }, { key: Object(v.BIND)("$body"), value: function() {
              var t3 = this.$editor, e3 = t3.canvasWidth, n3 = t3.canvasHeight;
              return { "data-mode": t3.mode, tabIndex: -1, style: { width: D.a.px(e3), height: D.a.px(n3) } };
            } }, { key: Object(v.BIND)("$view"), value: function() {
              var t3 = this.$viewport, e3 = t3.translate, n3 = t3.transformOrigin, r2 = t3.scale, i2 = "translate(".concat(e3[0], "px, ").concat(e3[1], "px) scale(").concat(r2 || 1, ")");
              return { style: { "transform-origin": "".concat(n3[0], "px ").concat(n3[1], "px"), transform: i2 } };
            } }, { key: Object(v.SUBSCRIBE)("refreshSelectionStyleView"), value: function(t3) {
              var e3 = this;
              (t3 ? [t3] : this.$selection.items).forEach(function(t4) {
                e3.updateElement(t4);
              });
            } }, { key: "updateElement", value: function(t3) {
              t3 && this.$editor.html.update(t3, this.getElement(t3.id), this.$editor);
            } }, { key: "updateTimelineElement", value: function(t3) {
              t3 && this.$editor.html.update(t3, this.getElement(t3.id), this.$editor);
            } }, { key: Object(v.SUBSCRIBE)("playTimeline", "moveTimeline"), value: function() {
              var t3 = this, e3 = this.$selection.currentProject, n3 = e3.getSelectedTimeline();
              n3 && n3.animations.map(function(t4) {
                return e3.searchById(t4.id);
              }).forEach(function(e4) {
                t3.updateTimelineElement(e4, true, false);
              });
            } }, { key: Object(v.SUBSCRIBE)("refreshAllCanvas"), value: function() {
              this.clearElementAll();
              var t3 = this.$selection.currentProject, e3 = this.$editor.html.render(t3, null, this.$editor) || "";
              this.setState({ html: e3 }, false), this.refs.$view.updateDiff(e3), this.bindData("$view"), this.trigger("updateAllCanvas", t3);
            } }, { key: Object(v.SUBSCRIBE)("updateAllCanvas"), value: function(t3) {
              var e3 = this;
              t3.layers.forEach(function(t4) {
                e3.updateElement(t4, e3.getElement(t4.id)), e3.trigger("updateAllCanvas", t4);
              });
            } }, { key: Object(v.SUBSCRIBE)("refreshAllElementBoundSize"), value: function() {
              var t3 = this, e3 = this.$selection.items.map(function(t4) {
                return t4.is("artboard") ? t4 : t4.parent;
              });
              E()(new Set(e3)).forEach(function(e4) {
                t3.trigger("refreshElementBoundSize", e4);
              });
            } }, { key: Object(v.SUBSCRIBE)("refreshElementBoundSize"), value: function(t3) {
              var e3 = this;
              t3 && t3.layers.forEach(function(t4) {
                if (t4.isLayoutItem()) {
                  var n3 = e3.getElement(t4.id);
                  if (n3) {
                    var r2 = n3.offsetRect(), i2 = r2.x, a2 = r2.y, o2 = r2.width, c2 = r2.height;
                    t4.reset({ x: D.a.px(i2), y: D.a.px(a2), width: D.a.px(o2), height: D.a.px(c2) }), e3.trigger("refreshSelectionStyleView", t4, true);
                  }
                }
                e3.trigger("refreshElementBoundSize", t4);
              });
            } }, { key: Object(v.SUBSCRIBE)("updateViewport"), value: function() {
              this.bindData("$view");
            } }]), n2;
          }(y2.a), K = n(11);
          n(137);
          function Y(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var X = function(t2) {
            s()(n2, t2);
            var e2 = Y(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              var t3 = this;
              return "     \n      <div class='elf--page-tools'>\n        <button type='button' ref='$minus'>".concat(K.a.remove2, `</button>
        <div class='select'>
          <object 
            refClass="NumberInputEditor" 
            ref='$scale' 
            min='10' 
            max='240' 
            step="1" 
            key="scale" 
            value="`).concat(100 * this.$viewport.scale, '" \n            onchange=').concat(this.subscribe(function(e3, n3) {
                t3.$viewport.setScale(n3 / 100), t3.emit("updateViewport"), t3.trigger("updateViewport");
              }, 1e3), "\n        />\n        </div>\n        <label>%</label>\n        <button type='button' ref='$plus'>").concat(K.a.add, `</button>        
        <button type='button' ref='$center' data-tooltip="Move to Center" data-direction="top">`).concat(K.a.gps_fixed, `</button>    
        <button type='button' ref='$ruler' data-tooltip="Toggle Ruler" data-direction="top">`).concat(K.a.straighten, `</button>    
        <button type='button' ref='$fullscreen' data-tooltip="FullScreen Canvas" data-direction="top">`).concat(K.a.fullscreen, `</button>                        
        <button type='button' ref='$pantool' class="`).concat(Object(L.OBJECT_TO_CLASS)({ on: this.$config.get("set.tool.hand") }), '" data-tooltip="Hand | H" data-direction="top">').concat(K.a.pantool, "</button>   \n        ").concat(this.$menuManager.generate("page.tools"), "                             \n      </div>\n\n    ");
            } }, { key: Object(v.SUBSCRIBE)("updateViewport"), value: function() {
              var t3 = Math.floor(100 * this.$viewport.scale);
              this.children.$scale && this.children.$scale.setValue(t3);
            } }, { key: Object(v.CLICK)("$plus") + v.PREVENT + v.STOP, value: function() {
              var t3 = this.$viewport.scale;
              this.$viewport.setScale(t3 + 0.01), this.emit("updateViewport"), this.trigger("updateViewport");
            } }, { key: Object(v.CLICK)("$minus") + v.PREVENT + v.STOP, value: function() {
              var t3 = this.$viewport.scale;
              this.$viewport.setScale(t3 - 0.01), this.emit("updateViewport"), this.trigger("updateViewport");
            } }, { key: Object(v.CLICK)("$center") + v.PREVENT + v.STOP, value: function() {
              this.emit("moveSelectionToCenter");
            } }, { key: Object(v.CLICK)("$pantool") + v.PREVENT + v.STOP, value: function() {
              this.$config.toggle("set.tool.hand");
            } }, { key: Object(v.CLICK)("$ruler") + v.PREVENT + v.STOP, value: function() {
              this.$config.toggle("show.ruler");
            } }, { key: Object(v.CLICK)("$fullscreen") + v.PREVENT + v.STOP, value: function() {
              this.emit("bodypanel.toggle.fullscreen");
            } }, { key: Object(v.CONFIG)("set.tool.hand"), value: function() {
              this.refs.$pantool.toggleClass("on", this.$config.get("set.tool.hand"));
            } }]), n2;
          }(y2.a), W = n(7), Z = n.n(W), q = n(28), J = n(35), Q = n(21);
          n(138);
          function tt(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function et(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var nt = function(t2) {
            s()(n2, t2);
            var e2 = et(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              return `
        <div class='elf--layer-append-view'>
            <div class='area' ref='$area'></div>
            <div class='area-rect' ref='$areaRect'></div>
            <div class='area-pointer' ref='$mousePointer'></div>
            <input type='file' accept='image/*' multiple="true" ref='$file' class='embed-file-input'/>
            <input type='file' accept='video/*' multiple="true" ref='$video' class='embed-video-input'/>            
        </div>
        `;
            } }, { key: "initState", value: function() {
              return { dragStart: false, width: 0, height: 0, color: q.a.random(), fontSize: 30, showRectInfo: false, areaVerties: Object(Q.e)(0, 0, 0, 0), content: "Insert a text", pathManager: new J.a(), rect: {}, options: {}, containerItem: void 0 };
            } }, { key: "scale", get: function() {
              return this.$viewport.scale;
            } }, { key: "checkNotDragStart", value: function() {
              return Boolean(this.state.dragStart) === false;
            } }, { key: Object(v.POINTERMOVE)("$el") + Object(v.IF)("checkNotDragStart"), value: function(t3) {
              var e3 = this.$viewport.getWorldPosition(t3), n3 = this.$snapManager.checkPoint(e3);
              T.d.equals(n3, e3) === false ? (this.state.target = n3, this.state.targetVertex = this.$viewport.applyVertex(this.state.target), this.state.targetPositionVertex = T.d.clone(this.state.target), this.state.targetGuides = this.$snapManager.findGuideOne([this.state.target])) : (this.state.target = null, this.state.targetGuides = [], this.state.targetPositionVertex = null), this.bindData("$mousePointer");
            } }, { key: Object(v.POINTERSTART)("$el") + Object(v.MOVE)() + Object(v.END)() + v.PREVENT + v.STOP, value: function(t3) {
              this.initMousePoint = this.state.targetPositionVertex ? this.state.targetPositionVertex : this.$viewport.getWorldPosition(t3), this.state.dragStart = true, this.state.color = "#C4C4C4", this.state.text = "";
              var e3 = this.initMousePoint[0], n3 = this.initMousePoint[1], r2 = Object(Q.e)(e3, n3, 0, 0);
              this.state.areaVerties = this.$viewport.applyVerties(r2), this.bindData("$area"), this.bindData("$areaRect");
            } }, { key: "createLayerTemplate", value: function(t3, e3) {
              var n3 = this.state, r2 = n3.type, i2 = n3.text, a2 = n3.color;
              switch (r2) {
                case "artboard":
                  return "<div class='draw-item' style='background-color: white;'></div>";
                case "rect":
                  return "<div class='draw-item' style='background-color: ".concat(a2, ";'></div>");
                case "circle":
                  return "<div class='draw-item' style='background-color: ".concat(a2, "; border-radius: 100%;'></div>");
                case "text":
                case "svg-text":
                  return `
                <div 
                    class='draw-item' 
                    
                    style='font-size: 30px;outline: 1px solid blue;white-space:nowrap'
                >
                    <p contenteditable="true" style="margin:0px;display: inline-block;outline:none;" ></p>
                </div>`;
                case "svg-rect":
                  return `
            <div class='draw-item'>
                <svg width="`.concat(t3, '" height="').concat(e3, '" style="width:100%; height:100%;" overflow="visible">\n                    <path d="').concat(J.a.makeRect(0, 0, t3, e3), '" stroke-width="1" stroke="black" fill="transparent" />\n                </svg>\n            </div>\n            ');
                case "svg-circle":
                  return `
            <div class='draw-item'>
                <svg width="`.concat(t3, '" height="').concat(e3, '" style="width:100%; height:100%;" overflow="visible">\n                    <path d="').concat(J.a.makeCircle(0, 0, t3, e3), '" stroke-width="1" stroke="black" fill="transparent" />\n                </svg>\n            </div>\n            ');
                case "svg-textpath":
                  return `
            <div class='draw-item' style='outline: 1px solid blue;'>
                <svg width="`.concat(t3, '" height="').concat(e3, '" style="width:100%; height:100%;font-size: ').concat(e3, `px;" overflow="visible">
                    <defs>
                        <path id='layer-add-path' d="`).concat(J.a.makeLine(0, e3, t3, e3), '" />\n                    </defs>\n                    <text>\n                        <textPath \n                          xlink:href="#layer-add-path"\n                          textLength="100%"\n                          lengthAdjust="spacingAndGlyphs"\n                          startOffset="0em"\n                        >').concat(i2, "</textPath>\n                    </text>\n                </svg>\n            </div>\n            ");
                default:
                  return "<div class='draw-item' style='outline: 1px solid blue;'></div>";
              }
            } }, { key: Object(v.BIND)("$area"), value: function() {
              var t3 = this.state.areaVerties, e3 = Object(Q.i)(t3), n3 = e3.left, r2 = e3.top, i2 = e3.width, a2 = e3.height;
              return { style: { left: n3, top: r2, width: i2, height: a2 }, innerHTML: this.createLayerTemplate(i2.value, a2.value) };
            } }, { key: Object(v.BIND)("$areaRect"), value: function() {
              var t3 = this.state, e3 = t3.areaVerties, n3 = t3.showRectInfo, r2 = this.$viewport.applyVertiesInverse(e3), i2 = Object(Q.i)(r2), a2 = i2.width, o2 = i2.height;
              return { style: { display: n3 ? "inline-block" : "none", left: D.a.px(e3[2][0]), top: D.a.px(e3[2][1]) }, innerHTML: "".concat(a2.value, " x ").concat(o2.value) };
            } }, { key: "makeMousePointer", value: function() {
              var t3 = this;
              if (!this.state.target)
                return "";
              var e3 = (this.state.targetGuides || []).filter(Boolean);
              return e3.length !== 0 ? '\n        <svg width="100%" height="100%">\n            '.concat(e3.map(function(e4) {
                return t3.state.pathManager.reset(), e4 = t3.$viewport.applyVerties([e4[0], e4[1]]), t3.state.pathManager.M({ x: e4[0][0], y: e4[0][1] }).L({ x: e4[1][0], y: e4[1][1] }).X({ x: e4[0][0], y: e4[0][1] }).X({ x: e4[1][0], y: e4[1][1] }).toString("layer-add-snap-pointer");
              }).join("\n"), "\n        </svg>\n    ") : void 0;
            } }, { key: Object(v.BIND)("$mousePointer"), value: function() {
              return { innerHTML: this.makeMousePointer() };
            } }, { key: "move", value: function() {
              var t3 = this.$config.get("bodyEvent"), e3 = this.$viewport.getWorldPosition(), n3 = this.$snapManager.checkPoint(e3);
              T.d.equals(n3, e3) === false ? (this.state.target = n3, this.state.targetVertex = this.$viewport.applyVertex(n3), this.state.targetGuides = this.$snapManager.findGuideOne([n3]).filter(Boolean)) : (this.state.target = null, this.state.targetGuides = []);
              var r2 = t3.shiftKey, i2 = Math.min(n3[0], this.initMousePoint[0]), a2 = Math.min(n3[1], this.initMousePoint[1]), o2 = Math.max(n3[0], this.initMousePoint[0]) - i2, c2 = Math.max(n3[1], this.initMousePoint[1]) - a2;
              r2 && (c2 = o2);
              var s2 = Object(Q.e)(i2, a2, o2, c2);
              this.state.areaVerties = this.$viewport.applyVerties(s2), this.state.showRectInfo = true, this.bindData("$area"), this.bindData("$areaRect"), this.bindData("$mousePointer");
            } }, { key: "end", value: function(t3, e3) {
              var n3 = this.$config.get("bodyEvent").altKey, r2 = this.state, i2 = r2.color, a2 = r2.content, o2 = r2.fontSize, c2 = r2.areaVerties, s2 = this.$viewport.applyVertiesInverse(c2), u2 = this.$selection.getArtboardByPoint(s2[0]), l2 = Object(Q.i)(s2), f2 = l2.x, h2 = l2.y, p2 = l2.width, d2 = l2.height, v2 = true;
              if (p2.value === 0 && d2.value === 0)
                switch (this.state.type) {
                  case "text":
                    a2 = "", d2.set(this.state.fontSize), v2 = false;
                    break;
                  default:
                    p2.set(100), d2.set(100);
                }
              var y3 = function(t4) {
                for (var e4 = 1; e4 < arguments.length; e4++) {
                  var n4 = arguments[e4] != null ? arguments[e4] : {};
                  e4 % 2 ? tt(Object(n4), true).forEach(function(e5) {
                    Z()(t4, e5, n4[e5]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(n4)) : tt(Object(n4)).forEach(function(e5) {
                    Object.defineProperty(t4, e5, Object.getOwnPropertyDescriptor(n4, e5));
                  });
                }
                return t4;
              }({ x: f2, y: h2, width: p2, height: d2, "background-color": i2, content: a2, "font-size": o2 }, this.state.options);
              switch (this.state.type) {
                case "text":
                case "svg-text":
                case "svg-textpath":
                  delete y3["background-color"];
                  break;
                default:
                  delete y3.content;
              }
              switch (this.state.type) {
                case "image":
                  this.trigger("openImage", y3, u2);
                  break;
                case "video":
                  this.trigger("openVideo", y3, u2);
                  break;
                case "audio":
                  this.trigger("openAudio", y3, u2);
                  break;
                case "text":
                  if (!v2) {
                    var g2 = this.state.fontSize / this.$viewport.scale, m2 = this.refs.$area.$(".draw-item > p");
                    return m2.parent().css("height", "".concat(g2, "px")), m2.parent().css("font-size", "".concat(g2, "px")), m2.select(), void m2.focus();
                  }
                  y3["font-size"] = D.a.px(this.state.fontSize / this.$viewport.scale);
                default:
                  this.emit("newComponent", this.state.type, y3, true, u2);
              }
              n3 || this.trigger("hideLayerAppendView"), this.state.dragStart = false, this.state.showRectInfo = false, this.state.target = null, this.bindData("$areaRect");
            } }, { key: Object(v.SUBSCRIBE)("showLayerAppendView"), value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              this.state.type = t3, this.state.options = e3, this.state.isShow = true, this.refs.$area.empty(), this.$el.show(), this.$el.focus(), this.$snapManager.clear(), this.emit("change.mode.view", "CanvasView");
            } }, { key: Object(v.SUBSCRIBE)("hideLayerAppendView"), value: function() {
              this.$el.isShow() && (this.state.isShow = false, this.$el.hide(), this.emit("change.mode.view"));
            } }, { key: Object(v.SUBSCRIBE)("hideAddViewLayer"), value: function() {
              this.state.isShow = false, this.$el.hide();
            } }, { key: "isShow", value: function() {
              return this.state.isShow;
            } }, { key: Object(v.KEYDOWN)("document") + Object(v.IF)("isShow") + v.ESCAPE + v.ENTER + v.PREVENT + v.STOP, value: function(t3) {
            } }, { key: Object(v.KEYUP)("document") + Object(v.IF)("isShow") + v.ESCAPE + v.ENTER + v.PREVENT + v.STOP, value: function(t3) {
              switch (this.state.type) {
                case "text":
                  var e3 = V.a.create(t3.target), n3 = this.state, r2 = n3.fontSize, i2 = n3.areaVerties, a2 = this.$viewport.applyVertiesInverse(i2), o2 = Object(Q.i)(a2), c2 = o2.x, s2 = o2.y, u2 = e3.rect(), l2 = u2.width, f2 = u2.height, h2 = e3.text();
                  if (console.log(h2, f2), h2.length === 0)
                    break;
                  var p2 = this.$viewport.applyScaleVertiesInverse([[l2, f2, r2]]), d2 = P()(p2, 1), v2 = P()(d2[0], 3), y3 = v2[0], g2 = v2[1], m2 = v2[2], b2 = { x: c2, y: s2, width: D.a.px(y3), height: D.a.px(g2), content: h2.trim(), "font-size": D.a.px(m2) }, k2 = this.$selection.getArtboardByPoint(a2[0]);
                  this.emit("newComponent", this.state.type, b2, true, k2);
              }
              this.state.dragStart = false, this.state.showRectInfo = false, this.state.target = null, this.bindData("$areaRect"), this.trigger("hideLayerAppendView");
            } }, { key: Object(v.KEYUP)("$el") + Object(v.IF)("isShow"), value: function(t3) {
              switch (this.state.type) {
                case "text":
                  var e3 = V.a.create(t3.target).rect();
                  e3.width, e3.height;
              }
            } }, { key: Object(v.CHANGE)("$file"), value: function(t3) {
              var e3 = this;
              this.refs.$file.files.forEach(function(t4) {
                e3.emit("updateImage", t4, e3.state.rect, e3.state.containerItem);
              });
            } }, { key: Object(v.CHANGE)("$video"), value: function(t3) {
              var e3 = this;
              this.refs.$video.files.forEach(function(t4) {
                e3.emit("updateVideo", t4, e3.state.rect, e3.state.containerItem);
              });
            } }, { key: Object(v.SUBSCRIBE)("openImage"), value: function(t3, e3) {
              this.state.rect = t3, this.state.containerItem = e3, this.refs.$file.click();
            } }, { key: Object(v.SUBSCRIBE)("openVideo"), value: function(t3, e3) {
              this.state.rect = t3, this.state.containerItem = e3, this.refs.$video.click();
            } }]), n2;
          }(y2.a), rt = n(29);
          function it(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function at(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? it(Object(n2), true).forEach(function(e3) {
                Z()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : it(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          var ot = function() {
            function t2() {
              i()(this, t2), this.segmentList = [];
            }
            return o()(t2, [{ key: "reset", value: function() {
              return this.segmentList = [], this;
            } }, { key: "addLine", value: function(t3, e2) {
              return this.segmentList.push({ line: true, x1: t3.x, y1: t3.y, x2: e2.x, y2: e2.y }), this;
            } }, { key: "addGuideLine", value: function(t3, e2) {
              return this.segmentList.push({ line: true, guide: true, x1: t3.x, y1: t3.y, x2: e2.x, y2: e2.y }), this;
            } }, { key: "addDistanceLine", value: function(t3, e2) {
              return this.segmentList.push({ line: true, distance: true, x1: t3.x, y1: t3.y, x2: e2.x, y2: e2.y }), this;
            } }, { key: "addDistanceAngle", value: function(t3, e2, n2, r2, i2, a2) {
              return this.segmentList.push({ angle: true, rx: e2, ry: n2, line: a2, degree: r2, center: t3, last: i2 }), this;
            } }, { key: "addPoint", value: function(t3, e2, n2, r2) {
              var i2 = arguments.length > 4 && arguments[4] !== void 0 && arguments[4];
              return this.segmentList.push(at(at({}, t3), {}, { cx: e2.x, cy: e2.y, selected: i2, index: n2, segment: r2, isFirst: e2.isFirst, isLast: e2.isLast, isSecond: e2.isSecond })), this;
            } }, { key: "addStartPoint", value: function(t3, e2) {
              return this.segmentList.push(at(at({}, t3), {}, { cx: e2.x, cy: e2.y, start: true })), this;
            } }, { key: "addCurvePoint", value: function(t3, e2, n2) {
              var r2 = arguments.length > 3 && arguments[3] !== void 0 && arguments[3];
              return this.segmentList.push({ curve: true, cx: t3.x, cy: t3.y, index: e2, selected: r2, segment: n2, isFirst: t3.isFirst, isLast: t3.isLast, isSecond: t3.isSecond }), this;
            } }, { key: "addText", value: function(t3, e2) {
              return this.segmentList.push({ type: "text", cx: t3.x, cy: t3.y, text: e2 + "" }), this;
            } }, { key: "toString", value: function() {
              return this.segmentList.sort(function(t3, e2) {
                return t3.line && !e2.line ? -1 : !t3.line && e2.line ? 1 : 0;
              }), this.segmentList.map(function(t3) {
                return t3.angle ? `
                <path stroke-width='1' 
                    data-distance='true'
                    fill="rgba(0,0,0,0.5)"
                    d="M `.concat(t3.center.x, ",").concat(t3.center.y, " A ").concat(t3.rx, " ").concat(t3.ry, ",").concat(t3.degree, ",0,0,").concat(t3.last.x, " ").concat(t3.last.y, " L").concat(t3.line.x, " ").concat(t3.line.y, ' Z"\n                />') : t3.line ? `
                <line stroke-width='1' 
                    data-segment="true"
                    data-is-last="`.concat(t3.isLast, `"                
                    data-guide='`).concat(t3.guide, "'\n                    data-distance='").concat(t3.distance, "'\n                    x1='").concat(t3.x1, "' x2='").concat(t3.x2, "' y1='").concat(t3.y1, "' y2='").concat(t3.y2, "' \n                />") : t3.text ? "" : t3.curve ? "\n                <circle \n                    cx='".concat(t3.cx, "' \n                    cy='").concat(t3.cy, "' \n                    r='4'                     \n                    class='curve' \n                    data-selected='").concat(t3.selected, `'                    
                    data-is-last="`).concat(t3.isLast, '"                \n                    data-is-first="').concat(t3.isFirst, '"      \n                    data-is-second="').concat(t3.isSecond, '"                                  \n                    title="').concat(t3.segment, ` curve"                
                    data-index='`).concat(t3.index, "' \n                    data-segment-point='").concat(t3.segment, `' 
                    data-segment="true" 
                />`) : t3.start ? "\n                <circle \n                    cx='".concat(t3.cx, "' \n                    cy='").concat(t3.cy, "' \n                    r='4'                    \n                    class='segment'\n                    data-selected='").concat(t3.selected, `'
                    title="Center"
                    data-start="true" 
                />`) : "\n                <circle \n                    cx='".concat(t3.cx, "' \n                    cy='").concat(t3.cy, "' \n                    r='4'                    \n                    class='segment'\n                    data-selected='").concat(t3.selected, `'
                    title="`).concat(t3.segment, '"\n                    data-is-last="').concat(t3.isLast, '"\n                    data-is-first="').concat(t3.isFirst, '"\n                    data-is-second="').concat(t3.isSecond, `"
                    data-index='`).concat(t3.index, "' \n                    data-segment-point='").concat(t3.segment, `' 
                    data-segment="true" 
                />`);
              }).join("");
            } }]), t2;
          }(), ct = n(14), st = n(20);
          function ut(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function lt(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? ut(Object(n2), true).forEach(function(e3) {
                Z()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : ut(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          var ft = ["startPoint", "endPoint", "reversePoint"];
          function ht(t2, e2, n2, r2, i2) {
            var a2 = t2.filter(function(t3) {
              return !!t3 && Math.abs(t3[e2] - n2) <= i2;
            }).map(function(t3) {
              return { dist: Math.abs(t3[e2] - n2), point: t3 };
            });
            a2.sort(function(t3, e3) {
              return t3.dist < e3.dist ? -1 : 1;
            });
            var o2 = null;
            return a2.length && (r2 += (o2 = a2[0].point)[e2] - n2), { point: o2, distanceValue: r2 };
          }
          function pt(t2, e2, n2, r2) {
            var i2 = [], a2 = ft;
            return t2.filter(function(t3) {
              return t3;
            }).forEach(function(t3) {
              a2.filter(function(e3) {
                return t3[e3];
              }).forEach(function(a3) {
                var o2 = t3[a3], c2 = Math.abs(o2[e2] - n2);
                c2 <= r2 && i2.push({ dist: c2, point: o2 });
              });
            }), i2.sort(function(t3, e3) {
              return t3.dist > e3.dist ? 1 : -1;
            }), i2.length ? i2[0].point : null;
          }
          function dt(t2, e2, n2) {
            for (var r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 1, i2 = [], a2 = 0, o2 = t2.length; a2 < o2; a2++) {
              var c2 = a2, s2 = t2[c2];
              if (s2) {
                if (s2.command === "M")
                  i2.push({ command: "M", values: [s2.startPoint] });
                else {
                  var u2 = st.a.getPrevPoint(t2, a2);
                  s2.curve === false ? u2.curve === false ? i2.push({ command: "L", values: [s2.startPoint] }) : i2.push({ command: "Q", values: [u2.endPoint, s2.startPoint] }) : u2.curve === false ? st.a.isEqual(s2.reversePoint, s2.startPoint) ? i2.push({ command: "L", values: [s2.startPoint] }) : i2.push({ command: "Q", values: [s2.reversePoint, s2.startPoint] }) : i2.push({ command: "C", values: [u2.endPoint, s2.reversePoint, s2.startPoint] });
                }
                s2.close && i2.push({ command: "Z" });
              }
            }
            var l2 = i2.map(function(t3) {
              return vt(e2, n2, t3, r2);
            }).join(" ");
            return { d: l2 };
          }
          function vt(t2, e2, n2) {
            var r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 1, i2 = n2.command, a2 = n2.values;
            switch (i2) {
              case "Z":
                return "Z";
              default:
                var o2 = a2.map(function(n3) {
                  var i3 = n3.x - t2 == 0 ? 0 : (n3.x - t2) / r2, a3 = n3.y - e2 == 0 ? 0 : (n3.y - e2) / r2;
                  return "".concat(i3, " ").concat(a3);
                }).join(" ");
                return "".concat(i2, " ").concat(o2);
            }
          }
          var yt = function() {
            function t2(e2) {
              i()(this, t2), this.pathEditor = e2, this.pathStringManager = new J.a(), this.guideLineManager = new J.a(), this.segmentManager = new ot(), this.initialize(), this.initializeSelect();
            }
            return o()(t2, [{ key: "initialize", value: function() {
              this.splitLines = [], this.guideLineManager.reset(), this.segmentManager.reset(), this.pathStringManager.reset();
            } }, { key: "initializeSelect", value: function() {
              this.selectedPointKeys = {}, this.selectedPointList = [];
            } }, { key: "state", get: function() {
              return this.pathEditor.state;
            } }, { key: "clonePoints", get: function() {
              return E()(this.state.points);
            } }, { key: "selectInBox", value: function(t3) {
              var e2 = [], n2 = ["startPoint", "endPoint", "reversePoint"];
              this.state.points.forEach(function(r2, i2) {
                n2.forEach(function(n3) {
                  var a2 = r2[n3];
                  (function(t4, e3) {
                    return !(t4.x2.value < e3.x) && (!(t4.y2.value < e3.y) && (!(t4.x.value > e3.x) && !(t4.y.value > e3.y)));
                  })(t3, a2) && e2.push({ x: a2.x, y: a2.y, key: n3, index: i2 });
                });
              }), this.select.apply(this, e2);
            } }, { key: "select", value: function() {
              var t3 = this;
              this.selectedPointKeys = {};
              for (var e2 = arguments.length, n2 = new Array(e2), r2 = 0; r2 < e2; r2++)
                n2[r2] = arguments[r2];
              this.selectedPointList = n2, n2.forEach(function(e3) {
                var n3 = "".concat(e3.key, "_").concat(e3.index);
                t3.selectedPointKeys[n3] = true;
              });
            } }, { key: "selectKeyIndex", value: function(t3, e2) {
              if (this.state.points[e2]) {
                var n2 = this.state.points[e2][t3];
                n2 && !this.isSelectedSegment(t3, e2) && this.select({ x: n2.x, y: n2.y, key: t3, index: e2 });
              }
            } }, { key: "reselect", value: function() {
              var t3 = this;
              this.selectedPointList.forEach(function(e2) {
                var n2 = t3.state.points[e2.index][e2.key];
                e2.x = n2.x, e2.y = n2.y;
              });
            } }, { key: "isSelectedSegment", value: function(t3, e2) {
              var n2 = "".concat(t3, "_").concat(e2);
              return this.selectedPointKeys[n2];
            } }, { key: "commitTransformMatrix", value: function(t3, e2) {
              var n2 = T.d.transformMat4([], [t3.x, t3.y, 0], e2);
              return { x: n2[0], y: n2[1] };
            } }, { key: "transformMat4", value: function(t3) {
              var e2 = this;
              this.transformPoints.forEach(function(n2, r2) {
                var i2 = e2.state.points[r2];
                Object.assign(i2.startPoint, e2.commitTransformMatrix(n2.startPoint, t3)), Object.assign(i2.endPoint, e2.commitTransformMatrix(n2.endPoint, t3)), Object.assign(i2.reversePoint, e2.commitTransformMatrix(n2.reversePoint, t3));
              });
            } }, { key: "transform", value: function(t3) {
              var e2 = this.transformRect, n2 = e2.x, r2 = e2.y, i2 = e2.width, a2 = e2.height, o2 = T.a.create();
              switch (T.a.translate(o2, o2, [n2, r2, 0]), t3) {
                case "flipX":
                  T.a.scale(o2, o2, [-1, 1, 1]), T.a.translate(o2, o2, [-i2, 0, 0]);
                  break;
                case "flipY":
                  T.a.scale(o2, o2, [1, -1, 1]), T.a.translate(o2, o2, [0, -a2, 0]);
                  break;
                case "flip":
                  T.a.scale(o2, o2, [-1, -1, 1]), T.a.translate(o2, o2, [-i2, -a2, 0]);
              }
              T.a.translate(o2, o2, [-n2, -r2, 0]), this.transformMat4(o2);
            } }, { key: "initTransform", value: function(t3) {
              this.transformRect = Object(L.clone)(t3), this.transformPoints = this.clonePoints.map(function(t4) {
                return { startPoint: Object(L.clone)(t4.startPoint), endPoint: Object(L.clone)(t4.endPoint), reversePoint: Object(L.clone)(t4.reversePoint) };
              });
            } }, { key: "setConnectedPoint", value: function(t3, e2) {
              var n2 = this.state, r2 = n2.dragXY.x + t3, i2 = n2.dragXY.y + e2, a2 = { x: r2, y: i2 }, o2 = { x: r2, y: i2 };
              n2.dragPoints && (n2.reversePoint = st.a.getReversePoint(n2.startPoint, a2));
              var c2 = { startPoint: n2.startPoint, endPoint: a2, curve: !!n2.dragPoints, reversePoint: o2, connected: true, close: true };
              n2.points.push(c2);
            } }, { key: "setLastPoint", value: function(t3) {
              var e2 = this.state, n2 = { startPoint: t3, endPoint: Object(L.clone)(t3), curve: false, reversePoint: Object(L.clone)(t3), connected: false, close: false };
              e2.points.push(n2);
            } }, { key: "setCachePoint", value: function(t3, e2) {
              var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], r2 = this.state, i2 = r2.points;
              this.snapPointList = [], r2.selectedIndex = t3, r2.connectedPoint = st.a.getPrevPoint(i2, t3), r2.connectedPoint && !r2.connectedPoint.connected && (r2.connectedPoint = null), r2.segment = st.a.getIndexPoint(i2, t3), r2.segment.connected && (r2.connectedPoint = st.a.getNextPoint(i2, t3));
              var a2 = st.a.isFirst(r2.segment);
              if (a2) {
                var o2 = st.a.getLastPoint(i2, t3);
                o2.connected && (r2.connectedPoint = o2);
              }
              r2.segmentKey = e2, r2.isCurveSegment = r2.segment.curve && r2.segmentKey != "startPoint", r2.originalSegment = Object(L.clone)(r2.segment), r2.connectedPoint && (r2.originalConnectedPoint = Object(L.clone)(r2.connectedPoint)), r2.cachedPoints = [], i2.filter(function(t4) {
                return t4 && t4 != r2.segment;
              }).forEach(function(t4) {
                r2.cachedPoints.push(t4.startPoint, t4.reversePoint, t4.endPoint);
              }), r2.cachedPoints.push.apply(r2.cachedPoints, n2.map(function(t4) {
                var e3 = P()(t4, 3);
                return { x: e3[0], y: e3[1], z: e3[2] };
              }));
            } }, { key: "moveSegment", value: function(t3, e2, n2) {
              var r2 = this.state, i2 = r2.originalSegment[t3], a2 = r2.segment[t3];
              i2 && (a2.x = i2.x + e2, a2.y = i2.y + n2);
            } }, { key: "calculateToCurve", value: function(t3, e2, n2) {
              var r2 = (e2.startPoint.x + n2.startPoint.x) / 2, i2 = (e2.startPoint.y + n2.startPoint.y) / 2, a2 = (e2.startPoint.x - r2) / 2, o2 = (e2.startPoint.y - i2) / 2;
              return t3.endPoint = { x: t3.startPoint.x + a2, y: t3.startPoint.y + o2 }, t3.reversePoint = { x: t3.startPoint.x - a2, y: t3.startPoint.y - o2 }, { dx: a2, dy: o2 };
            } }, { key: "convertToCurve", value: function(t3) {
              var e2 = this.state.points, n2 = e2[t3];
              if (n2.curve)
                if (n2.curve = false, n2.reversePoint = Object(L.clone)(n2.startPoint), n2.endPoint = Object(L.clone)(n2.startPoint), n2.command === "M") {
                  var r2 = st.a.getPrevPoint(e2, n2.index);
                  r2.connected && (r2.curve = false, r2.reversePoint = Object(L.clone)(r2.startPoint), r2.endPoint = Object(L.clone)(r2.startPoint));
                } else {
                  if ((i2 = st.a.getNextPoint(e2, t3)) && i2.command === "M")
                    (o2 = i2).curve = false, o2.reversePoint = Object(L.clone)(o2.startPoint), o2.endPoint = Object(L.clone)(o2.startPoint);
                }
              else {
                n2.curve = true;
                var i2, a2 = st.a.getPrevPoint(e2, t3);
                if ((i2 = st.a.getNextPoint(e2, t3)) && i2.index < t3 && i2.command === "M") {
                  var o2 = i2;
                  i2 = st.a.getNextPoint(e2, o2.index), this.calculateToCurve(n2, i2, a2), o2.curve = true, o2.endPoint = Object(L.clone)(n2.endPoint), o2.reversePoint = Object(L.clone)(n2.reversePoint);
                } else if (i2 && i2.index > t3 && i2.command !== "M")
                  this.calculateToCurve(n2, i2, a2);
                else if (!i2 && a2) {
                  var c2 = (n2.startPoint.x - a2.startPoint.x) / 3, s2 = (n2.startPoint.y - a2.startPoint.y) / 3;
                  n2.endPoint = { x: n2.startPoint.x + c2, y: n2.startPoint.y + s2 }, n2.reversePoint = st.a.getReversePoint(n2.startPoint, n2.endPoint);
                } else if (!a2 && i2) {
                  c2 = (n2.startPoint.x - i2.startPoint.x) / 3, s2 = (n2.startPoint.y - i2.startPoint.y) / 3;
                  n2.endPoint = { x: n2.startPoint.x + c2, y: n2.startPoint.y + s2 }, n2.reverse = st.a.getReversePoint(n2.startPoint, n2.endPoint);
                }
              }
            } }, { key: "moveCurveSegment", value: function(t3, e2, n2) {
              var r2 = this.state;
              this.moveSegment(t3, e2, n2);
              var i2 = t3 === "endPoint" ? "reversePoint" : "endPoint";
              r2.segment[i2] = st.a.getReversePoint(r2.segment.startPoint, r2.segment[t3]);
            } }, { key: "rotateSegmentTarget", value: function(t3, e2) {
              var n2 = this.state;
              if (n2.originalSegment && n2.segment) {
                var r2 = n2.originalSegment.startPoint, i2 = r2.x, a2 = r2.y, o2 = n2.segment[t3], c2 = o2.x, s2 = o2.y, u2 = n2.originalSegment[e2], l2 = u2.x, f2 = u2.y, h2 = Object(ct.getXYInCircle)(Object(ct.calculateAngle360)(c2 - i2, s2 - a2), Object(ct.getDist)(l2, f2, i2, a2), i2, a2), p2 = h2.x, d2 = h2.y;
                n2.segment[e2] = { x: p2, y: d2 };
              }
            } }, { key: "rotateSegment", value: function(t3) {
              this.rotateSegmentTarget(t3, t3 === "endPoint" ? "reversePoint" : "endPoint");
            } }, { key: "calculateSnap", value: function(t3, e2, n2) {
              var r2 = this, i2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 1;
              return function(e3, n3) {
                var a2 = r2.state, o2 = a2.cachedPoints, c2 = a2.originalSegment[t3];
                if (!t3)
                  return { dx: e3, dy: n3, snapPointList: [] };
                var s2 = c2.x + e3, u2 = c2.y + n3, l2 = ht(o2, "x", s2, e3, i2), f2 = l2.point, h2 = (e3 = l2.distanceValue, ht(o2, "y", u2, n3, i2)), p2 = h2.point, d2 = (n3 = h2.distanceValue, { x: c2.x + e3, y: c2.y + n3 }), v2 = [];
                return f2 && v2.push({ startPoint: f2, endPoint: d2 }), p2 && v2.push({ startPoint: p2, endPoint: d2 }), { dx: e3, dy: n3, snapPointList: v2 };
              }(e2, n2);
            } }, { key: "copySegment", value: function(t3, e2) {
              e2.startPoint = Object(L.clone)(t3.startPoint), e2.endPoint = Object(L.clone)(t3.endPoint), e2.reversePoint = Object(L.clone)(t3.reversePoint);
            } }, { key: "selectedLength", get: function() {
              return this.selectedPointList.length;
            } }, { key: "moveSelectedSegment", value: function(t3, e2) {
              var n2 = this;
              this.selectedPointList.forEach(function(r2) {
                var i2 = n2.state.points[r2.index][r2.key];
                i2.x = r2.x + t3, i2.y = r2.y + e2;
              });
            } }, { key: "removeSelectedSegment", value: function() {
              var t3 = this;
              this.selectedPointList.forEach(function(e3) {
                t3.state.points[e3.index][e3.key].removed = true;
              });
              var e2 = st.a.splitPoints(this.state.points), n2 = st.a.recoverPoints(e2.map(function(t4) {
                return t4.filter(function(t5) {
                  return !t5.startPoint.removed;
                }).map(function(t5) {
                  return t5.endPoint.removed && (t5.endPoint = Object(L.clone)(t5.startPoint)), t5.reversePoint.removed && (t5.reversePoint = Object(L.clone)(t5.startPoint)), st.a.isEqual(t5.endPoint, t5.startPoint, t5.reversePoint) && (t5.command = "L", t5.curve = false), t5;
                });
              }));
              this.state.points = n2, this.select();
            } }, { key: "move", value: function(t3, e2, n2) {
              var r2 = this.state, i2 = r2.isCurveSegment, a2 = r2.segmentKey, o2 = r2.connectedPoint, c2 = this.calculateSnap(a2, t3, e2, 3), s2 = (t3 = c2.dx, e2 = c2.dy, c2.snapPointList);
              if (this.snapPointList = s2 || [], this.selectedPointList.length > 1)
                this.moveSelectedSegment(t3, e2);
              else if (i2)
                if (n2.shiftKey)
                  this.moveSegment(a2, t3, e2);
                else if (n2.altKey)
                  this.moveSegment(a2, t3, e2), this.rotateSegment(a2);
                else {
                  this.moveSegment(a2, t3, e2);
                  var u2 = a2 === "endPoint" ? "reversePoint" : "endPoint";
                  r2.segment[u2] = st.a.getReversePoint(r2.segment.startPoint, r2.segment[a2]);
                }
              else
                this.moveSegment("startPoint", t3, e2), this.moveSegment("endPoint", t3, e2), this.moveSegment("reversePoint", t3, e2);
              o2 && this.copySegment(r2.segment, r2.connectedPoint);
            } }, { key: "moveEnd", value: function(t3, e2) {
              var n2 = this.state, r2 = n2.points, i2 = n2.dragXY.x + t3, a2 = n2.dragXY.y + e2, o2 = { x: i2, y: a2 }, c2 = { x: i2, y: a2 };
              n2.dragPoints && (c2 = st.a.getReversePoint(n2.startPoint, o2)), r2.push({ command: n2.clickCount === 0 ? "M" : "", startPoint: n2.startPoint, endPoint: o2, curve: !!n2.dragPoints, reversePoint: c2 }), n2.startPoint = null, n2.dragPoints = false, n2.moveXY = null;
            } }, { key: "setPoint", value: function(t3) {
              var e2 = t3.first[0], n2 = t3.second[t3.second.length - 1], r2 = this.clonePoints, i2 = st.a.getPoint(r2, e2), a2 = st.a.getPoint(r2, n2), o2 = [lt(lt({}, i2), {}, { endPoint: t3.first[1] }), { startPoint: t3.first[3], reversePoint: t3.first[2], curve: true, endPoint: t3.second[1] }, lt(lt({}, a2), {}, { reversePoint: t3.second[2] })], c2 = st.a.getIndex(r2, e2);
              return r2.splice.apply(r2, [c2, 2].concat(o2)), this.state.points = r2, c2 + 1;
            } }, { key: "setPointQuard", value: function(t3) {
              var e2 = t3.first[0], n2 = t3.second[t3.second.length - 1], r2 = this.clonePoints, i2 = st.a.getPoint(r2, e2), a2 = st.a.getPoint(r2, n2);
              if (i2.curve && a2.curve === false) {
                var o2 = [lt(lt({}, i2), {}, { endPoint: i2.startPoint }), { startPoint: t3.first[2], reversePoint: t3.first[1], curve: true, endPoint: t3.second[1] }], c2 = st.a.getIndex(r2, e2);
                r2.splice.apply(r2, [c2, 1].concat(E()(o2)));
              } else {
                o2 = [lt({}, i2), { startPoint: t3.first[2], reversePoint: t3.first[1], curve: true, endPoint: t3.second[1] }, lt(lt({}, a2), {}, { reversePoint: t3.second[1], curve: true })], c2 = st.a.getIndex(r2, e2);
                r2.splice.apply(r2, [c2, 2].concat(E()(o2)));
              }
              return this.state.points = r2, c2 + 1;
            } }, { key: "setPointLine", value: function(t3) {
              var e2 = t3.first[0], n2 = this.clonePoints, r2 = [{ command: "L", startPoint: t3.first[1], curve: false, endPoint: t3.first[1], reversePoint: t3.first[1] }], i2 = st.a.getIndex(n2, e2);
              return n2.splice.apply(n2, [i2 + 1, 0].concat(r2)), this.state.points = n2, i2 + 1;
            } }, { key: "toPath", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
              return dt(this.clonePoints, t3, e2, n2);
            } }, { key: "makeSVGPath", value: function() {
              return this.initialize(), this.makePointGuide(this.clonePoints), this.makeMovePositionGuide(), this.toSVGString();
            } }, { key: "makeTriangleDistancePointGuide", value: function(t3, e2) {
              var n2 = Math.min(t3.startPoint.x, e2.startPoint.x), r2 = Math.max(t3.startPoint.x, e2.startPoint.x), i2 = Math.min(t3.startPoint.y, e2.startPoint.y), a2 = Math.max(t3.startPoint.y, e2.startPoint.y);
              if (t3.startPoint.x < e2.startPoint.x && t3.startPoint.y < e2.startPoint.y) {
                this.segmentManager.addDistanceLine({ x: n2, y: i2 }, { x: r2, y: i2 }).addDistanceLine({ x: r2, y: i2 }, { x: r2, y: a2 });
                var o2 = n2, c2 = i2, s2 = Object(ct.calculateAngle360)(r2 - n2, a2 - i2) - 180, u2 = Object(ct.getXYInCircle)(0, 20, o2, c2), l2 = u2.x, f2 = u2.y, h2 = Object(ct.getXYInCircle)(s2 / 2, 20, o2, c2), p2 = (h2.x, h2.y, Object(ct.getXYInCircle)(s2, 20, o2, c2));
                this.segmentManager.addDistanceAngle(p2, 20, 20, s2, { x: l2, y: f2 }, { x: l2 - 20, y: f2 });
              } else
                t3.startPoint.x < e2.startPoint.x && t3.startPoint.y > e2.startPoint.y ? this.segmentManager.addDistanceLine({ x: n2, y: a2 }, { x: r2, y: a2 }).addDistanceLine({ x: r2, y: i2 }, { x: r2, y: a2 }) : t3.startPoint.x > e2.startPoint.x && t3.startPoint.y > e2.startPoint.y ? this.segmentManager.addDistanceLine({ x: n2, y: i2 }, { x: n2, y: a2 }).addDistanceLine({ x: n2, y: a2 }, { x: r2, y: a2 }) : t3.startPoint.x > e2.startPoint.x && t3.startPoint.y < e2.startPoint.y && this.segmentManager.addDistanceLine({ x: n2, y: a2 }, { x: r2, y: a2 }).addDistanceLine({ x: r2, y: i2 }, { x: r2, y: a2 });
            } }, { key: "makeDistancePointGuide", value: function(t3, e2, n2, r2) {
              e2.selected && (t3 && this.makeTriangleDistancePointGuide(t3, e2), n2 && this.makeTriangleDistancePointGuide(e2, n2));
            } }, { key: "makeStartPointGuide", value: function(t3, e2, n2, r2) {
              e2.startPoint.isFirst = true, this.pathStringManager.M(e2.startPoint), e2.curve === false ? this.segmentManager.addPoint({}, e2.startPoint, r2, "startPoint", this.isSelectedSegment("startPoint", r2)) : (this.segmentManager.addPoint({}, e2.startPoint, r2, "startPoint", this.isSelectedSegment("startPoint", r2)).addGuideLine(e2.startPoint, e2.endPoint), st.a.isEqual(e2.startPoint, e2.endPoint) === false && this.segmentManager.addCurvePoint(e2.endPoint, r2, "endPoint", this.isSelectedSegment("endPoint", r2)));
            } }, { key: "makeMiddlePointGuideSegment", value: function(t3, e2, n2, r2) {
              var i2 = this.segmentManager;
              e2.curve === false ? t3.curve === false ? (i2.addPoint({}, e2.startPoint, r2, "startPoint", this.isSelectedSegment("startPoint", r2)), e2.startPoint.isLast || i2.addText(e2.startPoint, r2 + 1)) : (i2.addGuideLine(t3.startPoint, t3.endPoint).addCurvePoint(e2.startPoint, r2, "startPoint", this.isSelectedSegment("startPoint", r2)), st.a.isEqual(t3.startPoint, t3.endPoint) === false && i2.addCurvePoint(t3.endPoint, t3.index, "endPoint", this.isSelectedSegment("endPoint", t3.index)), e2.startPoint.isLast || i2.addText(e2.startPoint, r2 + 1)) : t3.curve === false ? st.a.isEqual(e2.reversePoint, e2.startPoint) ? (i2.addPoint({}, e2.startPoint, r2, "startPoint", this.isSelectedSegment("startPoint", r2)), e2.startPoint.isLast || i2.addText(e2.startPoint, r2 + 1)) : (i2.addGuideLine(e2.startPoint, e2.reversePoint).addCurvePoint(e2.startPoint, r2, "startPoint", this.isSelectedSegment("startPoint", r2)), st.a.isEqual(e2.startPoint, e2.reversePoint) === false && i2.addCurvePoint(e2.reversePoint, r2, "reversePoint", this.isSelectedSegment("reversePoint", r2)), e2.startPoint.isLast || i2.addText(e2.startPoint, r2 + 1)) : e2.connected ? (i2.addGuideLine(t3.startPoint, t3.endPoint).addGuideLine(e2.startPoint, e2.reversePoint), st.a.isEqual(t3.startPoint, t3.endPoint) === false && i2.addCurvePoint(t3.endPoint, t3.index, "endPoint", this.isSelectedSegment("endPoint", t3.index)), st.a.isEqual(e2.startPoint, e2.reversePoint) === false && i2.addCurvePoint(e2.reversePoint, r2, "reversePoint", this.isSelectedSegment("reversePoint", r2))) : (i2.addGuideLine(t3.startPoint, t3.endPoint).addGuideLine(e2.startPoint, e2.reversePoint).addCurvePoint(e2.startPoint, r2, "startPoint", this.isSelectedSegment("startPoint", r2)), st.a.isEqual(t3.startPoint, t3.endPoint) === false && i2.addCurvePoint(t3.endPoint, t3.index, "endPoint", this.isSelectedSegment("endPoint", t3.index)), st.a.isEqual(e2.startPoint, e2.reversePoint) === false && i2.addCurvePoint(e2.reversePoint, r2, "reversePoint", this.isSelectedSegment("reversePoint", r2)), e2.startPoint.isLast || i2.addText(e2.startPoint, r2 + 1));
            } }, { key: "makeMiddlePointGuideRealPath", value: function(t3, e2, n2, r2) {
              var i2 = this.pathStringManager;
              e2.curve === false ? t3.curve === false ? i2.L(e2.startPoint) : i2.Q(t3.endPoint, e2.startPoint) : t3.curve === false ? st.a.isEqual(e2.reversePoint, e2.startPoint) ? i2.L(e2.startPoint) : i2.Q(e2.reversePoint, e2.startPoint) : i2.C(t3.endPoint, e2.reversePoint, e2.startPoint);
            } }, { key: "makeMiddlePointGuideSplitLine", value: function(t3, e2, n2, r2) {
              e2.curve === false ? t3.curve === false ? this.splitLines.push(new J.a().M(t3.startPoint).L(e2.startPoint).toString("split-path")) : this.splitLines.push(new J.a().M(t3.startPoint).Q(t3.endPoint, e2.startPoint).toString("split-path")) : t3.curve === false ? st.a.isEqual(e2.reversePoint, e2.startPoint) ? this.splitLines.push(new J.a().M(t3.startPoint).L(e2.startPoint).toString("split-path")) : this.splitLines.push(new J.a().M(t3.startPoint).Q(e2.reversePoint, e2.startPoint).toString("split-path")) : this.splitLines.push(new J.a().M(t3.startPoint).C(t3.endPoint, e2.reversePoint, e2.startPoint).toString("split-path"));
            } }, { key: "makePointGuide", value: function(t3) {
              for (var e2 = this.state.selectedIndex, n2 = 0, r2 = t3.length; n2 < r2; n2++) {
                var i2 = t3[n2];
                if (i2) {
                  var a2 = st.a.getNextPoint(t3, n2), o2 = st.a.getPrevPoint(t3, n2);
                  o2 && o2.command === "M" && i2.startPoint && (i2.startPoint.isSecond = true), i2.startPoint && (i2.startPoint.isLast = a2 ? a2.command === "M" : n2 === r2 - 1), i2.selected = e2 === n2, i2.command === "M" ? this.makeStartPointGuide(o2, i2, a2, n2) : (this.makeMiddlePointGuideRealPath(o2, i2, a2, n2), this.makeMiddlePointGuideSplitLine(o2, i2, a2, n2), this.makeMiddlePointGuideSegment(o2, i2, a2, n2)), i2.close && this.pathStringManager.Z();
                }
              }
            } }, { key: "makeMovePositionGuide", value: function() {
              var t3 = this.state, e2 = t3.points, n2 = t3.startPoint, r2 = t3.moveXY, i2 = t3.dragPoints, a2 = (t3.altKey, t3.snapPointList);
              if (r2) {
                a2 = a2 || [];
                var o2 = function(t4, e3) {
                  var n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1, r3 = pt(t4, "x", e3.x, n3), i3 = pt(t4, "y", e3.y, n3), a3 = lt({}, e3);
                  r3 && (a3.x = r3.x), i3 && (a3.y = i3.y);
                  var o3 = [];
                  return r3 && o3.push({ startPoint: r3, endPoint: a3 }), i3 && o3.push({ startPoint: i3, endPoint: a3 }), { snapPointList: o3, moveXY: a3 };
                }(e2, r2, 3), c2 = o2.snapPointList, s2 = o2.moveXY;
                a2.push.apply(a2, c2), t3.moveXY = s2, r2 = s2, this.snapPointList = a2;
                var u2 = e2[e2.length - 1];
                if (i2)
                  if (u2) {
                    if (u2.curve) {
                      var l2 = st.a.getReversePoint(n2, r2);
                      p2 = l2.x, d2 = l2.y;
                      this.guideLineManager.M(u2.startPoint).C(u2.endPoint, { x: p2, y: d2 }, n2), this.segmentManager.addGuideLine(u2.startPoint, u2.endPoint).addGuideLine(n2, { x: p2, y: d2 }).addGuideLine(n2, r2).addCurvePoint(u2.endPoint).addCurvePoint({ x: p2, y: d2 }).addCurvePoint(r2).addPoint(false, n2);
                    } else if (u2.curve === false) {
                      var f2 = st.a.getReversePoint(n2, r2);
                      p2 = f2.x, d2 = f2.y;
                      this.guideLineManager.M(u2.startPoint).Q({ x: p2, y: d2 }, n2), this.segmentManager.addGuideLine(r2, { x: p2, y: d2 }).addPoint(false, n2).addCurvePoint({ x: p2, y: d2 }).addCurvePoint(r2);
                    }
                  } else {
                    var h2 = st.a.getReversePoint(n2, r2), p2 = h2.x, d2 = h2.y;
                    this.guideLineManager.M(r2).L(n2).L({ x: p2, y: d2 }), this.segmentManager.addCurvePoint(n2).addCurvePoint(r2).addCurvePoint({ x: p2, y: d2 });
                  }
                else
                  u2 && (u2.curve ? (this.guideLineManager.M(u2.startPoint).Q(u2.endPoint, r2), this.segmentManager.addGuideLine(u2.endPoint, u2.startPoint).addCurvePoint(u2.endPoint)) : u2.close || (this.guideLineManager.M(u2.startPoint).L(r2), this.segmentManager.addPoint(false, u2.startPoint)));
              }
            } }, { key: "makeSnapLines", value: function() {
              var t3 = [];
              if (this.snapPointList) {
                var e2 = new J.a();
                t3 = this.snapPointList.map(function(t4) {
                  return e2.reset(), e2.M(t4.startPoint).L(t4.endPoint).X(t4.startPoint).toString("snap-path");
                });
              }
              return t3.join("");
            } }, { key: "toSVGString", value: function() {
              return `
        <svg width="100%" height="100%" class='svg-editor-canvas'>
            `.concat(this.guideLineManager.toString("guide", this.state.isPolygon), "\n            ").concat(this.pathStringManager.toString("object", this.state.isPolygon), "\n            ").concat(this.splitLines.join(""), "\n            ").concat(this.makeSnapLines(), "\n            ").concat(this.segmentManager.toString(), "\n        </svg>\n        ");
            } }], [{ key: "generatorPathString", value: function(t3) {
              var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 1;
              return dt(t3, e2, n2, r2).d;
            } }]), t2;
          }(), gt = n(38);
          n(139);
          function mt(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function bt(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? mt(Object(n2), true).forEach(function(e3) {
                Z()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : mt(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function kt(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Ot = ["fill", "fill-opacity", "stroke", "stroke-width", "stroke-linecap", "stroke-linejoin"], xt = function(t2) {
            s()(n2, t2);
            var e2 = kt(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initialize", value: function() {
              F()(h()(n2.prototype), "initialize", this).call(this), this.pathParser = new rt.a();
            } }, { key: "initState", value: function() {
              return { points: [], $target: null, fill: "transparent", stroke: "black", "fill-opacity": null, "stroke-width": 2, "stroke-linecap": "round", "stroke-linejoin": "round", tolerance: 1, screenX: D.a.z(), screenY: D.a.z(), screenWidth: D.a.z(), screenHeight: D.a.z() };
            } }, { key: Object(v.SUBSCRIBE)("changeDrawManager"), value: function(t3) {
              this.setState(bt({}, t3), false);
            } }, { key: "scale", get: function() {
              return this.$viewport.scale;
            } }, { key: "template", value: function() {
              return `
        <div class='elf--path-draw-view' tabIndex="-1">
            <div class='path-draw-container' ref='$view'></div>
        </div>`;
            } }, { key: "initRect", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 && arguments[0];
              this.state.rect && !t3 || (this.state.rect = this.$el.rect());
            } }, { key: Object(v.KEYUP)("document") + Object(v.IF)("isShow") + v.ESCAPE + v.ENTER + v.PREVENT + v.STOP, value: function() {
              this.trigger("hidePathDrawEditor");
            } }, { key: "totalPathLength", get: function() {
              if (!this.refs.$view)
                return 0;
              var t3 = this.refs.$view.$("path.object");
              return t3 ? t3.totalLength : 0;
            } }, { key: "makePathLayer", value: function(t3) {
              var e3, n3 = this, r2 = this.$selection.currentProject;
              if (r2) {
                var i2 = st.a.simply(this.state.points, this.state.tolerance), a2 = new rt.a(J.a.makePathByPoints(i2)), o2 = new rt.a(yt.generatorPathString(a2.convertGenerator()));
                o2.transformMat4(this.$viewport.matrixInverse);
                var c2 = o2.getBBox(), s2 = T.d.distance(c2[1], c2[0]), u2 = T.d.distance(c2[3], c2[0]);
                o2.translate(-c2[0][0], -c2[0][1]);
                var l2 = { itemType: "svg-path", x: D.a.px(c2[0][0]), y: D.a.px(c2[0][1]), width: D.a.px(s2), height: D.a.px(u2), d: o2.scale(1 / s2, 1 / u2).d, totalLength: this.totalPathLength };
                Ot.forEach(function(t4) {
                  n3.state[t4] && Object.assign(l2, Z()({}, t4, n3.state[t4]));
                }), e3 = r2.appendChildItem(this.$editor.createItem(l2));
              }
              return e3;
            } }, { key: "addPathLayer", value: function() {
              var t3 = this.getPathRect();
              if (t3.width !== 0 && t3.height !== 0) {
                var e3 = this.makePathLayer(t3);
                e3 && (this.$selection.select(e3), this.trigger("hidePathDrawEditor"), this.emit("refreshAll"));
              }
            } }, { key: "changeMode", value: function(t3) {
              this.setState(bt(bt({}, this.initState()), t3), false);
            } }, { key: "getCurrentObject", value: function() {
              var t3 = this.state.current;
              return t3 ? { current: t3, d: t3.d, screenX: t3.screenX, screenY: t3.screenY, screenWidth: t3.screenWidth, screenHeight: t3.screenHeight } : null;
            } }, { key: Object(v.SUBSCRIBE)("showPathDrawEditor"), value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.changeMode(t3), this.$el.show(), this.$el.focus(), this.emit("showDrawManager", { instance: this, fill: this.state.fill, stroke: this.state.stroke, "fill-opacity": this.state["fill-opacity"], "stroke-width": this.state["stroke-width"], "stroke-linecap": this.state["stroke-linecap"], "stroke-linejoin": this.state["stroke-linejoin"] }), this.emit("hidePathEditor"), this.emit("change.mode.view", "PathDrawView");
            } }, { key: Object(v.SUBSCRIBE)("initPathDrawEditor"), value: function() {
              this.pathParser.reset(""), this.refs.$view.empty();
            } }, { key: Object(v.SUBSCRIBE)("hidePathDrawEditor"), value: function() {
              this.$el.isShow() && (this.trigger("initPathDrawEditor"), this.$el.hide(), this.emit("finishPathEdit"), this.emit("hideDrawManager"), this.emit("change.mode.view"));
            } }, { key: Object(v.SUBSCRIBE)("hideAddViewLayer"), value: function() {
              this.$el.hide(), this.emit("hideDrawManager");
            } }, { key: "getInnerId", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
              return "draw-manager-" + t3;
            } }, { key: "toFillSVG", get: function() {
              return gt.a.parseImage(this.state.fill || "transparent").toSVGString(this.fillId);
            } }, { key: "toStrokeSVG", get: function() {
              return gt.a.parseImage(this.state.stroke || "black").toSVGString(this.strokeId);
            } }, { key: "toDefInnerString", get: function() {
              return "\n            ".concat(this.toFillSVG, "\n            ").concat(this.toStrokeSVG, "\n        ");
            } }, { key: "toDefString", get: function() {
              var t3 = this.toDefInnerString.trim();
              return "\n            <defs>\n            ".concat(t3, "\n            </defs>\n        ");
            } }, { key: "fillId", get: function() {
              return this.getInnerId("fill");
            } }, { key: "strokeId", get: function() {
              return this.getInnerId("stroke");
            } }, { key: "toFillValue", get: function() {
              return gt.a.parseImage(this.state.fill || "transparent").toFillValue(this.fillId);
            } }, { key: "toStrokeValue", get: function() {
              return gt.a.parseImage(this.state.stroke || "black").toFillValue(this.strokeId);
            } }, { key: Object(v.BIND)("$view"), value: function() {
              return { innerHTML: `
            <svg width="100%" height="100%" class='svg-editor-canvas'>
                `.concat(this.toDefString, `
                <path 
                    class='object' 
                    fill="`).concat(this.toFillValue, '"\n                    stroke="').concat(this.toStrokeValue, '"\n                    fill-opacity="').concat(this.state["fill-opacity"], '"\n                    stroke-width="').concat(this.state["stroke-width"], '"\n                    stroke-linecap="').concat(this.state["stroke-linecap"], '"\n                    stroke-linejoin="').concat(this.state["stroke-linejoin"], '"\n                    d="').concat(J.a.makePathByPoints(this.state.points), '" \n                />\n            </svg>\n            ') };
            } }, { key: "renderPath", value: function() {
              this.bindData("$view");
            } }, { key: Object(v.SUBSCRIBE)("resizeEditor"), value: function() {
              this.initRect(true);
            } }, { key: "getPathRect", value: function() {
              this.initRect(true);
              var t3 = this.refs.$view.$("path.object"), e3 = { x: D.a.z(), y: D.a.z(), width: D.a.z(), height: D.a.z() };
              return t3 && ((e3 = t3.rect()).x -= this.state.rect.x, e3.y -= this.state.rect.y), e3;
            } }, { key: Object(v.POINTERSTART)("$view") + Object(v.MOVE)() + Object(v.END)(), value: function(t3) {
              this.initRect(), this.state.altKey = false, this.state.startXY = { x: t3.xy.x - this.state.rect.x, y: t3.xy.y - this.state.rect.y }, this.state.points = [this.state.startXY];
            } }, { key: "move", value: function(t3, e3, n3, r2) {
              this.state.points.push({ x: this.state.startXY.x + t3, y: this.state.startXY.y + e3, pressure: r2 }), this.renderPath();
            } }, { key: "end", value: function(t3, e3) {
              this.addPathLayer(), this.trigger("initPathDrawEditor");
            } }]), n2;
          }(y2.a), jt = n(27);
          n(140);
          function St(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Pt(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? St(Object(n2), true).forEach(function(e3) {
                Z()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : St(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function wt(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          function Rt(t2) {
            var e2 = P()(t2, 2);
            return { x: e2[0], y: e2[1] };
          }
          var Ct = function(t2) {
            s()(n2, t2);
            var e2 = wt(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "convertToCurve", value: function(t3) {
              this.pathGenerator.convertToCurve(t3), this.renderPath(), this.refreshPathLayer();
            } }, { key: Object(v.DOUBLECLICK)("$view [data-segment]"), value: function(t3) {
              var e3 = +t3.$dt.attr("data-index");
              this.convertToCurve(e3);
            } }, { key: Object(v.DOUBLETAB)("$view [data-segment]") + v.PREVENT + Object(v.DELAY)(300), value: function(t3) {
              var e3 = +t3.$dt.attr("data-index");
              this.convertToCurve(e3);
            } }]), n2;
          }(y2.a), Et = ["fill", "fill-opacity", "stroke", "stroke-width"], $t = function(t2) {
            s()(n2, t2);
            var e2 = wt(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initialize", value: function() {
              F()(h()(n2.prototype), "initialize", this).call(this), this.pathParser = new rt.a(), this.pathGenerator = new yt(this);
            } }, { key: "initState", value: function() {
              return { changeEvent: "updatePathItem", isShow: false, points: [], mode: "path", clickCount: 0, isSegment: false, isFirstSegment: false, screenX: D.a.z(), screenY: D.a.z(), screenWidth: D.a.z(), screenHeight: D.a.z() };
            } }, { key: "scale", get: function() {
              return this.$viewport.scale;
            } }, { key: "template", value: function() {
              return `
        <div class='elf--path-editor-view' tabIndex="-1">
            <div class='path-container' ref='$view'></div>
            <div class='path-container split-panel'>
                <svg width="100%" height="100%">
                    <circle ref='$splitCircle' class='split-circle' />
                </svg>
            </div>
            <div class='segment-box' ref='$segmentBox'></div>
        </div>`;
            } }, { key: "isShow", value: function() {
              return this.state.isShow;
            } }, { key: "initRect", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 && arguments[0];
              this.state.rect && !t3 || (this.state.rect = this.$el.rect());
            } }, { key: Object(v.KEYUP)("document") + Object(v.IF)("isShow") + v.ENTER + v.PREVENT + v.STOP, value: function() {
              this.state.current ? (this.refreshPathLayer(), this.trigger("hidePathEditor")) : this.addPathLayer(), !this.state.current && this.state.points.length ? this.trigger("initPathEditorView") : this.trigger("hidePathEditor");
            } }, { key: Object(v.KEYUP)("document") + Object(v.IF)("isShow") + v.ESCAPE + v.PREVENT + v.STOP, value: function() {
              this.state.current ? this.refreshPathLayer() : this.addPathLayer(), this.trigger("hidePathEditor");
            } }, { key: "totalPathLength", get: function() {
              if (!this.refs.$view)
                return 0;
              var t3 = this.refs.$view.$("path.object");
              return t3 ? t3.totalLength : 0;
            } }, { key: "makePathLayer", value: function() {
              var t3, e3 = this, n3 = this.$selection.currentProject;
              if (n3) {
                var r2 = new rt.a(this.pathGenerator.toPath().d);
                r2.transformMat4(this.$viewport.matrixInverse);
                var i2 = r2.getBBox(), a2 = T.d.distance(i2[1], i2[0]), o2 = T.d.distance(i2[3], i2[0]);
                r2.translate(-i2[0][0], -i2[0][1]);
                var c2 = { itemType: "svg-path", x: D.a.px(i2[0][0]), y: D.a.px(i2[0][1]), width: D.a.px(a2), height: D.a.px(o2), d: r2.scale(1 / a2, 1 / o2).d, totalLength: this.totalPathLength, fill: "#C4C4C4" };
                Et.forEach(function(t4) {
                  e3.state[t4] && (c2[t4] = e3.state[t4]);
                }), t3 = (this.$selection.getArtboardByPoint(i2[0]) || n3).appendChildItem(this.$editor.createItem(c2));
              }
              return t3;
            } }, { key: "updatePathLayer", value: function() {
              var t3 = this.pathGenerator.toPath().d, e3 = new rt.a(t3);
              e3.transformMat4(this.$viewport.matrixInverse), this.emit(this.state.changeEvent, { d: e3.d, box: this.state.box, totalLength: this.totalPathLength });
            } }, { key: "addPathLayer", value: function() {
              this.changeMode("modify");
              var t3 = this.makePathLayer();
              t3 && t3.totalLength && (this.$selection.select(t3), this.trigger("hidePathEditor"), this.emit("refreshAll"));
            } }, { key: "changeMode", value: function(t3, e3) {
              this.setState(Pt({ mode: t3, clickCount: 0, moveXY: null }, e3), false), this.emit("changePathManager", this.state.mode);
            } }, { key: Object(v.SUBSCRIBE)("changePathManager"), value: function(t3) {
              this.setState(Pt(Pt({}, t3), {}, { clickCount: 0 }), false), this.renderPath();
            } }, { key: "isMode", value: function(t3) {
              return this.state.mode === t3;
            } }, { key: Object(v.SUBSCRIBE)("updateViewport"), value: function(t3, e3) {
              if (this.$el.isShow()) {
                var n3 = this.pathGenerator.toPath().d, r2 = new rt.a(n3);
                r2.transformMat4(this.state.cachedMatrixInverse), this.refresh({ d: r2.d });
              }
            } }, { key: "refresh", value: function(t3) {
              t3 && t3.d && (this.pathParser.reset(t3.d), this.pathParser.transformMat4(this.$viewport.matrix), this.state.cachedMatrixInverse = this.$viewport.matrixInverse, this.state.points = this.pathParser.convertGenerator()), this.pathGenerator.initializeSelect(), this.renderPath();
            } }, { key: Object(v.SUBSCRIBE)("showPathEditor"), value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "path", e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              t3 === "move" && (e3.current = null, e3.points = []), e3.box = e3.box || "canvas", this.changeMode(t3, e3), this.refresh(e3), this.state.isShow = true, this.$el.show(), this.$el.focus(), this.emit("showPathManager", { mode: this.state.mode }), this.emit("hidePathDrawEditor"), this.emit("change.mode.view", "PathEditorView");
            } }, { key: Object(v.SUBSCRIBE)("hidePathEditor"), value: function() {
              this.$el.isShow() && (this.pathParser.reset(""), this.setState(this.initState(), false), this.refs.$view.empty(), this.$el.hide(), this.emit("finishPathEdit"), this.emit("hidePathManager"), this.emit("change.mode.view"));
            } }, { key: Object(v.SUBSCRIBE)("hideAddViewLayer"), value: function() {
              this.state.isShow = false, this.pathParser.reset(""), this.setState(this.initState(), false), this.refs.$view.empty(), this.$el.hide(), this.emit("hidePathManager");
            } }, { key: Object(v.BIND)("$view"), value: function() {
              return { class: { path: this.state.mode === "path", modify: this.state.mode === "modify", box: this.state.box === "box", canvas: this.state.box === "canvas", "segment-move": this.state.mode === "segment-move" }, innerHTML: this.pathGenerator.makeSVGPath() };
            } }, { key: Object(v.BIND)("$splitCircle"), value: function() {
              return this.state.splitXY ? { cx: this.state.splitXY.x, cy: this.state.splitXY.y, r: 5 } : { r: 0 };
            } }, { key: "refreshPathLayer", value: function() {
              this.updatePathLayer();
            } }, { key: "renderPath", value: function() {
              this.bindData("$view");
            } }, { key: "getPathRect", value: function() {
              this.initRect(true);
              var t3 = this.refs.$view.$("path.object"), e3 = { x: 0, y: 0, width: 0, height: 0 };
              return t3 && ((e3 = t3.rect()).x -= this.state.rect.x, e3.y -= this.state.rect.y), e3;
            } }, { key: "resetTransformZone", value: function() {
              var t3 = this.getPathRect();
              this.state.transformZoneRect = t3;
            } }, { key: Object(v.POINTERMOVE)("$view") + v.PREVENT, value: function(t3) {
              if (this.initRect(), this.isMode("path") && this.state.rect)
                this.state.moveXY = { x: t3.xy.x - this.state.rect.x, y: t3.xy.y - this.state.rect.y }, this.state.altKey = t3.altKey, this.renderPath();
              else {
                var e3 = V.a.create(t3.target), n3 = e3.hasClass("split-path");
                this.state.splitXY = n3 ? this.calculatePointOnLine(e3.attr("d"), { x: t3.xy.x - this.state.rect.x, y: t3.xy.y - this.state.rect.y }) : null, this.bindData("$splitCircle"), this.state.altKey = false;
              }
            } }, { key: Object(v.POINTERSTART)("$view :not(.split-path)") + v.PREVENT + v.STOP + Object(v.MOVE)() + Object(v.END)(), value: function(t3) {
              this.initRect(), this.state.altKey = false;
              var e3 = this.isMode("path");
              this.state.dragXY = { x: t3.xy.x - this.state.rect.x, y: t3.xy.y - this.state.rect.y }, this.state.isOnCanvas = false;
              var n3 = V.a.create(t3.target);
              if (n3.hasClass("svg-editor-canvas") && !e3 ? this.state.isOnCanvas = true : (this.pathGenerator.reselect(), this.state.isSegment = n3.attr("data-segment") === "true", this.state.isFirstSegment = this.state.isSegment && n3.attr("data-is-first") === "true"), e3) {
                if (this.state.isFirstSegment) {
                  var r2 = +n3.attr("data-index");
                  this.state.startPoint = this.state.points[r2].startPoint;
                } else
                  this.state.startPoint = this.state.dragXY;
                this.state.dragPoints = false, this.state.endPoint = null;
              } else if (this.isOnCanvas)
                this.renderSelectBox(this.state.dragXY);
              else if (this.state.isSegment) {
                this.changeMode("segment-move");
                var i2 = n3.attrs("data-index", "data-segment-point"), a2 = P()(i2, 2), o2 = (r2 = a2[0], a2[1]);
                this.pathGenerator.setCachePoint(+r2, o2, this.$viewport.applyVerties(this.$snapManager.getSnapPoints())), this.pathGenerator.selectKeyIndex(o2, r2);
              }
            } }, { key: "hideSelectBox", value: function() {
              this.refs.$segmentBox.css({ left: D.a.px(-1e5) });
            } }, { key: "renderSelectBox", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, r2 = { left: D.a.px(t3.x + (e3 < 0 ? e3 : 0)), top: D.a.px(t3.y + (n3 < 0 ? n3 : 0)), width: D.a.px(Math.abs(e3)), height: D.a.px(Math.abs(n3)) };
              this.refs.$segmentBox.css(r2);
            } }, { key: "getSelectBox", value: function() {
              var t3 = this.refs.$segmentBox.styles("left", "top", "width", "height").map(function(t4) {
                return D.a.parse(t4);
              }), e3 = P()(t3, 4), n3 = { x: e3[0], y: e3[1], width: e3[2], height: e3[3] };
              return n3.x2 = D.a.px(n3.x.value + n3.width.value), n3.y2 = D.a.px(n3.y.value + n3.height.value), n3;
            } }, { key: "move", value: function(t3, e3) {
              if (this.state.isOnCanvas)
                this.renderSelectBox(this.state.dragXY, t3, e3);
              else if (this.isMode("segment-move")) {
                var n3 = this.$config.get("bodyEvent");
                this.pathGenerator.move(t3, e3, n3), this.renderPath(), this.updatePathLayer();
              } else if (this.isMode("path")) {
                if (Object(ct.getDist)(t3, e3, 0, 0) >= 2) {
                  n3 = this.$config.get("bodyEvent");
                  this.state.dragPoints = !n3.altKey;
                }
              }
            } }, { key: "renderSegment", value: function(t3) {
              this.pathGenerator.selectedLength && (this.pathGenerator.reselect(), Object(L.isFunction)(t3) && t3(), this.renderPath(), this.updatePathLayer());
            } }, { key: Object(v.SUBSCRIBE)("deleteSegment"), value: function() {
              var t3 = this;
              this.renderSegment(function() {
                t3.pathGenerator.removeSelectedSegment();
              });
            } }, { key: Object(v.SUBSCRIBE)("moveSegment"), value: function(t3, e3) {
              var n3 = this;
              this.renderSegment(function() {
                n3.pathGenerator.moveSelectedSegment(t3, e3);
              });
            } }, { key: Object(v.SUBSCRIBE)("initPathEditorView"), value: function() {
              this.pathParser.reset(""), this.setState(this.initState(), false), this.state.isShow = true, this.refs.$view.empty(), this.$el.focus();
            } }, { key: "end", value: function(t3, e3) {
              this.state.isOnCanvas ? t3 === 0 && e3 === 0 ? (this.changeMode("modify"), this.trigger("hidePathEditor")) : (this.changeMode("segment-move"), this.pathGenerator.selectInBox(this.getSelectBox()), this.renderPath(), this.hideSelectBox()) : this.isMode("modify") || (this.isMode("segment-move") ? this.changeMode("modify") : this.isMode("path") && (this.state.isFirstSegment ? (this.changeMode("modify"), this.pathGenerator.setConnectedPoint(t3, e3), this.renderPath(), this.state.current ? this.refreshPathLayer() : (this.addPathLayer(), this.trigger("initPathEditorView"))) : this.state.isSplitPath || (this.pathGenerator.moveEnd(t3, e3), this.state.clickCount++, this.renderPath()), this.state.isSplitPath = false));
            } }]), n2;
          }(function(t2) {
            s()(n2, t2);
            var e2 = wt(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: Object(v.SUBSCRIBE)("changePathTransform"), value: function(t3) {
              this.resetTransformZone();
              var e3 = this.state.transformZoneRect, n3 = e3.width, r2 = e3.height;
              switch (this.pathGenerator.initTransform(this.state.transformZoneRect), t3) {
                case "flipX":
                  this.pathGenerator.transform("flipX", n3, 0);
                  break;
                case "flipY":
                  this.pathGenerator.transform("flipY", 0, r2);
                  break;
                case "flip":
                  this.pathGenerator.transform("flip", n3, r2);
              }
              this.renderPath(), this.refreshPathLayer();
            } }, { key: Object(v.SUBSCRIBE)("changePathUtil"), value: function(t3) {
              switch (t3) {
                case "reverse":
                  var e3 = this.pathGenerator.toPath().d, n3 = new rt.a(e3);
                  n3.reverse(), n3.transformMat4(this.state.cachedMatrixInverse), this.refresh({ d: n3.d });
              }
            } }]), n2;
          }(function(t2) {
            s()(n2, t2);
            var e2 = wt(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "calculatePointOnLine", value: function(t3, e3) {
              var n3 = new rt.a(t3);
              if (n3.segments[1].command === "C") {
                var r2 = [Rt(n3.segments[0].values), Rt(n3.segments[1].values.slice(0, 2)), Rt(n3.segments[1].values.slice(2, 4)), Rt(n3.segments[1].values.slice(4, 6))], i2 = jt.m.apply(void 0, E()(r2).concat([200]))(e3.x, e3.y);
                return Object(jt.f)(r2, i2).first[3];
              }
              if (n3.segments[1].command === "Q") {
                r2 = [Rt(n3.segments[0].values), Rt(n3.segments[1].values.slice(0, 2)), Rt(n3.segments[1].values.slice(2, 4))], i2 = jt.o.apply(void 0, E()(r2).concat([200]))(e3.x, e3.y);
                return Object(jt.h)(r2, i2).first[2];
              }
              if (n3.segments[1].command === "L") {
                r2 = [Rt(n3.segments[0].values), Rt(n3.segments[1].values.slice(0, 2))], i2 = jt.n.apply(void 0, E()(r2).concat([200]))(e3.x, e3.y);
                return Object(jt.g)(r2, i2).first[1];
              }
              return e3;
            } }, { key: Object(v.POINTERSTART)("$view .split-path") + Object(v.MOVE)() + Object(v.END)(), value: function(t3) {
              this.initRect();
              var e3 = new rt.a(t3.$dt.attr("d")), n3 = { x: t3.xy.x - this.state.rect.x, y: t3.xy.y - this.state.rect.y }, r2 = -1;
              if (this.state.mode === "path")
                return this.state.dragXY = { x: t3.xy.x - this.state.rect.x, y: t3.xy.y - this.state.rect.y }, this.state.startPoint = this.state.dragXY, this.pathGenerator.setLastPoint(this.state.startPoint), this.state.isSplitPath = true, this.renderPath(), void (this.state.current ? this.refreshPathLayer() : (this.addPathLayer(), this.trigger("initPathEditorView")));
              if (e3.segments[1].command === "C") {
                var i2 = [Rt(e3.segments[0].values), Rt(e3.segments[1].values.slice(0, 2)), Rt(e3.segments[1].values.slice(2, 4)), Rt(e3.segments[1].values.slice(4, 6))], a2 = jt.m.apply(void 0, E()(i2).concat([200]))(n3.x, n3.y);
                r2 = this.pathGenerator.setPoint(Object(jt.f)(i2, a2));
              } else if (e3.segments[1].command === "Q") {
                i2 = [Rt(e3.segments[0].values), Rt(e3.segments[1].values.slice(0, 2)), Rt(e3.segments[1].values.slice(2, 4))], a2 = jt.o.apply(void 0, E()(i2).concat([200]))(n3.x, n3.y);
                r2 = this.pathGenerator.setPointQuard(Object(jt.h)(i2, a2));
              } else if (e3.segments[1].command === "L") {
                i2 = [Rt(e3.segments[0].values), Rt(e3.segments[1].values.slice(0, 2))], a2 = jt.n.apply(void 0, E()(i2).concat([200]))(n3.x, n3.y);
                r2 = this.pathGenerator.setPointLine(Object(jt.g)(i2, a2));
              }
              this.renderPath(), this.refreshPathLayer(), this.changeMode("segment-move"), this.pathGenerator.setCachePoint(r2, "startPoint", this.$viewport.applyVerties(this.$snapManager.getSnapPoints())), this.pathGenerator.selectKeyIndex("startPoint", r2);
            } }]), n2;
          }(Ct)));
          n(141);
          function It(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Tt = function(t2) {
            s()(n2, t2);
            var e2 = It(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              return "\n            <div class='elf--hover-view'>\n                <div class='elf--hover-rect' ref='$hoverRect'></div>            \n            </div>\n        ";
            } }, { key: Object(v.CONFIG)("bodyEvent"), value: function() {
              var t3, e3 = (t3 = this.$selection.filteredLayers.filter(function(t4) {
                return t4.is("artboard") === false;
              })[0]) === null || t3 === void 0 ? void 0 : t3.id;
              e3 && this.$config.get("hoverView") !== false ? this.$selection.setHoverId(e3) && this.renderHoverLayer() : (this.$selection.setHoverId(""), this.renderHoverLayer());
            } }, { key: Object(v.SUBSCRIBE)("updateViewport"), value: function() {
              this.$selection.setHoverId(""), this.renderHoverLayer();
            } }, { key: "renderHoverLayer", value: function() {
              var t3 = this.$selection.hoverItems;
              if (t3.length === 0)
                this.refs.$hoverRect.updateDiff(""), this.emit("removeGuideLine");
              else {
                var e3 = t3[0].verties, n3 = this.createPointerLine(this.$viewport.applyVerties(e3));
                this.refs.$hoverRect.updateDiff(n3), this.emit("refreshGuideLineByTarget", [t3[0].verties]);
              }
            } }, { key: "createPointerLine", value: function(t3) {
              return t3.length === 0 ? "" : `
        <svg class='line' overflow="visible">
            <path 
                d="
                    M `.concat(t3[0][0], ", ").concat(t3[0][1], " \n                    L ").concat(t3[1][0], ", ").concat(t3[1][1], " \n                    L ").concat(t3[2][0], ", ").concat(t3[2][1], " \n                    L ").concat(t3[3][0], ", ").concat(t3[3][1], " \n                    L ").concat(t3[0][0], ", ").concat(t3[0][1], '\n                    Z\n                " \n                />\n        </svg>');
            } }]), n2;
          }(y2.a);
          n(142);
          function Bt(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Mt = function(t2, e2) {
            var n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "base-line";
            return '<line x1="'.concat(t2[0], '" y1="').concat(t2[1], '" x2="').concat(e2[0], '" y2="').concat(e2[1], `" class='`).concat(n2, "' />");
          }, Vt = function(t2, e2) {
            var n2 = "".concat(Math.floor(t2)), r2 = 13, i2 = 16, a2 = n2.length * r2, o2 = i2;
            return '\n    \n        <rect x="'.concat(e2[0] - a2 / 4, '" y="').concat(e2[1] - i2 - 2, '" width="').concat(a2, '" height="').concat(o2, '" rx="2" ry="2" fill="#00a9f4" />\n        <text x="').concat(e2[0], '" y="').concat(e2[1], '" dy="-5" font-size="16">').concat(n2, "</text>\n    ");
          }, Dt = function(t2, e2) {
            return Mt(t2, e2);
          }, Lt = function(t2, e2) {
            return Mt(t2, e2);
          }, At = function(t2) {
            return '\n    <path \n        class="base-rect"\n        fill="none"\n        stroke-width="1"\n        stroke="red"\n        stroke-dasharray="2 2"\n        d="'.concat(J.a.makeRect(t2[0][0], t2[0][1], T.d.dist(t2[0], t2[1]), T.d.dist(t2[0], t2[3])), '\n        " \n    />\n');
          }, Ft = function(t2) {
            var e2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 3, n2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "left";
            return n2 === "left" ? '\n        <path \n            class="arrow"\n            d="\n                M '.concat(t2[0] + e2, " ").concat(t2[1] - e2, "\n                L ").concat(t2[0], " ").concat(t2[1], "\n                L ").concat(t2[0] + e2, " ").concat(t2[1] + e2, '\n            " \n        />\n    ') : n2 === "right" ? '\n        <path \n            class="arrow"\n            d="\n                M '.concat(t2[0] - e2, " ").concat(t2[1] - e2, "\n                L ").concat(t2[0], " ").concat(t2[1], "\n                L ").concat(t2[0] - e2, " ").concat(t2[1] + e2, '\n            " \n        />\n    ') : n2 === "up" ? '\n        <path \n            class="arrow"\n            d="\n                M '.concat(t2[0] - e2, " ").concat(t2[1] + e2, "\n                L ").concat(t2[0], " ").concat(t2[1], "\n                L ").concat(t2[0] + e2, " ").concat(t2[1] + e2, '\n            " \n        />\n    ') : n2 === "down" ? '\n        <path \n            class="arrow"\n            d="\n                M '.concat(t2[0] - e2, " ").concat(t2[1] - e2, "\n                L ").concat(t2[0], " ").concat(t2[1], "\n                L ").concat(t2[0] + e2, " ").concat(t2[1] - e2, '\n            " \n        />\n    ') : '\n        <path \n            stroke-width="1"\n            d="\n                M '.concat(t2[0] - e2, " ").concat(t2[1] - e2, "\n                L ").concat(t2[0] + e2, " ").concat(t2[1] + e2, "\n                M ").concat(t2[0] - e2, " ").concat(t2[1] + e2, "\n                L ").concat(t2[0] + e2, " ").concat(t2[1] - e2, '\n            " \n        />\n    ');
          }, zt = function(t2) {
            s()(n2, t2);
            var e2 = Bt(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              return `
            <svg class='elf--guide-line-view' ref="$guide" width="100%" height="100%" ></svg>
            `;
            } }, { key: "initState", value: function() {
              return { list: [] };
            } }, { key: Object(v.BIND)("$guide"), value: function() {
              return { svgDiff: "<g>".concat(this.createGuideLine(this.state.list), "</g>") };
            } }, { key: "createGuideLine", value: function(t3) {
              for (var e3 = [], n3 = [], r2 = 0, i2 = (t3 = t3.filter(Boolean)).length; r2 < i2; r2++) {
                var a2 = P()(t3[r2], 8), o2 = a2[0], c2 = a2[1], s2 = a2[2], u2 = a2[3], l2 = a2[4], f2 = a2[5], h2 = a2[6], p2 = (a2[7], Math.floor(u2)), d2 = this.$viewport.applyVertex(o2), v2 = this.$viewport.applyVertex(c2), y3 = void 0;
                l2 && (y3 = this.$viewport.applyVerties([l2])[0]), s2 === "x" && (p2 > 0 && e3.push(Mt(d2, v2, "dash-line")), y3 && e3.push(Mt(v2, y3, "dash-line")), p2 > 0 && n3.push(Vt(p2, T.d.lerp([], d2, v2, 0.5)))), s2 === "y" && (p2 > 0 && e3.push(Mt(d2, v2, "dash-line")), y3 && e3.push(Mt(v2, y3, "dash-line")), p2 > 0 && n3.push(Vt(p2, T.d.add([], T.d.lerp([], d2, v2, 0.5), [20, 0, 0])))), s2 === "x" && e3.push(Dt(v2, d2)), s2 === "y" && e3.push(Lt(v2, d2)), this.state.hasVerties && (e3.push(Ft(d2, 3, "vertex")), e3.push(Ft(v2, 3, "vertex"))), f2 && (this.$selection.isOne && this.$editor.isPointerDown || this.$selection.isMany && !this.$editor.isPointerMove) && e3.push(At(this.$viewport.applyVerties(f2))), h2 && e3.push(At(this.$viewport.applyVerties(h2)));
              }
              return [].concat(e3, n3).join("");
            } }, { key: "removeGuideLine", value: function() {
              this.setState({ list: [] });
            } }, { key: "setGuideLine", value: function(t3) {
              var e3 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
              this.setState({ list: t3, hasVerties: e3 });
            } }, { key: Object(v.SUBSCRIBE)("removeGuideLine", "refreshSelection"), value: function() {
              this.removeGuideLine();
            } }, { key: Object(v.SUBSCRIBE)("refreshGuideLineByTarget"), value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
              return this.refreshSmartGuides(t3);
            } }, { key: Object(v.SUBSCRIBE)("updateViewport"), value: function() {
              this.refresh();
            } }, { key: "refreshSmartGuides", value: function(t3) {
              if (!this.$selection.isEmpty) {
                var e3, n3 = Object(Q.g)(this.$selection.verties);
                if (t3)
                  e3 = t3.map(function(t4) {
                    return Object(Q.g)(t4);
                  });
                else {
                  var r2 = this.$selection.snapTargetLayers.map(function(t4) {
                    var e4 = Object(Q.g)(t4.verties);
                    return { targetVerties: e4, dist: T.d.dist(e4[4], n3[4]) };
                  });
                  r2.sort(function(t4, e4) {
                    return t4.dist - e4.dist;
                  }), e3 = r2.map(function(t4) {
                    return t4.targetVerties;
                  });
                }
                var i2 = e3.map(function(t4) {
                  return Object(ct.makeGuidePoint)(n3, t4);
                });
                i2.sort(function(t4, e4) {
                  return t4[3] - e4[3];
                });
                var a2 = [i2[0], i2[1]].filter(Boolean);
                this.setGuideLine(a2);
              }
            } }, { key: "refreshSmartGuidesForVerties", value: function() {
              var t3 = this.$snapManager.findGuide(this.$selection.verties);
              this.setGuideLine(t3, true);
            } }, { key: Object(v.SUBSCRIBE)("refreshSelectionStyleView"), value: function() {
              !this.$selection.hasChangedField("d", "clip-path") && this.$selection.hasChangedField("x", "y", "width", "height", "transform", "transform-origin") && this.refreshSmartGuidesForVerties();
            } }]), n2;
          }(y2.a);
          n(143);
          function Nt(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var _t = function(t2) {
            s()(n2, t2);
            var e2 = Nt(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              return "<div class='elf--selection-info-view'></div>";
            } }, { key: Object(v.POINTERSTART)("$el [data-artboard-title-id]") + v.LEFT_BUTTON + Object(v.MOVE)("calculateMovedElement") + Object(v.END)("calculateEndedElement"), value: function(t3) {
              this.startXY = t3.xy, this.initMousePoint = this.$viewport.getWorldPosition(t3);
              var e3 = t3.$dt.attr("data-artboard-title-id");
              this.$selection.selectById(e3), t3.altKey && (this.$selection.selectAfterCopy(), this.emit("refreshAllCanvas"), this.emit("refreshLayerTreeView")), this.initializeDragSelection(), this.emit("history.refreshSelection");
            } }, { key: "initializeDragSelection", value: function() {
              this.$selection.reselect(), this.$snapManager.clear(), this.emit("refreshSelectionTool");
            } }, { key: "calculateMovedElement", value: function() {
              var t3 = this, e3 = this.$viewport.getWorldPosition(), n3 = T.d.floor([], T.d.subtract([], e3, this.initMousePoint));
              this.emit("selectionToolView.moveTo", n3), this.nextTick(function() {
                t3.emit("refreshSelectionStyleView"), t3.emit("refreshSelectionTool", false), t3.refresh();
              });
            } }, { key: Object(v.SUBSCRIBE)("refreshItemName"), value: function(t3, e3) {
              var n3;
              this.emit("setAttributeForMulti", Z()({}, t3, { name: e3 })), (n3 = this.$el.$("[data-artboard-title-id='".concat(t3, "']"))) === null || n3 === void 0 || n3.text(e3);
            } }, { key: "calculateEndedElement", value: function(t3, e3) {
              this.command("setAttributeForMulti", "move item", this.$selection.pack("x", "y")), this.emit("refreshSelectionTool", true);
            } }, { key: Object(v.SUBSCRIBE)("updateViewport"), value: function() {
              this.refresh();
            } }, { key: Object(v.SUBSCRIBE)("refreshSelectionStyleView"), value: function() {
              this.$selection.current && this.$selection.current.is("artboard") && this.$selection.hasChangedField("x", "y", "width", "height", "transform", "transform-origin") && this.refresh();
            } }, { key: Object(v.LOAD)("$el") + v.DOMDIFF, value: function() {
              var t3 = this;
              return this.$selection.currentProject.artboards.map(function(e3) {
                return { title: e3.name, id: e3.id, rect: [t3.$viewport.applyVertex(e3.verties[0]), t3.$viewport.applyVertex(e3.verties[1])] };
              }).map(function(e3) {
                return t3.makeArtboardTitleArea(e3);
              });
            } }, { key: "makeArtboardTitleArea", value: function(t3) {
              return '\n            <div class="artboard-title is-not-drag-area" \n                 data-artboard-title-id="'.concat(t3.id, '" \n                 style="left: ').concat(t3.rect[0][0], "px;top:").concat(t3.rect[0][1], 'px;"\n            >').concat(t3.title, "</div>");
            } }]), n2;
          }(y2.a);
          function Ut(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function Gt(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Ut(Object(n2), true).forEach(function(e3) {
                Z()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Ut(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          function Ht(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Kt = function(t2) {
            s()(n2, t2);
            var e2 = Ht(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              return "<div class='grid-layout-line-view' style='width:100%;height:100%;pointer-events:none;'></div>";
            } }, { key: Object(v.LOAD)("$el"), value: function() {
              var t3 = this;
              if (this.$selection.length !== 1)
                return "";
              var e3 = this.$selection.current;
              if (e3.isInGrid()) {
                var n3 = e3.parent, r2 = n3.screenX, i2 = n3.screenY, a2 = n3.width, o2 = n3.height, c2 = this.$editor.html.toGridLayoutCSS(n3);
                return "<div style='".concat(Object(L.CSS_TO_STRING)(Gt({ position: "absolute", left: r2, top: i2, width: a2, height: o2, border: "1px solid black" }, c2)), "'>\n                ").concat(n3.layers.map(function(e4) {
                  var n4 = t3.$editor.html.toLayoutItemCSS(e4);
                  return "<div style='".concat(Object(L.CSS_TO_STRING)(Gt(Gt({}, n4), {}, { border: "1px solid dashed" })), "'></div>");
                }).join(""), "\n            </div>");
              }
              return "<div></div>";
            } }, { key: Object(v.SUBSCRIBE)("refreshGridLayoutLine", "refreshSelectionTool", "refreshSelection"), value: function() {
              this.refresh();
            } }, { key: Object(v.SUBSCRIBE)("updateViewport"), value: function() {
              this.refresh();
            } }]), n2;
          }(y2.a);
          n(97);
          function Yt(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Xt = function(t2) {
            s()(n2, t2);
            var e2 = Yt(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { mode: "selection", x: D.a.z(), y: D.a.z(), width: D.a.px(1e4), height: D.a.px(1e4), cachedCurrentElement: {}, html: "" };
            } }, { key: "template", value: function() {
              return '\n            <div class="elf--drag-area-view" ref="$dragAreaView"></div>            \n        ';
            } }, { key: "checkSelectionArea", value: function(t3) {
              var e3 = this.$viewport.getWorldPosition(t3);
              if (this.$selection.hasPoint(e3))
                return true;
            } }, { key: "checkEditMode", value: function(t3) {
              if (this.$config.get("set.tool.hand"))
                return false;
              var e3 = this.$shortcuts.getGeneratedKeyCode(B.a.space);
              if (this.$keyboardManager.check(e3))
                return false;
              var n3 = this.$viewport.getWorldPosition(t3);
              return this.inSelection = false, this.$selection.hasPoint(n3) ? (this.inSelection = true, this.$selection.current.is("artboard") && this.$selection.current.hasChildren() ? (this.$config.set("set.dragarea.mode", true), this.$config.set("set.move.mode", false), true) : (this.$config.set("set.dragarea.mode", false), this.$config.set("set.move.mode", true), true)) : (this.mouseOverItem = this.$selection.filteredLayers[0], this.mouseOverItem ? (this.$config.set("set.dragarea.mode", false), this.$config.set("set.move.mode", true)) : (this.$config.set("set.dragarea.mode", true), this.$config.set("set.move.mode", false)), true);
            } }, { key: Object(v.POINTERSTART)("$dragAreaView") + Object(v.IF)("checkEditMode") + Object(v.MOVE)("movePointer") + Object(v.END)("moveEndPointer"), value: function(t3) {
              if (this.$config.get("set.dragarea.mode"))
                this.emit("startDragAreaView");
              else if (this.$config.get("set.move.mode"))
                if (this.initMousePoint = this.$viewport.getWorldPosition(), this.mouseOverItem = this.$selection.filteredLayers[0], t3.altKey)
                  this.$selection.isEmpty === false && this.$selection.hasPoint(this.initMousePoint) && (this.$selection.selectAfterCopy(), this.trigger("refreshAllCanvas"), this.emit("refreshLayerTreeView"), this.initializeDragSelection(), this.emit("history.refreshSelection"));
                else {
                  if (this.mouseOverItem) {
                    var e3 = this.mouseOverItem.id;
                    if (t3.shiftKey)
                      this.$selection.toggleById(e3);
                    else if (this.$selection.check({ id: e3 }) === false) {
                      var n3 = this.$selection.currentProject.searchById(e3);
                      n3 && n3.is("artboard") && n3.hasChildren() || this.$selection.selectById(e3);
                    }
                  }
                  this.initializeDragSelection(), this.emit("history.refreshSelection");
                }
            } }, { key: "initializeDragSelection", value: function() {
              this.$selection.reselect(), this.$snapManager.clear(), this.emit("refreshSelectionTool", true);
            } }, { key: "movePointer", value: function(t3, e3) {
              if (this.$config.get("set.dragarea.mode"))
                this.emit("moveDragAreaView");
              else if (this.$config.get("set.move.mode")) {
                if (this.$selection.isLayoutItem)
                  return;
                var n3 = this.$viewport.getWorldPosition(), r2 = T.d.floor([], T.d.subtract([], n3, this.initMousePoint));
                this.moveTo(r2), this.$selection.changeArtBoard() && (this.initMousePoint = n3, this.$selection.reselect(), this.$snapManager.clear(), this.emit("refreshAllCanvas"), this.emit("refreshLayerTreeView")), this.emit("setAttributeForMulti", this.$selection.pack("x", "y")), this.emit("refreshSelectionTool", true);
              }
            } }, { key: "moveTo", value: function(t3) {
              t3 = T.d.floor([], t3);
              var e3 = this.$snapManager.check(this.$selection.cachedRectVerties.map(function(e4) {
                return T.d.add([], e4, t3);
              }), 3), n3 = T.d.add([], e3, t3), r2 = {};
              this.$selection.cachedItemVerties.forEach(function(t4) {
                var e4 = t4.verties.map(function(t5) {
                  return T.d.add([], t5, n3);
                }), i2 = T.d.subtract([], T.d.transformMat4([], e4[0], t4.parentMatrixInverse), T.d.transformMat4([], t4.verties[0], t4.parentMatrixInverse));
                r2[t4.id] = { x: D.a.px(t4.x + i2[0]).round(1e3), y: D.a.px(t4.y + i2[1]).round(1e3) };
              }), this.$selection.reset(r2);
            } }, { key: Object(v.SUBSCRIBE)("selectionToolView.moveTo"), value: function(t3) {
              this.moveTo(t3), this.emit("refreshSelectionTool", true);
            } }, { key: "moveEndPointer", value: function() {
              if (this.$config.get("set.dragarea.mode"))
                this.emit("endDragAreaView");
              else if (this.$config.get("set.move.mode")) {
                var t3 = this.$viewport.getWorldPosition();
                if (T.d.floor([], T.d.subtract([], t3, this.initMousePoint)) < 1) {
                  if (this.$selection.current.isSVG())
                    return this.emit("openPathEditor"), void this.emit("removeGuideLine");
                } else
                  this.$selection.reselect(), this.$snapManager.clear(), this.command("setAttributeForMulti", "move item", this.$selection.pack("x", "y"));
                this.emit("refreshSelectionTool", true);
              }
              this.$config.set("set.dragarea.mode", false), this.$config.set("set.move.mode", false);
            } }]), n2;
          }(y2.a);
          function Wt(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var Zt = function(t2) {
            s()(n2, t2);
            var e2 = Wt(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "initState", value: function() {
              return { mode: "selection", x: D.a.z(), y: D.a.z(), width: D.a.px(1e4), height: D.a.px(1e4), cachedCurrentElement: {}, html: "" };
            } }, { key: "template", value: function() {
              return `
            <div class="elf--drag-area-view" ref="$dragAreaView" style="pointer-events:none;">
                <div class='drag-area-rect' ref='$dragAreaRect'></div>
            </div>            
        `;
            } }, { key: Object(v.SUBSCRIBE)("drawAreaView"), value: function(t3) {
              this.refs.$dragAreaRect.css(t3);
            } }, { key: Object(v.SUBSCRIBE)("initDrawAreaView"), value: function() {
              this.refs.$dragAreaRect.css({ left: D.a.px(-1e4), top: D.a.z(), width: D.a.z(), height: D.a.z() });
            } }, { key: Object(v.SUBSCRIBE)("startDragAreaView"), value: function() {
              this.initMousePoint = this.$viewport.getWorldPosition(), this.$config.set("hoverView", false), this.dragRect = { left: D.a.px(this.initMousePoint[0]), top: D.a.px(this.initMousePoint[1]), width: D.a.z(), height: D.a.z() }, this.trigger("drawAreaView", this.dragRect);
            } }, { key: "getSelectedItems", value: function(t3, e3) {
              var n3 = this.$selection.currentProject, r2 = [], i2 = [];
              return n3 && (t3.width === 0 && t3.height === 0 ? r2 = [] : (n3.layers.forEach(function(t4) {
                t4.is("artboard") && t4.isIncludeByArea(e3) ? i2.push(t4) : t4.is("artboard") && t4.checkInArea(e3) && t4.hasChildren() === false ? r2.push(t4) : r2.push.apply(r2, t4.checkInAreaForAll(e3));
              }), r2.length > 1 && (r2 = r2.filter(function(t4) {
                return t4.is("artboard") === false;
              })))), i2.length ? i2 : r2;
            } }, { key: Object(v.SUBSCRIBE)("moveDragAreaView"), value: function() {
              var t3 = this.$config.get("bodyEvent"), e3 = this.$viewport.getWorldPosition(), n3 = T.d.floor([], T.d.subtract([], e3, this.initMousePoint));
              t3.shiftKey && (n3[1] = n3[0]);
              var r2 = T.d.floor([], this.initMousePoint), i2 = T.d.floor([], T.d.add([], this.initMousePoint, n3)), a2 = this.$viewport.applyVertex(r2), o2 = this.$viewport.applyVertex(i2), c2 = Object(Q.g)([a2, o2]);
              if (this.dragRect = { left: D.a.px(c2[0][0]), top: D.a.px(c2[0][1]), width: D.a.px(Math.abs(c2[1][0] - c2[0][0])), height: D.a.px(Math.abs(c2[3][1] - c2[0][1])) }, this.trigger("drawAreaView", this.dragRect), this.$editor.isSelectionMode()) {
                var s2 = this.dragRect, u2 = s2.left, l2 = s2.top, f2 = s2.width, h2 = s2.height, p2 = { x: u2.value, y: l2.value, width: f2.value, height: h2.value };
                if (this.$selection.currentProject) {
                  var d2, v2 = this.getSelectedItems(p2, Object(Q.h)([r2, i2]));
                  (d2 = this.$selection).select.apply(d2, E()(v2)) && (this.emit("refreshSelection"), this.emit("refreshSelectionTool", true));
                }
              }
            } }, { key: Object(v.SUBSCRIBE)("endDragAreaView"), value: function() {
              var t3 = this.$viewport.getWorldPosition(), e3 = T.d.floor([], T.d.subtract([], t3, this.initMousePoint));
              this.$config.set("hoverView", true), e3[0] === 0 && e3[1] === 0 && this.$selection.empty(), this.trigger("initDrawAreaView"), this.$selection.reselect(), this.emit("history.refreshSelection"), this.emit("refreshSelectionTool", true), this.emit("removeGuideLine");
            } }]), n2;
          }(y2.a), qt = n(26), Jt = n(48);
          n(98);
          function Qt(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var te = { 1: "to top left", 2: "to top right", 3: "to bottom right", 4: "to bottom left", 11: "to top", 12: "to right", 13: "to bottom", 14: "to left" }, ee = function(t2) {
            s()(n2, t2);
            var e2 = Qt(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              return "\n            <div class='elf--selection-view one-selection-view' ref='$selectionView' style='display:none' >\n                <div class='pointer-rect' ref='$pointerRect'></div>\n            </div>\n        ";
            } }, { key: Object(v.SUBSCRIBE)("keymap.keydown"), value: function(t3) {
              t3.shiftKey && this.$el.attr("data-has-shift", "true");
            } }, { key: Object(v.SUBSCRIBE)("keymap.keyup"), value: function(t3) {
              this.$el.attr("data-has-shift", "");
            } }, { key: "toggleEditingPath", value: function(t3) {
              this.$el.toggleClass("editing-path", t3);
            } }, { key: "checkEditMode", value: function() {
              return this.$editor.isSelectionMode();
            } }, { key: Object(v.POINTERSTART)("$pointerRect .rotate-pointer") + Object(v.MOVE)("rotateVertex") + Object(v.END)("rotateEndVertex"), value: function(t3) {
              this.state.moveType = "rotate", this.initMousePoint = this.$viewport.getWorldPosition(t3), this.$selection.reselect(), this.verties = Object(L.clone)(this.$selection.verties), this.$snapManager.clear(), this.rotateTargetNumber = +t3.$dt.attr("data-number"), this.refreshRotatePointerIcon(), this.state.dragging = true, this.state.isRotate = true;
            } }, { key: "rotateVertex", value: function() {
              var t3 = this, e3 = this.$viewport.getWorldPosition(), n3 = T.d.subtract([], e3, this.initMousePoint), r2 = this.rotateTargetNumber === 4 ? Object(Q.a)(this.verties, 34) : this.verties[this.rotateTargetNumber], i2 = Math.floor(Object(ct.calculateAngleForVec3)(r2, this.verties[4], n3));
              this.$selection.cachedItemVerties.forEach(function(e4) {
                var n4 = t3.$selection.get(e4.id);
                if (n4) {
                  var r3 = qt.a.addTransform(e4.transform, "rotateZ(".concat(D.a.deg(i2).round(1e3), ")"));
                  if (t3.$config.get("bodyEvent").shiftKey) {
                    var a2 = qt.a.get(r3, "rotateZ");
                    if (a2[0]) {
                      var o2 = a2[0].value - a2[0].value % t3.$config.get("fixed.angle");
                      r3 = qt.a.rotateZ(r3, D.a.deg(o2));
                    }
                  }
                  n4.reset({ transform: r3 });
                }
              }), this.state.dragging = true, this.command("setAttributeForMulti", "change rotate", this.$selection.pack("transform"));
            } }, { key: "rotateEndVertex", value: function() {
              var t3 = this;
              this.state.dragging = false, this.state.isRotate = false, this.emit("recoverCursor"), this.verties = null, this.nextTick(function() {
                t3.command("setAttributeForMulti", "change rotate", t3.$selection.pack("transform"));
              });
            } }, { key: "refreshRotatePointerIcon", value: function(t3) {
              this.emit("refreshCursor", "rotate");
            } }, { key: "refreshPointerIcon", value: function(t3) {
              var e3 = t3.$dt.data("pointer");
              if (e3) {
                var n3 = e3.split(",").map(function(t4) {
                  return Number(t4);
                }), r2 = T.d.subtract([], n3, this.state.renderPointerList[0][4]), i2 = Object(ct.calculateAngle360)(r2[0], r2[1]), a2 = Math.floor(i2) - 130;
                this.emit("refreshCursor", "open_in_full", "rotate(".concat(a2, " 12 12)"));
              } else
                this.emit("recoverCursor");
            } }, { key: "checkPointerIsNotMoved", value: function(t3) {
              return Boolean(this.state.dragging) === false;
            } }, { key: Object(v.POINTEROVER)("$pointerRect .rotate-pointer") + Object(v.IF)("checkPointerIsNotMoved"), value: function(t3) {
              this.refreshRotatePointerIcon(t3);
            } }, { key: Object(v.POINTEROVER)("$pointerRect .pointer") + Object(v.IF)("checkPointerIsNotMoved"), value: function(t3) {
              this.refreshPointerIcon(t3);
            } }, { key: Object(v.POINTEROUT)("$pointerRect .pointer,.rotate-pointer") + Object(v.IF)("checkPointerIsNotMoved"), value: function(t3) {
              this.emit("recoverCursor");
            } }, { key: Object(v.POINTERSTART)("$pointerRect .pointer") + Object(v.MOVE)("moveVertex") + Object(v.END)("moveEndVertex"), value: function(t3) {
              this.refreshPointerIcon(t3), this.state.dragging = true;
              var e3 = +t3.$dt.attr("data-number"), n3 = te["".concat(e3)];
              this.initMousePoint = this.$viewport.getWorldPosition(t3), this.state.moveType = n3, this.state.moveTarget = e3, this.$selection.reselect(), this.$snapManager.clear(), this.verties = this.$selection.verties;
            } }, { key: "calculateNewOffsetMatrixInverse", value: function(t3, e3, n3, r2, i2) {
              var a2 = T.d.subtract([], Jt.a.scale(r2, e3, n3), t3);
              return Object(ct.calculateMatrixInverse)(T.a.fromTranslation([], t3), T.a.fromTranslation([], a2), i2, T.a.fromTranslation([], T.d.negate([], a2)));
            } }, { key: "calculateDistance", value: function(t3, e3, n3) {
              var r2 = T.d.clone(t3), i2 = this.$snapManager.check([T.d.add([], r2, e3)]), a2 = T.d.add([], r2, T.d.add([], e3, i2)), o2 = T.d.transformMat4([], r2, n3), c2 = T.d.transformMat4([], a2, n3);
              return T.d.floor([], T.d.add([], c2, T.d.negate([], o2)));
            } }, { key: "calculateRealDist", value: function(t3, e3, n3) {
              return this.calculateDistance(t3.verties[e3], n3, t3.accumulatedMatrixInverse);
            } }, { key: "moveItem", value: function(t3, e3, n3, r2) {
              t3 && t3.reset({ x: D.a.px(e3[0] + (n3 < 0 ? n3 : 0)), y: D.a.px(e3[1] + (r2 < 0 ? r2 : 0)), width: D.a.px(Math.abs(n3)), height: D.a.px(Math.abs(r2)) });
            } }, { key: "moveDirectionVertex", value: function(t3, e3, n3, r2, i2) {
              var a2 = Object(ct.calculateMatrix)(t3.directionMatrix[r2], this.calculateNewOffsetMatrixInverse(i2, e3, n3, t3.originalTransformOrigin, t3.itemMatrix)), o2 = T.a.getTranslation([], a2);
              this.moveItem(this.$selection.get(t3.id), o2, e3, n3);
            } }, { key: "moveBottomRightVertex", value: function(t3) {
              var e3 = this;
              this.verties && this.$selection.cachedItemVerties.forEach(function(n3) {
                var r2 = e3.calculateRealDist(n3, 2, t3), i2 = P()(r2, 2), a2 = i2[0], o2 = i2[1];
                e3.$config.get("bodyEvent").shiftKey && (o2 = a2 * n3.height / n3.width);
                var c2 = n3.width + a2, s2 = n3.height + o2;
                e3.moveDirectionVertex(n3, c2, s2, "to top left", [0, 0, 0]);
              });
            } }, { key: "moveTopRightVertex", value: function(t3) {
              var e3 = this.$selection.cachedItemVerties[0];
              if (e3) {
                var n3 = this.calculateRealDist(e3, 1, t3), r2 = P()(n3, 2), i2 = r2[0], a2 = r2[1];
                this.$config.get("bodyEvent").shiftKey && (a2 = -i2 * e3.height / e3.width);
                var o2 = e3.width + i2, c2 = e3.height - a2;
                this.moveDirectionVertex(e3, o2, c2, "to bottom left", [0, c2, 0]);
              }
            } }, { key: "moveTopLeftVertex", value: function(t3) {
              var e3 = this.$selection.cachedItemVerties[0];
              if (e3) {
                var n3 = this.calculateRealDist(e3, 0, t3), r2 = P()(n3, 2), i2 = r2[0], a2 = r2[1];
                this.$config.get("bodyEvent").shiftKey && (a2 = i2 * e3.height / e3.width);
                var o2 = e3.width - i2, c2 = e3.height - a2;
                this.moveDirectionVertex(e3, o2, c2, "to bottom right", [o2, c2, 0]);
              }
            } }, { key: "moveTopVertex", value: function(t3) {
              var e3 = this.$selection.cachedItemVerties[0];
              if (e3) {
                var n3 = this.calculateRealDist(e3, 0, t3), r2 = P()(n3, 2), i2 = (r2[0], r2[1]), a2 = e3.width, o2 = e3.height - i2;
                this.moveDirectionVertex(e3, a2, o2, "to bottom", [a2 / 2, o2, 0]);
              }
            } }, { key: "moveBottomVertex", value: function(t3) {
              var e3 = this.$selection.cachedItemVerties[0];
              if (e3) {
                var n3 = this.calculateRealDist(e3, 3, t3), r2 = P()(n3, 2), i2 = (r2[0], r2[1]), a2 = e3.width, o2 = e3.height + i2;
                this.moveDirectionVertex(e3, a2, o2, "to top", [a2 / 2, 0, 0]);
              }
            } }, { key: "moveRightVertex", value: function(t3) {
              var e3 = this.$selection.cachedItemVerties[0];
              if (e3) {
                var n3 = this.calculateRealDist(e3, 1, t3), r2 = P()(n3, 2), i2 = r2[0], a2 = (r2[1], e3.width + i2), o2 = e3.height;
                this.moveDirectionVertex(e3, a2, o2, "to left", [0, o2 / 2, 0]);
              }
            } }, { key: "moveLeftVertex", value: function(t3) {
              var e3 = this.$selection.cachedItemVerties[0];
              if (e3) {
                var n3 = this.calculateRealDist(e3, 0, t3), r2 = P()(n3, 2), i2 = r2[0], a2 = (r2[1], e3.width - i2), o2 = e3.height;
                this.moveDirectionVertex(e3, a2, o2, "to right", [a2, o2 / 2, 0]);
              }
            } }, { key: "moveBottomLeftVertex", value: function(t3) {
              var e3 = this.$selection.cachedItemVerties[0];
              if (e3) {
                var n3 = this.calculateRealDist(e3, 3, t3), r2 = P()(n3, 2), i2 = r2[0], a2 = r2[1];
                this.$config.get("bodyEvent").shiftKey && (a2 = -i2 * e3.height / e3.width);
                var o2 = e3.width - i2, c2 = e3.height + a2;
                this.moveDirectionVertex(e3, o2, c2, "to top right", [o2, 0, 0]);
              }
            } }, { key: "moveVertex", value: function() {
              var t3 = this.$viewport.getWorldPosition(), e3 = T.d.subtract([], t3, this.initMousePoint);
              this.state.moveType === "to top left" ? this.moveTopLeftVertex(e3) : this.state.moveType === "to top" ? this.moveTopVertex(e3) : this.state.moveType === "to right" ? this.moveRightVertex(e3) : this.state.moveType === "to bottom" ? this.moveBottomVertex(e3) : this.state.moveType === "to left" ? this.moveLeftVertex(e3) : this.state.moveType === "to top right" ? this.moveTopRightVertex(e3) : this.state.moveType === "to bottom right" ? this.moveBottomRightVertex(e3) : this.state.moveType === "to bottom left" && this.moveBottomLeftVertex(e3), this.emit("setAttributeForMulti", this.$selection.pack("x", "y", "width", "height")), this.state.dragging = true;
            } }, { key: "moveEndVertex", value: function() {
              var t3 = this;
              this.state.dragging = false, this.emit("recoverCursor"), this.$selection.reselect(), this.nextTick(function() {
                t3.command("setAttributeForMulti", "move selection pointer", t3.$selection.pack("x", "y", "width", "height"));
              });
            } }, { key: "moveTo", value: function(t3) {
              t3 = T.d.floor([], t3);
              var e3 = this.$snapManager.check(this.$selection.cachedRectVerties.map(function(e4) {
                return T.d.add([], e4, t3);
              })), n3 = T.d.add([], t3, e3), r2 = {};
              this.$selection.cachedItemVerties.forEach(function(t4) {
                r2[t4.id] = { x: D.a.px(t4.x + n3[0]), y: D.a.px(t4.y + n3[1]) };
              }), this.$selection.reset(r2);
            } }, { key: "getSelectedElements", value: function() {
              var t3 = this;
              return this.$selection.ids.map(function(e3) {
                return t3.parent.state.cachedCurrentElement[e3];
              });
            } }, { key: "initSelectionTool", value: function() {
              this.$editor.isSelectionMode() && this.$el.isHide() && this.$selection.isOne ? this.$el.show() : this.$el.isShow() && this.$selection.isOne === false && this.$el.hide(), this.makeSelectionTool();
            } }, { key: "makeSelectionTool", value: function() {
              this.renderPointers();
            } }, { key: "renderPointers", value: function() {
              if (!this.$selection.isEmpty) {
                var t3 = this.$selection.verties, e3 = this.$selection.selectionVerties, n3 = T.a.getTranslation([], this.$selection.cachedItemVerties[0].parentMatrix);
                this.state.renderPointerList = [this.$viewport.applyVerties(t3), this.$viewport.applyVerties(e3), this.$viewport.applyVerties([n3])];
                var r2 = this.createRenderPointers.apply(this, E()(this.state.renderPointerList));
                if (r2) {
                  var i2 = r2.line, a2 = r2.point, o2 = r2.size;
                  this.refs.$pointerRect.updateDiff(i2 + a2 + o2);
                }
              }
            } }, { key: "createPointer", value: function(t3, e3, n3) {
              return `
        <div class='pointer' data-number="`.concat(e3, '" data-pointer="').concat(t3, '" style="transform: translate3d( calc(').concat(t3[0], "px - 50%), calc(").concat(t3[1], "px - 50%), 0px) rotateZ(").concat(n3 || "0deg", ')" ></div>\n        ');
            } }, { key: "createRotatePointer", value: function(t3, e3, n3) {
              return t3.length === 0 ? "" : e3 < 4 ? `
            <div class='rotate-pointer no-fill' data-number="`.concat(e3, '" style="transform: translate3d( calc(').concat(t3[0], "px - 50%), calc(").concat(t3[1], 'px - 50%), 0px) scale(1.8);" ></div>\n            ') : `
        <div class='rotate-pointer' data-number="`.concat(e3, '" style="transform: translate3d( calc(').concat(t3[0], "px - 50%), calc(").concat(t3[1], 'px - 50%), 0px)" ></div>\n        ');
            } }, { key: "createPointerRect", value: function(t3, e3, n3) {
              if (t3.length === 0)
                return "";
              var r2 = this.$selection.current, i2 = "";
              if (!(r2 && r2.is("artboard"))) {
                var a2 = T.d.lerp([], t3[0], t3[1], 0.5);
                i2 += "\n                M ".concat(a2[0], ",").concat(a2[1], " \n                L ").concat(e3[0], ",").concat(e3[1], " \n            ");
              }
              return `
        <svg class='line' overflow="visible">
            <path 
                d="
                    M `.concat(t3[0][0], ", ").concat(t3[0][1], " \n                    L ").concat(t3[1][0], ", ").concat(t3[1][1], " \n                    L ").concat(t3[2][0], ", ").concat(t3[2][1], " \n                    L ").concat(t3[3][0], ", ").concat(t3[3][1], " \n                    L ").concat(t3[0][0], ", ").concat(t3[0][1], "\n                    ").concat(i2, '\n                    Z\n                " />\n        </svg>');
            } }, { key: "createSize", value: function(t3) {
              var e3 = T.d.lerp([], t3[0], t3[1], 0.5), n3 = T.d.lerp([], t3[1], t3[2], 0.5), r2 = T.d.lerp([], t3[2], t3[3], 0.5), i2 = T.d.lerp([], t3[3], t3[0], 0.5), a2 = [{ start: e3, end: r2 }, { start: n3, end: i2 }, { start: r2, end: e3 }, { start: i2, end: n3 }].map(function(t4, e4) {
                return { index: e4, data: t4 };
              });
              a2.sort(function(t4, e4) {
                return t4.data.start[1] > e4.data.start[1] ? -1 : 1;
              });
              var o2 = a2[0], c2 = T.d.lerp([], o2.data.end, o2.data.start, 1 + 16 / T.d.dist(o2.data.start, o2.data.end)), s2 = this.$selection.current.width.value, u2 = this.$selection.current.height.value, l2 = T.d.subtract([], o2.data.start, o2.data.end), f2 = Object(ct.calculateAngle360)(l2[0], l2[1]) + 90, h2 = "".concat(Object(ct.round)(s2, 100), " x ").concat(Object(ct.round)(u2, 100));
              if (this.state.isRotate) {
                var p2 = qt.a.get(this.$selection.current.transform, "rotateZ");
                p2 && (h2 = "".concat(Object(ct.round)(p2[0].value, 1e3), "\xB0"));
              }
              return '\n            <div \n                data-layout="'.concat(this.$selection.current.layout, `"
                class='size-pointer' 
                style="transform: translate3d( calc(`).concat(c2[0], "px - 50%), calc(").concat(c2[1], "px - 50%), 0px) rotateZ(").concat(f2, 'deg)" >\n               ').concat(h2, "\n            </div>\n        ");
            } }, { key: "createRenderPointers", value: function(t3, e3, n3) {
              var r2 = this.$selection.current, i2 = this.$editor.isPointerMove;
              if (!r2 || !r2.is("text") || r2.width.value !== 0 || r2.height.value !== 0) {
                var a2 = r2 && r2.is("artboard"), o2 = T.d.subtract([], T.d.lerp([], t3[0], t3[1], 0.5), T.d.lerp([], t3[0], t3[2], 0.5)), c2 = D.a.deg(Object(ct.calculateAngle360)(o2[0], o2[1]) + 90).round(1e3), s2 = Object(Q.a)(t3, 34), u2 = T.d.dist(t3[0], t3[2]);
                return { line: this.createPointerRect(t3, s2, n3[0]), size: this.createSize(t3), point: [a2 ? void 0 : this.createRotatePointer(e3[0], 0), a2 ? void 0 : this.createRotatePointer(e3[1], 1), a2 ? void 0 : this.createRotatePointer(e3[2], 2), a2 ? void 0 : this.createRotatePointer(e3[3], 3), a2 ? void 0 : this.createRotatePointer(s2, 4, "center center"), i2 ? void 0 : this.createPointer(t3[0], 1, c2), i2 ? void 0 : this.createPointer(t3[1], 2, c2), i2 ? void 0 : this.createPointer(t3[2], 3, c2), i2 ? void 0 : this.createPointer(t3[3], 4, c2), this.createPointer(t3[4], 5, c2), u2 < 20 || i2 ? void 0 : this.createPointer(T.d.lerp([], t3[0], t3[1], 0.5), 11, c2), u2 < 20 || i2 ? void 0 : this.createPointer(T.d.lerp([], t3[1], t3[2], 0.5), 12, c2), u2 < 20 || i2 ? void 0 : this.createPointer(T.d.lerp([], t3[2], t3[3], 0.5), 13, c2), u2 < 20 || i2 ? void 0 : this.createPointer(T.d.lerp([], t3[3], t3[0], 0.5), 14, c2)].join("") };
              }
            } }, { key: "checkShow", value: function() {
              return !(!this.$selection.isOne || !this.$selection.hasChangedField("x", "y", "width", "height", "transform", "transform-origin", "perspective", "perspective-origin"));
            } }, { key: Object(v.SUBSCRIBE)("refreshSelectionStyleView") + Object(v.IF)("checkShow"), value: function() {
              this.renderPointers();
            } }, { key: Object(v.SUBSCRIBE)("hideSelectionToolView"), value: function() {
              this.$el.hide();
            } }]), n2;
          }(function(t2) {
            s()(n2, t2);
            var e2 = Qt(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: Object(v.SUBSCRIBE)("hideSubEditor"), value: function(t3) {
              this.toggleEditingPath(false);
            } }, { key: Object(v.SUBSCRIBE)("finishPathEdit"), value: function() {
              this.toggleEditingPath(false);
            } }, { key: Object(v.SUBSCRIBE)("refreshSelectionTool"), value: function() {
              var t3 = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0];
              this.initSelectionTool(t3);
            } }, { key: Object(v.SUBSCRIBE)("updateViewport"), value: function() {
              this.$selection.isOne && this.initSelectionTool();
            } }]), n2;
          }(y2.a)), ne = n(81);
          function re(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var ie = { 1: "to top left", 2: "to top right", 3: "to bottom right", 4: "to bottom left", 11: "to top", 12: "to right", 13: "to bottom", 14: "to left" }, ae = function(t2) {
            s()(n2, t2);
            var e2 = re(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              return "\n            <div class='elf--selection-view group-selection-view' ref='$selectionView'  style='display:none' >\n                <div class='pointer-rect' ref='$pointerRect'></div>        \n            </div>\n        ";
            } }, { key: Object(v.SUBSCRIBE)("keymap.keydown"), value: function(t3) {
              t3.shiftKey && this.$el.attr("data-has-shift", "true");
            } }, { key: Object(v.SUBSCRIBE)("keymap.keyup"), value: function(t3) {
              this.$el.attr("data-has-shift", "");
            } }, { key: "toggleEditingPath", value: function(t3) {
              this.refs.$selectionView.toggleClass("editing-path", t3);
            } }, { key: "checkEditMode", value: function() {
              return this.$editor.isSelectionMode();
            } }, { key: Object(v.POINTERSTART)("$pointerRect .rotate-pointer") + Object(v.MOVE)("rotateVertex") + Object(v.END)("rotateEndVertex"), value: function(t3) {
              this.state.moveType = "rotate", this.initMousePoint = this.$viewport.getWorldPosition(t3), this.verties = this.groupItem.verties, this.rotateTargetNumber = +t3.$dt.attr("data-number"), this.refreshRotatePointerIcon(), this.state.dragging = true, this.state.isRotate = true;
            } }, { key: "rotateVertex", value: function() {
              var t3 = this, e3 = this.$viewport.getWorldPosition(), n3 = T.d.subtract([], e3, this.initMousePoint), r2 = this.rotateTargetNumber === 4 ? Object(Q.a)(this.verties, 34) : this.verties[this.rotateTargetNumber], i2 = Math.floor(Object(ct.calculateAngleForVec3)(r2, this.verties[4], n3));
              this.$config.get("bodyEvent").shiftKey && (i2 -= i2 % this.$config.get("fixed.angle")), this.localAngle = this.angle + i2, this.groupItem.reset({ transform: qt.a.rotateZ(this.groupItem.transform, D.a.deg(this.localAngle)) });
              var a2 = Object(ct.calculateRotationOriginMat4)(i2, this.verties[4]);
              this.$selection.cachedItemVerties.forEach(function(e4) {
                var n4 = Object(ct.vertiesMap)(e4.verties, T.a.multiply([], e4.parentMatrixInverse, a2)), r3 = Object(Q.a)(n4, 34), i3 = Object(ct.calculateAngle)(r3[0] - n4[4][0], r3[1] - n4[4][1]) - 270, o2 = T.d.transformMat4([], n4[0], Object(ct.calculateRotationOriginMat4)(-i3, n4[4])), c2 = t3.$selection.get(e4.id);
                c2 && c2.reset({ x: D.a.px(o2[0]), y: D.a.px(o2[1]), transform: qt.a.rotateZ(e4.transform, D.a.deg(i3)) });
              }), this.state.dragging = true, this.emit("setAttributeForMulti", this.$selection.pack("x", "y", "width", "height", "transform"));
            } }, { key: "rotateEndVertex", value: function() {
              var t3 = this;
              this.state.dragging = false, this.state.isRotate = false, this.emit("recoverCursor"), this.$selection.reselect(), this.initMatrix(true), this.nextTick(function() {
                t3.command("setAttributeForMulti", "rotate selection pointer", t3.$selection.pack("x", "y", "width", "height", "transform"));
              });
            } }, { key: "refreshRotatePointerIcon", value: function(t3) {
              this.emit("refreshCursor", "rotate");
            } }, { key: "refreshPointerIcon", value: function(t3) {
              var e3 = t3.$dt.data("pointer");
              if (e3) {
                var n3 = e3.split(",").map(function(t4) {
                  return Number(t4);
                }), r2 = T.d.subtract([], n3, this.state.renderPointerList[0][4]), i2 = Object(ct.calculateAngle360)(r2[0], r2[1]), a2 = Math.floor(i2) - 135;
                this.emit("refreshCursor", "open_in_full", "rotate(".concat(a2, " 12 12)"));
              } else
                this.emit("recoverCursor");
            } }, { key: "checkPointerIsNotMoved", value: function(t3) {
              return Boolean(this.state.dragging) === false;
            } }, { key: Object(v.POINTEROVER)("$pointerRect .rotate-pointer") + Object(v.IF)("checkPointerIsNotMoved") + v.PREVENT, value: function(t3) {
              this.refreshRotatePointerIcon(t3);
            } }, { key: Object(v.POINTEROVER)("$pointerRect .pointer") + Object(v.IF)("checkPointerIsNotMoved") + v.PREVENT, value: function(t3) {
              this.refreshPointerIcon(t3);
            } }, { key: Object(v.POINTEROUT)("$pointerRect .pointer,.rotate-pointer") + Object(v.IF)("checkPointerIsNotMoved") + v.PREVENT, value: function(t3) {
              this.emit("recoverCursor");
            } }, { key: Object(v.POINTERSTART)("$pointerRect .pointer") + v.PREVENT + Object(v.MOVE)("moveVertex") + Object(v.END)("moveEndVertex"), value: function(t3) {
              this.refreshPointerIcon(t3), this.state.dragging = true;
              var e3 = +t3.$dt.attr("data-number");
              this.state.moveType = ie["".concat(e3)], this.initMousePoint = this.$viewport.getWorldPosition(t3), this.$selection.reselect(), this.initMatrix(true), this.cachedGroupItem = this.groupItem.matrix;
            } }, { key: "calculateNewOffsetMatrixInverse", value: function(t3, e3, n3, r2, i2) {
              var a2 = T.d.add([], Jt.a.scale(r2, e3, n3), T.d.negate([], t3));
              return Object(ct.calculateMatrixInverse)(T.a.fromTranslation([], t3), T.a.fromTranslation([], a2), i2, T.a.fromTranslation([], T.d.negate([], a2)));
            } }, { key: "calculateDistance", value: function(t3, e3, n3) {
              var r2 = T.d.clone(t3), i2 = this.$snapManager.check([T.d.add([], r2, e3)]), a2 = T.d.add([], r2, T.d.add([], e3, i2)), o2 = T.d.transformMat4([], r2, n3), c2 = T.d.transformMat4([], a2, n3);
              return T.d.floor([], T.d.add([], c2, T.d.negate([], o2)));
            } }, { key: "calculateRealDist", value: function(t3, e3, n3) {
              return this.calculateDistance(t3.verties[e3], n3, t3.accumulatedMatrixInverse);
            } }, { key: "moveGroupItem", value: function(t3, e3, n3) {
              this.groupItem.reset({ x: D.a.px(t3[0] + (e3 < 0 ? e3 : 0)).round(1e3), y: D.a.px(t3[1] + (n3 < 0 ? n3 : 0)).round(1e3), width: D.a.px(Math.abs(e3)).round(1e3), height: D.a.px(Math.abs(n3)).round(1e3) });
            } }, { key: "moveItemForGroup", value: function(t3, e3) {
              var n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, i2 = Object(ct.calculateMatrixInverse)(T.a.fromTranslation([], e3[4]), t3.itemMatrix, T.a.fromTranslation([], T.d.negate([], e3[4]))), a2 = T.d.transformMat4([], e3[0], i2), o2 = P()(a2, 2), c2 = o2[0], s2 = o2[1], u2 = T.d.distance(e3[0], e3[1]), l2 = T.d.distance(e3[0], e3[3]), f2 = this.$selection.get(t3.id);
              f2 && f2.reset({ x: D.a.px(c2 + n3), y: D.a.px(s2 + r2), width: D.a.px(u2), height: D.a.px(l2) });
            } }, { key: "recoverItemForGroup", value: function(t3, e3, n3) {
              var r2 = this, i2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, a2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0, o2 = t3.accumulatedMatrix, c2 = t3.accumulatedMatrixInverse;
              this.$selection.cachedItemVerties.forEach(function(t4) {
                var s2 = Object(ct.calculateMatrix)(t4.parentMatrixInverse, o2, T.a.fromTranslation([], [i2, a2, 0]), T.a.fromScaling([], [e3, n3, 1]), c2), u2 = Object(ct.vertiesMap)(t4.verties, s2);
                r2.moveItemForGroup(t4, u2);
              });
            } }, { key: "moveBottomRightVertex", value: function(t3) {
              var e3 = this.cachedGroupItem, n3 = this.calculateRealDist(e3, 2, t3), r2 = P()(n3, 2), i2 = r2[0], a2 = r2[1];
              this.$config.get("bodyEvent").shiftKey && (a2 = i2 * e3.height / e3.width);
              var o2 = e3.width + i2, c2 = e3.height + a2;
              this.moveDirectionVertex(e3, 0, 0, o2, c2, "to top left", [0, 0, 0]);
            } }, { key: "moveTopRightVertex", value: function(t3) {
              var e3 = this.cachedGroupItem, n3 = this.calculateRealDist(e3, 1, t3), r2 = P()(n3, 2), i2 = r2[0], a2 = r2[1];
              this.$config.get("bodyEvent").shiftKey && (a2 = -i2 * e3.height / e3.width);
              var o2 = e3.width + i2, c2 = e3.height - a2;
              this.moveDirectionVertex(e3, 0, a2, o2, c2, "to bottom left", [0, c2, 0]);
            } }, { key: "moveDirectionVertex", value: function(t3, e3, n3, r2, i2, a2, o2) {
              var c2 = r2 / t3.width, s2 = i2 / t3.height;
              if (c2 >= 0 && s2 >= 0) {
                var u2 = Object(ct.calculateMatrix)(t3.directionMatrix[a2], this.calculateNewOffsetMatrixInverse(o2, r2, i2, t3.originalTransformOrigin, t3.itemMatrix)), l2 = T.a.getTranslation([], u2);
                this.moveGroupItem(l2, r2, i2), this.recoverItemForGroup(t3, c2, s2, e3, n3);
              }
            } }, { key: "moveTopVertex", value: function(t3) {
              var e3 = this.cachedGroupItem, n3 = this.calculateRealDist(e3, 0, t3), r2 = P()(n3, 2), i2 = (r2[0], r2[1]), a2 = e3.width, o2 = e3.height - i2;
              this.moveDirectionVertex(e3, 0, i2, a2, o2, "to bottom", [a2 / 2, o2, 0]);
            } }, { key: "moveBottomVertex", value: function(t3) {
              var e3 = this.cachedGroupItem, n3 = this.calculateRealDist(e3, 2, t3), r2 = P()(n3, 2), i2 = (r2[0], r2[1]), a2 = e3.width, o2 = e3.height + i2;
              this.moveDirectionVertex(e3, 0, 0, a2, o2, "to top", [a2 / 2, 0, 0]);
            } }, { key: "moveTopLeftVertex", value: function(t3) {
              var e3 = this.cachedGroupItem, n3 = this.calculateRealDist(e3, 0, t3), r2 = P()(n3, 2), i2 = r2[0], a2 = r2[1];
              this.$config.get("bodyEvent").shiftKey && (a2 = i2 * e3.height / e3.width);
              var o2 = e3.width - i2, c2 = e3.height - a2;
              this.moveDirectionVertex(e3, i2, a2, o2, c2, "to bottom right", [o2, c2, 0]);
            } }, { key: "moveLeftVertex", value: function(t3) {
              var e3 = this.cachedGroupItem, n3 = this.calculateRealDist(e3, 0, t3), r2 = P()(n3, 2), i2 = r2[0], a2 = (r2[1], e3.width - i2), o2 = e3.height;
              this.moveDirectionVertex(e3, i2, 0, a2, o2, "to right", [a2, o2 / 2, 0]);
            } }, { key: "moveRightVertex", value: function(t3) {
              var e3 = this.cachedGroupItem, n3 = this.calculateRealDist(e3, 2, t3), r2 = P()(n3, 2), i2 = r2[0], a2 = (r2[1], e3.width + i2), o2 = e3.height;
              this.moveDirectionVertex(e3, 0, 0, a2, o2, "to left", [0, o2 / 2, 0]);
            } }, { key: "moveBottomLeftVertex", value: function(t3) {
              var e3 = this.cachedGroupItem, n3 = this.calculateRealDist(e3, 3, t3), r2 = P()(n3, 2), i2 = r2[0], a2 = r2[1];
              this.$config.get("bodyEvent").shiftKey && (a2 = -i2 * e3.height / e3.width);
              var o2 = e3.width - i2, c2 = e3.height + a2;
              this.moveDirectionVertex(e3, i2, 0, o2, c2, "to top right", [o2, 0, 0]);
            } }, { key: "moveVertex", value: function() {
              var t3 = this.$viewport.getWorldPosition(), e3 = T.d.subtract([], t3, this.initMousePoint);
              this.state.moveType === "to bottom right" ? this.moveBottomRightVertex(e3) : this.state.moveType === "to top right" ? this.moveTopRightVertex(e3) : this.state.moveType === "to top left" ? this.moveTopLeftVertex(e3) : this.state.moveType === "to bottom left" ? this.moveBottomLeftVertex(e3) : this.state.moveType === "to top" ? this.moveTopVertex(e3) : this.state.moveType === "to left" ? this.moveLeftVertex(e3) : this.state.moveType === "to right" ? this.moveRightVertex(e3) : this.state.moveType === "to bottom" && this.moveBottomVertex(e3), this.emit("setAttributeForMulti", this.$selection.pack("x", "y", "width", "height", "transform")), this.state.dragging = true;
            } }, { key: "moveEndVertex", value: function(t3, e3) {
              var n3 = this;
              this.state.dragging = false, this.emit("recoverCursor"), this.$selection.reselect(), this.state.dragging = false, this.initMatrix(true), this.nextTick(function() {
                n3.command("setAttributeForMulti", "move selection pointer", n3.$selection.pack("x", "y", "width", "height", "transform"));
              });
            } }, { key: "getSelectedElements", value: function() {
              var t3 = this;
              return this.$selection.ids.map(function(e3) {
                return t3.parent.state.cachedCurrentElement[e3];
              });
            } }, { key: "initSelectionTool", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 && arguments[0];
              this.$editor.isSelectionMode() && this.$el.isHide() && this.$selection.isMany ? this.$el.show() : this.$el.isShow() && this.$selection.isMany === false && this.$el.hide(), this.initMatrix(t3), this.makeSelectionTool();
            } }, { key: "item", get: function() {
              var t3 = this.verties || Object(Q.e)(0, 0, 0, 0);
              return this.state.newArtBoard || (this.state.newArtBoard = new ne.a()), this.state.newArtBoard.reset({ parent: this.$selection.currentProject, x: D.a.px(t3[0][0]), y: D.a.px(t3[0][1]), width: D.a.px(T.d.dist(t3[0], t3[1])), height: D.a.px(T.d.dist(t3[0], t3[3])), transform: "" }), this.state.newArtBoard;
            } }, { key: "initMatrix", value: function() {
              var t3 = arguments.length > 0 && arguments[0] !== void 0 && arguments[0];
              t3 && this.$selection.isMany && (this.verties = Object(L.clone)(this.$selection.verties), this.angle = 0, this.localAngle = this.angle, this.groupItem = this.item, this.cachedGroupItem = this.item.matrix);
            } }, { key: "makeSelectionTool", value: function() {
              this.renderPointers();
            } }, { key: "renderPointers", value: function() {
              if (this.groupItem) {
                var t3 = this.state.dragging ? this.groupItem.verties : this.$selection.verties, e3 = this.groupItem.selectionVerties();
                if (t3.length !== 0) {
                  this.state.renderPointerList = [this.$viewport.applyVerties(t3), this.$viewport.applyVerties(e3)];
                  var n3 = this.createRenderPointers.apply(this, E()(this.state.renderPointerList)), r2 = n3.line, i2 = n3.point, a2 = n3.size;
                  this.refs.$pointerRect.updateDiff(r2 + i2 + a2);
                }
              }
            } }, { key: "createPointer", value: function(t3, e3, n3) {
              return `
        <div    
            class='pointer' 
            data-number="`.concat(e3, '" \n            data-pointer="').concat(t3, '" \n            style="transform: translate3d( calc(').concat(t3[0], "px - 50%), calc(").concat(t3[1], "px - 50%), 0px) rotateZ(").concat(n3 || "0deg", ')" \n        ></div>\n        ');
            } }, { key: "createRotatePointer", value: function(t3, e3) {
              return t3.length === 0 ? "" : e3 < 4 ? `
            <div class='rotate-pointer no-fill' data-number="`.concat(e3, '" style="transform: translate3d( calc(').concat(t3[0], "px - 50%), calc(").concat(t3[1], 'px - 50%), 0px) scale(1.8);" ></div>\n            ') : `
        <div class='rotate-pointer' data-number="`.concat(e3, '" style="transform: translate3d( calc(').concat(t3[0], "px - 50%), calc(").concat(t3[1], 'px - 50%), 0px)" ></div>\n        ');
            } }, { key: "createPointerRect", value: function(t3, e3) {
              if (t3.length === 0)
                return "";
              var n3 = T.d.lerp([], t3[0], t3[1], 0.5), r2 = "\n            M ".concat(n3[0], ",").concat(n3[1], " \n            L ").concat(e3[0], ", ").concat(e3[1], " \n        ");
              return `
        <svg class='line' overflow="visible">
            <path 
                d="
                    M `.concat(t3[0][0], ", ").concat(t3[0][1], " \n                    L ").concat(t3[1][0], ", ").concat(t3[1][1], " \n                    L ").concat(t3[2][0], ", ").concat(t3[2][1], " \n                    L ").concat(t3[3][0], ", ").concat(t3[3][1], " \n                    L ").concat(t3[0][0], ", ").concat(t3[0][1], "\n                    ").concat(r2, '\n                    Z\n                " />\n        </svg>');
            } }, { key: "createSize", value: function(t3) {
              var e3 = T.d.lerp([], t3[0], t3[1], 0.5), n3 = T.d.lerp([], t3[1], t3[2], 0.5), r2 = T.d.lerp([], t3[2], t3[3], 0.5), i2 = T.d.lerp([], t3[3], t3[0], 0.5), a2 = [{ start: e3, end: r2 }, { start: n3, end: i2 }, { start: r2, end: e3 }, { start: i2, end: n3 }].map(function(t4, e4) {
                return { index: e4, data: t4 };
              });
              a2.sort(function(t4, e4) {
                return t4.data.start[1] > e4.data.start[1] ? -1 : 1;
              });
              var o2 = a2[0], c2 = T.d.lerp([], o2.data.end, o2.data.start, 1 + 16 / T.d.dist(o2.data.start, o2.data.end)), s2 = this.groupItem.width.value, u2 = this.groupItem.height.value, l2 = T.d.subtract([], o2.data.start, o2.data.end), f2 = Object(ct.calculateAngle360)(l2[0], l2[1]) + 90, h2 = "".concat(Object(ct.round)(s2, 100), " x ").concat(Object(ct.round)(u2, 100));
              if (this.state.isRotate) {
                var p2 = qt.a.get(this.groupItem.transform, "rotateZ");
                p2 && (h2 = "".concat(p2[0].value, "\xB0"));
              }
              return `
            <div 
                class='size-pointer' 
                style="transform: translate3d( calc(`.concat(c2[0], "px - 50%), calc(").concat(c2[1], "px - 50%), 0px) rotateZ(").concat(f2, 'deg)" >\n               ').concat(h2, "\n            </div>\n        ");
            } }, { key: "createRenderPointers", value: function(t3, e3) {
              var n3 = this.$editor.isPointerMove, r2 = T.d.subtract([], T.d.lerp([], t3[0], t3[1], 0.5), T.d.lerp([], t3[0], t3[2], 0.5)), i2 = D.a.deg(Object(ct.calculateAngle360)(r2[0], r2[1]) - 90).round(1e3), a2 = Object(Q.a)(t3, 30), o2 = T.d.dist(t3[0], t3[2]);
              return { line: this.createPointerRect(t3, a2), size: this.createSize(t3), point: [this.createRotatePointer(e3[0], 0, "bottom right"), this.createRotatePointer(e3[1], 1, "bottom left"), this.createRotatePointer(e3[2], 2, "top left"), this.createRotatePointer(e3[3], 3, "top right"), this.createRotatePointer(a2, 4, "center center"), n3 ? void 0 : this.createPointer(t3[0], 1, i2), n3 ? void 0 : this.createPointer(t3[1], 2, i2), n3 ? void 0 : this.createPointer(t3[2], 3, i2), n3 ? void 0 : this.createPointer(t3[3], 4, i2), o2 < 20 || n3 ? void 0 : this.createPointer(T.d.lerp([], t3[0], t3[1], 0.5), 11), o2 < 20 || n3 ? void 0 : this.createPointer(T.d.lerp([], t3[1], t3[2], 0.5), 12), o2 < 20 || n3 ? void 0 : this.createPointer(T.d.lerp([], t3[2], t3[3], 0.5), 13), o2 < 20 || n3 ? void 0 : this.createPointer(T.d.lerp([], t3[3], t3[0], 0.5), 14)].join("") };
            } }, { key: "checkShow", value: function() {
              return !(!this.$selection.isMany || !this.$selection.hasChangedField("x", "y", "width", "height", "transform", "transform-origin", "perspective", "perspective-origin"));
            } }, { key: Object(v.SUBSCRIBE)("refreshSelectionStyleView") + Object(v.IF)("checkShow"), value: function() {
              this.renderPointers();
            } }, { key: Object(v.SUBSCRIBE)("hideSelectionToolView"), value: function() {
              this.$el.hide();
            } }]), n2;
          }(function(t2) {
            s()(n2, t2);
            var e2 = re(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: Object(v.SUBSCRIBE)("hideSelectionToolView"), value: function() {
            } }, { key: Object(v.SUBSCRIBE)("hideSubEditor"), value: function(t3) {
              this.toggleEditingPath(false);
            } }, { key: Object(v.SUBSCRIBE)("finishPathEdit"), value: function() {
              this.toggleEditingPath(false);
            } }, { key: Object(v.SUBSCRIBE)("refreshSelectionTool"), value: function() {
              var t3 = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0];
              this.initSelectionTool(t3);
            } }, { key: Object(v.SUBSCRIBE)("updateViewport"), value: function() {
              var t3 = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0];
              this.$selection.isMany && this.initSelectionTool(t3);
            } }]), n2;
          }(y2.a));
          n(144);
          function oe(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var ce, se = function(t2) {
            s()(r2, t2);
            var e2, n2 = oe(r2);
            function r2() {
              return i()(this, r2), n2.apply(this, arguments);
            }
            return o()(r2, [{ key: "components", value: function() {
              return { SelectionToolView: ee, GroupSelectionToolView: ae, PageTools: X, GridLayoutLineView: Kt, DragAreaRectView: Zt, HTMLRenderView: H, SelectionInfoView: _t, LayerAppendView: nt, PathEditorView: $t, PathDrawView: xt, HoverView: Tt, GuideLineView: zt, DragAreaView: Xt };
            } }, { key: "initState", value: function() {
              return { cursor: "auto", cursorArgs: [] };
            } }, { key: "afterRender", value: function() {
              var t3 = this;
              this.nextTick(function() {
                t3.trigger("resizeCanvas"), t3.emit("moveSelectionToCenter", false), t3.refreshCursor();
              });
            } }, { key: "template", value: function() {
              return `
      <div class='elf--page-container' tabIndex="-1" ref='$container'>
        <div class='page-view' ref="$pageView">
          <div class='page-lock scrollbar' ref='$lock'>            
            <object refClass="DragAreaView" ref="$dragAreaView" />               
            <object refClass='HTMLRenderView' ref='$elementView' />                                        
            <object refClass='SelectionToolView' ref='$selectionTool' />
            <object refClass='GroupSelectionToolView' ref='$groupSelectionTool' />
            <object refClass="DragAreaRectView" ref="$dragAreaRectView" />                  
            <object refClass='GridLayoutLineView' ref='$gridLayoutLineView' />            
            <object refClass='SelectionInfoView' ref='$selectionInfoView' />                                                            
            <object refClass='GuideLineView' ref='$guideLineView' />            
            <object refClass='HoverView' ref='$hoverView' />     
            <object refClass='LayerAppendView' ref='$objectAddView' />       
            <object refClass='PathEditorView' ref='$pathEditorView' />                 
            <object refClass='PathDrawView' ref='$pathDrawView' />            
          </div>
        </div>
        <object refClass='PageTools' />
      </div>
    `;
            } }, { key: Object(v.BIND)("$pageView"), value: function() {
              return { style: { "--elf--canvas-background-color": this.$config.get("style.canvas.background.color") } };
            } }, { key: "makeViewportConsole", value: function() {
              if (!this.$viewport.verties)
                return "";
              var t3 = this.$viewport.pos;
              return "\n      <div style='background-color: rgba(0, 0, 0, 0.5); color: white;position:absolute;left:0px;top:0px;bottom:0px;right:0px;pointer-events:none;'>\n        <div style='position:absolute;width:1px;height:100%;top:0px;left:50%;transform:translateX(-50%);background-color:black;'></div>  \n        <div style='position:absolute;height:1px;width:100%;top:50%;transform:translateY(-50%);background-color:black;'></div>                \n        <div style='position:absolute;display:inline-block;left:0px;top:50%;transform:translateY(-50%);'>".concat(Math.floor(this.$viewport.minX), "</div>\n        <div style='position:absolute;display:inline-block;right:0px;top:50%;transform:translateY(-50%);'>").concat(Math.floor(this.$viewport.maxX), "</div>\n        <div style='position:absolute;display:inline-block;left:50%;top:0px;transform:translateX(-50%)'>").concat(Math.floor(this.$viewport.minY), "</div>\n        <div style='position:absolute;display:inline-block;left:50%;bottom:0px;transform:translateX(-50%)'>").concat(Math.floor(this.$viewport.maxY), "</div>\n        <div style='position:absolute;top:50%;left:50%;display:inline-block;'>").concat(this.$viewport.transformOrigin.map(function(t4) {
                return Math.floor(t4);
              }).join(", "), "</div>\n        <div style='position:absolute;left:").concat(t3[0], "%;top:").concat(t3[1], "%;display:inline-block;'>\n          mouse: ").concat(this.$viewport.mouse.map(function(t4) {
                return Math.floor(t4);
              }).join(", "), " <br />\n          translate: ").concat(this.$viewport.translate.join(", "), " <br />          \n          zoom : ").concat(this.$viewport.zoomFactor, " <br />\n        </div>                  \n\n      </div>\n    ");
            } }, { key: "checkSpace", value: function(t3) {
              return !!this.$config.get("set.tool.hand") || this.$keyboardManager.check(this.$shortcuts.getGeneratedKeyCode(B.a.space));
            } }, { key: Object(v.POINTERSTART)("$lock") + Object(v.IF)("checkSpace") + Object(v.MOVE)("movePan") + Object(v.END)("moveEndPan"), value: function(t3) {
              this.startMovePan();
            } }, { key: Object(v.CONFIG)("set.tool.hand"), value: function(t3) {
              t3 ? (this.startMovePan(), this.emit("refreshCursor", "grab")) : (this.emit("recoverCursor", "auto"), this.emit("addStatusBarMessage", ""));
            } }, { key: "startMovePan", value: function() {
              this.lastDist = T.d.create(), this.emit("addStatusBarMessage", this.$i18n("viewport.panning.enable"));
            } }, { key: "movePan", value: function(t3, e3) {
              var n3;
              this.emit("refreshCursor", "grabbing");
              var r3 = T.d.fromValues(t3, e3, 0);
              (n3 = this.$viewport).pan.apply(n3, E()(T.d.transformMat4([], T.d.subtract([], this.lastDist, r3), this.$viewport.scaleMatrixInverse))), this.lastDist = r3;
            } }, { key: "refreshCursor", value: function() {
              this.$config.get("set.tool.hand") === false ? (this.emit("refreshCursor", "auto"), this.emit("addStatusBarMessage", "")) : this.emit("refreshCursor", "grab");
            } }, { key: "moveEndPan", value: function() {
              this.refreshCursor();
            } }, { key: Object(v.BIND)("$container"), value: (e2 = R()(I.a.mark(function t3() {
              var e3, n3;
              return I.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.next = 2, (e3 = this.$editor.cursorManager).load.apply(e3, [this.state.cursor].concat(E()(this.state.cursorArgs || [])));
                    case 2:
                      return n3 = t4.sent, t4.abrupt("return", { style: { cursor: n3 } });
                    case 4:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function() {
              return e2.apply(this, arguments);
            }) }, { key: Object(v.DRAGOVER)("$lock") + v.PREVENT, value: function() {
            } }, { key: Object(v.DROP)("$lock") + v.PREVENT, value: function(t3) {
              var e3 = this.$viewport.getWorldPosition(t3);
              if (t3.dataTransfer.getData("text/asset"))
                this.emit("drop.asset", { asset: { id: t3.dataTransfer.getData("text/asset"), center: e3 } });
              else {
                M.a.getAllDropItems(t3);
                var n3 = V.a.create(t3.target).attr("data-id");
                if (n3)
                  this.emit("drop.asset", { gradient: t3.dataTransfer.getData("text/gradient"), pattern: t3.dataTransfer.getData("text/pattern"), color: t3.dataTransfer.getData("text/color"), imageUrl: t3.dataTransfer.getData("image/info") }, n3);
                else {
                  var r3 = t3.dataTransfer.getData("image/info");
                  this.emit("dropImageUrl", r3);
                }
              }
            } }, { key: Object(v.WHEEL)("$lock") + v.PREVENT, value: function(t3) {
              var e3 = this, n3 = Object(v.normalizeWheelEvent)(t3), r3 = P()(n3, 2), i2 = r3[0], a2 = r3[1];
              if (this.state.gesture)
                if (t3.ctrlKey) {
                  var o2 = 1 - 2.5 * a2 / 100;
                  this.$viewport.zoom(o2);
                } else {
                  var c2 = -2.5 * i2, s2 = -2.5 * a2;
                  this.$viewport.pan(-c2 / this.$viewport.scale, -s2 / this.$viewport.scale, 0);
                }
              else
                t3.ctrlKey && this.$viewport.setMousePoint(t3.clientX, t3.clientY), this.emit("startGesture"), this.state.gesture = true;
              clearTimeout(this.state.timer), this.state.timer = setTimeout(function() {
                e3.state.gesture = void 0, e3.emit("endGesture");
              }, 200);
            } }, { key: "refreshCanvasSize", value: function() {
              this.$viewport.refreshCanvasSize(this.refs.$lock.rect());
            } }, { key: Object(v.SUBSCRIBE)("resize.window", "resizeCanvas"), value: function() {
              this.refreshCanvasSize();
            } }, { key: Object(v.SUBSCRIBE)("changeIconView"), value: function(t3) {
              for (var e3 = arguments.length, n3 = new Array(e3 > 1 ? e3 - 1 : 0), r3 = 1; r3 < e3; r3++)
                n3[r3 - 1] = arguments[r3];
              "".concat(this.state.cursor, " ").concat(this.state.cursorArgs) !== "".concat(t3, " ").concat(n3) && (this.state.cursor = t3, this.state.cursorArgs = n3, this.bindData("$container"));
            } }]), r2;
          }(y2.a);
          function ue(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var le = Object(g.a)(ce || (ce = d()(["\n  position: absolute;\n  left: 0px;\n  top: 0px;\n  bottom: 0px;\n  right: 0px;\n\n  &:not(.ruler) {\n    > .elf--page-container {\n      left: 0px !important;\n      top: 0px !important;\n    }\n  }\n"]))), fe = function(t2) {
            s()(n2, t2);
            var e2 = ue(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "components", value: function() {
              return { CanvasView: se, VerticalRuler: j, HorizontalRuler: k };
            } }, { key: "template", value: function() {
              return `
      <div class="body-panel">
        <object refClass='HorizontalRuler' />
        <object refClass='VerticalRuler' />
        <object refClass='CanvasView' />        
      </div>
    `;
            } }, { key: Object(v.BIND)("$el"), value: function() {
              return { class: "".concat(le, " ").concat(this.$config.get("show.ruler") ? "ruler" : "") };
            } }, { key: Object(v.CONFIG)("show.ruler"), value: function() {
              this.refresh();
            } }, { key: Object(v.SUBSCRIBE)("bodypanel.toggle.fullscreen"), value: function() {
              this.refs.$el.toggleFullscreen();
            } }]), n2;
          }(y2.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return V;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f), p = n(0), d = n(11), v = n(13);
          n(145);
          function y2(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var g = function(t2) {
            s()(n2, t2);
            var e2 = y2(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              return "\n      <div class='elf--window-background'>\n        <div class='window ".concat(this.getClassName(), `'>
            <div class='window-title' ref="$title">
                <label>`).concat(this.getTitle(), '</label>\n                <span class="tools">\n                  ').concat(this.getTools(), "\n                  <button type='button' class='close' ref='$close'>").concat(d.a.close, "</button>\n                </span>\n            </div>\n            <div class='window-body'>").concat(this.getBody(), "</div>\n        </div>\n      </div>\n        ");
            } }, { key: "getClassName", value: function() {
              return "";
            } }, { key: "getTitle", value: function() {
              return "";
            } }, { key: "getTools", value: function() {
              return "";
            } }, { key: "getBody", value: function() {
              return "";
            } }, { key: Object(p.CLICK)("$close"), value: function() {
              this.$el.hide();
            } }, { key: "show", value: function() {
              this.$el.show("block");
            } }, { key: "hide", value: function() {
              this.$el.hide();
            } }]), n2;
          }(v.a), m = n(19), b = n(33);
          n(146);
          function k(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var O = function(t2) {
            s()(n2, t2);
            var e2 = k(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getClassName", value: function() {
              return "elf--export-window";
            } }, { key: "getTitle", value: function() {
              return "Export";
            } }, { key: "initState", value: function() {
              return { selectedIndex: 1 };
            } }, { key: "getBody", value: function() {
              return `
        <div class="tab number-tab" ref="$tab">
            <div class="tab-header full" ref="$header">
                <div class="tab-item selected" data-value="1">
                    <label>HTML</label>
                </div>
                <div class="tab-item" data-value="2">
                    <label>CSS</label>
                </div>                
                <div class="tab-item" data-value="4">
                    <label>Assets</label>
                </div>                                             
                <div class="tab-item" data-value="6">
                    <label>SVG Image</label>
                </div>     
                <div class="tab-item" data-value="7">
                    <label>SVG Image Preview</label>
                </div>                        
            </div>
            <div class="tab-body" ref="$body">
                <div class="tab-content selected" data-value="1">
                    <pre ref='$html'></pre>
                </div>
                <div class='tab-content' data-value='2'>
                    <pre ref='$css'></pre>
                </div>                        
                <div class="tab-content" data-value="4">
                    <pre ref='$assets'></pre>
                </div>
                <div class="tab-content" data-value="6">
                    <pre ref='$svgimage'></pre>
                </div>                                                                       
                <div class="tab-content" data-value="7">
                    <div ref='$svgimagePreview'></div>
                </div>                                                       
            </div>
      </div>
        `;
            } }, { key: Object(p.SUBSCRIBE)("showExportWindow"), value: function() {
              this.show(), this.refresh();
            } }, { key: "refresh", value: function() {
              var t3 = this, e3 = this.$selection.currentProject || { layers: [] }, n3 = "\n".concat(this.makeStyle(e3), "\n").concat(e3.layers.map(function(e4) {
                return t3.makeStyle(e4);
              }).join("\n"), "\n");
              this.refs.$css.text(n3);
              var r2 = "\n".concat(this.$editor.html.renderSVG(e3), "\n").concat(this.$editor.html.render(e3), "\n        ");
              this.refs.$html.text(r2);
              var i2 = e3.layers.map(function(e4) {
                return t3.$editor.svg.render(e4);
              });
              this.refs.$svgimage.text(i2.join("\n\n")), this.refs.$svgimagePreview.html(m.a.createByHTML("<div>".concat(i2.map(function(t4) {
                return "<div>".concat(t4, "</div>");
              }).join(""), "</div>")));
            } }, { key: "makeStyle", value: function(t3) {
              return this.$editor.html.toStyle(t3);
            } }, { key: "makeHTML", value: function(t3) {
              return this.$editor.html.render(t3);
            } }, { key: Object(p.CLICK)("$header .tab-item"), value: function(t3) {
              var e3 = +t3.$dt.attr("data-value");
              this.state.selectedIndex !== e3 && (this.$el.$$('[data-value="'.concat(this.state.selectedIndex, '"]')).forEach(function(t4) {
                return t4.removeClass("selected");
              }), this.$el.$$('[data-value="'.concat(e3, '"]')).forEach(function(t4) {
                return t4.addClass("selected");
              }), this.setState({ selectedIndex: e3 }, false));
            } }]), n2;
          }(g);
          Object(b.a)({ ExportWindow: O });
          var x2 = n(75), j = n(80);
          n(147);
          function S(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var P = new Set();
          x2.a.forEach(function(t2) {
            P.add(t2.category);
          });
          var w = {};
          P.forEach(function(t2) {
            x2.a.filter(function(e2) {
              return e2.category === t2;
            }).forEach(function(t3) {
              w[t3.category] || (w[t3.category] = []), w[t3.category].push(t3);
            });
          });
          var R = { ARROWRIGHT: "\u2192", ARROWLEFT: "\u2190", ARROWUP: "\u2191", ARROWDOWN: "\u2192", BACKSPACE: "\u232B", CMD: "\u2318" }, C = Object(j.a)(), E = function(t2) {
            s()(n2, t2);
            var e2 = S(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getClassName", value: function() {
              return "elf--shortcut-window";
            } }, { key: "getTitle", value: function() {
              return "ShortCuts";
            } }, { key: "getKeyString", value: function(t3, e3) {
              return (e3[t3] || e3.key).split("+").map(function(t4) {
                return t4.trim();
              }).map(function(t4) {
                var e4 = t4.toUpperCase();
                return "<span>".concat(R[e4] || e4, "</span>");
              }).join(" + ");
            } }, { key: "getTemplateForShortcutItem", value: function(t3) {
              return "\n            <div class='shortcut-view-item'>\n                <div class='title'>".concat(t3.description, "</div>\n                <div class='os-item'>").concat(this.getKeyString(C, t3), "</div>\n            </div>                        \n        ");
            } }, { key: "getTemplateForCategory", value: function(t3) {
              var e3 = this, n3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
              return "\n            <div class='item'>\n                <h2>".concat(t3, "</h2>\n                <div>\n                    ").concat(n3.map(function(t4) {
                return e3.getTemplateForShortcutItem(t4);
              }).join(""), "\n                </div>\n            </div>\n        ");
            } }, { key: "getTemplateForLayer", value: function() {
              return "\n            <div class='item'>\n                <h2>Layer</h2>\n                <div>\n                    <div class='shortcut-view-item'>\n                        <div class='title'>\n                            Add Rect\n                            <span class='description'>fdsafdsfdf</span>\n                        </div>\n\n                        <div class='os-item mac'><span>CTRL</span>+<span>R</span></div>\n                        <div class='os-item win'>R</div>\n                        <div class='os-item linux'>R</div>\n                    </div>\n                </div>\n            </div>\n        ";
            } }, { key: "getBody", value: function() {
              var t3 = this;
              return '\n        <div class="list">\n            '.concat(Object.keys(w).map(function(e3) {
                return t3.getTemplateForCategory(e3, w[e3]);
              }).join(""), "\n        </div>\n        ");
            } }, { key: Object(p.SUBSCRIBE)("showShortcutWindow"), value: function() {
              this.show();
            } }]), n2;
          }(g);
          Object(b.a)({ ShortcutWindow: E });
          n(148);
          function $(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var I = function(t2) {
            s()(n2, t2);
            var e2 = $(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "getClassName", value: function() {
              return "elf--project-window";
            } }, { key: "getTitle", value: function() {
              return "Project Manager";
            } }, { key: "initState", value: function() {
              return { selectedIndex: 1 };
            } }, { key: "getBody", value: function() {
              return '\n        <div class="project-container">\n            <div class="project-menu left">\n                Project Menu\n            </div>\n            <div class="project-list right">\n                Project List\n            </div>\n        </div>\n        ';
            } }, { key: Object(p.SUBSCRIBE)("open.projects"), value: function() {
              this.show(), this.refresh();
            } }, { key: "refresh", value: function() {
              this.$selection.currentProject;
            } }]), n2;
          }(g);
          Object(b.a)({ ProjectWindow: I });
          n(149);
          function T(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var B = function(t2) {
            s()(n2, t2);
            var e2 = T(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              return "\n            <div class='elf--notification-view'>\n            </div>\n        ";
            } }, { key: Object(p.TRANSITIONEND)("$el"), value: function(t3) {
              m.a.create(t3.target).remove();
            } }, { key: Object(p.CLICK)("$el .item > .icon"), value: function(t3) {
              t3.$dt.parent().remove();
            } }, { key: "getMessageTemplate", value: function(t3, e3, n3) {
              var r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 1e3;
              return "\n        <div class='item ".concat(t3, "' style='transition-duration: ").concat(r2, "ms;'>\n            <div class='title'>").concat(e3, "</div> \n            <div class='description'>").concat(n3, "</div>\n            <span class='icon'>").concat(d.a.close, "</span>\n        </div>\n    ");
            } }, { key: Object(p.SUBSCRIBE)("notify"), value: function(t3, e3, n3) {
              var r2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 1e3, i2 = m.a.createByHTML(this.getMessageTemplate(t3, e3, n3, r2));
              this.$el.prepend(i2), setTimeout(function(t4) {
                t4.css("opacity", 0);
              }, 100, i2);
            } }]), n2;
          }(v.a);
          function M(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var V = function(t2) {
            s()(n2, t2);
            var e2 = M(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "components", value: function() {
              return { NotificationView: B };
            } }, { key: "template", value: function() {
              return `
      <div class="popup-manger">
        <object refClass='ExportWindow' />
        <object refClass='ProjectWindow' />
        <object refClass='ShortcutWindow' />
        <!-- LoginWindow / -->
        <!-- SignWindow / -->
        <!-- ImageFileView / -->
        <object refClass='NotificationView' />
        `.concat(this.$menuManager.generate("popup"), "\n      </div>\n    ");
            } }]), n2;
          }(v.a);
        }, function(t, e, n) {
          "use strict";
          n.d(e, "a", function() {
            return E;
          });
          var r = n(3), i = n.n(r), a = n(4), o = n.n(a), c = n(5), s = n.n(c), u = n(6), l = n.n(u), f = n(1), h = n.n(f), p = n(0), d = n(11), v = n(13);
          function y2(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var g = function(t2) {
            s()(n2, t2);
            var e2 = y2(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              return `
      <div class='object-items' style="height:100%;">
        <div>
          <object refClass="LayerTreeProperty" />
        </div>
      </div>
    `;
            } }]), n2;
          }(v.a), m = n(18), b = n.n(m), k = n(16), O = n.n(k);
          n(234);
          function x2(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var j = function(t2) {
            s()(a2, t2);
            var e2, n2, r2 = x2(a2);
            function a2() {
              return i()(this, a2), r2.apply(this, arguments);
            }
            return o()(a2, [{ key: "template", value: function() {
              return `
      <div class='elf--custom-assets'>
        <div class='custom-assets-tools'>
          <div class='title'><label>Custom Assets</label></div>
          <div class='tools'>
            <button type="button" ref='$addCustomAsset'>`.concat(d.a.add, "</button>\n          </div>\n        </div>\n        <div class='elf--asset-list' ref='$list'></div>\n      </div>\n    ");
            } }, { key: Object(p.LOAD)("$list"), value: (n2 = b()(O.a.mark(function t3() {
              var e3;
              return O.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      return t4.next = 2, this.$storageManager.getCustomAssetList();
                    case 2:
                      return e3 = t4.sent, t4.abrupt("return", e3.map(function(t5) {
                        return `
        <div class='asset-preview' draggable="true" data-preview-id="`.concat(t5.id, `">
          <div class='thumbnail'><img src='`).concat(t5.preview, "' /></div>\n          <div class='tools'>\n            <div class='title'>").concat(t5.component.name, `</div>
            <div class='buttons'>
              <button type="button" class='remove-asset-preview' data-preview-id="`).concat(t5.id, '">').concat(d.a.remove, "</button>\n            </div>\n          </div>\n        </div>\n      ");
                      }));
                    case 4:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function() {
              return n2.apply(this, arguments);
            }) }, { key: Object(p.CLICK)("$list .remove-asset-preview"), value: (e2 = b()(O.a.mark(function t3(e3) {
              var n3;
              return O.a.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      if (!confirm(this.$i18n("app.confirm.message.artboard.items.removeCustomAsset"))) {
                        t4.next = 5;
                        break;
                      }
                      return n3 = e3.$dt.data("preview-id"), t4.next = 4, this.$storageManager.removeCustomAsset(n3);
                    case 4:
                      this.refresh();
                    case 5:
                    case "end":
                      return t4.stop();
                  }
              }, t3, this);
            })), function(t3) {
              return e2.apply(this, arguments);
            }) }, { key: Object(p.DRAGSTART)("$list .asset-preview"), value: function(t3) {
              var e3 = t3.$dt.data("preview-id");
              t3.dataTransfer.effectAllowed = "copy", t3.dataTransfer.setData("text/asset", e3);
            } }, { key: Object(p.CLICK)("$addCustomAsset"), value: function(t3) {
              var e3 = this;
              this.emit("savePNG", function() {
                var t4 = b()(O.a.mark(function t5(n3) {
                  return O.a.wrap(function(t6) {
                    for (; ; )
                      switch (t6.prev = t6.next) {
                        case 0:
                          return t6.next = 2, e3.$storageManager.saveCustomAsset(n3);
                        case 2:
                          e3.refresh();
                        case 3:
                        case "end":
                          return t6.stop();
                      }
                  }, t5);
                }));
                return function(e4) {
                  return t4.apply(this, arguments);
                };
              }());
            } }]), a2;
          }(v.a);
          n(235);
          function S(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var P = function(t2) {
            s()(n2, t2);
            var e2 = S(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              var t3 = this;
              return `
      <div class='elf--library-items'>
        <div>
          <object label="Search" refClass="TextEditor" key="search" onchange=`.concat(this.subscribe(function(e3, n3) {
                t3.broadcast("search", n3);
              }, 300), " />\n        </div>\n        ").concat(this.$menuManager.generate("library"), "\n      </div>\n    ");
            } }]), n2;
          }(v.a);
          function w(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var R = function(t2) {
            s()(n2, t2);
            var e2 = w(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "template", value: function() {
              return "\n      <div class='asset-items'>\n        ".concat(this.$menuManager.generate("asset"), "\n      </div>\n    ");
            } }]), n2;
          }(v.a);
          function C(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = h()(t2);
              if (e2) {
                var i2 = h()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return l()(this, n2);
            };
          }
          var E = function(t2) {
            s()(n2, t2);
            var e2 = C(n2);
            function n2() {
              return i()(this, n2), e2.apply(this, arguments);
            }
            return o()(n2, [{ key: "components", value: function() {
              return { AssetItems: R, LibraryItems: P, CustomAssets: j, ObjectItems: g };
            } }, { key: "initState", value: function() {
              return { selectedIndexValue: 2 };
            } }, { key: "template", value: function() {
              var t3 = this;
              return `
      <div class='layer-tab'>
        <div class="tab number-tab side-tab side-tab-left" data-selected-value="2" ref="$tab">
          <div class="tab-header" ref="$header">   
            <div class="tab-item selected" data-value="2" data-direction="right" data-tooltip="`.concat(this.$i18n("app.tab.title.layers"), '">\n              <label>').concat(d.a.layers, `</label>
            </div>            
            <div class='tab-item' data-value='3' data-direction="right"  data-tooltip="`).concat(this.$i18n("app.tab.title.libraries"), '">\n              <label>').concat(d.a.auto_awesome, `</label>
            </div>                     
            <div class='tab-item' data-value='5' data-direction="right"  data-tooltip="`).concat(this.$i18n("app.tab.title.assets"), '">\n              <label>').concat(d.a.apps, `</label>
            </div>   
            <div class='tab-item' data-value='6' data-direction="right"  data-tooltip="`).concat(this.$i18n("app.tab.title.components"), '">\n              <label>').concat(d.a.plugin, "</label>\n            </div>            \n\n            ").concat(this.$menuManager.getTargetMenuItems("leftbar.tab").map(function(t4) {
                var e3 = t4.class, n3 = e3.value, r2 = e3.title;
                return "\n                <div class='tab-item' data-value='".concat(n3, `' data-direction="right"  data-tooltip="`).concat(r2, '">\n                  <label>').concat(d.a[t4.class.icon] || t4.class.icon, "</label>\n                </div>\n              ");
              }), `

          </div>
          <div class="tab-body" ref="$body">
            <div class="tab-content selected" data-value="2">
              <object refClass="ObjectItems" />
            </div>
            <div class='tab-content' data-value='3'>
              <object refClass="LibraryItems" />
            </div>            
            <div class='tab-content' data-value='5'>
              <object refClass="AssetItems" />            
              <div class='assets'>
                <object refClass="GradientAssetsProperty" />    
                <object refClass="PatternAssetsProperty" />    
                <object refClass="ImageAssetsProperty" />      
                <object refClass="VideoAssetsProperty" />       
                <object refClass="SVGFilterAssetsProperty" />                
              </div>
            </div>
            <div class='tab-content' data-value='6'>
              <object refClass="CustomAssets" />
            </div>
            `).concat(this.$menuManager.getTargetMenuItems("leftbar.tab").map(function(e3) {
                var n3 = e3.class, r2 = n3.value, i2 = (n3.title, n3.loadElements);
                return "\n                <div class='tab-content' data-value='".concat(r2, "'>\n                  ").concat(i2.map(function(t4) {
                  return '<object refClass="'.concat(t4, '" />');
                }).join("\n"), "\n                  ").concat(t3.$menuManager.generate("leftbar.tab.".concat(r2)), "\n                </div>\n              ");
              }), "\n          </div>\n        </div>\n      </div>\n    ");
            } }, { key: Object(p.CLICK)("$header .tab-item:not(.extra-item)"), value: function(t3) {
              var e3 = t3.$dt.attr("data-value");
              this.state.selectedIndexValue !== e3 && (this.$el.$$('[data-value="'.concat(this.state.selectedIndexValue, '"]')).forEach(function(t4) {
                return t4.removeClass("selected");
              }), this.$el.$$('[data-value="'.concat(e3, '"]')).forEach(function(t4) {
                return t4.addClass("selected");
              }), this.setState({ selectedIndexValue: e3 }, false));
            } }]), n2;
          }(v.a);
        }, , , , function(t, e, n) {
        }, function(t, e) {
          function n(e2, r) {
            return t.exports = n = Object.setPrototypeOf || function(t2, e3) {
              return t2.__proto__ = e3, t2;
            }, t.exports.default = t.exports, t.exports.__esModule = true, n(e2, r);
          }
          t.exports = n, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e) {
          t.exports = function(t2) {
            if (t2 === void 0)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return t2;
          }, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e, n) {
          var r = n(93);
          t.exports = function(t2) {
            if (Array.isArray(t2))
              return r(t2);
          }, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e) {
          t.exports = function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e) {
          t.exports = function(t2, e2) {
            var n = t2 == null ? null : typeof Symbol != "undefined" && t2[Symbol.iterator] || t2["@@iterator"];
            if (n != null) {
              var r, i, a = [], o = true, c = false;
              try {
                for (n = n.call(t2); !(o = (r = n.next()).done) && (a.push(r.value), !e2 || a.length !== e2); o = true)
                  ;
              } catch (t3) {
                c = true, i = t3;
              } finally {
                try {
                  o || n.return == null || n.return();
                } finally {
                  if (c)
                    throw i;
                }
              }
              return a;
            }
          }, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e, n) {
          var r = n(1);
          t.exports = function(t2, e2) {
            for (; !Object.prototype.hasOwnProperty.call(t2, e2) && (t2 = r(t2)) !== null; )
              ;
            return t2;
          }, t.exports.default = t.exports, t.exports.__esModule = true;
        }, function(t, e, n) {
          var r = function(t2) {
            "use strict";
            var e2 = Object.prototype, n2 = e2.hasOwnProperty, r2 = typeof Symbol == "function" ? Symbol : {}, i = r2.iterator || "@@iterator", a = r2.asyncIterator || "@@asyncIterator", o = r2.toStringTag || "@@toStringTag";
            function c(t3, e3, n3) {
              return Object.defineProperty(t3, e3, { value: n3, enumerable: true, configurable: true, writable: true }), t3[e3];
            }
            try {
              c({}, "");
            } catch (t3) {
              c = function(t4, e3, n3) {
                return t4[e3] = n3;
              };
            }
            function s(t3, e3, n3, r3) {
              var i2 = e3 && e3.prototype instanceof f ? e3 : f, a2 = Object.create(i2.prototype), o2 = new j(r3 || []);
              return a2._invoke = function(t4, e4, n4) {
                var r4 = "suspendedStart";
                return function(i3, a3) {
                  if (r4 === "executing")
                    throw new Error("Generator is already running");
                  if (r4 === "completed") {
                    if (i3 === "throw")
                      throw a3;
                    return P();
                  }
                  for (n4.method = i3, n4.arg = a3; ; ) {
                    var o3 = n4.delegate;
                    if (o3) {
                      var c2 = k(o3, n4);
                      if (c2) {
                        if (c2 === l)
                          continue;
                        return c2;
                      }
                    }
                    if (n4.method === "next")
                      n4.sent = n4._sent = n4.arg;
                    else if (n4.method === "throw") {
                      if (r4 === "suspendedStart")
                        throw r4 = "completed", n4.arg;
                      n4.dispatchException(n4.arg);
                    } else
                      n4.method === "return" && n4.abrupt("return", n4.arg);
                    r4 = "executing";
                    var s2 = u(t4, e4, n4);
                    if (s2.type === "normal") {
                      if (r4 = n4.done ? "completed" : "suspendedYield", s2.arg === l)
                        continue;
                      return { value: s2.arg, done: n4.done };
                    }
                    s2.type === "throw" && (r4 = "completed", n4.method = "throw", n4.arg = s2.arg);
                  }
                };
              }(t3, n3, o2), a2;
            }
            function u(t3, e3, n3) {
              try {
                return { type: "normal", arg: t3.call(e3, n3) };
              } catch (t4) {
                return { type: "throw", arg: t4 };
              }
            }
            t2.wrap = s;
            var l = {};
            function f() {
            }
            function h() {
            }
            function p() {
            }
            var d = {};
            d[i] = function() {
              return this;
            };
            var v = Object.getPrototypeOf, y2 = v && v(v(S([])));
            y2 && y2 !== e2 && n2.call(y2, i) && (d = y2);
            var g = p.prototype = f.prototype = Object.create(d);
            function m(t3) {
              ["next", "throw", "return"].forEach(function(e3) {
                c(t3, e3, function(t4) {
                  return this._invoke(e3, t4);
                });
              });
            }
            function b(t3, e3) {
              var r3;
              this._invoke = function(i2, a2) {
                function o2() {
                  return new e3(function(r4, o3) {
                    !function r5(i3, a3, o4, c2) {
                      var s2 = u(t3[i3], t3, a3);
                      if (s2.type !== "throw") {
                        var l2 = s2.arg, f2 = l2.value;
                        return f2 && typeof f2 == "object" && n2.call(f2, "__await") ? e3.resolve(f2.__await).then(function(t4) {
                          r5("next", t4, o4, c2);
                        }, function(t4) {
                          r5("throw", t4, o4, c2);
                        }) : e3.resolve(f2).then(function(t4) {
                          l2.value = t4, o4(l2);
                        }, function(t4) {
                          return r5("throw", t4, o4, c2);
                        });
                      }
                      c2(s2.arg);
                    }(i2, a2, r4, o3);
                  });
                }
                return r3 = r3 ? r3.then(o2, o2) : o2();
              };
            }
            function k(t3, e3) {
              var n3 = t3.iterator[e3.method];
              if (n3 === void 0) {
                if (e3.delegate = null, e3.method === "throw") {
                  if (t3.iterator.return && (e3.method = "return", e3.arg = void 0, k(t3, e3), e3.method === "throw"))
                    return l;
                  e3.method = "throw", e3.arg = new TypeError("The iterator does not provide a 'throw' method");
                }
                return l;
              }
              var r3 = u(n3, t3.iterator, e3.arg);
              if (r3.type === "throw")
                return e3.method = "throw", e3.arg = r3.arg, e3.delegate = null, l;
              var i2 = r3.arg;
              return i2 ? i2.done ? (e3[t3.resultName] = i2.value, e3.next = t3.nextLoc, e3.method !== "return" && (e3.method = "next", e3.arg = void 0), e3.delegate = null, l) : i2 : (e3.method = "throw", e3.arg = new TypeError("iterator result is not an object"), e3.delegate = null, l);
            }
            function O(t3) {
              var e3 = { tryLoc: t3[0] };
              1 in t3 && (e3.catchLoc = t3[1]), 2 in t3 && (e3.finallyLoc = t3[2], e3.afterLoc = t3[3]), this.tryEntries.push(e3);
            }
            function x2(t3) {
              var e3 = t3.completion || {};
              e3.type = "normal", delete e3.arg, t3.completion = e3;
            }
            function j(t3) {
              this.tryEntries = [{ tryLoc: "root" }], t3.forEach(O, this), this.reset(true);
            }
            function S(t3) {
              if (t3) {
                var e3 = t3[i];
                if (e3)
                  return e3.call(t3);
                if (typeof t3.next == "function")
                  return t3;
                if (!isNaN(t3.length)) {
                  var r3 = -1, a2 = function e4() {
                    for (; ++r3 < t3.length; )
                      if (n2.call(t3, r3))
                        return e4.value = t3[r3], e4.done = false, e4;
                    return e4.value = void 0, e4.done = true, e4;
                  };
                  return a2.next = a2;
                }
              }
              return { next: P };
            }
            function P() {
              return { value: void 0, done: true };
            }
            return h.prototype = g.constructor = p, p.constructor = h, h.displayName = c(p, o, "GeneratorFunction"), t2.isGeneratorFunction = function(t3) {
              var e3 = typeof t3 == "function" && t3.constructor;
              return !!e3 && (e3 === h || (e3.displayName || e3.name) === "GeneratorFunction");
            }, t2.mark = function(t3) {
              return Object.setPrototypeOf ? Object.setPrototypeOf(t3, p) : (t3.__proto__ = p, c(t3, o, "GeneratorFunction")), t3.prototype = Object.create(g), t3;
            }, t2.awrap = function(t3) {
              return { __await: t3 };
            }, m(b.prototype), b.prototype[a] = function() {
              return this;
            }, t2.AsyncIterator = b, t2.async = function(e3, n3, r3, i2, a2) {
              a2 === void 0 && (a2 = Promise);
              var o2 = new b(s(e3, n3, r3, i2), a2);
              return t2.isGeneratorFunction(n3) ? o2 : o2.next().then(function(t3) {
                return t3.done ? t3.value : o2.next();
              });
            }, m(g), c(g, o, "Generator"), g[i] = function() {
              return this;
            }, g.toString = function() {
              return "[object Generator]";
            }, t2.keys = function(t3) {
              var e3 = [];
              for (var n3 in t3)
                e3.push(n3);
              return e3.reverse(), function n4() {
                for (; e3.length; ) {
                  var r3 = e3.pop();
                  if (r3 in t3)
                    return n4.value = r3, n4.done = false, n4;
                }
                return n4.done = true, n4;
              };
            }, t2.values = S, j.prototype = { constructor: j, reset: function(t3) {
              if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = false, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(x2), !t3)
                for (var e3 in this)
                  e3.charAt(0) === "t" && n2.call(this, e3) && !isNaN(+e3.slice(1)) && (this[e3] = void 0);
            }, stop: function() {
              this.done = true;
              var t3 = this.tryEntries[0].completion;
              if (t3.type === "throw")
                throw t3.arg;
              return this.rval;
            }, dispatchException: function(t3) {
              if (this.done)
                throw t3;
              var e3 = this;
              function r3(n3, r4) {
                return o2.type = "throw", o2.arg = t3, e3.next = n3, r4 && (e3.method = "next", e3.arg = void 0), !!r4;
              }
              for (var i2 = this.tryEntries.length - 1; i2 >= 0; --i2) {
                var a2 = this.tryEntries[i2], o2 = a2.completion;
                if (a2.tryLoc === "root")
                  return r3("end");
                if (a2.tryLoc <= this.prev) {
                  var c2 = n2.call(a2, "catchLoc"), s2 = n2.call(a2, "finallyLoc");
                  if (c2 && s2) {
                    if (this.prev < a2.catchLoc)
                      return r3(a2.catchLoc, true);
                    if (this.prev < a2.finallyLoc)
                      return r3(a2.finallyLoc);
                  } else if (c2) {
                    if (this.prev < a2.catchLoc)
                      return r3(a2.catchLoc, true);
                  } else {
                    if (!s2)
                      throw new Error("try statement without catch or finally");
                    if (this.prev < a2.finallyLoc)
                      return r3(a2.finallyLoc);
                  }
                }
              }
            }, abrupt: function(t3, e3) {
              for (var r3 = this.tryEntries.length - 1; r3 >= 0; --r3) {
                var i2 = this.tryEntries[r3];
                if (i2.tryLoc <= this.prev && n2.call(i2, "finallyLoc") && this.prev < i2.finallyLoc) {
                  var a2 = i2;
                  break;
                }
              }
              a2 && (t3 === "break" || t3 === "continue") && a2.tryLoc <= e3 && e3 <= a2.finallyLoc && (a2 = null);
              var o2 = a2 ? a2.completion : {};
              return o2.type = t3, o2.arg = e3, a2 ? (this.method = "next", this.next = a2.finallyLoc, l) : this.complete(o2);
            }, complete: function(t3, e3) {
              if (t3.type === "throw")
                throw t3.arg;
              return t3.type === "break" || t3.type === "continue" ? this.next = t3.arg : t3.type === "return" ? (this.rval = this.arg = t3.arg, this.method = "return", this.next = "end") : t3.type === "normal" && e3 && (this.next = e3), l;
            }, finish: function(t3) {
              for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
                var n3 = this.tryEntries[e3];
                if (n3.finallyLoc === t3)
                  return this.complete(n3.completion, n3.afterLoc), x2(n3), l;
              }
            }, catch: function(t3) {
              for (var e3 = this.tryEntries.length - 1; e3 >= 0; --e3) {
                var n3 = this.tryEntries[e3];
                if (n3.tryLoc === t3) {
                  var r3 = n3.completion;
                  if (r3.type === "throw") {
                    var i2 = r3.arg;
                    x2(n3);
                  }
                  return i2;
                }
              }
              throw new Error("illegal catch attempt");
            }, delegateYield: function(t3, e3, n3) {
              return this.delegate = { iterator: S(t3), resultName: e3, nextLoc: n3 }, this.method === "next" && (this.arg = void 0), l;
            } }, t2;
          }(t.exports);
          try {
            regeneratorRuntime = r;
          } catch (t2) {
            Function("r", "regeneratorRuntime = r")(r);
          }
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, function(t, e, n) {
        }, , , , function(t, e, n) {
          "use strict";
          n.r(e);
          var r = n(7), i = n.n(r), a = (n(126), n(236), n(3)), o = n.n(a), c = n(4), s = n.n(c), u = n(5), l = n.n(u), f = n(6), h = n.n(f), p = n(1), d = n.n(p), v = n(0), y2 = n(2), g = n(99), m = n(120), b = n(121), k = n(100), O = n(101), x2 = n(13);
          function j(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var S = function(t2) {
            l()(n2, t2);
            var e2 = j(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "locales", get: function() {
              return Object.keys(this.$editor.i18n.locales);
            } }, { key: "template", value: function() {
              var t3 = this, e3 = this.locales.map(function(e4) {
                return { text: t3.$i18n("app.lang.".concat(e4)), value: e4 };
              });
              return "\n            <div class='status-selector'>\n                <label>".concat(this.$i18n("app.label.lang"), `</label>
                <div class='item'>
                    <object refClass="SelectEditor"  
                        ref='$locale' 
                        options=`).concat(this.variable(e3), '\n                        value="').concat(this.$editor.locale, '" \n                        onchange="changeLocale"\n                    /> \n                </div>\n            </div>\n        ');
            } }, { key: Object(v.SUBSCRIBE_SELF)("changeLocale"), value: function(t3, e3) {
              this.emit("setLocale", e3);
            } }]), n2;
          }(x2.a);
          function P(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var w = ["dark", "light"], R = function(t2) {
            l()(n2, t2);
            var e2 = P(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "template", value: function() {
              var t3 = this, e3 = w.map(function(e4) {
                return { value: e4, text: t3.$i18n("app.theme.".concat(e4)) };
              });
              return "\n            <div class='status-selector'>\n                <label>".concat(this.$i18n("app.label.theme"), `</label>
                <div class='item'>
                    <object refClass="SelectEditor"  
                        ref='$locale' 
                        options=`).concat(this.variable(e3), '\n                        value="').concat(this.$editor.theme, '" \n                        onchange=').concat(this.subscribe(function(e4, n3) {
                return t3.emit("switchTheme", n3);
              }), "\n                    /> \n                </div>\n            </div>\n        ");
            } }]), n2;
          }(x2.a);
          function C(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var E = function(t2) {
            l()(n2, t2);
            var e2 = C(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "template", value: function() {
              var t3 = this, e3 = ["all", "css", "svg"].map(function(e4) {
                return { value: e4, text: t3.$i18n("app.layout.".concat(e4)) };
              });
              return "\n            <div class='status-selector'>\n                <label>".concat(this.$i18n("app.label.layout"), `</label>
                <div class='item'>
                    <object refClass="SelectEditor"  
                        ref='$locale' 
                        options=`).concat(this.variable(e3), '\n                        value="').concat(this.$editor.layout, '" \n                        onchange="changeEditorLayoutValue"\n                    /> \n                </div>\n            </div>\n        ');
            } }, { key: Object(v.SUBSCRIBE_SELF)("changeEditorLayoutValue"), value: function(t3, e3) {
              this.emit("setEditorLayout", e3);
            } }]), n2;
          }(x2.a);
          function $(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var I, T = function(t2) {
            l()(n2, t2);
            var e2 = $(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "initState", value: function() {
              return { version: "0.10.71" };
            } }, { key: "template", value: function() {
              return '<div class="version-view">v'.concat(this.state.version, "</div>");
            } }]), n2;
          }(x2.a), B = n(53), M = n.n(B), V = n(68), D = n(11);
          function L(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var A, F = function(t2) {
            l()(n2, t2);
            var e2 = L(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "template", value: function() {
              return '\n        <button class="'.concat(Object(V.a)(I || (I = M()(["\n            display: inline-block;\n            position: relative;\n        "]))), '" data-tooltip="Toggle left panel" data-direction="top left">').concat(D.a.left_hide, "</button>\n        ");
            } }, { key: Object(v.CLICK)(), value: function() {
              this.$config.toggle("show.left.panel");
            } }]), n2;
          }(x2.a);
          function z(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var N = function(t2) {
            l()(n2, t2);
            var e2 = z(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "template", value: function() {
              return '\n        <button class="'.concat(Object(V.a)(A || (A = M()(["\n            display: inline-block;\n            position: relative;\n        "]))), '" data-tooltip="Toggle right panel" data-direction="top right">').concat(D.a.right_hide, "</button>\n        ");
            } }, { key: Object(v.CLICK)(), value: function() {
              this.$config.toggle("show.right.panel");
            } }]), n2;
          }(x2.a);
          n(237);
          function _(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var U = function(t2) {
            l()(n2, t2);
            var e2 = _(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "components", value: function() {
              return { LanguageSelector: S, ThemeSwitcher: R, LayoutSelector: E, VersionView: T, SwitchLeftPanel: F, SwitchRightPanel: N };
            } }, { key: "template", value: function() {
              return `
            <div class='elf--status-bar'>
                <div class='tool-view left' ref='$leftTool'>
                    <object refClass="SwitchLeftPanel" />
                    `.concat(this.$menuManager.generate("statusbar.left"), "                    \n                </div>            \n                <div class='message-view' ref='$msg'></div>\n                <div class='tool-view' ref='$rightTool'>\n                    ").concat(this.$menuManager.generate("statusbar.right"), '\n                    <object refClass="LayoutSelector" />\n                    <object refClass="ThemeSwitcher" />\n                    <object refClass="LanguageSelector" />\n                    <object refClass="VersionView" />\n                    <object refClass="SwitchRightPanel" />                    \n                </div>\n            </div>\n        ');
            } }, { key: "initState", value: function() {
              return { msg: "" };
            } }, { key: Object(v.BIND)("$msg"), value: function() {
              return { text: this.state.msg };
            } }, { key: Object(v.SUBSCRIBE)("addStatusBarMessage"), value: function(t3) {
              this.setState({ msg: t3 });
            } }]), n2;
          }(x2.a), G = n(91), H = n(102), K = n(103), Y = n(104), X = n(105), W = n(106), Z = n(107), q = n(108), J = n(109), Q = n(110), tt = n(111), et = n(112);
          n(238);
          function nt(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var rt = function(t2) {
            l()(n2, t2);
            var e2 = nt(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "components", value: function() {
              return { SelectTool: H.a, AddArtboard: K.a, AddRect: Y.a, AddCircle: X.a, AddText: W.a, AddImage: Z.a, AddDrawPath: q.a, AddPath: J.a, AddSVGRect: Q.a, AddSVGCircle: tt.a, AddSVGTextPath: et.a };
            } }, { key: "template", value: function() {
              return `
      <div class='elf--tool-menu center'>
        <div class='items'>
          <div class='draw-items' ref='$items' data-selected-value="`.concat(this.$editor.layout, `">

            <object refClass='SelectTool' />
            <object refClass='AddArtboard' />
            <span data-item='css'>
              <object refClass='AddRect' />
              <object refClass='AddCircle' />         
              <object refClass='AddText' />
              <object refClass='AddImage' />
              <!--object refClass='AddVideo' /-->
              `).concat(this.$menuManager.generate("tool.menu.css"), "\n            </span>            \n            <span data-item='svg'>\n              <div class='divider'></div>\n              <object refClass='AddDrawPath' />\n              <object refClass='AddPath' />\n              <object refClass='AddSVGRect' />\n              <object refClass='AddSVGCircle' />            \n              <!-- <AddSVGText /> -->\n              <object refClass='AddSVGTextPath' />\n              <object refClass='AddPolygon' />\n              ").concat(this.$menuManager.generate("tool.menu.svg"), "              \n            </span>\n          </div>\n        </div>\n\n      </div>\n    ");
            } }, { key: Object(v.SUBSCRIBE)("changedEditorlayout"), value: function() {
              this.refs.$items.attr("data-selected-value", this.$editor.layout);
            } }, { key: Object(v.SUBSCRIBE)("noneSelectMenu"), value: function() {
              var t3 = this.refs.$items.$(".selected");
              t3 && t3.removeClass("selected");
            } }, { key: Object(v.CLICK)("$items button"), value: function(t3) {
              t3.$dt.onlyOneClass("selected");
            } }]), n2;
          }(x2.a), it = n(23);
          function at(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var ot = function(t2) {
            l()(n2, t2);
            var e2 = at(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "getIconString", value: function() {
              return "note";
            } }, { key: "getTitle", value: function() {
              return this.$i18n("menu.item.projects.title");
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }, { key: "clickButton", value: function(t3) {
              this.emit("open.projects");
            } }]), n2;
          }(it.a);
          function ct(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var st = function(t2) {
            l()(n2, t2);
            var e2 = ct(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "getIconString", value: function() {
              return "fullscreen";
            } }, { key: "getTitle", value: function() {
              return this.$i18n("menu.item.fullscreen.title");
            } }, { key: "clickButton", value: function(t3) {
              this.emit("toggle.fullscreen");
            } }, { key: "isHideTitle", value: function() {
              return true;
            } }]), n2;
          }(it.a), ut = n(113), lt = n(114), ft = n(115), ht = n(116);
          n(239);
          function pt(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var dt = function(t2) {
            l()(n2, t2);
            var e2 = pt(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "components", value: function() {
              return { Projects: ot, Fullscreen: st, KeyBoard: ut.a, ExportView: lt.a, Download: ft.a, Save: ht.a, PageSubEditor: G.a, ToolMenu: rt };
            } }, { key: "template", value: function() {
              return `
            <div class='elf--tool-bar'>
                <div class='logo-item'>
                    <label class='logo'></label>
                </div>                 
                <div class='left'>
                    <div class='elf--tool-menu'>
                        <div class='items'>
                            <div class='draw-items'>
                                <object refClass="Projects" />
                                <object refClass="Fullscreen" />      
                                `.concat(this.$menuManager.generate("toolbar.left"), `
                            </div>
                        </div>
                    </div>                    
                </div>
                <div class='center'>
                    <object refClass="ToolMenu" />
                    <object refClass='PageSubEditor' />  
                </div>
                <div class='right'>
                    <div class='elf--tool-menu'>
                        <div class='items'>
                            <div class='draw-items'>
                                <object refClass="KeyBoard" />        
                                <object refClass="ExportView" />
                                <object refClass="Download" />
                                <object refClass="Save" />   
                                `).concat(this.$menuManager.generate("toolbar.right"), "                             \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ");
            } }]), n2;
          }(x2.a), vt = n(119), yt = n(122);
          function gt(t2) {
            var e2 = function() {
              if (typeof Reflect == "undefined" || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if (typeof Proxy == "function")
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (t3) {
                return false;
              }
            }();
            return function() {
              var n2, r2 = d()(t2);
              if (e2) {
                var i2 = d()(this).constructor;
                n2 = Reflect.construct(r2, arguments, i2);
              } else
                n2 = r2.apply(this, arguments);
              return h()(this, n2);
            };
          }
          var mt = function(t2) {
            l()(n2, t2);
            var e2 = gt(n2);
            function n2() {
              return o()(this, n2), e2.apply(this, arguments);
            }
            return s()(n2, [{ key: "components", value: function() {
              return { LayerTab: yt.a, PageSubEditor: G.a, ToolBar: dt, StatusBar: U, Inspector: O.a, BodyPanel: m.a, PopupManager: b.a, KeyboardManager: k.a };
            } }, { key: "getPlugins", value: function() {
              return vt.a;
            } }, { key: "initState", value: function() {
              return { leftSize: 340, rightSize: 280, bottomSize: 0, lastBottomSize: 150 };
            } }, { key: "template", value: function() {
              return `
      <div class="designeditor">
        <div class="layout-main">
          <div class='layout-top' ref='$top'>
            <object refClass="ToolBar" />
            <object refClass="PageSubEditor" />
          </div>
          <div class="layout-middle" ref='$middle'>      
            <div class="layout-body" ref='$bodyPanel'>
              <object refClass="BodyPanel" ref="$bodyPanelView" />
            </div>                           
            <div class='layout-left' ref='$leftPanel'>
              <object refClass='LayerTab' />
            </div>
            <div class="layout-right" ref='$rightPanel'>
              <object refClass='Inspector' />
            </div>

            <div class='layout-footer' ref='$footerPanel'>
              <div class='footer-splitter' ref='$footerSplitter' title="`.concat(this.$i18n("timeline.property.resize"), `"></div>
              <object refClass='TimelineProperty' />
            </div>   
            <div class='splitter' ref='$splitter'></div>
          </div>
          <object refClass='StatusBar' />
          <object refClass="KeyboardManager" />                
        </div>
        <object refClass="PopupManager" />                      
      </div>
    `);
            } }, { key: Object(v.BIND)("$splitter"), value: function() {
              var t3 = "".concat(this.state.leftSize, "px");
              return this.$config.false("show.left.panel") && (t3 = "0px"), { style: { left: t3 } };
            } }, { key: Object(v.BIND)("$leftPanel"), value: function() {
              var t3 = "0px", e3 = y2.a.px(this.state.leftSize), n3 = y2.a.px(this.state.bottomSize);
              return this.$config.false("show.left.panel") && (t3 = "-".concat(this.state.leftSize, "px")), { style: { left: t3, width: e3, bottom: n3 } };
            } }, { key: Object(v.BIND)("$rightPanel"), value: function() {
              var t3 = "0px", e3 = y2.a.px(this.state.bottomSize);
              return this.$config.false("show.right.panel") && (t3 = "-".concat(this.state.rightSize, "px")), { style: { right: t3, bottom: e3 } };
            } }, { key: Object(v.BIND)("$bodyPanel"), value: function() {
              var t3 = "".concat(this.state.leftSize, "px"), e3 = "".concat(this.state.rightSize, "px"), n3 = "".concat(this.state.bottomSize, "px");
              return this.$config.false("show.left.panel") && (t3 = "0px"), this.$config.false("show.right.panel") && (e3 = "0px"), { style: { left: t3, right: e3, bottom: n3 } };
            } }, { key: Object(v.BIND)("$footerPanel"), value: function() {
              return { style: { height: y2.a.px(this.state.bottomSize) } };
            } }, { key: Object(v.POINTERSTART)("$splitter") + Object(v.MOVE)("moveSplitter") + Object(v.END)("moveEndSplitter"), value: function() {
              this.minSize = this.$theme("left_size"), this.maxSize = this.$theme("left_max_size"), this.leftSize = y2.a.parse(this.refs.$splitter.css("left")).value, this.refs.$splitter.addClass("selected");
            } }, { key: "moveSplitter", value: function(t3) {
              this.setState({ leftSize: Math.max(Math.min(this.leftSize + t3, this.maxSize), this.minSize) });
            } }, { key: "moveEndSplitter", value: function() {
              this.refs.$splitter.removeClass("selected");
            } }, { key: Object(v.POINTERSTART)("$footerSplitter") + Object(v.MOVE)("moveFooterSplitter"), value: function() {
              this.minFooterSize = this.$theme("bottom_size"), this.maxFooterSize = this.$theme("bottom_max_size"), this.bottomSize = y2.a.parse(this.refs.$footerPanel.css("height")).value;
            } }, { key: "moveFooterSplitter", value: function(t3, e3) {
              var n3 = Math.max(Math.min(this.bottomSize - e3, this.maxFooterSize), this.minFooterSize);
              this.setState({ bottomSize: n3, lastBottomSize: n3 });
            } }, { key: "refresh", value: function() {
              this.bindData("$splitter"), this.bindData("$headerPanel"), this.bindData("$leftPanel"), this.bindData("$rightPanel"), this.bindData("$toggleRightButton"), this.bindData("$toggleLeftButton"), this.bindData("$bodyPanel"), this.bindData("$footerPanel"), this.emit("resizeEditor");
            } }, { key: Object(v.CONFIG)("show.left.panel"), value: function() {
              var t3 = this;
              this.refresh(), this.nextTick(function() {
                t3.emit("resizeCanvas");
              });
            } }, { key: Object(v.CONFIG)("show.right.panel"), value: function() {
              var t3 = this;
              this.refresh(), this.nextTick(function() {
                t3.emit("resizeCanvas");
              });
            } }, { key: Object(v.SUBSCRIBE)("toggleFooter"), value: function(t3) {
              this.$el.toggleClass("show-footer", t3), this.$el.hasClass("show-footer") ? this.state.bottomSize === 30 && (this.state.bottomSize = this.state.lastBottomSize || this.$theme("bottom_size")) : this.state.bottomSize = 30, this.refresh();
            } }, { key: Object(v.TRANSITIONEND)("$el .layout-footer"), value: function(t3) {
              this.emit("toggleFooterEnd");
            } }, { key: Object(v.DRAGOVER)("$middle") + v.PREVENT, value: function(t3) {
            } }, { key: Object(v.DROP)("$middle") + v.PREVENT, value: function(t3) {
            } }, { key: Object(v.SUBSCRIBE)("toggle.fullscreen"), value: function() {
              this.$el.toggleFullscreen();
            } }]), n2;
          }(g.a), bt = n(117), kt = n(118);
          function Ot(t2, e2) {
            var n2 = Object.keys(t2);
            if (Object.getOwnPropertySymbols) {
              var r2 = Object.getOwnPropertySymbols(t2);
              e2 && (r2 = r2.filter(function(e3) {
                return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
              })), n2.push.apply(n2, r2);
            }
            return n2;
          }
          function xt(t2) {
            for (var e2 = 1; e2 < arguments.length; e2++) {
              var n2 = arguments[e2] != null ? arguments[e2] : {};
              e2 % 2 ? Ot(Object(n2), true).forEach(function(e3) {
                i()(t2, e3, n2[e3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t2, Object.getOwnPropertyDescriptors(n2)) : Ot(Object(n2)).forEach(function(e3) {
                Object.defineProperty(t2, e3, Object.getOwnPropertyDescriptor(n2, e3));
              });
            }
            return t2;
          }
          e.default = xt({ createDesignEditor: function() {
            var t2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : { type: "white" };
            return bt.a(mt, xt({}, t2));
          } }, kt.a);
        }]).default;
      });
    }
  });

  // <stdin>
  var import_editor = __toModule(require_editor());
  var app = new import_editor.default.createDesignEditor({
    container: document.getElementById("app")
  });
})();
